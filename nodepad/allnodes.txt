6:辛
5:酸味
4:塩
3:アペタイト
4:キックオフポイント
3:ウォームアップ
15:石田さんメール
6:投函
14:見積もり
13:許可
4:見積りしたものから
3:10-12月分ガスさん請求
12:封筒
11:請求書印刷
9:10月47250
11月71500
12月71500
mailmagで10
17:phone
16:そのほかに
ガスブックのほかのデータのエントリーなどをお手伝いいただくなどが
ありうるかと思います
27:統計
26:動かしてみる
25:pyramid
24:track2005法
23:中庸化してみる
22:極端化してみる
21:スキン
20:designしてしまう
19:どうすれば
9:big
8:buffer
17:無制限
7:test driven for everytihng
16:高橋
6:bugs.xls/bugtracker
15:でかく印刷
5:roi.xls
14:削除志向
4:Runtime/Buildtime
13:powers of power
3:nodepad
12:自動化、dry
11:アコード法
28:cmyk
17:1010100
14:go http://toukubo.backpackit.com/reminders and add the tasks
7:cycle
2:習慣づける。
10日つづけて、
10分でいいので、
100日に1度やる。

7:cycle
17:1010100
23:
14:go http://toukubo.backpackit.com/reminders and add the tasks
20:定着をコントロールできるツール
2:習慣づける。
10日つづけて、
10分でいいので、
100日に1度やる。

2:撮影を成功させる。
1:1217
9:10-12月のご請求
3:1月分ガスさん石田さん見積もり
1:151530
4:決定時間24時間＝12万短縮
3:Dの頻度
2:Dの安さ
4:1万
3:一万円テスト駆動
49:tester
73:1010100
72:target(objective Noun)
47:mismatchtest
71:custom
70:stsc?
69:Buffer = buffer
68:kit
9:テスト
マニュアル
データモデル
の全部を行き来してる？
67:習慣
66:afford
41:マニュアルからテストにする
64:連結する
63:アフォードする？
86:モデル、マニュアル、テスト、ストーリー
4:1万円テスト駆動
62:駆動する
61:============================= 
         Runtime
=============================
59:manualurl of the project
11:画面仕様とデータモデル
60:mock
83:offshore
82:マニュアルが出た時点でoffshoreがミスマッチテスト
77:============================= 
         Bulidtime
=============================
7:メール送信機能。
といっているが、notificationメールみたいなものが
いいのではないか。
資料がまだありません。
イベントに案脳して？
そういうDocumentRequestedなイベントにもなにかあるか？
10:どうすれば、チョイスが決まるか。
チョイスをメンバとして表現するべきか、
それともクラスとしてか。
6:4回目コンテンツアップ。
つついたほうがいいかな。
どうでしょうか。4回目のコンテンツのアップって。
4:本屋いった。[[城山スタバ]]いった。
ブレストした。
[[ソシオテクスト]]のインテグをするために分析した。
本屋ではウェブ進化論、ソウジ力が成功の秘訣（女の子用の本）などをよんだ。
結構僕みたいなこといってるとおもった。
ブロークンウィンドウ現象といっていた。
[[エントロピ増大]]と[[要ネゲエントロピ量]]増大の関係について。

9:[[ポンツタ]]いったら凄い女の子がいてまいった。

2:YSTで29位。
どころかMSNでも6位にさがってしまった。これはなんだ。
http://soft.rifnet.or.jp/incometax/
SEOがんぎきになってるな
それとこのサイトね。
http://www.income-tax.jp/jigyou/keisan.html

8:SSしよう
どうすれば自動メール送信ができるか。
どうすれば自動メール送信の仕様が決まるか。
すくなくとも大久保さんの認証がほしい。
そのためにはどうすればアークスがそれによって効率を高めることができるかを
考えればいい。
効率を高めるためには時間を減らすことができればいいし
一つは[[自動化]]だな。
どうすれば自動化で効率が凄くあがるか。
事実化。
今アークスではメール送信をしている。
そのうちのどのくらいかがエクセルでされている。
どのくらい？メール。質問にする。
メッセージ機能をのせるといいことがあるか。
共有するべきか。
これはちょっとお金がかかる気がする。見積もるといいか。
メールを全部やり取りできるようにする。（ソシオテクストばりに
あちらから来たメールもインテグレートするとかにするとして）
それはいくらか。データベースの数はどんくらいか。
ヴァージョン管理とかもあるみたいだ。あと閲覧記録とかもあるし
 
アンテナ機能がある。
rss機能がある。
ブログビュー機能がある。
パブリック機能はない。
シェアーされている。（メールが）
メールが誰に対して送られたものも検索可能である。
これはつまりサーチ窓集中性を高めることにもなる。
ダブルクリックエディットと保存
wiki的にかいてける文法
RecentChangesなど。
インクリメンタル検索がないのは痛い。
ほいでここから見積りをイ取る。
どの機能がいくらくらいか。
あちらからのメールをこれで受け付けてデータベースにいれるという機能は
結構お金かかるとおもっていい。これでもう20万は全然かかる。20万という。

専用のインタフェイスでメッセージが遅れる。予算範囲内
専用インタフェイスでメッセージにファイルが添付できる。予算範囲内。
専用インタフェイスで送ったメールに自動リンクくらいがつく。これも予算範囲内。
専用インタフェイスで送ったメールがインクリメンタル検索対象になる。これはインクリメンタルがちょっと。
専用インタフェイスで送ったメールに、返信ができる。これはできる。
シェアー。できる。「sharethis」くらいで。予算範囲内。
rss。できる。
顧客ごとにメールを見るとかそういうこともできる。




7:
SS it.

how can I earn super person.
ask some super introduce-type of man like numa san for this?

takumi kun wants to learn IT things and could this be a change for him? he is at least good at reading english. 

reading english is must for this job.


the payment should be considered too. this will be kind of it componey parttime payment like 1500-/hour.


so what is the option.


ask some person who are close to me. one hop.
secound hop person. so put same kind of announcement to the blog and wait for a reaction? could be. introduce somebody.

oh ask irino or somebody there for this kind of task.


*1156752199*yst で59位に。
めちゃくちゃだなyst。毎日順位が変わるのはひどいだろ。しかも先日まで２位で定着していたサイトですよ。変なのー。しかもほかのエンジンではおおむね安定して上位に乗れるサイトなのでいきなり５０位になり、つぎに２９までじわじわのぼり、そっから５９まで落ちる。これはめちゃくちゃだ。


さて問題解決どうすれば１位になれるか。国税庁に就職するか。
(O_O)


*1156752200*SEO
SEOブログとか囲うかなとおもったけど自作知識ベースを完成させればすむのでがまン。

ALEXAの仕組みは結構きになるというか、サーチエンジンつくる気になるとあれはちょっと気になるサイトで、トラフィックをどうしてあんな風に計量できるのかと考えると、パケット眺めてたりとかしてるのかもしれなくて、
それで人気度とか滞在時間をとってサイト順位表示の価値を高めるチュイスはありうる。膨大な作業に思えるけど、アレクさがやれてるならきっとやれるはずだべという。


非リンクなどで基本的なとこをなめて、あとはパケット眺めるっていう。

ふーむ。巨大EXならばやれないことはないのですよね。インターネットエクスチェンジなら。





*1156753232*learning.
we have many opensource CMS. and we have many opensource online learning system.

what is difference between learning or education and information.

unesco is very successful organizatin  becauser it got a lot of....donation and unu is also something like that ,
at wikipedia we can find the document which reads unesco is one of most famous and big un related organization because the concept " education could be a key to build up our mind and the war or those things are cause by the human mind ".

that is very core part of difference between education and information.


it is very hard to say, if we have lots information, we stop war the wars.we can't say.



active or positive. for info?
or environment?
info environment. this is really something.
to have rss?

like everybody think he is gooing toward actively for the information he requires but this is restricted by his information environment.

if he was born some contries like japan he should have a internet connectoin and  
all the students who belong to a unversity are doing browsing even in the class room so they sometimes don't need to be in the classe and doens'nt need classes any more and like sfc, they start to go out ,or start venture componey.


information could be charactorized with being a starter?it starts?


I should have more detailed report for mediastudio.
I think I should do more noding.

what is done by mediastudio merit and demerit  of chain. so noding. not only one centerized node and merits. but chain and complex but organized. so nodepad.



*1156764212*SEO続き
YSTで一日3回順位変動された。29→59→29．
基本的にはサーチエンジンは情報をより検索したユーザにとって「わが意を得たり」と思わせるようにする。これがサーチエンジンにとっての改良。SEOをやる人にとっては、それにあわせて情報の質を変える改良が必要になる。がこういう風に変動されたんでは・・・。

もちろん外部変数があるのだろう。探せ。









*1156764213*国連大での仕事について
ブレストした結果、非営利組織である国連組織も、サービスをする。という点では一致しており、またサービスによる結果によって関係者がWINWINする。という点、功利、が一つ目の至上命令になっているのは間違いない。功利すなわち「死ぬな」の子孫ですね。


ほいでこれにあわせていろいろをすすめていくことに決めた。






*1156764214*起立筋
なんだか魅力的な名前の筋肉。太陽が強い日には動物の起立筋は性能がよくなるみたいなことを聞いた。通説は間違っているとレヴィットはいったが、起立筋が伸びている上体の人間は能力があがるだろうか。



*1156764215*基地
国連大学に結構いようとおもう。ボスは喜んで同意してくれた。PCのうちいらんやつを一台もっていって環境を気づく。表参道はチャーミングな街で、東京の最も、簡単な意味で魅力をしょっている街で、そこをふらつきながら作業を進
めるのは大変いい。なにせとなりがABCだというのも凄くいい。





*1156770813*自動リンクの使い方の一つ。ヒントフルなログ。

僕のこのハテナダイアリの主旨は、「考えごとを書付まくる作業が、書き付けないより、自動リンクによってクリエイティブに、生産的になる。」ということの実践なのだけど、ハテナのだと、人の思考でしかない。僕はやむをえないというか、
多分一般的なはてなユーザより頭良いので（あらいっちゃった）、人がつくったキーワードを使うより、自分のキーワードをリンクさせたほうがおいしいということで、いずれはここから離れねばならない。

とおもってたら、ノードパッドは自動リンクをもっていて、これが使えるということに気宇づいた。ということでここはもう閉じる。ブログを書くとしたら別の目的（見せびらかしやアナウンスや小説などの人に読んでもらうにあたいするものを書いたときになるだろう。）小説以外は僕は見せびらかしが酷いのであまり価値ある文章を書かないことが多いので、多分物語りだろう。


f:id:hanayakiworking:20060828220011j:image


ノードパッドはグーグルと比較しても時代の先をいっている数少ないツールですよほんと。wikiの誕生と同じ程度は価値ある。マインドマップを10倍程度創造的にしたものだとおもってください。うーんそれは嘘。

まあ、えーと放射思考という点以外はほんと。でも放射思考は無責任でだめなところが沢山あるというのを是正するという意味ではノードパッドがはるかにいい。

まあでもノードパッドは十分マインドマップに、概念的、インタフェイスの面白さ、刺激、気持ちよさ、あらゆる点で消して引けをとらない。僕の人生で最高のプロダクトで、他にこれほど胸張ってすごいといえるツールをつくったことがない。
これはほんとう、僕がつかったことのあるツールのなかで、グーグルやモールスキンなどと比較しても決して負けない傑作。これと1億円とノードパッドというアイデア、どちらを選ぶかといわれたら迷わずノードパッドを選ぶ。10億でも考える。
これが作れただけでも僕の人生はそういう意味で（生産的という価値観で考えれば）は価値があるといえる。世界に誇れるといっていいとおもう。というか自分が作ったとは信じられないほどのツールになっている。僕を全然追い越してる。
これを作った人がいたら僕、ほんとあがめるもん。これが自分から出たなんて怖い。そして、もっかいでるかといわれると全然自身がない。これはそういう意味でほんとうに傑作。神さまにものすごく近いツール。ほんと、異様ですよこのツールは。
ほんと、超一流コンサル100人集めてもこれは発想しないとおもう。

僕は一般的な「論理」についての理解をもっていたとおもうけど、論理なんて、本格的にジェネラルなものに、これほどの革命的な変更をもたらすなんて、奇跡だし、ここ数百年でそういうことってなかったんじゃないか。いやまあもちろん僕は巨人の肩にのっていたしのっているのだけど、
それでもこのステップはあまりに大きなステップだとおもう。なんで突然こんなことになったのだろうという。奇跡だ。ほんと僕は天才のうぬぼれからなかなか逃れられないバカだけど、それにしても、これは手放しで奇跡だとおもう。こういう傑作の前にいると真摯な気持ちになれる。作品が僕を超えているからだろう。
これはタマタマ僕に訪れたんだけど、ぐうぜんなのかもしれないとおもってしまう。はーまったくえらいものをつくってしまった。これを人類のみなさんに見せないで死ぬわけにはいかないよなとおもう。はーまったく。驚くね。ノードパッドは神様の啓示かとおもうよ。



ということでさようなら。ぶろぐは閉じます。








5:


*1156744034*recruiting
1.the fittness,between him and medistudio.
2.the fittness between him and tasks in mediastudio should be better.
3.i should be more like bridging person .2 bridges. one is english japanaese.the other is business and techs.

parttime. so students maybe.
how to be engaged? he should be here?not online? or more online? is it ok for B san? or admin people? and relationship between B san and admin.
so the good thing is relationships. 

noding is creating.finding free.


should i go to ABC for hints.

browse Aoyama gakuin, todai sfc's web site for info about requiting.(not recruting but info about students.) or intern.

oh---- this could be a unit for the classes for students maybe? yes this could be .and two parents node pattern.


*1156747487* recruiting 2
http://www.sfc.keio.ac.jp/career/cgi/0203/index2.cgi?m=&s=2006062910034555
http://www.sfc.keio.ac.jp/career/cgi/0203/index.cgi
it something like us... 
for sfc, we have two ways basically. one is career-blablar. the other is fieldwork class for students. anyway I think we need to talk with both a specific students and also admin of sfc.of course.

how can I do this.(SS -stands for Sugoi Solution).
I should make the specs for the task?
or should i go campus? or ask some mixi friends and ask them to introduce some good juniors? 


person and admin which si first?



so other nodes which this can connects as another parent is ?
connection between other things.
to have communication is, exprience. it is creation.
but boring communication could be if we don't have mind on it so we should challenge on it. so really stupid ko-gal for this and educate her. i should delet this line after though.

e-to. 


person like who?

how can i give a solution for this ? cost effective. 
so not in place, and just outsource .
and hide this connection 
we should do this contract within the relationships of admin people( and un way) 
so this is branding action. this is a branding to the person who works here so I shold include this to my plan for reqruiting.

how to require super person with super cost-effective price.

u-n. off shore for this? it is too big try? too big step for now?
but this is common for most of other ports of mediastudio.


4:


*1156741972*mda enhanced
oh I think I gonna lose the power of hatena if I write in english because the automatic linking doesn't take effect. not so many keywords are written for english words desho.

I am planning to have bring my mda dev environment to mediastutio. mda is model driven architechture. when I say mda , it means andromda.

And I think I need to do a reqruiting for a basic tasks for our studio I am becoming very busy and becoming more like manager for many projects so it is not  cost-effective for me to do log-check ar wordpress installation.


so I am going to manage and start organizing team of students from todai or sfc t odo these jobs.is there any good idea.

1.the fittness,between him and medistudio.
2.the fittness between him and tasks in mediastudio should be better.
3.i should be more like bridging person .2 bridges. one is english japanaese.the other is business and techs.
though technologies are not seperated from business.

and I should concentrate( have time and budget ) more, for mda.

the only path for the mda for me is, to be more at site(mediastudio) and live there , and experience and breath, and find things which should be MDAed. by the way it sounds like em dii, aid. MD aid. model dorivend aided things.

I have to write and act for this.

this is very strong law. we should have stuffs. things. to give solutions.


3:





*1156742130*unu site updated 
http://www.unu.edu/
http://update.unu.edu/
very good designed.
view source->see the css url-> put it to the address bar-> copy the content-> paste to the hatena's design. refresh.
\

this is the body's background. of that site. this is good.I learned meta, and I learned concrete as well.
http://www.unu.edu/img/bg_gradient.gif


2:*1156741971*gucci.com
グッチの新しいサイトは全部ajaxというかjsで、フラッシュじゃないそうだ。ルックスはすばらしい。

http://www.gucci.com/int/index2.html


ヘッダを引用するとこんなんです


   <script type="text/javascript" src="/js/prototype.js"></script>
    <script type="text/javascript" src="/js/api.js"></script>
    <script type="text/javascript" src="/js/localize.js"></script>
    <script type="text/javascript" src="/hbx/page_code.js"></script>
    <script type="text/javascript" src="/js/gucci-ext.js"></script>

    <script type="text/javascript" src="/js/gucci-fx.js"></script>
    <script type="text/javascript" src="/js/gucci-app.js"></script>
    <script type="text/javascript" src="/js/shopping_bag.js"></script>
    <style type="text/css" media="screen">
    /* <![CDATA[ */
      #texts {
        width: 890px;
        padding-top: 20px;
        line-height: 80px;
        padding-right: 20px;
        text-align: right;
        letter-spacing: -5px;
        font-size: 80px;
        font-family: 'Arial';
        color: #fff;
        padding-bottom: 20px;
      }
      #slide {
        cursor: pointer;
        position: absolute;
        width: 910px;
        height: 504px;
        top: 0;
        left: 0;
      }
      #content {
        width: 910px;
        position: absolute;
        right: 0px;
      }
      #fin {
        right: 0px;
        width: 0px;
        height: 504px;
        position: absolute
      }
      #fin-ann-d {
        position: absolute;
        right: 0px;
        top: 0px;
        height: 504px;
        width: 130px;
        z-index: 2000;
        background-color: #222;
        background: url(/images/gucissima-pattern-horizontal.gif);
      }
      img.fin-img {
        position: absolute;
      }
      div.ann {
        cursor: pointer;
        opacity: 0.99;
        overflow: hidden;
        position: absolute;
        width: 102px;
        text-align: left;
        height: 135px;
        padding-top: 33px;
        right: 0px;
        padding-left: 28px;
        font: 12px/20px Arial;
        color: #a2a2a2;
        z-index: 100000;
      }
      div.highlight {
        background: url(images/homepage-highlight.png);
        color: #fff;
      }
      * html div.highlight {
        background: transparent;
        filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src='images/homepage-highlight.png');
      }
      #layout {
        width: 910px;
        margin: 0;
        visibility: hidden;
        overflow: hidden
      }
      #wrapper {
        margin-left: auto;
        margin-right: auto;
        width: 910px;
      }
      #screen {
        position: absolute;
        top: 0px;
        left: 0px;
        width: 910px;
        height: 504px;
        background-color: #000;
        z-index: 100000000;
      }
    /* ]]> */
    </style>



8:abcにて、pariyaにて、国連前に散歩中の犬にて、
あと今日はスタバのカワイコちゃんはいなかった。
pariyaは客としていた。けどこれは難しいかな。
ヒルズスタバにはいたけど無理だ。店員さん
あとヒルズのスタバの↑のとこにむちゃくちゃモデルさんな人がいてぐっときた。
美しい女の人は人が自分をみたときにどんな風に体感されているかわかってるんだろうか。
女の子にはそれこそSSでもって挑まなくては。
どうすればいいか。
えーと事実は書いた。
いままで、7回ほど、女の子から、多分積極的な意味で、魅力的と言われた。
もてそうとかレベルなら10回程度は言われた。
事実付き合ってくれといわれた回数は？
1.シホちゃん。
2.こしごえさん。
3.しまさやは結婚してもいいとおもっているらしいそれはどこまで冗談かわからないけど。あのコだって素敵な人なのにお世辞でもそれなりに本当にそういってくれるのは奇跡だし評価していいじゃないかじぶんを
4.シホちゃん大人バージョン。ひさしぶりにあってももてそうといわれた。多分ああいうタイプ、できる人がすきなタイプには強いだろう。
5.ナラさん。
6.どうやらアイちゃんにもあの人はかっこいい、といわれたらしい。
7.ミッチーにはイケメンといわれた。
8.あの美術系のおねーさんもなんとなくきにいってくれたっぽい
9.あのクラブでの子供（18のとき）、かっこいいといわれて友達になってくれといわれた。
10あの美術系イベントやってるときのあの子なんだっけ。田村さんからも読めにしてくれとかいわれた。つきあってと。
11.あとあの人。せいこちゃん。
12.そうかも。とかじゃなくて声にだしてもらってるだけでもあと5件くらいはあるんじゃないか。
13.事実上つきあったあかねちゃん
14.あの人にはかわいいかおしてるもんねといわれた。
ほいでしかし、さらに事実を言うと、モテたとて限界があり、かつ
モテたとしても恋が実るわけではなくて、どうやら本丸はシャイさ。とがつがついかなさ。などではないかとおもわれる。
これを排除するにはどうすればいいか。なれ。一年以上はなれやってみた？もっとなれたほうがいいか。
もっとふつうにsugoi可愛い子のいるそういうやつにシフトしたほうがいいかも。そうしよう。
でどうすれば？ひとつはお金。あとは？ふーむやっぱりお金だろうな。
あとはもっとパーティーとかにいって友達に向かうべきだな。
5:#keyword [[20060901]]
4:請求の出力は大体ノードはかけた。
進捗管理のノードをどうぞ。
あとは顧客画面はマイコモン待ち＋一定以上はできない。
お金どのくらいつぎ込みますかという話だけ。
進捗[[管理画面]]は、[[エクセル]]をもらう？もってる？
決算進捗書、タスクごとに、○、質、－、というのがある。
会社ごとに必要な情報が違うのだろうとおもわれる。
案件進捗、というエクセルは、Customer＝Businessとしたのだから、
案件は顧客のことで、この表には顧客ごとに作業のリストが書いてある。
これはしかし、顧客ごとに、他に定例の作業があって、その型にはまってくれない作業を
案件進捗と書いているようだ。
これについては、基本的には顧客->tasKとつながっていて、
taskに、tasktemplaetがついてないようなtaskとして設定されるといいとおもう。
taskには完了日時や、完了予定日時をいれる場所がない。がもっといてもいいとおもう。
これに対して強い[[制限]]をかけるかどうかは別か。

3:今日も東京にいって可愛い女の子をみつついろいろしていた
青山近辺とかいくと割りといいかも。
今日のlooksは悪くなかった。
パンツの色か。背筋をすごく気にしている。
起立筋いい。
今日みたカワイコちゃんをおもいだそう。
ポンツタの店員の人。目がチャーミング。
街を歩いていた六本木ガール数人。
でも表参道な人たちのがいいかも。
あとは誰だ。

2:とりあえずおきた。
ガムか。コーヒーか。
外出か。全部か。
ブレストしよう。昨日の続きで。
5:オシャベリ良かった。
口で話すのいい。
兆録もいい、
4:金額を、サービスといっしょ＝EstimatinChoiseといっしょに持つ必要はない。
毎月変わるんだとして、金額だけでいいのだろうとおもわれる？
でも金額の導出は恐らく、同じ導出方法を使うのだろうと
おもわれる。たとえば記帳代行ならば仕訳数とか。
ほいでこれ、毎月変わるものもある？
その場合導出する必要が毎月ある。
導出を毎月するのであれば、見積りの法の導出のプログラムと、
請求の見積りの導出は基本的に同様であるべき。なので
それは共通化されててしかるべきなのだ。
としたら、金額としてはEstimationChioseの学を使うというのが
一番いいのではないでしょうかね。
再計算が必要なら、都度その金額を出す。
その見積りに基づいて、請求もたてるようにする。




3:reservoir 2003が凄くいい。radioheadのライブ。
dddd.
箱いい。店長さんと電話した。
燃えてるみたいだ。
arcsintraをすすめつつだった。12時起床。
15時に家をでて18時に終わった。
宇田川カフェいい。店員さん可愛い。店員さんのが可能性あるかもと考えた。
お客さんどうだったっけ？となりの外人さん美人。右隣の子もよかった。
集中してないな。歩いて国連。firewallなおしてスタバ4杯。
そのあとヒルズ。チンチンをめざして骨董どおりをくだり西麻布をのぼりヒルズメイン棟スタバ。
10分。考えた。けど集中はしてないか。女の子は可愛かったっぽい。
キレイな子がコンパ前みたいな感じ。見てるだけ。
英語で考えごと。
アリーナカフェ。寒かった。となりに座ったOLさんギミの子の一人はきれいな子だった。
スタバ店員さんはどこもイマイチ。
青山にもあの子いなかった。金曜いなかった。木曜にしかみたことないかな。
紙にかいたあとに言えにかえってからはなかなかそれを元にアクションするの簡単じゃないかも。
ラップトップにかいといてもそうかも。ノードパッドになら別かも。
HMVによってダニエルかった。ヨラテンの新譜がでていた。

2:http://www.youtube.com/watch?v=aycPdRtqcOM&NR
6:#keyword [[20060903]]
5:絵を描くのが、システムを作るスターターになりうると気づいた。
スタートするのはそれはそれで難しい。逆に。
3:なんでチョイスインサービスではだめか。
をどうすればわかるか。
見積り。という名前を、なんかぶつかっているのではないかなという話。
砂糖だめ。食事をとるか？非常に甘いものが食べたくなあったがこれが
甘い誘惑ということか。筋肉が疲れているのかな。
次にしなくてはいけないことを考えよう。
あたまをはたらかそう。戦争にて戦った人の能力の高さみたいなものを
しめしていて、これぞハードボイルドという感じ。ケッチャム、。
おお気づくと小説について書いている。不思議だな問題と直面するのを防ごうとする能力って。
後で日記（レビュー）しよう。
ぼくらに必要なのはレビューであって、グダグダブログじゃない。
グダグダブログなら、女の子の気をひけそうなものがいい。
そうじゃない場合は、素敵なアイデアの提示、論文の提示。

時間がたつごとに、ノードを上に書いていくというのはいいかも。時間がたってないのに
それが因果律で結べてない。っていうのが問題視できる。時間がたつ場合のならインがするべきなのだ。
そうなるように組むべきなのだ。
家に帰るとだめだ。というのを繰り返している。どうしてだろう。力がなんか入らないからかな。
力。運動をするといいというのはどうなったんだっけ。いききれるくらいなんかだと？
というか力が入らないのがだけが問題なのでしたっけ。摩擦？


2:20060902
2:どうすればいいかな。
筋肉運動的にいってきついのかな。
なんか受験期の時にやっていたことを思い出したいのかな。
プロジェクトのはじめはなんかこう緊張感があってよかったのに
人がいないところとか、家ではリラックスしてしまうというか仕官してしまってなかなかできない。
外に出ればまた戻るならいいけど家で作業をするとなるとこれは難しい状態になる。外にでてみるか。
コーヒーは発火のためにはいいだろうけど、もっと力強くたたく幹事がもうないな。
作業を運動してくればできるかというとそうでもなかったんじゃなかったっけ。
あとは椅子との関係がよくないかも。
運動してたらそれでよくなるんだっけかというとまあそうかも。
でもそうじゃないときもあったと。それで考え事態がまとまらなかったのだ。
でもまとまるときもあって集中力があったときもあったよねという。
運動がいいという話があった。
あとはガムがいいという話もあった。ガムはいまかんでないからカムとそれでだけで
集中力がでうｒか。
睡眠はどうか。


睡眠
体。
コーヒー。
コーヒーをたって利くようにもどす。
館コーヒー。スタバとかじゃなくて
音楽に乗る
音楽の音量
運動（サンポ）
甘いものをやめてみる。
背筋だけでいけるか。
体あっためる。
外でやれることは外でする。
全部の混ぜ合わせ（一つで全部はない）
ｋｏｅにだしてみる。
水
栄養
昼寝る
カムことがぢアジでガムが大事で、それで歯が悪いのが問題とか、それか
ガムもなれてしまって、しばらくするとガムが口の中にはいっていてもかまなくなるとかある？
肉？
5:一日mediastudio
調子悪い時間結構ある。
のどが痛いのでふつうにそのせいの可能性もある
あとはインタフェイスをかえてまわっているけど悪い兆候かもしれない。
サスピションリストには、
空腹、カフェインレス、自律神経、栄養、移動など。
熱くて移動はきつか
8:ライフハック
タイピング。
ハンドクリームを試している。
移動、外などをためしている。
ちょっと外にいって風の中でやったのも割りとよかったかもしれないよな気がするけど
どうかは分からない。
というか一般的に体調が悪いような幹事もする。
なんかあたまがぼーっとする。
力が入らない。という感じ。
これは交感神経系なきも凄くする。
死ぬ気で戻したいのだが。
昼がたにするというだけではなくて
ちゃんとした時間に起きるのと寝るのとを
両方ともできたら全然違いそう。
食事と歩行はやったほうがいいだろうな。

3:#wait 1010100やってみよう
7:女の子
スタバのあの個はいなかったね。
他には、ちょいちょい見えてくる個たちあｇきになってギャkにつらい
2:どうすれば習慣つけることができるか。
1010100。
１０１０１００にしても、声にだすようなことができないときついかも。
次の日には忘れてそうな気がする。

2:
女の子
歩いている女の子で凄く可愛い子が何人かいた。
女の子というよりは出会いという感じなんじゃないか。
あとはなんといってもインビテーションパーティだった。
友達の友達というやつじゃないので、ほとんど紹介はなかったけれども。
でもまあモデルさんが出入りするところだった。異様に可愛く美しい。
芸術的でもある。魅力的の定義が難しい感じ。
FOFじゃなかった。FOFではない。fofを因果するものは
もっと友達のパーティかも。100人規模パーティーとかかな。
あとは自分がもっと友達的じゃないとだめかも。
知的生産という意味では、モチベーションについて読んだのが印象的だった。
ホーソン実験の影響力が生産性に大変大きいといっていてそれはそうだ。
恐らく掛け算の中に入ってくるでしょう。
どうすればいいか。可愛い女の子のことを思い描いて「あなたのために」とすると
そこについて考え始めちゃって、作業には集中できない。
コーヒーは良かった。志向性を浴びているといいのかも。
一つはペアプロなんだけど他にはオフィスのようなところ、あるいは
カフェのようなところでまともに作業するということ。
質の良い（作業に応じた）志向意識を浴びることは、しかけがないと困難。
どうすれば嗜好性をあびることができるか。
やっぱりお金払ってでもやったほうがいいのだろうとおもうけれども。
特に、作業が面倒くさいような作業だが、ボトルネックになるようなもの、
をリストして、それについて、嗜好性を浴びることができるものを出す。
特にプログラミングとかか。
今結果を出さないとまずいようなもの、として、成功したものを
見せびらかすのも大事だ。

49:motivation
73:httpclient、url、削除リストのurl、
作成リストのurl、日付の位置、全部のノードひろう。
キーボードイベントに反応。
Ctrl+Uと、起動時。
idを表示する。
48:action一般のノードを実施する
70:#done コードの印刷を1010100
45:#wait モニター
44:#wait アークスにコーディング環境を作ってもらう？
19:afford canned coffee
43:#wait AD＋DA
41:#done ポストイット
16:#wait NF mediastudio + motivation
10/4 purchace macbookpro
40:#done ボード＋ボード立て
15:#wait 240 purchace
88:アクセスされた時点でリクエストされたものとする。
一覧を見たりそれを編集するにはNodeCrudsを使う。
14:#wait purchace osx
87:もうnodepadに登録されたCreateとDeleteを反映するには？
13:#wait laptop
86:#done ノードパッドの横をつめる
12:#wait [[外出]]
11:#wait [[motivation]]
59:partialnoding + merge partialnode
83:#done 横幅
58:#wait 被志向
82:#done 大きなフォントサイズ
81:#done #time 20060911 「コードの印刷」をノードパッド上に展開
80:mediastudioな集中時間予算5時間
28:#done 移動中にトップノードを参照
51:#done codeを印刷
26:#done 歩行中の平面
50:#wait code
25:#done ボードクリップ
24:#done 歩きながら？
69:#done 歩いてるときは携帯でおしゃべり？
21:topnoding
20:#wait scheduling 
67:20060911 aogaku で神とペンでdrawingなところをdrawing
8:紙とペンと外出
65:#done 20060910 たててみる
7:drawing 
64:20060911 buy canned cofee for affording
39:DAされたいものをAD
6:#wait [[mediastudio]] and [[motivation]]
38:#done モニタと平行
5:#wait [[eclipse]] and motivation

37:AD
36:#wait mdadev
35:idをつけてブラウザ経由で操作するmdaapp
34:resouce 割り当てを制限
33:motivationがあるときにはなるべくコーディングとかをしちゃうようにする。
プログラミングはモードに入るとできるもの。
32:#wait action and motivation
31:#wait 印刷
79:キーワードにマウスオーバーがあったり、
右クリックがあった場合、因果関係などをその位置関係をコピーした形で
ぼんやりと表示（ただしノードとしてではなく）
そして定着を押したら、ノードを追加。
30:#wait DA

78:ノードパッドサジェスト
59:#wait partialnoding + merge partialnode
58:#wait 被志向
28:#wait 移動中にトップノードを参照
85:割り当てたもののみを強調すビュー。
84:#wait #time 20060911 #resource  mediastudio ノードパッドの横を詰める
26:#wait 歩行中の平面
83:#wait 横幅
25:#wait ボードクリップ
82:#wait 大きなフォントサイズ
24:#wait 歩きながら？
81:20060911 「コードの印刷」をノードパッド上に展開
80:mediastudioな集中時間予算5時間
51:#wait codeを印刷
22:#done トップノードを印刷
50:#wait code
21:#wait topnoding
20:#wait scheduling 
69:#wait 歩いてるときは携帯でおしゃべり？
39:DAされたいものをAD
67:#wait #time 20060911 aogaku
38:#wait モニタと平行
37:#wait AD
65:#wait #time 20060910 たててみる
36:#wait mdadev
64:#wait #time 20060911 buy canned cofee for affording
35:#wait idをつけて修正とか削除とかする。
63:#wait #time 20060910 もうちょい硬いクリップを購入する
34:#time 20060911 eclipse mediastudio resouce 
割り当てをしないと赤とかにする。
割り当てたもののみを強調するビュー。
33:motivationがあるときにはなるべくコーディングとかをしちゃうようにする。
プログラミングはモードに入るとできるもの。
32:#wait action and motivation
31:#wait 印刷
30:#wait DA

79:キーワードにマウスオーバーがあったり、
右クリックがあった場合、因果関係などをその位置関係をコピーした形で
ぼんやりと表示（ただしノードとしてではなく）
そして定着を押したら、ノードを追加。
78:#wait ノードパッドサジェスト
49:#wait motivation
48:#wait action一般のノードを実施する
19:#wait afford canned coffee
9:#done partialnoding　で外
8:#wait 紙とペンと外出
45:#wait モニター
16:#wait NF mediastudio + motivation
10/4 purchace macbookpro
7:#wait drawing 
44:#wait アークスにコーディング環境を作ってもらう？
15:#wait 240 purchace
6:#wait [[mediastudio]] and [[motivation]]
43:#wait AD＋DA
14:#wait purchace osx
5:#wait [[eclipse]] and motivation

13:#wait laptop
70:#wait コードの印刷を1010100
41:#done ポストイット
12:#wait [[外出]]
40:#wait ボード＋ボード立て
11:#wait [[motivation]]
10:#done a3かa4の紙とペンとtopnodeの参照
2:スタバのe-sideガールすごい。またいったほうがいいかも。
2:ミス。
メディアスタジオにお一方、勇気のある人がきた。勇気は大事だ。
勇気は訓練できる。ギャクにやられてショックだ。
ミス2.小松さんとこで。いいかんじ。
ミス3.e-sideにいってない。
ミス4.？
4:タワー近辺で0000が3組ニアった, 度胸試しは練習してはどうか, それ以外にも接触可能性多数ななほど。時間当たりのそれともなれば。, 
1189:collect the ideas for views.
1435:pcを内山さんに
568:#wait 永井君
1434:資材管理システムmdadev仕様
567:#wait 予算承認
1433:#wait 仕様書く
566:#wait なるべく一つにまとめていく作業
328:#cycle ヤフーにログインしている状態でblog.yahoo.co.jpリストのブックマークを全部開く

889:#wait スクリプト書く
562:＋現状までのテクストの修正
561:#wait やり方の修正の連絡
649:動的

322:#wait ヤフーカテゴリ
648:desing direction
321:#wait ヤフーのフリー登録をまずする
883:ドメインが5程度ならば手動アップ
ドメインが２０以上ならプログラムでアップ
19:[[ddddの輻輳]]
1512:タスクを修正してビューや管理をつくる
18:actionable
1511:#wait マニュアルでいいか。やってみよう。
どういうビューになるというのも実際に入れてみてやろう。
17:#cycle check #purchace 服
16:#purchace 美容液
642:キーワード順位チェック 
キーワードランキング
ランキングレポート 
検索エンジン評価チェック 
リンクポピュラリティ
リンク元チェック 
ライバル分析 
ライバルランキング
ライバルリンクポピュラリティ
トップ30チェック
ライバルリンク元チェック 
エラーチェック 
メタタグチェック
一括リンクチェック
ページリンクチェック
画像リンク切れチェック 
スピードチェック 
ページ重さチェック
サーバー速度チェック 

15: 美容液　試す
158:ニーズ思考とシーズ思考
157:アウトソース
13:洗顔
156:2分ルール
12:purchace
1022:所得税が落ちた理由を分析する
11:服
154:椅子を変えたい。

10:顔
153:パワーズオブパワー
1020:#wait check valuedomain
89:#wait バナーが出るようにコーディングする
1107:#wait #time 9/20 check the educommons site for the migration tool release
1096:#wait get the archive
1095:#wait install fast 
85:効果測定
472:#wait
1427:sjisにする
1426:utfでいくように調査
559:テクストの方の修正
1425:ajaxで日本語が入らないぞ問題
1423:#wait いままでのものについてはサービスをいれなくてはいけない。
556:どうやら一つのセットに一つの言語の場合の対応が出来てないみたい。
基本的には一つの語には一つのテクストにしたほうがいいはずでは？
スニペットとしては。
1422:#wait CurrentEstiomationという情報の管理が必要。
二つあってはいけない。
必ず一つ必要。
800:#wait ふつうにリンク集に登録しまくる？
1509:#wait 記帳代行だけじゃだめなんじゃないか。
1508:#wait どうすればタスクのデータ投入ができるか。
1499:ネットワーク
877:#wait ドメイン取得の必要
1507:ハンコもってそこにいる
551:zeirishi.tkをjavaのホスティングに移管する
550:zeirishi.tk　携帯サイト
1505:予算
1170:#time 20061010　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　
874:#wait とりあえずのドメインのコストが問題。
２万円くれませんかという話
1503:#wait 待ち
1502:#wait 光調達
1501:設定
1254:#wait テスト
1500:機器調達
1251:機能に対してmdadevをするのに、パターンを選ぶ、パターンに必要なモデル（＝名詞）を選ぶ。というのをキーワードとして作成
147:#wait バナー作成をタカヤに依頼
税理士については全部自社のコンテンツに
FN、いまあるやつを

1013:#wait 請求書にするサイクル9/21
141:シャツにつする
1088:#wait unu educommons update
140:僕のやつみたいに。
76:コンテンツ投入
75:お店行く
73:効果測定
787:リンク先*リンク元*リンク元の質
549:shotokuzei.net 携帯サイト
1081:自動リンクを使えるところを探す。
自動リンクの飛ぶ先を探す。
顧客名が書いてあったらそこに飛ばすのがいいでしょう。
786:他のサイトみてバックリンク登録できそうなところ
70:ハズい
785:バックリンク
547:デプロイ作業がだるい
1413:#wait もっかいすえいしさんと
782:用件を書き出す。
ページへの誘導まではあちらから。
デザインは不要。
そこからある登録ページに飛ばす。
このサーバはこちらで用意し管理する。
デザインのテンプレートはそちらで用意してください。
登録画面、登録確認画面。登録確認メール。文言が指定できる。
登録後は管理画面にで、登録者の情報が確認できる。
またその登録ユーザへの情報書き出しができる。
またcsvでデータをえることができる。
また簡単な履歴書的なシートを出力することができる。
状態の決定ができる。
候補、の選択ができる。


のような昨日をつくって、こちらがもっているものに対して
似合っているようならこれを使いませんかと提案する
781:[[見積り作成]]
1165:pc sendmail about the educommons
542:データ投入への課金を考える
1487:#wait 待ち
1486:#wait スケもらう
1246:#wait ノ
290:管理しているページ全てにRSSを作る？
各ページごとのRSS？
サイトマップにもrssを作る。
あなたの作ったrssの全てをmyspaceとadd yahooにコンテンツとして追加
ブログからもあなたのサイトにリンクする
他の関連されているキーワードから検出されるヤフーブログへ訪問する
ヤフーブログはＩＤを使いログインされた状態で他のブログに訪問することで訪問先のブログにて訪問者履歴に自動的に記録されます。
これがどうもヤフーのロボットが好きらしく、これを繰り返しているだけであなたのブログにリンクが増えます。
関連されたキーワードから検出される他のブログからリンクがあればあなたのサイトのコンテンツもより質の良いものとロボットが判断してくれます。
ページランクの高いヤフーブログへ訪問する
基本的にグーグルが検索結果としてランクする上位のページはページランクが高いです。
良質なコンテンツを提供して他のサイトからリンクをしてもらうか、
リンクパートナーとなるサイトのページとリンクを交換する。
検索結果の上位にあるサイトが検出しているページの真似を繰り返せば必ず上位にランクするようになります。


1009:#wait アークス見積り部分完成
1244:#wait sachi
1481:金額を全部カンマに
1007:関係してるやつがバグってるぞ。
139:シンプル説得
1480:画像だけ差し替え。
1242:#wait dddd
138:高橋メソッド
137:でかいプレゼン
134:ユーザビリティに１０パーセントの予算を
132:dddd
131:秘密の発見
67:#purchase laptop
1076:#wait wikiable mail
66:機材
65:美 place
217:あの子と口が利けなかった問題＠ポンツタ
690:被リンク
CGM
自動リンクへの参加
ブログ購読と自動リンクのお願い
＋皆さんのページ、の作成。
もっとGUIをかっこよくしちゃって？
776:大久保さんに電話
60:unu [[storyteller]]
775:アルバイト管理システム１０万でどうかの話
具体的にやりましょう
537:相互リンク申請プロジェクトは？
1.こんなサイトです。
2.ここからリンクします。
各ページとの相性を判断してリンクします。
3.こんな感じの計算サイトどうでしょうか？
4.
536:#cycle check gum
535:ガム
859:#wait ターゲットキーワードセットごとにドメインをとる
1479:ピラミッドテンプレ.vm
1478:xls埋める
1477:pyramid完成
1476:サイトをpyramidに作る
1475:別サイト書き出し
1474:別サイトをpyramidに作る
1473:もらったエクセルをウェブに
614:alexaに登録
1234:資料請求
着荷報告
1470:#wait tutuku
689:#wait #time 20060812 #agenda mtg 
688:seoの順位調査自作する
59:[[unu]]
58:[[team]]
56:#wait バナー張る
55:#wait 転換させる
54:効果測定 pyramidseo
1389:#wait 計算がしっかりしてるかを確認する
53:pyramidseo
51:karada
202:#wait ぼっと呼ぶ
191:#wait サイトからいまあるやつピックアップして保存して、
1383:#wait 顧客管理
190:スナップショット
1382:#4444 20061001　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　
522:国立劇場
848:#cycle 海外のものも含めて手作業相互リンク系に
大量に登録する
274:#wait 見え方にばらつきが
1467:#wait 参考になるURL
ウケもとの会社情報
（ウェブあればそれで）
609:複数ページあっていい
1141:#4444 current　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　                                    　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　                         
273:#wait ヤフーレベルに
1466:#wait 支払方
608:一覧ページはあってもいい。index.htmlじゃなければいい。
1228:缶コーヒー
1465:#wait 期間
598:#wait 次やるとき。
それいつ？ 8/15日チェック
606:#wait #time 8/20
597:#wait #time 8/7　内山君によってコンテンツアップされてるかチェック
1463:#wait 金額
605:#wait #5回目前の指示の際
842:ブログなどを作成する
1462:質問から
841:#wait サイトを分け完了
1461:#wait タスクのデータ投入
840:サイトを作成する
1460:バイトサイト集客
593:#time　8/14 次の請求立てる
355:nodepadで「すごい」の解決をしたにつける。sudjestion
1308:#wait 納品確認
1307:#wait 請求
1298:#wait pyramid-contents
内山さん2回目
1306:#wait 支払
921:#wait [[0820arcs]]
49:#purchase washing creem
1542:場所のード化kう
48:衛生
47:髪
189:#wait カテゴリ決めと文言決め
45:ウェブパターン
188:#wait ヤフー登録
44:kyowa 人材管理システム
43:arbeitinfo.com
185:静かな腹筋。
40:アフォード
183:[[充足率計算表]]
1376:自宅でホスティング？
517:english
182:#cycle template朝
516:[[bridge]]
268:sleeping
839:リンク先を作成する
1459:創設サイト完成
1370:e-side
1454:arbeitinfoサイト
9:容姿
8:恋
1539:お返事
583:見積り承認
917:#time 8/20 arcs intra を確定
1538:wp3とwp4を創る
6:[[レヴィット]]
344:モチベ
581:1.印刷可能バージョン
2.携帯バージョン
3.携帯に送る
4,検索窓つける
107:サーバ取得とドメイン取得とトムキャットと
osとsshとphpmyadmin,apcahe2.2,php5,mysql最新
とwebmin入れる。 
343:#wait 外に服でないように
＋いらんのは捨てる
＋美しくないのは捨てる
＋交わせないようにする
342:今の部屋美しく保つ
913:管理画面
なにができるといいか考える
サイトを見れるといいかも
341:部屋
1534:#4444 20060930　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　                                    　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　                         
340:rse
1533:#4444 20060929　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　                                    　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　                         
39:food place guiと提案
1532:#4444 20060928　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　                                    　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　                         
38:mda
37:#cycle check [[food]]
1046:一括自動メール配信
179:淘汰と試行
35:感動を与える
34:因果抽出
175:家出
31:#wait zeirihsi.tkデザイン
174:家に食べ物おいとく。
蜂蜜、フルーツ、チョコ、カロリーメート
30:zeirishi.tk
173:自分で操作できるようにする
498:#wait zeirishi.tkコンテンツアップ４回目
172:テープマシン捨てる
1365:arcs進捗管理完成
1364:進捗管理
259:#wait フォームから登録
カテゴリー選択、申請コメント作成
1362:資料請求
着荷報告のmdadev
502:１枚辺りの文字量を700程度にしてみたい。
のでページ単価を3000円などにしてもらえないか。
ページ制作枚数は20-30程度にする。
の相談
1448:創設会社設立
827:#wait 手作用リンクにお願いする
1447:#4444 20060927　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　                                    　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　                         
577:rssをはいてちゃんといろいろに読ますべきかも。
rssのリンクも張ろう。

339:サイト、ブログ、rss、などのアカウントを３０ほど作りマクって各地から
サイトにリンクを張りまくる
821:#wait 相互リンクをすばらしくする
1441:インターネット卸問屋
820:#wait 最低限のページランクをもらう
1529:28日arcs会議
1527:macmini
571:#wait 永井君にメール
1191:unu mdadev
570:#wait #mail 内山さんに
895:分けられたドメインへのコンテンツのアップ
330:RSSを全部のページで吐く
？
893:#wait とりあえず手
1523:実印確認
29:ddddお金ちょっとずつ
892:ドメインリスト作成
900:ＲＳＳクロールと出現頻度解析システム
28:音楽
891:#wait ドメインリストからドメイン取得
1521:カスタマーごとのビュー
27:創作
890:#wait wgetしてとってくるファイル？
受け渡すファイルの一覧を認識できないといけない。
でもその先のshファイルにはまた全部をもってないといけない
からやっぱこれだめ。ということはこっちからプットできるようでないとあかん。
最初はﾃだな。
ほいで後は、こっちからscpかFTPかするようなスクリプト書いてアップするようにする。
これは簡単なはず
1520:タスクごとのビュー
979:処理担当が決まってないとか、そういうのは
制限かけたいですよね。そういう制限リストみたいなものがあっていい。
あとはアラート出してくれるというのも必要。
653:とりたい属性の提案と決定。 
26:美の制作
652:モデリング（db属性化
25:charene
651:バリデーションを各属性に割り当てる 
24:デザイン仕事
167:パーリー
650:とりたい属性をhtmlフォームにする。 
23:chances for o
166:友達とゴハン
22:AC
165:遊ぶ
21:発火
20:栄養
163:削除
162:#wait 服を綺麗に
161:場所　の削除
970:これはつくってみてから、提案して、
それでいいです。というのでいいかな
1353:#wait 文言もらう
819:#wait クロールしてもらう
818:#wait ページランクをもらう
817:#wait 相互リンクしてもらう
481:洗顔ブラシ。
洗顔剤。

92:arcsintra
1436:arcs5回目コンテンツ作成
569:予算申請
91:[[タグ]]
1454:arbeitinfoサイト
1568:mdadev2
1567:FOF
1566:channels
1565:#wait 20061013 dddd
1564:go outs
1563:#wait write more readably
1562:#wait 10101004 grip strong move arm
859:#wait ターゲットキーワードセットごとにドメインをとる
1561:#wait 10101004 grip strong move arm
1560:#wait 10101004 grip strong move arm
67:#purchase laptop
1009:#wait アークス見積り部分完成
66:機材
65:美 place
1007:関係してるやつがバグってるぞ。
158:ニーズ思考とシーズ思考
1088:#wait unu educommons update
157:アウトソース
156:2分ルール
154:椅子を変えたい。

268:sleeping
60:unu [[storyteller]]
153:パワーズオブパワー
1081:自動リンクを使えるところを探す。
自動リンクの飛ぶ先を探す。
顧客名が書いてあったらそこに飛ばすのがいいでしょう。
1191:unu mdadev
1448:創設会社設立
517:english
598:#wait 次やるとき。
それいつ？ 8/15日チェック
516:[[bridge]]
597:#wait #time 8/7　内山君によってコンテンツアップされてるかチェック
1559:#4444 20061015　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　
481:洗顔ブラシ。
洗顔剤。

1558:#4444 20061014　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　
1557:#wait 10101004 grip strong move arm
593:#time　8/14 次の請求立てる
1556:#wait 10101004 grip strong move arm
1441:インターネット卸問屋
1555:#wait 10101004 grip strong move arm
1554:#wait 10101004 grip strong move arm
1552:#4444 20061016　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　
1551:#4444 20061020　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　
59:[[unu]]
848:#cycle 海外のものも含めて手作業相互リンク系に
大量に登録する
58:被志向性
56:#wait バナー張る
55:#wait 転換させる
54:効果測定 pyramidseo
147:#wait バナー作成をタカヤに依頼
税理士については全部自社のコンテンツに
FN、いまあるやつを

53:pyramidseo
842:ブログなどを作成する
1076:#wait wikiable mail
841:#wait サイトを分け完了
259:#wait フォームから登録
カテゴリー選択、申請コメント作成
1189:collect the ideas for views.
840:サイトを作成する
1107:#wait #time 9/20 check the educommons site for the migration tool release
141:シャツにつする
1298:#wait pyramid-contents
内山さん2回目
140:僕のやつみたいに。
1436:arcs5回目コンテンツ作成

1435:pcを内山さんに
1549:#4444 20061013　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　
1434:資材管理システムmdadev仕様
1548:#4444 20061011　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　
1433:仕様書く
1547:#4444 20061010　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　
502:１枚辺りの文字量を700程度にしてみたい。
のでページ単価を3000円などにしてもらえないか。
ページ制作枚数は20-30程度にする。
の相談
583:見積り承認
614:alexaに登録
581:1.印刷可能バージョン
2.携帯バージョン
3.携帯に送る
4,検索窓つける
1542:場所のード化kう
839:リンク先を作成する
49:#purchase washing creem
690:被リンク
CGM
自動リンクへの参加
ブログ購読と自動リンクのお願い
＋皆さんのページ、の作成。
もっとGUIをかっこよくしちゃって？
48:衛生
47:髪
139:シンプル説得
45:ウェブパターン
138:高橋メソッド
44:kyowa 人材管理システム
137:でかいプレゼン
43:arbeitinfo.com
134:ユーザビリティに１０パーセントの予算を
40:アフォード
132:dddd
131:秘密の発見
355:nodepadで「すごい」の解決をしたにつける。sudjestion
1170:#4444 20061012　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　
1427:sjisにする
1426:utfでいくように調査
577:rssをはいてちゃんといろいろに読ますべきかも。
rssのリンクも張ろう。

1425:ajaxで日本語が入らないぞ問題
609:複数ページあっていい
1539:お返事
608:一覧ページはあってもいい。index.htmlじゃなければいい。
689:#wait #time 20060812 #agenda mtg 
1423:いままでのものについてはサービスをいれなくてはいけない。
688:seoの順位調査自作する
1422:CurrentEstiomationという情報の管理が必要。
二つあってはいけない。
必ず一つ必要。
606:#wait #time 8/20
605:#wait #5回目前の指示の際
571:#wait 永井君にメール
570:#wait #mail 内山さんに
39:food place guiと提案
38:mda
827:#wait 手作用リンクにお願いする
37:#cycle check [[food]]
35:感動を与える
34:因果抽出
821:#wait 相互リンクをすばらしくする
31:#wait zeirihsi.tkデザイン
820:#wait 最低限のページランクをもらう
30:zeirishi.tk
1165:pc sendmail about the educommons
1308:#wait 納品確認
1389:計算がしっかりしてるかを確認する
344:モチベ
1307:#wait 請求
343:#wait 外に服でないように
＋いらんのは捨てる
＋美しくないのは捨てる
＋交わせないようにする
1306:#wait 支払
342:今の部屋美しく保つ
341:場所
569:予算申請
1499:ネットワーク
340:rse
568:#wait 永井君
1383:#wait 顧客管理
567:#wait 予算承認
566:#wait なるべく一つにまとめていく作業
1413:もっかいすえいしさんと
1527:macmini
562:＋現状までのテクストの修正
561:#wait やり方の修正の連絡
1523:実印確認
787:リンク先*リンク元*リンク元の質
819:#wait クロールしてもらう
786:他のサイトみてバックリンク登録できそうなところ
1521:カスタマーごとのビュー
29:#eclipse dddd予算
818:#wait ページランクをもらう
785:バックリンク
1520:タスクごとのビュー
28:音楽
817:#wait 相互リンクしてもらう
27:創作
26:美の制作
782:用件を書き出す。
ページへの誘導まではあちらから。
デザインは不要。
そこからある登録ページに飛ばす。
このサーバはこちらで用意し管理する。
デザインのテンプレートはそちらで用意してください。
登録画面、登録確認画面。登録確認メール。文言が指定できる。
登録後は管理画面にで、登録者の情報が確認できる。
またその登録ユーザへの情報書き出しができる。
またcsvでデータをえることができる。
また簡単な履歴書的なシートを出力することができる。
状態の決定ができる。
候補、の選択ができる。


のような昨日をつくって、こちらがもっているものに対して
似合っているようならこれを使いませんかと提案する
25:charene
781:[[見積り作成]]
895:分けられたドメインへのコンテンツのアップ
24:デザイン仕事
23:chances for superg
1046:一括自動メール配信
893:#wait とりあえず手
892:ドメインリスト作成
21:発火
891:#wait ドメインリストからドメイン取得
20:栄養
890:#wait wgetしてとってくるファイル？
受け渡すファイルの一覧を認識できないといけない。
でもその先のshファイルにはまた全部をもってないといけない
からやっぱこれだめ。ということはこっちからプットできるようでないとあかん。
最初はﾃだな。
ほいで後は、こっちからscpかFTPかするようなスクリプト書いてアップするようにする。
これは簡単なはず
339:サイト、ブログ、rss、などのアカウントを３０ほど作りマクって各地から
サイトにリンクを張りまくる
921:#wait [[0820arcs]]
191:#wait サイトからいまあるやつピックアップして保存して、
190:スナップショット
1376:自宅でホスティング？
559:テクストの方の修正
330:RSSを全部のページで吐く
？
556:どうやら一つのセットに一つの言語の場合の対応が出来てないみたい。
基本的には一つの語には一つのテクストにしたほうがいいはずでは？
スニペットとしては。
1486:スケもらう
1599:superg shops
1370:e-side
1598:資本集中
1597:AAC
1596:ピクニック
551:zeirishi.tkをjavaのホスティングに移管する
1481:金額を全部カンマに
1595:goout
550:zeirishi.tk　携帯サイト
1480:画像だけ差し替え。
1594:美術鑑賞
1512:タスクを修正してビューや管理をつくる
1593:美術館にいこう
776:大久保さんに電話
1511:マニュアルでいいか。やってみよう。
どういうビューになるというのも実際に入れてみてやろう。
1592:superg パーティー
19:Avoid ddddの輻輳
775:アルバイト管理システム１０万でどうかの話
具体的にやりましょう
889:#wait スクリプト書く
1591:g見ない
18:actionable
17:#cycle check #purchace 服
16:#purchace 美容液
15: 美容液　試す
189:#wait カテゴリ決めと文言決め
107:サーバ取得とドメイン取得とトムキャットと
osとsshとphpmyadmin,apcahe2.2,php5,mysql最新
とwebmin入れる。 
917:#time 8/20 arcs intra を確定
188:#wait ヤフー登録
13:洗顔
883:ドメインが5程度ならば手動アップ
ドメインが２０以上ならプログラムでアップ
12:purchace
11:服
800:#wait ふつうにリンク集に登録しまくる？
92:arcsintra
10:顔
91:[[タグ]]
913:管理画面
なにができるといいか考える
サイトを見れるといいかも
183:[[充足率計算表]]
182:#wait template朝
328:#cycle ヤフーにログインしている状態でblog.yahoo.co.jpリストのブックマークを全部開く

1141:#4444 current　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　                                    　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　                         
1254:#wait テスト
290:管理しているページ全てにRSSを作る？
各ページごとのRSS？
サイトマップにもrssを作る。
あなたの作ったrssの全てをmyspaceとadd yahooにコンテンツとして追加
ブログからもあなたのサイトにリンクする
他の関連されているキーワードから検出されるヤフーブログへ訪問する
ヤフーブログはＩＤを使いログインされた状態で他のブログに訪問することで訪問先のブログにて訪問者履歴に自動的に記録されます。
これがどうもヤフーのロボットが好きらしく、これを繰り返しているだけであなたのブログにリンクが増えます。
関連されたキーワードから検出される他のブログからリンクがあればあなたのサイトのコンテンツもより質の良いものとロボットが判断してくれます。
ページランクの高いヤフーブログへ訪問する
基本的にグーグルが検索結果としてランクする上位のページはページランクが高いです。
良質なコンテンツを提供して他のサイトからリンクをしてもらうか、
リンクパートナーとなるサイトのページとリンクを交換する。
検索結果の上位にあるサイトが検出しているページの真似を繰り返せば必ず上位にランクするようになります。


322:#wait ヤフーカテゴリ
1251:機能に対してmdadevをするのに、パターンを選ぶ、パターンに必要なモデル（＝名詞）を選ぶ。というのをキーワードとして作成
1365:arcs進捗管理完成
549:shotokuzei.net 携帯サイト
1479:ピラミッドテンプレ.vm
321:#wait ヤフーのフリー登録をまずする
1364:進捗管理
1478:xls埋める
547:デプロイ作業がだるい
1477:pyramid完成
1362:資料請求
着荷報告のmdadev
1509:記帳代行だけじゃだめなんじゃないか。
1476:サイトをpyramidに作る
1508:どうすればタスクのデータ投入ができるか。
1475:別サイト書き出し
1507:ハンコもってそこにいる
1474:別サイトをpyramidに作る
1588:生産性
9:容姿
1473:もらったエクセルをウェブに
1587:A g重力
8:恋
542:データ投入への課金を考える
1505:予算
1586:g重力
6:[[レヴィット]]
1503:#wait 待ち
1584:gみる
1502:#wait 光調達
653:とりたい属性の提案と決定。 
1583:A 
1501:設定
652:モデリング（db属性化
1500:機器調達
651:バリデーションを各属性に割り当てる 
89:#wait バナーが出るようにコーディングする
650:とりたい属性をhtmlフォームにする。 
1580:NodeEditerにヘルパーつける。選択範囲を取得。選択範囲に対して処理を加える。タグつけるとか。
877:#wait ドメイン取得の必要
179:淘汰と試行
1610:#wait 運送会社への郵送指示書の仕様
874:#wait とりあえずのドメインのコストが問題。
２万円くれませんかという話
175:家出
174:家に食べ物おいとく。
蜂蜜、フルーツ、チョコ、カロリーメート
1022:所得税が落ちた理由を分析する
172:テープマシン捨てる
900:ＲＳＳクロールと出現頻度解析システム
1020:#wait check valuedomain
1246:#wait ノ
202:#wait ぼっと呼ぶ
1244:#wait sachi
1242:superg
1353:#wait 文言もらう
537:相互リンク申請プロジェクトは？
1.こんなサイトです。
2.ここからリンクします。
各ページとの相性を判断してリンクします。
3.こんな感じの計算サイトどうでしょうか？
4.
1467:#wait 参考になるURL
ウケもとの会社情報
（ウェブあればそれで）
536:#cycle check gum
1466:#wait 支払方
535:ガム
1465:#wait 期間
649:動的

1579:PatternWeaver
648:desing direction
1463:#wait 金額
1462:質問から
1461:#wait タスクのデータ投入
1608:RuntimeNodeForSosetsuIntra
1460:バイトサイト集客
1606:RuntimeOfPatternWeaver
1573:社会的信用
642:キーワード順位チェック 
キーワードランキング
ランキングレポート 
検索エンジン評価チェック 
リンクポピュラリティ
リンク元チェック 
ライバル分析 
ライバルランキング
ライバルリンクポピュラリティ
トップ30チェック
ライバルリンク元チェック 
エラーチェック 
メタタグチェック
一括リンクチェック
ページリンクチェック
画像リンク切れチェック 
スピードチェック 
ページ重さチェック
サーバー速度チェック 

1572:支払いを迅速に
1571:たかやへの支払い
1603:hunting
1570:Payment to Nagaikun
1602:lotation:
mediastudio+aoyama
work home:
dddd + supergcafe:
work home:
musium:
work home:
dddd + supergcafe:
1601:日を変える
76:コンテンツ投入
979:処理担当が決まってないとか、そういうのは
制限かけたいですよね。そういう制限リストみたいなものがあっていい。
あとはアラート出してくれるというのも必要。
75:お店行く
167:パーリー
73:効果測定
166:友達とゴハン
1096:#wait get the archive
165:遊ぶ
1095:#wait install fast 
1013:#wait 請求書にするサイクル9/21
70:ハズい
163:削除
162:#wait 服を綺麗に
161:場所　の削除
970:これはつくってみてから、提案して、
それでいいです。というのでいいかな
274:#wait 見え方にばらつきが
273:#wait ヤフーレベルに
1234:資料請求
着荷報告
498:#wait zeirishi.tkコンテンツアップ４回目
1459:創設サイト完成
44:たー君雇用されてなくて
無報酬でテラー使えちゃうようになってる。
43:外販をアウトソース
59:cyberwaveさんとかかな
42:雇用してしまう
58:ほかの会社とかとコネを持ってみる。
内部的に一使うのオッケーな
案件で500万くらいのやつを
一人で作る
57:roiをつけて順位つけてから。
56:10月10日に36万
9月25に50万
55:100万の貯金はいつできる？本当は
54:とりあえず100万の貯金と月額最低20万のベース給与
＋収入時に自給4000円程度で報酬
66:僕が280万くれないならやれないという権利はあるか。
50:どうすればやーふみ導入できるか
65:利益の9割が取られる
丹羽君400万とたー君
時給6000円＊150時間で90万＝500万で
300万の純利益が出て、僕が280万くれないと
やりませんっていうのがあらかじめ決まっていたとして
たー君はそれじゃあ開発をしないか。
ほかの仕事をしているのより儲かるのに？
64:今交換可能度に基づいて対価にはなってないけど
どうすれば？
19:利用者は100万あたり無条件で20万取得
18:100万案件に60万を要求
76:彼らが入ることで因果されることは、
代替人員として、彼がやっていることが
公平金額になるので、
僕の分の取り分が大きくなる。→全体の収益が上がる。
また一時的な出勤が増える。
彼に考え事することで増える僕に時間をほかにつかわないといけないね。
17:たー君分が過剰を補正
9:案件：技術者比率
8:比率設定
73:兼松さんとかにも相談してみる？
6:スケールさす
72:金額決めてくれという。
ふみやに調整を頼むといいという
13:最高roiになるものを探す
5:対サービス適正
4:対サービス過小を是正
28:自分で顧客案件やる
＋雇用する
3:どうすれば自分に残るか
27:自分で顧客案件やらない？
25:労働は代替性に基き給与払い
24:広告＝案件額
39:テラーを外部利用可能にする
23:徴収率を下げる
22:時間あたりの案件額＊徴収率
21:時間当たりの収益
20:二つのところで徴収率が違わないように
35:pmc案件やってないとして、
彼らから800万あたりに
僕が不労で20万もらえるとしたら？
これ自体は時間当たりの案件額は小さくなる？
800万あたり200万だと25パー。
800万あたり20万だと2パー。
1億あたり2パーだと200万。
2パーにすることによって
僕が2パーにすることで、広告によって、
1年当たりのてらー対象案件額がいくらになればいいか？
34:利用者は100万あたり無条件で40万取得
49:ふみやとか
48:代替可能人員を配置してしまえばそれで金額は落ちる。その上で、しっかりと金をあげよう。
31:徴収率
47:代替可能度に基いて対価
30:案件額
46:利益のうち何割まで取られちゃうならやるか。
4:習慣が不安
3:肉、散歩、腕、体重管理、ダンス、finalcoffee、耳栓（音）、
5:STSの登録-ユーザ管理で鹿島田清、岩崎好夫が部署が移動になったので
DPGSERVICEに権限を変えました。岩崎はもともとHBGDIRECTORだったのですが、
DPGSERVICEに変えた後もHBG系の人がcmsでST0からST1に承認依頼するとき
岩崎宛にメールが飛びエラーになっております。
  STSのユーザ管理で権限を変えたときcmsのメールの権限も変わらないので、
変わるように変更して頂けないでしょうか。


4:
3:ManaulDetail jspかmanual vp
9:vsysの鍵をxに。
8:*updatesgml*
11:●開発機のSTSよりSGML書き出しをクリックしid11は
機種名、部品番号が入ったがid10,id12は入らないのはなぜでしょうか？

7:tagu.zip
10:●一般設定のグループネームにmbgと入っているがhbgにして
保存すればhbg系の人がログインするとそのタグに変わるのですか？
一見変わりそうにありませんがこの辺の仕様は大丈夫でしょうか？

8:投資受容値の計算方法を考える
19:パラパラブック（無制限テクストを）
7:金の実験と投資密度
18:本読まなくてよさ
6:ロゴの投資密度
17:ロゴと閲覧頻度（frequency).ロゴは閲覧頻度が高い。ので投資対効果の効果が高い。
5:parapara URL
16:カメラにむかってパラｐラ
4:無制限ボックス
15:ハンドヘルドロディア
3:paraparaイメージ
14:hintと恐怖
13:a few rhodia blocks
12:totalnoding
28:bettercontextbase
11:context sheet(fixed place sheet)
10:client
25:@keyword [[RuntimeNodeOftranslation]]
24:go hands
23:contextRhodia for @storyteller
20:roi計算
12:mazdah
11:contextbase
13:pmc
27:[15:53:20] OTONASHI Fumiyaの発言: 21時くらいまで外苑前で、1時前に中野なんでその間にいこうかな
[15:53:36] kouji toukuboの発言: 食うよろし
[15:53:45] OTONASHI Fumiyaの発言: そのまえにうんこしてくる
[15:53:46] kouji toukuboの発言: 飯がうまいと自信マンマンだった
[15:53:53] kouji toukuboの発言: うんこはしなくてよろし
[15:54:08] kouji toukuboの発言: 貯めるが勝ち
[15:56:29] kouji toukuboの発言: なんだこの間は
[15:56:45] kouji toukuboの発言: ただいまオトナシ君の脱糞性能を計測中です
[15:57:05] kouji toukuboの発言: 15:53:45秒からすべてが始まりました
[15:57:13] kouji toukuboの発言: みなさん、あとちょっと、あとちょっとです！
[15:57:29] kouji toukuboの発言: ガンバ！ガンバ！厚い声援が聞こえてくるようです。
[15:58:26] kouji toukuboの発言: ・・・５分経過ー
[16:01:17] kouji toukuboの発言: どうやら君を買いかぶりすぎていたようだ
[16:01:21] kouji toukuboの発言: 失望した。
[16:01:24] kouji toukuboの発言: お前には失望した。
[16:01:32] kouji toukuboの発言: そんな便はよくない便だ
[16:01:42] kouji toukuboの発言: ７分は中の下だ
[16:02:20] kouji toukuboの発言: そう、スカイプもいっている「一時退席中」と。。。。
6:keitaidisplay pattern
11:sales
10:pmcxsltについてもモックをしてしまって提案してしまう
7:at out
4223:外出中の携帯から
4219:シンクロする
4222:linuxのeclipse入れて、モニター買う
4218:ネットがない移動中も使える
4221:シンクロするlinux＋マウスとキーを
4236:ちゃんとしたwarを配置
4217:osxに流す設定にするosx
4216:みんなが外から？
4234:networkが咲きだがsql-base-syncは必須
4215:storytellerが移ったとき
4233:networkごしにmysqlにアクセスできるようにして
drop/createしてdumpを普通に飲み込ませる（っていうかいcjでやったじゃん）
4231:どうすればシンクロできるか
4224:デバッグできない？
6:リサイクルなどで電源やpcやネットワークケーブルなどを超激安で回収して配置しつつ、
要点（外向きの回線など）はきちんとしたものを
そろえることはできないか。
5:パンクでありたい
4:明日眠る
3:宿題。
カンがえたことのロギング
場所は美しい
パンクでありたい。
ただのケ／ハレでないものにする。
はてなとかの開発合宿を再評価。高い生産性。数億円の価値を生んだシステムが５日、２０人日。
淀川長治のモデリング。かこってる。
パーティーの再評価。つながり、交流、新しい交流。
アイデア（コラボ）ではなく、案件なり金も動く場所。
開発合宿を自発的にフリーランスかスモールチームがやっている。
ここに、案件もあるようだと、案件があるというパブロフ的呼び水がきく。
逆にアイデアと金があるひとたちが、一流（市場に出ない）であるが故に自由なワークスタイルを持っている人たちのみそろうこの場にいき
案件を最高に実装してくれる場となる。
この関係はitベンチャーキャピタルXギークプログラマーという組み合わせ以外の、あらゆる関係にも適用できる。
またこの組み合わせの最新のもの自体の創出もできれば。
ネットワーク資源が（都内のオフィスと同質に）あれば、多くに仕事は形になる。
コスト額が移動も込みで一日平均３０００円（生活費より安い）程度であるといいのでは。
パーティーには美、ファッションなども入っているとよい。
ファッションロックス。アイスランド、難局、グリーンランドの広大さ。
猿島。
人脈。面白くて実力のある人々に声をかけることはできる。彼らが動けば時代が動くかもというものがある。
が動いてくださいとお願いして回るのは最後の最後。動きたくなるようにするべき。
スプートニク、フジロック、ダーティースカイロックフェス（三角形）、定点観測、tdb、移動広告、パーティー、人間に、立体眼鏡をかけると読み取れる広告を待ちにばらまくー＞眼鏡をかけた人たちがかけてない人たちの注意を得る（広告になる）。
一流シェフがワタミの料理を作る。ワタミの食材で。
朝霧、光、rawlife、エレグラ、関西での多発音楽祭。
ポータブルなツタヤ（カフェミーツabcクオリティのブック提案なスペースをポータブルに）
アカデミーヒルズの１万円さ（６０００円から１万円にあげて中のクオリティを保った）。無線まではある。
モダーンワークスペースの最低限要素を抜き出し、それを非常に高いクオリティで達成。残るものはないがしろにしてコストが落ちるなら。
（トイレはフジロックでいいかもみたいな。）
3:tkm
5:無制限テクスト
4:ロディアハンドヘルド
3:パラパラブック
3:hoge
3:
how can i upload the meishi images and can find it super quicly always from anywhere
even from keitai
14:clean me
13:43

12:places
8:snap and buffer and 
upload images via flicker uploader
11:@keyword [[場所]]
7:capture to samba?+ code something later?
6:capture + photo upload?
5:@home 資料を渡す
4:@wait メディアファイル

14:可能性とコストの見積もり
ai,psd,jpg,swf,mov,flv,eps,pdf
(trimming),thumnailing
13:
サムネイルが欲しい
9:実機hosting
8:@wait iinoさん 待ち
7:@wait テストのサーバー

6:@home 見積もりのxlsを
3:moc
3:
■表紙
●[再現手順]制作コードに○○○を入れてもsgml内に入らない。<prtcode><cover></cover></prtcode>と出力[期待される効果]<cover><prtcode>○○○</prtcode></cover>
●zipファイルを読み込まない状態でsgmlを書き出したとき
change1: infile open error.
change1: infile open error.
該当するテキストファイルがないときは、その部分のsgmlは書き出さない
■目次
●<atitle>CONTENTS</atitle>内の
 format ="Heading & Page">スペース、スペース<xref para =を
  format ="Heading & Page">タブ、タブ<xref para =
に変更
●開発機のid=10にて
<contents1><xref para = "a1" format ="Heading & Page">  <xref para = "a1" format = "Page"></contents1>
とあるがparaのa1は存在しない
●<contents1><xref para = "a2" format ="Heading & Page">  <xref para = "a2" format = "Page"></contents1>
が2回出力される
●<xref para = "b16"とあるが実際の<btitle id = "b14">のidの番号とマッチしない
●<btitle id = "b14">のidの番号が同じプルダウンを選ぶ（今回はメインユニット）とb14が2回出現する
●zipファイルを読み込まない状態でsgmlを書き出したとき
<toc1><atitle>CONTENTS</atitle>
<contents1><xref para = "a1" format ="Heading & Page">  <xref para = "a1" format = "Page"></contents1>
<contents1><xref para = "a2" format ="Heading & Page">  <xref para = "a2" format = "Page"></contents1>
<contents1><xref para = "a3" format ="Heading & Page">  <xref para = "a3" format = "Page"></contents1>
<contents1><xref para = "b15" format ="Heading & Page">  <xref para = "b15" format = "Page"></contents1><contents1><xref para = "b16" format ="Heading & Page">  <xref para = "b16" format = "Page"></contents1><contents1><xref para = "a4" format ="Heading & Page">  <xref para = "a4" format = "Page"></contents1>
<contents1><xref para = "a5" format ="Heading & Page">  <xref para = "a5" format = "Page"></contents1>
<contents1><xref para = "a6" format ="Heading & Page">  <xref para = "a6" format = "Page"></contents1>
<contents1><xref para = "b14" format ="Heading & Page">  <xref para = "b14" format = "Page"></contents1><contents1><xref para = "a7" format ="Heading & Page">  <xref para = "a7" format = "Page"></contents1>
<contents1><xref para = "a8" format ="Heading & Page">  <xref para = "a8" format = "Page"></contents1>
<contents1><xref para = "a9" format ="Heading & Page">  <xref para = "a9" format = "Page"></contents1>
<contents1><xref para = "a10" format ="Heading & Page">  <xref para = "a10" format = "Page"></contents1>
<contents1><xref para = "a11" format ="Heading & Page">  <xref para = "a11" format = "Page"></contents1>
<contents1><xref para = "a12" format ="Heading & Page">  <xref para = "a12" format = "Page"></contents1>
<contents1><xref para = "b13" format ="Heading & Page">  <xref para = "b13" format = "Page"></contents1><contents1><xref para = "b18" format ="Heading & Page">  <xref para = "b18" format = "Page"></contents1><contents1><xref para = "a13" format ="Heading & Page">  <xref para = "a13" format = "Page"></contents1>
<contents1><xref para = "a14" format ="Heading & Page">  <xref para = "a14" format = "Page"></contents1>
<contents1><xref para = "a15" format ="Heading & Page">  <xref para = "a15" format = "Page"></contents1>
<contents1><xref para = "a16" format ="Heading & Page">  <xref para = "a16" format = "Page"></contents1>
<contents1><xref para = "a17" format ="Heading & Page">  <xref para = "a17" format = "Page"></contents1>
</toc1>
----[期待されるsgml]------------------
<toc1><atitle>CONTENTS</atitle>
<contents1><xref para = "a2" format ="Heading & Page">  <xref para = "a2" format = "Page"></contents1>
<contents1><xref para = "a3" format ="Heading & Page">  <xref para = "a3" format = "Page"></contents1>
<contents1><xref para = "a4" format ="Heading & Page">  <xref para = "a4" format = "Page"></contents1>
<contents1><xref para = "a5" format ="Heading & Page">  <xref para = "a5" format = "Page"></contents1>
<contents1><xref para = "a6" format ="Heading & Page">  <xref para = "a6" format = "Page"></contents1>
<contents1><xref para = "a7" format ="Heading & Page">  <xref para = "a7" format = "Page"></contents1>
<contents1><xref para = "a8" format ="Heading & Page">  <xref para = "a8" format = "Page"></contents1>
<contents1><xref para = "a9" format ="Heading & Page">  <xref para = "a9" format = "Page"></contents1>
<contents1><xref para = "a10" format ="Heading & Page">  <xref para = "a10" format = "Page"></contents1>
<contents1><xref para = "a11" format ="Heading & Page">  <xref para = "a11" format = "Page"></contents1>
<contents1><xref para = "a12" format ="Heading & Page">  <xref para = "a12" format = "Page"></contents1>
<contents1><xref para = "a13" format ="Heading & Page">  <xref para = "a13" format = "Page"></contents1>
</toc1>
■ブロック、回路図、PCB
用紙サイズが選ばれたとき
<dtitle><p0><img><inportgraphic entity="inportgraphic14"></img></p0></dtitle>
は必要なしで用紙サイズ内のタグを使用
■電気部品表
●<pcbpts><atitle id = "a14">ELECTRICAL PARTS LIST<p0><img><inportgraphic entity="inportgraphic996" position = "below" align = "aleft"></img></p0>の後のリターンは削除し</p0><p0><table>・・・と出現


4414:mvn;copyjar;storytellercodedownload;report;
4406:スーザンベルのWANT機能について
下記の件相談させてください。

・品切れ商品だけではなく全商品にボタンを追加
在庫あり商品は「カートに入れる」と「これ欲しい」ボタン両方でる。
・アンケート項目の追加
あったらいいなと思うサイズ
○M　○XS
そのサイズの妥当と思う値段
[テキストフォーム（半角英数字]

予算５万円でお願いできませんか？
特急料金込みで。

4425:メモリ問題？
4410:gasさんのkomonoのとこにdeploy
4424:テストをする
tellermachineで
4409:サイズをおっ菊する（400*600とかではなくする） @colormeshop
デザイン管理画面の条件分岐内でカーとに入れるとかを追加する　@colormeshop
5:how to get satisfied wit h  what I need.
4:how 
3:yuasa
9:how to get rid of 
8:they have it.
7:about db
10:if I say nothing about his and 
just answered, what they say.
this negotiation(they 
6:I can't work for nothing for it.
suggest
19:page view,unique,
独自、
類似提案系
cost per tab(CPT) will be like 3/T
18:提案
9:@out RuntimeNoding
17:アクセス解析は？
8:modeling
16:modeling
7:RuntimeNoding
28:Out
39:プレゼン
15:MagicDrawか紙かnodepad
6:@out 見積
38:デザイン
14:RuntimeNodeOfstartbahn
5:Sentences
26:粗見積もり
37:RuntimeNode
13:質問する
4:見積もり
25:choise from offshore people
36:css
12:Find GoalNode
24:Youtube張り付け可
35:@out 見積
11:[[Choise]] From Verb
47:5月くらいに
23:specs for the Checkouts（the Goal of the starbahn, 
runtime will be like payment from the customer thought the ,auctions).
34:Sentences
10:nodepad
46:7月に国際特許出願する
45:段階リリースして、最初はいくつかのものを削る
21:ask them to have similarity or these
44:レートの走りなあらの調査
20:when we automatcically post the access to the pages, 
80% could be patternized, thenthe CPT will be like 2/T?
depending on the Difficuluty score(like similarity engine)
43:予算案
42:ディレクション
41:デザインの見積もり
40:配備
52:投資を取る
50:オークション落札と入出金のトランザクションが実際におこなわれ、
スタートバーンへの手数料レート、レビュアーへの報酬レート党が決定する
7:進捗の共有という意味ではガスでいい。意味わからん指示でもないよりいい。
盛り上がっている法外石、
共有するべき人に
共有されているほうがいい
→よってガスでいい。
区切りたいときはプロジェクトか、メッセージにpri/pubをのせる
6:どっちで指示出すべきか
5:you can negotiate anything
4:どうすれば支払い方法の相談ができるか
3:支払い方法の相談
8:あちらが、どうして早く払ったほうがいいか考える。
こちらとしては、
コンサル的なことで動きにくくなるかも。
11:内部にも、キャッシュアウトしない見えないコストがかかる。
トウクボも、請求できないがサービスの量が増えるとちょっと負担が大きく、
開発前の作業が無報酬だと、ちょっと動きにくくなる。
別の件で同様の時間を動いたときの機会を損失するので。
（6ヶ月*20h =120hだとそろそろ1人月になってしまう）。
開発がディレクションの置き換えになる。
また、作りながらだと、請求の場所が難しい。
内部アプリと同様に、相場と比べて極端に安いものにはできると思うので、
毎月などベースで売ったほうがいいのではないか。
98:モールスキンポケット
97:キャス
96:textile depot
49:@done kit
95:プリント（インサツ）
48:@wait 習慣
94:布買う
47:@done afford
93:布*接着
109:画用紙をレコバック的に
46:@wait 効率
92:http://www.enuno.com/shopping/outlet01.html#0057
108:ロール紙にステンシル
45:@done Buffer
91:http://www.rakuten.co.jp/takatomi/468479/468482/469941/
107:design
44:@done buffer
90:bag
106:レコードバック
105:ハンズの白い紙
42:習慣化
104:神と接着
41:@done 習慣化
103:http://www.i-soleil.com/shoptop.html
40:@done あったかーいを買う
102:シルクスクリーン
101:布
100:イラスト
69:@done Add to BuefferList
perfect whip
lightbolves
travelingpad paper
brash
nice clothes
emerald mountain

68:@done 閾値設定
67:@done 購入手段 of each buffer
9:あたたかくする
66:@done スパン of buffer決める。
19:@done target(objective Noun)
65:@done target(objective Noun)
18:@done custom
64:@done custom
17:@done stsc?
6:@done のどをぬらす。
63:@done stsc?
16:@done Buffer = buffer
5:風を引かないぞ
62:@done Buffer = buffer
15:@keyword [[kit]]
4:ふくを捨てるぞ
61:@done kit
14:@done afford
3:部屋片付けと削除
60:@done 習慣
13:@done アフォード
12:どうすれば外でやる作業について
必ずおこなれうようにするか
たとえば温かく必ずできるか
10:外でやる作業について外でやらなくてすむようにする
89:kit
88:
どうすればキットになるか
85:バッファ
37:キットを全部のバックに入れる
83:ビタミン剤
36:越冬[[キット]]
34:バックを網羅
80:@done cycle
33:@done @wait ほっかいろアフォード
32:@done ほっかいろ
31:首
30:そつなくあたたかく
59:@done afford
58:@done num of purchace of buffer
57:@done Add to BuefferList
perfect whip
lightbolves
travelingpad paper
brash
nice clothes
emerald mountain

56:@done 閾値設定
55:@done 購入手段 of each buffer
54:@done スパン of buffer決める。
53:@done target(objective Noun)
50:@done Buffer = buffer
112:構造を作る。ボタン
111:@out どうすれば最高に閉じれるか
110:閉じ部位
79:@wait 習慣づける。
10日つづけて、
10分でいいので、
100日に1度やる。

77:@done http://toukubo.backpackit.com/reminders
76:@done 43
29:@wait のど飴をバッファ
75:@done custom
28:@wait のど飴をアフォード
74:@done cycle
27:@wait のど飴
73:@done 1010100
72:wear less
25:良いものをすぐに阿部イラブルにする。
71:マフラー
24:紙、本の削除。。。

70:@done num of purchace of buffer
22:@done 肉
20:@purchase 手袋を買う
99:@out ハンズ
5:
契約のこともある
4:
gasaccountingを納品する
3:
ac
9:
モックしてフィードバックもらう
8:
期待する動作のリストをもらう
7:tested systems
10:もっとこまめにつつくほうがいいかも。営業
6:どうすれば契約できるか
4601:ルーチンにする
4523:@done gasaccountingについて一回これをやってみてもらう
4429:@done deploy to service server
4519:@done phpmyadminで必要な属性についてalter
war作成。
http://storytellermachine.net:8080/manager/htmlへ
一回プロジェクトをundeploy
アップロードしてデプロイ。
そのアプリをstart
http://enjava.net/estimate/Estimations.do
が動いていることを確認する
5:20080617アジェンダ
4:新仕様のレビュー
項目だしは。こちらでやってしまったほうがいいか。
taggingのフィードバック
gasasif.comサーバーとメールの保守、サイトの復帰やバックアップの主体のbeppersへの移管？

5:どうすればSC（睡眠）
3:どうすれば生活衛生要因
59:@wait お湯沸かす
58:@wait オフィスで作る
57:@wait コーヒー
229:内容を確定して提案する。
金額どうする。
契約書とかにする。
[[金銭消費貸借契約書]]
転換について契約書にする。
1000株に変換されたときの利益について考えさせる。
228:@wait 自己資金？いらない筋で進める。
227:@wait http://oshiete1.goo.ne.jp/qa4455773.html
１.cic
http://www.cic.co.jp/rkaisya/ks05_jigyousyo_003.html
パスポートのみ。
２．全銀行
場所：http://www.zenginkyo.or.jp/pcic/open/index/kaiji0007.pdf
3.テラネット
場所：http://tokyo.fcbj.gr.jp/04/kojin.php
印鑑とパスポート
4.ジャパンデータバンク
場所：http://www.fcbj.jp/howto/map/index.html
なんかあそことテラネットと一緒
5.ccb
場所：http://www.ccbinc.co.jp/service/map1.html
印鑑とパス
224:どうすればタッチする。
223:どうすれば請求とかのやつだす。
209:どうすればあの人にメール書いてみる？
222:@wait おそらく自己資金とか。
借金がない状態じゃないとだめ。
208:どうすればほかみつかる？
ドワイトさん
西野さん
取締役的な人たち

35:@wait 炊飯器
221:どうすれば資金調達
207:どうすれば高岡くん
34:@wait 米
220:どうすれば勇気
206:どうすれば母
205:どうすればつなぎ投資
32:@wait 食費減らした食事
204:@wait どうすれば雇用
31:@wait 食費
18:@cycle どうすればビタミン剤
ビタミン的なさぷりを取る
30:どうすればアカウント画面をアップデートする
http://localhost:8090/en/CashEvents.do
→現在の値、入金の値などを事実にそろえる
17:@wait どうすれば食事
203:@wait どうすればstop additionals。これは追加ですという。
16:どうすればsleeping
202:@wait 資料、会いに行く、など
200:@wait 伊藤さん
10:@wait どうすればNC栄養
147:@wait どうすれば近場の投資を得るまでのつなぎ資金
160:@wait どうすれば効率
146:どうすれば収入増やす＋テラーメタ
144:@wait どうすれば支払いサイトの調整メール
143:@wait どうすればMacBook？
142:@wait どうすれば売る
141:@wait どうすれば秘書
62:@wait もってく
49:@done どうすればメタの投資
61:@wait 豆とフィルター
48:どうすればteller
199:@wait つつく
60:@wait ポット
198:@wait 宮
219:@cycle しばらく案件は自分でやるよ。
197:@wait g
232:
218:どうすれば資料出す。
196:@wait 収入待ち
217:どうすれば連絡しよう。
216:どうすればCRMから。
215:どうすればCRMする。
29:@done どうすればコスト減らす
214:どうすれば石田さんに相談
41:@cycle うちでモリモリ
28:@done どうすれば収入増やす
213:@cycle これは追加、を習慣付け
40:@done 野菜
211:どうすれば安価にやれる？
210:@wait 安価にやってもらう打診も次の案件からする。
174:@wait どうすれば安売りやめる
173:@wait どうすれば自分で案件＋利益率
159:どうすれば英語秘書
158:どうすれば案件増やす
7:どうすればAC
7:better_sleeping?
10:ストッパー起床
6:sleeping
5:睡眠
4:十二時沖
3:十三時二十分
44:コンビにでかっとく
29:すっぱさ
43:つくっとく
28:噛む
27:肉
41:まどべで寝る。
26:米の飯
19:時間の資源の感覚
33:冷蔵庫
18:iphoneとか
32:ラップと塩
24:辛み
17:見積もりと時間の入力。rbmに
31:おかず
23:涼しさ
16:タイマー
30:おにぎり
22:ビタミン剤
ビタミン的なさぷりを取る
15:光見る
21:食事
14:五感をなめる
20:暖房
13:食べ物亜フォード
バッファ
チョコ 
コーヒー 
水
栄養ドリンク 
アフォードプラン 
9:起床
12:栄養
8:熟睡
6:pknked、風邪
57:@wait どうすれば会計士と弁護士に相談した上で作成する資料への合意
（due deligense)の後。
5:どうすれば集中するか。
56:どうすれば投資家との接触
4:どうすれば客案件すすめなくちゃ
55:どうすればeclipseあがらん
3:どうすれば20090919
6:
5:予約
4:@Onthego 
3:@done 飯

9:どうすればAC
8:@done DC
7:@done SC（睡眠）
6:どうすれば生活衛生要因
5:どうすればlse
110:@done バッファをnestに
169:どうすればバッファ
168:どうすれば多目的化
29:@done 食事
28:どうすればメタ
166:どうすれば適材適所
27:どうすればROIあげる
165:どうすればモチベーション
26:どうすればCFを修正する。CashEventsを修正
218:@done 推定最低売上額に対する必要人数＝給与
162:どうすれば横断的効率化
217:@done やってみてか。なにから推測できるか。
129:どうすれば短納期、品質、UI
かつ資本稼働率
かつ利益率
216:@done 余剰と過剰のバランス。
215:@done 両方でバランス
214:@done こちらにとっては雇用のが安い
213:@done 内部のがエンジニアにとって安定＝安い。
安定性
125:どうすれば営業に行く
109:どうすれば資本稼働率を上げる
212:@done 抱えなくていいというメリット。比較

124:どうすれば短納期と品質を提供
211:@done 内部と外部の違いは？
107:どうすれば資本一般に目減りリスクがあるのを避ける
210:@done 内部ってなに？
122:どうすればhttp://localhost/superstorytellers/Nouns/CashEvents.xls
106:どうすれば4 step marketing > crm
121:@done http://localhost/Nouns/j2eeStorys.xls
93:@done 検討
92:@done basecampへのリストアップから。
91:@done 生活[[消耗]]品定期購入
58:@done 無洗米定期購入
57:@done 炊飯を効率的に
55:@done 食器確実に
177:どうすればミックス
54:@secretary 無洗米
フレーク
コーヒー豆
カロリーメート
チャルメラ
カップラーメン
オレンジ
りんご
肉
ミルク
キムチ
卵
サラダキット

176:どうすれば目的
53:@done 外食減らす
175:どうすれば一石二鳥
36:@cycle 噛む
52:@done 葺手で簡易だが栄養あるもの
19:@done コスト減らす
173:どうすれば[[目的検索]]
34:@done 米の飯
18:どうすれば収入増やす
50:@cycle 三田でたくさん
33:@done 虫歯治す
156:どうすれば効率
32:@done 辛み
155:どうすればボトルネックを消す
16:どうすればスケジューリング
170:どうすれば網羅
15:@done pknk
30:@done ビタミン剤
ビタミン的なさぷりを取る
14:@done 衛生（顔、紙、体）
208:@done どうすれば外部利用
224:拡大中は特にそう -> 売上額に自分は100万程度のみ入れる。 -> 足りない分は外部から
207:@done どうすれば余剰回避と
過剰回避の両立
119:@done J2eeStorys月間のプロジェクトごとの作業時間
と提供売上時間
出して、引く
12:@done NC栄養
223:@done J2eeStorysから、1：1くらいか。
135:どうすれば量産
11:どうすればSC
スケジュール
10:@done CRM
221:オフショア三人雇用で80万分
追加は誰か。
220:近場
6:storytellers
5:documents
4:the meeting
3:20090129
5:お返事だけはする
4:顧問契約について。
3:資金調達
9:オフライン秘書
11:20090127
8:秘書
10:
7:SC
6:テストから
100:@wait めし
38:password validations 2h
77:30m-2h
37:@done js 年月チューザーのグレイアウト
1hour
76:jan
36:mutliselection
(server side + client side)
40H
73:4-6h
72:2-4h
32:@done mysql
71:pdf
31:csv import 4h
70:xls
30:tonersaver
49:@done xml
1hour
48:pdfshow　4 + 4 = 8h
86:timer 15h
85:2
45:pmcsgml2
44:ajax
3-10
43:サブクラスと店舗追加
41:doubts 5h
99:poststaticdata部位
59:仕様提案
58:集計 10h
57:@done 指示
56:@Phone 電話する
94:仕様提案
55:gasbooknet
54:@done design
53:@wait ふりこんでもらう
91:uiだけでつくる
52:@done ac
51:@done パフォーマンスチューニング
3:20070207
69:10h
68:これようのセレクトボックスの応用
2h
67:ajaxでセレクトボックスを埋めるところつくる
28:djbi
108:週のデフォルトを当週と前週にする
66:丹羽
107:5時間
106:合計タブ
62:週マスタ対応
103:@wait 走る
61:表示単位
15m
102:食う
60:表示パターン対応
101:@wait 末
38:password validations 2h
71:pdf
37:@done js 年月チューザーのグレイアウト
1hour
70:xls
36:@done mutliselection
(server side + client side)
40H
87:@wait id対応　5　
86:timer 15h
85:2
84:@purchase 岡本さん
32:@done mysql
83:@done 費用について相談する
31:csv import 4h
49:@done xml
1hour
30:tonersaver
48:pdfshow　4 + 4 = 8h
45:pmcsgml2
44:ajax
3-10
43:サブクラスと店舗追加
42:@wait ap server
6h
41:doubts 5h
59:仕様提案
91:uiだけでつくる
58:集計 10h
90:@wait tera
57:@done 指示
56:@Phone 電話する
55:gasbooknet
54:@done design
53:@wait ふりこんでもらう
52:@done ac
69:10h
51:@done パフォーマンスチューニング
68:これようのセレクトボックスの応用
2h
67:ajaxでセレクトボックスを埋めるところつくる
66:丹羽
3:20070207
65:@wait tera対応（orマッパ対応）
4-10
62:週マスタ対応
61:表示単位
15m
28:djbi
60:表示パターン対応
77:@secretary 30m-2h
76:jan
75:5-10
73:4-6h
72:2-4h
69:go ther eand stop
49:give some stock to him and loadn from takaoka kun
19:laoning
9:CFを修正する。CashEventsを修正
18:sale things and gasbook things and estimate and others.
28:@wait 1.they want discount, and they are getting unstable
2.i will pay 0.67  for it, so that you can get 3,
and will pay 1 as a dishes.so 3.
7:costs
57:use the same form as me. 
just fill
27:@wait the script

66:nir problem just say so. so what can i do?
i should make a sheet for tit. just 
36:gas
16:iphone thing
6:incomes
56:
make the cycle cash events of the home. 
get the numbers
26:@home?
45:mbpうる？air？
15:say niwakun to ,,,
55:@wait noding
44:more自炊
14:nest things, decide the request and run the tasks.
54:@wait find the nodes that effects quickest 
63:100 from them
33:manage the reason we failed
43:aca退会
53:@wait attacking
62:say i need to pay for you
42:岡本さんに。
丹羽君に今月。
あいつ。
あと見つける。
あと母に割り引きと支払いとの。

12:@wait 100 in advance
52:@wait closing
22:@wait mom thing
61:@wait need to get 200 form them. this is must
51:@wait sales
21:say okamoto san for this can you do this for us as a company member
60:@wait time to do so and , the 
budget , to keep 4 monthes.
= 400 - 500.
even loaning 100 + 100 + 200, it makes? now 55 + 35 = 90 * 4monthes.
if to get paid prepaid is ok, we can.
oh we can get 300 from gas. this is huge. 
we can get 25 more from estimate this is much enough again.
so ?
40:AC
50:for the nest, loan from him
20:try this for a test and estimation of the price
9:@wait 月末の費用
78:15万
77:電化製品のnouseをまとめて１時間で全部出品する。
69:写真５
発送10
文章5
記事作成5
ポスト5
対応10
40分で、CFの効果。
このCFの効果と、売る事による。。。。
76:レンズは死んでるのでこれらを売ってもまあいいかも。
68:時間比べる
75:5くらいが得れる？
67:手間
74:パッキンどうする
57:better_auction
73:アマゾンの箱で。
65:レンズとかのオークションもして動かしましょうよ投資を。
81:CF
56:@SUN とにかく写真
72:ラッピングを簡単に
48:@done 一つは2-3日と書いてある
64:40が確実。
55:梱包とかまとめてできるようにする
71:撮影を簡単に
63:5と8とをもっかいも。
70:手間かからんようにする
62:60と8と2とが確実。
27:@done 二個やる
50:@done @Air auctionする
25:@done 14万？
15:cf
31:@done 発送のタイミング
14:安く試せる
30:@done auctionに書けるタイミングはいつ？
13:買って売れる
20:@done 買って売る
12:auction
11:60万くるならもう逃げ切り＋保険かけて14万用意する
10:@wait 14万くらい
1:247days_chain
4:2shock.不足を埋めるには？
3:2shock.18時までに二食、2000kcal食べる
6:16時間空ける
5:昼の間に
13:不足を計算
12:2shock.18時までに二食、2000kcal食べる
3:栄養
11:2shock
10:** RUNTIME
9:〜18時にすべての栄養を撮る
8:better_morning
7:8時間の間にすべての食事を撮る
16:do not eat one day
1:2shock.不足を埋めるには？
4:食欲？
4:1500pt
3:二食目
7:2食目
9:eg: 同僚,取引先
8:1:1のつながりの深度
7:可視化
6:インターフェイス
5:データ量
4:つながりのデータ
3:紹介
79:連想する
78:api
77:see the classes you want to you
76:検索
59:CommonTranslations
75:https://www.google.co.jp/search?client=safari&rls=10_8_2&ie=UTF-8&oe=UTF-8&redir_esc=&ei=1qTQUI7JM43NmQW4g4EI&q=hoge
58:StorytellerCodesDownload
74:cueup
57:mock
39:文字列一致検索
73:search pattern
56:storyteller
38:google
72:spotlight
55:物語にして売る
37:要件と背景決めてアウトソース
71:tag
54:はったり（間違いない。絶対だとかいう）
36:sales
70:キーワード
19:登録する。
53:ネガティブチェックする
35:品質管理？
18:イニシャルはサービス設計者の縁故
52:声質とトーンと音量と誌
17:顧問と知り合う
51:外見
16:顧問にヒアリングする。
50:モック型営業
32:検索
15:100人
14:代行
30:メッセージ 独自
13:つながり WP
12:つながりの質のデータ WP
11:ソーシャルグラフ
10:紹介料と深度を設定する
69:evernote
68:google desktop
67:FirstMvn
66:FirstCopyCoreJar
49:上げてしまう
65:put CommonTranslation @storyteller ( http://storytellermachine.net:8080/storyteller/J2eeStorys.do
48:新規開拓
64:ER modeling
47:show with design and wellmanaged design
63:PostSentencesOnStoryteller
46:プレゼン
80:原文読む
29:紹介 独自
評価
62:story
45:マーケティング
61:Sentences
44:会計系
60:ValidationRuleAssign
43:顧客は何を買うのか。
42:preinterview
25:FB
41:分割払いにさせる→借金の仕組みで課金しやすい。
24:営業 WP?
40:嘘ついてでも売る
23:会社 WP
21:顧問 WP
20:顧問とは別の営業マンが、顧問を検索する
17:dev

16:2000*6 = 12000
15:hosting

14:mailmag

8:too early?
13:h2h 35h = 70h
7:at the better timing not now he wants to have it. 
or ? hosting is now on the dev and we should host the hosting service for etter?
12:時給1700円で
6:what is the benefit for him
11:h2h

5:feels like not to say taihei san

20:80h
10:飯野さん
お疲れ様です。
　
バーターの話として、
h2h,mailmag(その商品代、6ヶ月のホスティング、セットアップ費用)
合計、毎月、20時間のデザインを、
6ヶ月やっていただくというのでいかがでしょうか。

3:364hosting
19:137000
18:125000
23:dns
29:virtulhost setting @httpd.conf
35:@wait 停止スケジュールをアナウンスする
3:364hosting
26:linuxsetup
32:nginx設定 ssh -l toukubo 192.168.0.152
cd /etc/nginx/
vi sites-available/hogehoge
# ln -s /etc/nginx/sites-enabled/hogehoge /etc/nginx/sites-available/hogehoge 
16536:ocrxui 40 hours
16535:@mece clients
16490:leverage
16533:elimination.nd
16351:TKP
16532:apc
15942:ampxsv
16546:glue and 
networked
16348:archive_text_amp
 x 権利処理 15
16486:social_ads
16545:invested first ? 
or glue first?
16330:実績
16544:sales
16542:kato
14950:sv 2 sales
16540:fit to the scale
16506:marriage
16537:better 
keyword content
extraction
16308:archive
16067:glue 30
20:motivationxelimination
9:kato
11:better_keyword
8:fscan
10:権利処理の開始とか依頼？
31:fscan.1114
6:fscan.native増分
18:meeting people is easy
24:ios and android dev hiring
17:26 Rice
14:11 gel
28:20 voice
13:12 facewash
27:35 kkkk
12:13 wash body so hard
26:34 dddd
11:17 clean room
38:15 ask
37:14 talk to
22:23 water
35:32 do ubiquitas capture
21:24 avoid sugar
34:29 gum
20:25 58
33:AC
32:31 finalcoffee/emelard
8:9 think how
59:d
30:22 noise canceler
6:30 artisitc input
43:37 hip and rock
57:communication
42:36 ubiquuitas noding
56:16 AC
41:36 hear the meeting
3:1 pknk
55:visit musium
54:visit coffee
53:foods
52:stimula＝horizontal 
65:43
51:body
50:looks
62:fired
61:vertical  = concentration
75:meta
60:sound capture
71:
19:28 meat
18:27 eat less
7:紹介者
6:教育
5:顧客教育入れる
4:たくさん売る
3:4sm

38:購入
37:広告する
29:アクセス
36:紙にもできる資料とデザインテンプレートの分離とデザイン
28:想起
35:紙ベースか？
27:記憶
41:
34:ステークホルダーに教育資料？
26:システム、仕組みがほしい人たち
19:客は誰？
33:包括的な変化
18:情報共有
32:違う、仕組みを、安く、よく、
17:購買
31:とびこみ toukubo
23:客がなにを本当にしたいのかは利いてみないとわからない。
ガスさんはインターフェイスもほしがっている。
データもほしがっていうる。
その上僕との実験もほしがっている。
フルーツを売る汎用的な仕組みをほしがっている。
16:検索
30:交流会 toukubo
22:ほぼ自動化
15:興味
21:本当に必要か検討する段階に対応する。
14:注意
20:客は何を買う？
13:タッチ
12:紹介
8:収益
1:4様
6:つくのは16時
5:時間決める。
4:@done ホテル？
7:15時に六本木？
1:　
・・・・

南のアナタへ。いかがお過ごしですか。
ここでは太陽はすぐ翳ります。
水が落ちてこない日はないのです。
地球はひっぱりつづけます。
あまりにも雨が降るので僕達は涙をながすことを
わすれました。最期に泣いたのは飼い猫が死んだときでしたが
ネコをその下に埋めたそれは綺麗な木があったのですがこれが
今年なぜか枯れてしまいまして、それで父は木を
どこかに移動させればまた綺麗に茂るかもしれない
などというのでではネコは、と私がいうとでは
移動させよう、などというのです。私は
薄気味悪い気がしたのでいやね。なにか。といいました。
父もそのようにおもったようですが、ひとまず私たちは
土を掘りました。しかしそこにはなにもありません。
どうしてでしょう。私たちはたしかにそこにうめたのに。
　
手紙を書いたのは、そろそろあなたにお借りしたご本をよみおわるからです。
とても素敵でしたよ。セックスシーンが多すぎることを除けば。
これは私へのメッセージかしらとクスクスと冗談を自分にいいながら笑っていましたが。
それにしても少し太陽が恋しくなりました。そちらはいかがですか？
あなたが太陽に飽きていたら都合が良いのに。時間をみつけて会いにおいで。
服についた太陽のにおいで我慢してあげるよ。



北のキミへ。
あんな本を渡したからとても詩的なあなたのお手紙に少々お返事返すまで
時間がかかってしまいましたよ。
こちらは退屈です。太陽には生まれてまもなく飽き飽きしてしまいましたが空の方が毎日違う
ことに気付いてからはそのことについては気にしていませんでした。
ただなに分にも夜が短いのがよくない。僕はなんといっても夜が好きですので。
東から順に夜がくるといいますからもっと東にいこうかななんておもいますけど
そうしたら朝も早くくるのですよ！まったくこの星といったら。
でもこれも悪くない考えかもしれませんね。というのもあなたと僕とが両方東に向かって
どこかで落ち合えば、どちらも南の心配も北の心配もしなくていいよね。
そういうわけで、随分長い前置きであるかのようですが、いずれ春永に、といいつづけて
のびのびになってしまいましたが、あなたさえよければ○○○○○のあたりで。
あるいはその東で。

p.sその東で、なんて、アダムからイブの手紙みたいですね！

　　
2:[[80]]%を指定する。
1:[[starbucks]]_chan
4:social network
12:印刷しきれない問題がなくなる
11:一覧性
20:magicdraw、nodes,codeの一覧、ウェブいくつか
10:きもちいい
7:広い
17:紙送りの失敗率
16:ブランディング
4:速度？
15:きれい
3:A3高速プリンター
5:tag
4:a_space
3:@calendar
4:エクセルかaiに映してpdfに映す
3:http://unudev.org/en/Estimations.do
2:見積
2:portablestorytellerbase
3:storytellertools
89:家賃
88:@wait 生活費を借りる
90:@wait 6万砂川
122:@wait 内沼くんに株式をだしてもらう制約をする。月曜日の後。
87:@wait air売ってまた買う
30:@wait 売る
120:@wait TKPの精算は
26:@wait 収入増やす
116:@wait 沼には、15万、15万と、だしてもらうのがいい。
25:@wait コスト減らす
115:@wait 要するにCHEのCFにやや問題が出ている？
114:@wait 株主から金もらおうか。
113:@wait 関係を崩さない
112:@wait 回収する。
111:@wait 経理適当にしすぎ。
109:@wait 千田っちゃうとどうするのか。
110:@wait 家賃をもらう必要もありそう。
6:AC
99:@wait card11のこと。消す必要があるのは他には？
98:@wait CF
131:外注
128:１５くらいかな？
127:契約になるまでの金額を借りる
100:@secretary @wait どうするか。
36:@wait tkp
93:売上系
11:＋３５ずつ毎月増えるかもな計算。
かつ、明日以降はほかの案件の作業をすすめてもいい。
10:収益リスト
gasbook 40*6 = 240
mailmag 10
startbahn 40 * 5 = 200
estimate = 10 〜 20
gasaccouniting(保守) 10
まいつきだと、bahn 40 + gasbook 30 + ほか15 = 85が４ヶ月でいけるか？いけそう。
が期待値的な計算
3:120ある。
月額
1.dddd 12
2.家(5)
3.ma 2
4.
8:そっから80程度ずつくることになる
19:@wait 自分分売上交渉する。
70はあるはずという。
7:DCしかねーな
6:収入を4ヶ月以内に30万ほど＋5ヶ月以内に加えて50万ほど
17:自分でガス分もやる
5:支出削る
4:現状のだと、4ヶ月でやばい。
3:ac200809
14:@wait いずれにしてもガス分
13:@wait ガス分より早くほしいみたい。
12:@done タープールでの削りをなくす
11:PMC分、
27:nestの額減らす
10:PMC分
26:narratorsもちょい奪う
25:@wait 返事の後つつく
24:木村さんとで4人体制くらいで高速化
23:納品を早める
22:ja自体
20:jaのモック
9:secretaryで月間10程度？
5:アカウント画面をアップデートする
http://localhost:8090/en/CashEvents.do
→現在の値、入金の値などを事実にそろえる
4:@wait AC
13:岡本さんにメール
12:サイトを教えてくださいメール。
3:@wait ac200812
11:現在保有金額:50
10:現在保有金額＞9ヵ月後までの生活費投資金額。
9:270万が口座にある状態
8:生活投資金額。（30でいい？）
7:[[ACvalid]]
16:@net シーズ投資をもらう？
1:academix
17:まとでで１７
15:90000
削ってみても7万
14:事実。
ホテル利用
宿泊*1.＝20000
休憩*4=20000
13:場所代：
1h*1000円X50=5万

7:AC
22:合計12万
12:デート15の改善
21:カフェの場所代で一日1000円
=30000
11:roi表の上から順、に反してる出費
5:#cycle アカウント表更新
20:生活費20
10:better_account
3:スパン設定
2:avoid conjection
19:で１２
18:ま５
4:ActionMethod
3:http://www.behance.com/Philosophy/Action_Method
6:生活投資金額。（30でいい？）
5:270万が口座にある状態
4:現在保有金額＞9ヵ月後までの生活費投資金額。
3:ACvalid
7:現在保有金額
7:eoskiss
6:shoot
4:#purchase scansnap?
3:AD
9:isight
8:a
7:@done how , for now...
6:@done if not containing how to ,and no addhow label, then add addhow label
5:@done if containing "how to" or "どうすれば" or how can we, 
then remove addhow
@Context
4:word operation
3:addhow
8:@done which list?
5:payment
4:document
 management
in the fixed rules
1:admin
12:ask anne?
9:job posting 
8:newly
10:a fewprople for this
7:from  guys  hired before
6:hire gather admins
4:ガム詰め替え
コンタクト詰め替え
一味詰め替え
3:affordingbag
21:afford_trigger
9:custom
8:target(objective Noun)
18:前日準備
25:plentinss
5:kit
24:clean
15:affordable
4:Buffer = buffer
3:afford
4:bottle
3:afford_drinking
1:afford_trigger
5:water context
4:entrance
1:affordable
3:afford
2:乾燥
4:ガム詰め替え
コンタクト詰め替え
一味詰め替え
絆創膏
3:affordingbag
149:@done admins
3:africaandleo
147:@wait 取り立て
146:@wait 第一版提出
145:@done RuntimeNoding
144:@done 関係モデリング
37:outsource
143:@done Preperation @Home
36:@done assignment
142:@done 画面仕様
141:@done Nouns
34:@wait generaltest
140:@done Attrs
33:@wait mismatchtest
129:@done CommonTranslations
128:@done StorytellerCodesDownload
31:@wait tester
127:@Air reviews
30:@wait mock
126:@done design
124:@wait camp2xhtml
123:@wait tell java parson use current one  for nu for cart part
16:@wait xhtml2jsp
81:st4wp
69:@wait conncetion to offshoring
15:@wait uzair
80:@wait sql dupmpfile
68:@wait 更新容易性
67:@wait deploy
120:other team than juventus
13:@wait PM
66:complex evaluation
65:@wait more patterns and code generation
11:admin
10:estimation
104:スケールさせる
102:@done team
100:@wait storyteller
152:autodeploy
151:@wait repo setup
150:@wait she must undeerstand the 
139:@done FirstModeling
138:@magicdraw
41:setting up repo and auto deploy
137:@done AttrPicking
136:@done 再現指摘
29:@wait sss
135:@done GoalNode
28:@wait 全工程
134:@done ER modeling
27:@wait testdata
133:@done PostSentencesOnStoryteller
26:test
132:@done story
131:@done Sentences
119:java team hiring
130:@done ValidationRuleAssign
76:@wait server url
116:@wait africaandleo.com
20:@done テスト
9:@wait TestedSystem
8:use templates
5:@wait wordpress
1:ag
4:effectorandroid
3:effectoripad
2:effector
2:evaapp
1:agapps
3:人々の一番したのノードを集めるて@meetingとつける＋rmilkに
6:agenda
3:air_moisture
551:zeirishi.tkをjavaのホスティングに移管する
328:#cycle ヤフーにログインしている状態でblog.yahoo.co.jpリストのブックマークを全部開く

550:zeirishi.tk　携帯サイト
1323:#wait 合意待ち
472:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1322:#wait 基本は40枚分作って残りは
次の分として払う。
322:#wait ヤフーカテゴリ
1321:#wait 提案
321:#wait ヤフーのフリー登録をまずする
1320:#wait 何枚やったの？
40枚以上のときはどうはらう？
859:#wait ターゲットキーワードセットごとにドメインをとる
1246:#wait ノ
1245:#wait FN、自分でっ！
1244:#wait sachi
1242:#wait dddd
1169:#4444 [[20060922]]　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　                                    　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　                         
1168:#4444 20060915　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　                                    　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　                         
1167:#4444 [[20060920]]　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　                                    　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　                         
167:パーリー
166:友達とゴハン
1165:pc sendmail about the educommons
165:遊ぶ
776:大久保さんに電話
775:アルバイト管理システム１０万でどうかの話
具体的にやりましょう
163:削除
1013:#wait 請求書にするサイクル8月24日回
162:#wait 服を綺麗に
1088:#wait unu educommons update
161:場所　の削除
76:コンテンツ投入
549:shotokuzei.net 携帯サイト
75:お店行く
547:デプロイ作業がだるい
1084:#4444 20060925　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　
73:効果測定
1081:自動リンクを使えるところを探す。
自動リンクの飛ぶ先を探す。
顧客名が書いてあったらそこに飛ばすのがいいでしょう。
70:ハズい
542:データ投入への課金を考える
1319:#wait 枚数の確認
690:被リンク
CGM
自動リンクへの参加
ブログ購読と自動リンクのお願い
＋皆さんのページ、の作成。
もっとGUIをかっこよくしちゃって？
1317:#wait 納品確認
1316:#wait 請求
1315:#wait 支払
1314:#wait pyramid-contents
内山さん1回目
1312:#wait 枚数
1311:#wait 期間
921:[[0820arcs]]
848:#cycle 海外のものも含めて手作業相互リンク系に
大量に登録する
1234:資料請求
着荷報告
1009:見積り前条件から見積り自動選択の機能。
1230:缶コーヒー
158:ニーズ思考とシーズ思考
842:ブログなどを作成する
157:アウトソース
841:#wait サイトを分け完了
1007:関係してるやつがバグってるぞ。
156:2分ルール
840:サイトを作成する
154:椅子を変えたい。

153:パワーズオブパワー
67:#purchase laptop
614:alexaに登録
689:#wait #time 20060812 #agenda mtg 
66:機材
688:seoの順位調査自作する
1076:#wait wikiable mail
65:美 place
537:相互リンク申請プロジェクトは？
1.こんなサイトです。
2.ここからリンクします。
各ページとの相性を判断してリンクします。
3.こんな感じの計算サイトどうでしょうか？
4.
536:#cycle check gum
535:ガム
60:unu [[storyteller]]
1309:#wait 見積り
1308:#wait 納品確認
1307:#wait 請求
1306:#wait 支払
917:#time 8/20 arcs intra を確定
1304:#wait #time 1900 MTG
1229:缶コーヒー
1228:缶コーヒー
913:管理画面
なにができるといいか考える
サイトを見れるといいかも
1301:#wait 渡す
912:事務所だそうだ。
1300:#wait 2通とも印鑑おされてる状態
839:リンク先を作成する
1374:#4444 20060919　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　                                    　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　                         
1373:#4444 20060918　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　                                    　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　                         
1299:#wait 内山さん契約書
1372:#4444 20060917　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　                                    　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　                         
1298:#wait pyramid-contents
内山さん2回目
1371:#4444 20060923　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　                                    　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　                         
1370:e-side
147:#wait バナー作成をタカヤに依頼
税理士については全部自社のコンテンツに
FN、いまあるやつを

609:複数ページあっていい
608:一覧ページはあってもいい。index.htmlじゃなければいい。
59:[[unu]]
606:#wait #time 8/20
58:[[team]]
605:#wait #5回目前の指示の際
1141:#4444 current　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　                                    　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　                         
290:管理しているページ全てにRSSを作る？
各ページごとのRSS？
サイトマップにもrssを作る。
あなたの作ったrssの全てをmyspaceとadd yahooにコンテンツとして追加
ブログからもあなたのサイトにリンクする
他の関連されているキーワードから検出されるヤフーブログへ訪問する
ヤフーブログはＩＤを使いログインされた状態で他のブログに訪問することで訪問先のブログにて訪問者履歴に自動的に記録されます。
これがどうもヤフーのロボットが好きらしく、これを繰り返しているだけであなたのブログにリンクが増えます。
関連されたキーワードから検出される他のブログからリンクがあればあなたのサイトのコンテンツもより質の良いものとロボットが判断してくれます。
ページランクの高いヤフーブログへ訪問する
基本的にグーグルが検索結果としてランクする上位のページはページランクが高いです。
良質なコンテンツを提供して他のサイトからリンクをしてもらうか、
リンクパートナーとなるサイトのページとリンクを交換する。
検索結果の上位にあるサイトが検出しているページの真似を繰り返せば必ず上位にランクするようになります。


141:シャツにつする
56:#wait バナー張る
140:僕のやつみたいに。
55:#wait 転換させる
54:効果測定 pyramidseo
53:pyramidseo
51:karada
522:国立劇場
598:#wait 次やるとき。
それいつ？ 8/15日チェック
521:infomix国立劇場
597:#wait #time 8/7　内山君によってコンテンツアップされてるかチェック
593:#time　8/14 次の請求立てる
1369:e-side
1368:e-side
979:処理担当が決まってないとか、そういうのは
制限かけたいですよね。そういう制限リストみたいなものがあっていい。
あとはアラート出してくれるというのも必要。
1367:待ちのメール
217:あの子と口が利けなかった問題＠ポンツタ
1365:arcs進捗管理完成
900:ＲＳＳクロールと出現頻度解析システム
827:#wait 手作用リンクにお願いする
1364:進捗管理
1363:#wait xlsを修正する
1362:資料請求
着荷報告のmdadev
1213:#4444 20060916　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　                                    　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　                         
1361:#wait 投函
139:シンプル説得
1360:#wait #time 20060919 tue 1300 北坂さんMTG
138:高橋メソッド
1137:#wait 本印刷10101004
137:でかいプレゼン
970:これはつくってみてから、提案して、
それでいいです。というのでいいかな
821:#wait 相互リンクをすばらしくする
820:#wait 最低限のページランクをもらう
895:分けられたドメインへのコンテンツのアップ
134:ユーザビリティに１０パーセントの予算を
49:#purchase washing creem
893:#wait とりあえず手
48:衛生
132:dddd
892:ドメインリスト作成
47:髪
131:秘密の発見
891:#wait ドメインリストからドメイン取得
519:infomix.国立劇場の報酬を先払いしてもらう
890:#wait wgetしてとってくるファイル？
受け渡すファイルの一覧を認識できないといけない。
でもその先のshファイルにはまた全部をもってないといけない
からやっぱこれだめ。ということはこっちからプットできるようでないとあかん。
最初はﾃだな。
ほいで後は、こっちからscpかFTPかするようなスクリプト書いてアップするようにする。
これは簡単なはず
45:ウェブパターン
44:kyowa 人材管理システム
517:english
43:arbeitinfo.com
516:[[bridge]]
40:アフォード
583:見積り承認
581:1.印刷可能バージョン
2.携帯バージョン
3.携帯に送る
4,検索窓つける
1357:営業でのCustomerVPがこけてる
819:#wait クロールしてもらう
1356:テスト
967:顧客（案件）への処理担当割り当てのタイミングは？
818:#wait ページランクをもらう
355:nodepadで「すごい」の解決をしたにつける。sudjestion
817:#wait 相互リンクしてもらう
1353:#wait 文言もらう
889:#wait スクリプト書く
202:#wait ぼっと呼ぶ
1350:#wait 確認してOKならゴー
274:#wait 見え方にばらつきが
273:#wait ヤフーレベルに
39:food place guiと提案
883:ドメインが5程度ならば手動アップ
ドメインが２０以上ならプログラムでアップ
38:mda
37:#cycle check [[food]]
1046:一括自動メール配信
35:感動を与える
34:因果抽出
1193:前書いたようにストラツを書き換える。
1191:unu mdadev
31:#wait zeirihsi.tkデザイン
1190:env
30:zeirishi.tk
191:#wait サイトからいまあるやつピックアップして保存して、
653:とりたい属性の提案と決定。 
190:スナップショット
652:モデリング（db属性化
502:１枚辺りの文字量を700程度にしてみたい。
のでページ単価を3000円などにしてもらえないか。
ページ制作枚数は20-30程度にする。
の相談
651:バリデーションを各属性に割り当てる 
577:rssをはいてちゃんといろいろに読ますべきかも。
rssのリンクも張ろう。

650:とりたい属性をhtmlフォームにする。 
498:#wait zeirishi.tkコンテンツアップ４回目
571:#wait 永井君にメール
570:#wait #mail 内山さんに
9:容姿
8:恋
6:[[レヴィット]]
344:モチベ
343:#wait 外に服でないように
＋いらんのは捨てる
＋美しくないのは捨てる
＋交わせないようにする
1269:#wait 請求たてまっせ
491:#wait 待つ？
342:今の部屋美しく保つ
490:#wait メールコムが死んでる問題
341:部屋
268:sleeping
340:rse
877:#wait ドメイン取得の必要
800:#wait ふつうにリンク集に登録しまくる？
1189:collect the ideas for views.
874:#wait とりあえずのドメインのコストが問題。
２万円くれませんかという話
29:ddddお金ちょっとずつ
28:音楽
1261:#wait 20060913
189:#wait カテゴリ決めと文言決め
27:創作
188:#wait ヤフー登録
26:美の制作
649:動的
静的？

25:charene
648:desing direction
24:デザイン仕事
185:静かな腹筋。
23:chances for o
22:AC
183:[[充足率計算表]]
21:発火
182:#cycle template朝
20:栄養
569:予算申請
642:キーワード順位チェック 
キーワードランキング
ランキングレポート 
検索エンジン評価チェック 
リンクポピュラリティ
リンク元チェック 
ライバル分析 
ライバルランキング
ライバルリンクポピュラリティ
トップ30チェック
ライバルリンク元チェック 
エラーチェック 
メタタグチェック
一括リンクチェック
ページリンクチェック
画像リンク切れチェック 
スピードチェック 
ページ重さチェック
サーバー速度チェック 

568:#wait 永井君
567:#wait 予算承認
566:#wait なるべく一つにまとめていく作業
92:arcsintra
91:[[タグ]]
562:＋現状までのテクストの修正
1339:#wait #time　20060915 2030 MTG
339:サイト、ブログ、rss、などのアカウントを３０ほど作りマクって各地から
サイトにリンクを張りまくる
561:#wait やり方の修正の連絡
1338:#wait 請求書作ってもらう。簡単でいい。振込み先もらう
1337:#wait 今回つくってもらった分を計算する
1336:#wait 1500円くらいか。
1335:#wait 単価
1334:#wait MTGで確認。見積りにしてもらう。
1333:#wait 1週間ー2週間でどうか。
1332:#wait 50枚（今回作ってもらった分を除く）
481:洗顔ブラシ。
洗顔剤。

259:#wait フォームから登録
カテゴリー選択、申請コメント作成
330:RSSを全部のページで吐く
？
1107:#wait #time 9/20 check the educommons site for the migration tool release
107:サーバ取得とドメイン取得とトムキャットと
osとsshとphpmyadmin,apcahe2.2,php5,mysql最新
とwebmin入れる。 
1254:#wait テスト
19:[[ddddの輻輳]]
18:actionable
1251:機能に対してmdadevをするのに、パターンを選ぶ、パターンに必要なモデル（＝名詞）を選ぶ。というのをキーワードとして作成
179:淘汰と試行
17:#cycle check #purchace 服
16:#purchace 美容液
15: 美容液　試す
787:リンク先*リンク元*リンク元の質
175:家出
786:他のサイトみてバックリンク登録できそうなところ
13:洗顔
174:家に食べ物おいとく。
蜂蜜、フルーツ、チョコ、カロリーメート
785:バックリンク
89:#wait バナーが出るようにコーディングする
12:purchace
173:自分で操作できるようにする
11:服
172:テープマシン捨てる
1022:所得税が落ちた理由を分析する
10:顔
782:用件を書き出す。
ページへの誘導まではあちらから。
デザインは不要。
そこからある登録ページに飛ばす。
このサーバはこちらで用意し管理する。
デザインのテンプレートはそちらで用意してください。
登録画面、登録確認画面。登録確認メール。文言が指定できる。
登録後は管理画面にで、登録者の情報が確認できる。
またその登録ユーザへの情報書き出しができる。
またcsvでデータをえることができる。
また簡単な履歴書的なシートを出力することができる。
状態の決定ができる。
候補、の選択ができる。


のような昨日をつくって、こちらがもっているものに対して
似合っているようならこれを使いませんかと提案する
1170:#time 20061010　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　
559:テクストの方の修正
1096:#wait get the archive
781:[[見積り作成]]
85:効果測定
1020:#wait check valuedomain
1095:#wait install fast 
556:どうやら一つのセットに一つの言語の場合の対応が出来てないみたい。
基本的には一つの語には一つのテクストにしたほうがいいはずでは？
スニペットとしては。
1:aiueo
3:sashisuseso
2:kakikukeko
43:当面は手持ち。
後からtpz
運搬パッケージ作る
59:スタジオでミックス？
42:当面とあれをわける
58:素材作りながら？
41:運搬パッケージ
57:素材作る？
40:dsを持ち運ぶ
56:ミックス
55:パッケージ作る
54:簡易録音機材
69:時間をまとまって作る？
53:簡易録音
68:やること決める
52:koe練習
67:スケ
50:理由
64:永井君と個人連入った日のその後に、デスクトップを運んで録音
63:眺めにとるか
62:制作モードに入るまで結構時間がかかるかも。
19:OKコンピュータレベルであるということ
61:家でミックス、スタジオで素材、スタジオでミックス。
家でも素材。という風に全部
60:ラップトップ？
6:============================
パッケージを作ろう
============================
29:録音できるようにしよう
71:まとまって作る作業とそうじゃない作業をとつくろう
70:両方
11:-- [[patternsong]]
27:#cycle
26:まとまって音楽を作る時間を作ろう。
一月。と40万が必要。毎月10万割いて3ヶ月。
それと時間を作っていく。
1:曲のリスト 

C:\deqk\031024 

C:\deqk031219 

ひとつのえがお 

煙草 

Trampling every overdriver 

ミラクルダイブフロムプラットフォーム 

造花 

Audiotechnica 

サンデーアースウォーク 

Box（c:\deqk\040510 

太陽040512-2 

C:\current\deqk\041101 

C:\current\deqk\20041127 

C:\current\deqk\ghhhh 

C:\current\deqk\newton040904 

C:\current\deqk\pattersong 

マフラー 

デビルズヘアカット 

うかびしずむ 

サンセットサンライズ 

C:\current\hanayaki\iamthething 

幽霊 

悲しみよこんにちわ 

風船 

冬に恋をする 

最低なボクと、憂鬱な午後を 

水で薄められるものは皆水で薄める 

航空爆弾。海のざわめき 

存在の耐えられないかるさ 

欠けた太陽 

Long and winding load 

音楽は態の良い耳栓 

日の当たる場 

僕らが旅に出る理由 

星に願いを 


25:録音表作る
39:HDR中古
38:テープMTR新品
22:スデニある誌から無制限ボックスで閲覧してタグ付けする
37:中古
21:先に詩を書いておく
36:テープMTR
35:購入
34:手持ち
33:今録音できる機材がなさそう？
47:いくということ
30:koe
45:new
10:@secretary setup code
6:@wait hosingoptions
{
vitalhosting
mitghty
atlink
nodepad
}
5:@done 364hosting
4:@done hostinginterview
3:@wait お返事待ち
2:@done hosting
19:@wait 停止スケジュールをアナウンスする
1:@wait akaruiheya_hosting
18:@wait 停止スケジュールをアナウンスする
17:@done nginx設定 ssh -l toukubo 192.168.0.152
cd /etc/nginx/
vi sites-available/hogehoge
# ln -s /etc/nginx/sites-enabled/hogehoge /etc/nginx/sites-available/hogehoge 
16:@done linuxsetup
15:virtulhost setting @httpd.conf
9:@wait setup url(dns service provider url)
11:@done intervview current config 
8:@done dns
17:デシル
rfm
社員の売上成績
店舗
15:配備
14:画面
13:画面を作る。
12:集計用DBの設計
26:テーブル名（ナウン）が一致するか
1:nでテーブル

39:画面
11:スキーマ
25:BIの画面動いてる
38:配備
24:abxタグ
37:============================= 
  teller 導入後の　Runtime
=============================
23:abxについてるwysiwygツールで、sqlとabxタグテンプレ吐き出し
36:自動書き出し
22:sql
49:⇒
⇒
⇒
⇒
⇒
⇒
⇒
⇒
⇒
⇒
⇒
⇒
⇒
⇒
21:sqlから、多次元データベース用のアクセスコードに変換
34:名詞の定義
48:jdbcuri of sourcerdb
33:名詞の選択
47:データの吸出し
9:夜間バッチ、２でもらった情報からパターン化か自動化できないのか
46:modeling
8:夜間バッチ処理の内容を口頭で。
スキーマ？

7:形式を特定する。初期のインタビューを制限する
6:画面に出したい項目を自然分で利いてくる。
今持ってるデータベースのテーブル定義（をもらう。どの形式？）
各テーブルの行数
マシン
os
dbms
dbmsバージョン
現状のスキーマなど
58:集計sql作成
43:Post Sentences
5:営業する。自然文
57:分析手法ごと動詞作成
4:============================= 
         (Re-)Bulidtime
=============================
56:インタビュー項目固定
41:モック吐き出しトリガー
3:============================= 
         Runtime
=============================
55:分析するプログラムの作成？
40:画面修正
53:吸い出すsql作成
51:abx修正
50:⇒
⇒
⇒
⇒
⇒
⇒
⇒
⇒
⇒
⇒
⇒
⇒
⇒
⇒
18:つどたいおう部位
21:fashion
20:dressification
9:Amplifier
19:友達のレコメンド
18:一人でお洒落になると限界がある。それを解く。
71:PR担当とプレゼンテーション
17:友達が分析してくれる
16:レコメンドするんだ！
4:team
15:女性からするとファッションサイトは面白くない
3:onlab
14:どういう問題をとこうとしている
68:theamplifier
1:amplifier
12:サービス
65:すげのへや
28:冬の間中。２月一杯
64:場所に根ざしている
27:サービスをローンチしたいのはいつ？
24:来週大丈夫な日
13日は終日

23:モテるよ
22:art
21:fashion
20:dressification
9:Amplifier
19:友達のレコメンド
18:一人でお洒落になると限界がある。それを解く。
71:PR担当とプレゼンテーション
17:友達が分析してくれる
16:レコメンドするんだ！
4:team
15:女性からするとファッションサイトは面白くない
3:onlab
14:どういう問題をとこうとしている
68:theamplifier
1:amplifier
12:サービス
65:すげのへや
28:冬の間中。２月一杯
64:場所に根ざしている
27:サービスをローンチしたいのはいつ？
24:来週大丈夫な日
13日は終日
23:モテるよ
22:art
49:@wait 女なら男
48:合成
47:@wait 男女
46:@wait 参加と可視化
45:出会い
44:@done 事業計画を嘘ついてでも３０秒のテンプレートにしたもの。
19:ストリーム
43:@done My company, __(insert name of company)__, is developing __(a defined offering)__ to help __(a defined audience)__ __(solve a problem)__ with __(secret sauce)__.


18:メッセージ
17:theamplifier
41:startupを増やす
16:創業者
領域横断者
カメラマン
プログラマー
CTO
ビデオシューター
ハスラー
デザイナー
インターンオーガナイザーとインターン
PR
翻訳
アイデアの人
CEO
場所
ディレクター
編集者
スターインターン
ライター
会計士
キュレーター
スーパーコネクター
コンサルティング
営業
ヴィデオシューター
美女
the speicialist in the business domain of the target.
40:バーター
15:amplifier
14:@wait 上場するときに時価総額がいくらになっているのか？
13:@wait 必要資金調達額
12:@wait IPO時の発行済株式総数
11:@wait 事業計画
10:@wait 資本政策
54:スタートアップへの参加の可視化
29:投資の直列化
53:美女
28:@done 投資循環
52:campfireの動画
27:@done 着手のゴールの可視化 x　参加の可視化 x 速度の可視化 x 問題（ゴール）と
51:着手のゴールの可視化 x　参加の可視化 x 速度の可視化 x 素晴らしい着眼による問題（ゴール）と解決のセットの可視化。参加インターフェイス。
26:参加
50:@wait 男なら女
25:@done 事業計画とプレゼンテーション
24:@done ピッチ
23:投資
22:@wait funding
21:マッチング
20:ウェブ
9:スタートアップ
8:解決しようとしている問題を３つ
7:KPI
39:スタートアップの資金調達
コネクティングザドッツ
クリエイティブ資源とのマッチング

6:ゴールの可視化
38:@done 僕らが何を得るのかを解決する。
5:startuproles
37:メディアモデル
4:[[fund]]ing
36:ビジュアライズドメトカーフ
3:@wait exit
35:ゴール決定する。届けならモノの送付とかいったコミュニティとかへの参加。
2:startup
34:3つの投資のゴール
1:amplifier_
33:microfunding
32:middlefunding
31:nanofunding
30:seedsfunding
5:the "3" issues to solve
4:personels 
1:amplifierxapc
9:外注？
11:tag the todo
8:facebook
7:old monetization models like
ads, selling.
 to capital gain monetization,
for all.
6:business scales 
18:recursions and similality issues
3:クリティカル・マス
8:@done 僕らが何を得るのかを解決する。
6:theamplifier
95:営業できる人いたらそれでいいかも
5:PR担当とプレゼンテーション
79:長距離
4:amplifier
78:クリティカル・マス
3:ampxsv
92:teller2
77:500万
91:マイクロファンディングは実装します。
76:営業
90:読者やクリエイティブの声や統計
59:投資の可視化
58:例のプレゼン
72:営業態勢
57:事業説明
56:こちらの提供物のプレゼンテーション
55:何か広告したいものがあり、
それがかっこよく、最低限の
余剰を抱えている人。
39:@wait PINGMAGを紹介していいか聞く
54:余剰のある、
38:@wait ゴールを言う：
あたらしい場特集ができるまで。
5冊分のコンテンツができるまで。
37:門脇さん
52:森ビルに行ってみよう
36:学生さんに株式とかわかるやつ探す
51:場所を貸してくれる人
35:こちらはWPSTCROWDと、広告バーター
50:ハスラー
34:創業者
領域横断者
カメラマン
プログラマー
CTO
ビデオシューター
ハスラー
デザイナー
インターンオーガナイザーとインターン
PR
翻訳
アイデアの人
CEO
場所
ディレクター
編集者
スターインターン
ライター
会計士
キュレーター
スーパーコネクター
コンサルティング
営業
ヴィデオシューター
美女
the speicialist in the business domain of the target.
33:ナノが必要
32:マイクロファンディングが必要
31:直列する
30:ゲバラたち
14:紙面を
13:amplifier
12:余剰がある人を募る
10:バーター
89:効果
88:「イメージ」が大事？効果が大事？
87:両方を得る
86:大体のところに対して
そういうampxをしかける
85:ネットワークか、
マスか。
69:上げてしまう
84:両方っぽい
68:株式を追加すると告知する
83:累積なのか、時間当たりなのか
67:aとbとc
65:機密保持
64:まず名前とか既存の仕事を協力編集者から
→加藤さん判断
→依頼（ネタ、形式の伝達の上）
→一本目は（加藤さんで書き換えた段階で）修正など施した上で出す。
→この段階で著者と編集長で面会。
→その後も進行管理とWP化や確認などは編集協力者がする。
→

守秘の話を現段階で前提とするか。
49:ガスに聞く
48:デザイナーバーターがいい
47:バーターでコンテンツを作れて
何か広告したいものがあり、
それがかっこいいもの
61:3ヶ月で100時間程度の時間。
 現金で投資家が700万、人で1800万を集めているところの株を50万分
＋SVで告知したいことがあればそれをバーターで
＋システム開発で開発したいことがあれば相場の10%の金額でバーター。です。 　
無茶なお願いですが今まさに言葉を持ってるデザイナーが必要です。
60:無理ない量。60万程度。
45:交渉する人
44:学生、露出ほしい、才能ある、無料でできる新人をDIG
29:ネタの傍になぜかいる人
43:デザイナー
28:人を集める人
42:絵が在るところ
27:編集者
41:ガスもコンテンツもらう
26:編集者
25:CCから集める人
24:写真
23:必要な人は？
22:ampxsv
21:写真家たち
20:株式であるということと
SVの企画書する
10:原価60万で、100万折半。
9:特集主義以外やりません。
サイト運営はしない。
２ヶ月に一回やれるときだけ。
8:１００万とれたらやる。
19:svarchiveの公開をPVにカウントして、300万PVくらいですと言う
7:編集長とかプロデューサーとかいう名前もらう
6:広告集める
5:一定の100万とれたらやります。
それが成功するなら構造的に300万くらい狙えるかも。
16:svx
4:ampxsv
26:領域横断
15:特別編集長制度
3:svx
25:在庫＋副業の余剰
24:ampx
23:プレゼン資料作る
12:100万PV
60記事/月
100万売上。
50万の売上
22:営業素材
11:目標数字
12:著者連れてくればいいのかな
11:言う
10:人
8:相場30万のシステム開発と、ベルリン協力と、30万分の株
60 記事 x 6000 = 30万。
＋もうひとりライターでこれを激安でやってくれる人。
3ヶ月くらいで。
7:特技バーター
6:編集者で株式レベニューお願いする
4:ampxsv
3:ampxsvxandy
14:与える
13:つつく
4:find the goods and buy
3:ana
7:名詞を採る
6:モデリング
5:自動化
4:[[ノードパッド]]で自動で論理演算するといいかも。
3:ノードパッド上でのandは、二つのことがないと両方は因果できないぞということ。
2:andは、二つともデータとしてとってくるみたいな感じ。
3:Android
4:windows
8:download and exec the app
3:android4
4:mda
3:andromda
2:mdaを因果。
10:page
16:pagebase,and video annotation by speculator
PBVAS
6:offshore
3:資料に対するアノテーションをテーブルとしてもとう。
test caseとつけよう。
13:PM/storyteller
9:annotation
6:忘れていい
5:横断的
3:シーザー
7:意識コスト下げる
2:spring
7:payment ,risks,
10:tell so.
6:the reason why he is not have responded
4:poke
3:offered. not answred
9:tell so.
8:meeting.
32:福利
43:食事
21:提案すべき最適なタイミングの検出
31:context base
42:栄養
20:パターンマッチング
30:速さ>早さ
41:網羅
40:睡眠
51:make them feel confirtable
50:make positive reasons to go
19:提案アルゴリズムの提出
18:自動化
29:最適なUIと自動化
39:バッファ
17:自動すごいアイデア提案
28:プログラミング5パー高速化で一ヶ月200万か1億
38:pknk
49:contrast
27:商流
37:多目的化
15:dots
48:communication
26:nea
36:自動
14:get paid
47:g
25:すごい質問
35:適材適所
13:issue
46:communications
24:@wait アライアンス
34:モチベーション
45:仕組み化
23:横断的効率化
33:ユーザビリティ
44:モデリング
22:履歴
7:if this is peak
6:160*12=1920 hours style?
5:want to work for other my works
4:270 hours
9:difine the rules and flow
and payment
8:anyway can we use if outsourable 
at 2000?
1:apc.teaming
15:can i buffer
6:tada and someone
5:information management
4:reading documents
12:amazoning
11:earplug
10:interuption
9:vnc
17:buffer facewash and hair pack
8:mac
16:better_apc
1:apcxloaning
91:知名度を上げる
117:オンラインで文字起こし
169:毎回デザインかえるの無理か
116:画像データ選択
168:デザインをケチらない。
115:権利割当
167:画像を何とかする
113:目次
165:ネットワーク持ってる人に聞く
112:買ったものについてはスキャン
69:タイアップとかする
164:ＷＰに
111:写真？
68:mediaware
163:毎回ＨＴＭＬにする？
文字を読めるようにはしよう
110:動画？
67:socialize
162:特集がイケないな。デザイン的にいって。
66:さばくしくみ
161:デザインする
65:売上が付くなら
64:横展開
11:権利処理
61:kawakami
139:ゲースー
138:hacked
137:コンテンツ
136:media artist
135:編集
134:編集会議？

133:分解する
38:@Noding autolinker bookmarklet
37:svpyramid
131:モノ撮り
130:かっこいい写真
87:ミラーレスの
34:ライターというか協力者募集
4:人員配備
86:カメラの会社
3:svarchive
85:SEO外車
84:eyefi
31:被リンクプロジェクト
83:ターゲット
108:オフショアに全部送る
107:裁断しないでスキャン
80:カメラとかを
106:スキャン
158:人決める
105:裁断
157:加工する
156:撮る
155:方針決める
102:ヤフオクとかで買う
154:選ぶ
101:インファスに無裁断前提で本を借りる
153:CCから借りる
100:所有一覧リスト
58:@wait csv importer wordpress pluginをdownloadしてsvarchiveのwpに入れる。
152:イラストにする
151:写真にする
150:絵にする
53: inquiry to psd2wp https://www.psd2html.com/order-now.html　返事きてないけどどうっすかメール。english.
51:@wait 返事着てない。どうする。 inquiry to psd2wp https://www.psd2html.com/order-now.html
129:ＷＦにする
128:誰か企画者とか

127:現行サイトにレベニューでコンテンツ
126:revenuesharing
29:デジタライズ
120:画像
76:画像の許諾
75:価値上がる
74:画像だ
73:仕組み
72:学生たち
71:キーワードページとコンテンツ量
70:営業してみる
149:ネタ持ってる人決める
148:ネタ決める
146:ライター見つける条件を書く
145:ライター見つける
144:ライター文章を書く
48:@wait wp_posts
142:文章刈り取る
141:実体験する
99:オンラインな人
140:jully watai + ssuge + some media artist
98:オフラインな人
97:人に必要な要件を策定
96:キーワードのところ
95:集中できる場所を考える
42:wp_contents
94:分散しない？
93:どんなんでもいいんじゃないっけ？
119:拡大して校正
92:権利処理が容易になる
279:権利処理不要のケースについての記事一覧作成
207:連絡先調査
450:表紙の写真撮る
131:モノ撮り
31:被リンク
274:ampx seoの人
347:フル・オプトアウト方式にするしきい値
273:ampx
346:権利処理300人安全な人一斉メール
271:サイト内自動リンク
419:better_ocr
270:キーワードページに
そうした興奮を
343:危険フラグ付け
417:協力者になにかをお願いする。
342:段階的オプトアウト
416:細分化？
415:お前らが面白いと思うことは？
414:リスク算定
66:@wait 加藤さん以外で権利処理
239:ユーザーフレンドリーなキーワードページ
412:@インファス依頼
なしになるように、
これ一個っつやってるの？
いらないです。といってもらう
238:1キーワードと2キーワードで違うのかも
411:表示
410:通知
236:なしでやる
309:永井くんにオプトアウト相談？
379:文字起こしの予算のCFを先に（2ヶ月後払いとか）に
して10万くらい出しちゃう？
300万文字（3000記事）とかアップに変更か。
232:現行サイトに
レベニューで
WPに導線引くような
ampx
376:業者に郵送
449:@wait 送っちゃっていいかキメる
375:今のもの
374:未発送のものをデジタルに
447:インターン管理
373:記事作成
199:記事の一覧の提出が公開前、許諾の後になることの承諾を
最初のステップにおいて入れる
372:時間でスケール
＋超利益率型のビジネスモデルへ。
444:interfm
370:他の問題に絡めずにバトルる？
96:キーワードのところ
269:文字起こし方法の洗練
95:集中できる場所を考える
268:tumblrユーザー
440:@wait タイアップできるかの確認
94:分散しない？
267:書き手
266:オフショア開拓
265:シュフティ的なもの
120:画像
190:100名のターゲット著者一覧
262:モチベーションベース
409:参加の可視化
408:金額
407:ビジネスモデル？
332:インファス的にOKである条件がありそう。
406:@インファス依頼
源泉徴収連絡先つつく
331:@wait capにお伺いする
405:ナノしたらどうか
330:@wait レイアウトとかデザインとか
本当に必要か。
404:ampxする。通知する。可視化する。
直列化する。
403:インファスで予算
229:権利処理Runtime
401:paralleize
228:上位表示
226:権利処理を容易にする
296:@done オプトアウト？
225:「この画面をテキスト化リクエストする」（これは何？）
369:roi
368:100名程度一斉メール
367:一斉メール方式レビュー
366:15名は一斉メール方式
365:10名は一通ずつ
438:不足のリスト
4:人員配備
364:・CHEでのインターンは？
363:リクープどうか
435:indd2text
117:文字起こし100万文字
432:本の調達専門家
ディレクション
185:メールキット
431:80年代の本
258:権利処理方針が決定する？
113:目次に
256:mediaware
11:権利処理
255:tumblr plugin
399:どうすれば分かる？
398:目次なしでやれる？なら目次なしで。
397:indesign 調査
396:校正
251:紙から文字起こし
325:@wait クオークの調査
394:危険フラグ
323:@outline インファスにお願いできないか
393:危険フラグ
392:比較
391:インファスに資料を出す
48:wp_posts
320:モノ撮り？
390:匠くん
289:正規化
288:archiveページの外観
287:はてなと共同する？
286:新しい参照
285:PV
283:出現頻度
282:内部SEO
428:文字起こしコストと、権利処理コスト
280:暫定スケジュールと
暫定の方法の決定
352:@wait 元SVとか元インファスな人とか聞く
425:ノード書ききって最優先キメるのはやる
424:@インファス 
月400万(1000万PV）見込み（インファスとSV込）、
@0.3で表にしていただくの可能か。
350:@Air もっかい塙さんにメール
106:bookscan
177:@wait 支払いの仕組み
76:画像の許諾
421:「書いて救え！サブカルチャー！」
75:価値上がる
420:好きな記事について書いてもらう
可視化してゲージ回す。
出会いは後で。
74:画像だ
72:文字起こし下ものについて
書いてもらう
319:紙から目次
318:作業可能な記事一覧に
389:誰かUIの人
243:@wait 加藤さん問題
387:doctemplate メールキット
315:ロングテール
386:PRは？
385:文字起こししてくれたらPDF上げますキャンペーンは？
384:Main Runtime
383:拡散
382:ついでにrtする
381:広告収益
380:ampxsvx
453:blog.studiovoice.jp
279:権利処理不要のケースについての記事一覧作成
207:連絡先調査
450:表紙の写真撮る
131:モノ撮り
31:被リンク
274:ampx seoの人
347:フル・オプトアウト方式にするしきい値
273:ampx
346:権利処理300人安全な人一斉メール
271:サイト内自動リンク
419:better_ocr
270:キーワードページに
そうした興奮を
343:危険フラグ付け
417:協力者になにかをお願いする。
342:段階的オプトアウト
416:細分化？
415:お前らが面白いと思うことは？
414:リスク算定
66:@wait 加藤さん以外で権利処理
239:ユーザーフレンドリーなキーワードページ
412:@インファス依頼
なしになるように、
これ一個っつやってるの？
いらないです。といってもらう
238:1キーワードと2キーワードで違うのかも
411:表示
410:通知
236:なしでやる
309:永井くんにオプトアウト相談？
379:文字起こしの予算のCFを先に（2ヶ月後払いとか）に
して10万くらい出しちゃう？
300万文字（3000記事）とかアップに変更か。
232:現行サイトに
レベニューで
WPに導線引くような
ampx
376:業者に郵送
449:@wait 送っちゃっていいかキメる
375:今のもの
374:未発送のものをデジタルに
447:インターン管理
373:記事作成
199:記事の一覧の提出が公開前、許諾の後になることの承諾を
最初のステップにおいて入れる
372:時間でスケール
＋超利益率型のビジネスモデルへ。
444:interfm
370:他の問題に絡めずにバトルる？
96:キーワードのところ
269:文字起こし方法の洗練
95:集中できる場所を考える
268:tumblrユーザー
440:@wait タイアップできるかの確認
94:分散しない？
267:書き手
266:オフショア開拓
265:シュフティ的なもの
120:画像
190:100名のターゲット著者一覧
262:モチベーションベース
409:参加の可視化
408:金額
407:ビジネスモデル？
332:インファス的にOKである条件がありそう。
406:@インファス依頼
源泉徴収連絡先つつく
331:@wait capにお伺いする
405:ナノしたらどうか
330:@wait レイアウトとかデザインとか
本当に必要か。
404:ampxする。通知する。可視化する。
直列化する。
403:インファスで予算
229:権利処理Runtime
401:paralleize
228:上位表示
226:権利処理を容易にする
296:@done オプトアウト？
225:「この画面をテキスト化リクエストする」（これは何？）
369:roi
368:100名程度一斉メール
367:一斉メール方式レビュー
366:15名は一斉メール方式
365:10名は一通ずつ
438:不足のリスト
4:人員配備
364:・CHEでのインターンは？
363:リクープどうか
435:indd2text
117:文字起こし100万文字
432:本の調達専門家
ディレクション
185:メールキット
431:80年代の本
258:権利処理方針が決定する？
113:目次に
256:mediaware
11:権利処理
255:tumblr plugin
399:どうすれば分かる？
398:目次なしでやれる？なら目次なしで。
397:indesign 調査
396:校正
251:紙から文字起こし
325:@wait クオークの調査
394:危険フラグ
323:@outline インファスにお願いできないか
393:危険フラグ
392:比較
391:インファスに資料を出す
48:wp_posts
320:モノ撮り？
390:匠くん
289:正規化
288:archiveページの外観
287:はてなと共同する？
286:新しい参照
285:PV
283:出現頻度
282:内部SEO
428:文字起こしコストと、権利処理コスト
280:暫定スケジュールと
暫定の方法の決定
352:@wait 元SVとか元インファスな人とか聞く
425:ノード書ききって最優先キメるのはやる
424:@インファス 
月400万(1000万PV）見込み（インファスとSV込）、
@0.3で表にしていただくの可能か。
350:@Air もっかい塙さんにメール
106:bookscan
177:@wait 支払いの仕組み
76:画像の許諾
421:「書いて救え！サブカルチャー！」
75:価値上がる
420:好きな記事について書いてもらう
可視化してゲージ回す。
出会いは後で。
74:画像だ
72:文字起こし下ものについて
書いてもらう
319:紙から目次
318:作業可能な記事一覧に
389:誰かUIの人
243:@wait 加藤さん問題
387:doctemplate メールキット
315:ロングテール
386:PRは？
385:文字起こししてくれたらPDF上げますキャンペーンは？
384:Main Runtime
383:拡散
382:ついでにrtする
381:広告収益
380:ampxsvx
453:blog.studiovoice.jp
4:
3:archive_digitalise
6:@Air roiにアップデートしてみる
5:最優先をピックする
4:archive
3:書面みて確認します。別の箇所の再利用については、ほとんどそうなってる。が、著作権というよりはが無償公開が入るのでそこだな。anjinで有償利用とかウェブなり広告つけてもらうとかならままむしろ捌きやすいのだが。先生に確認します。

https://www.facebook.com/messages/conversation-id.595895953772374
32:会議
31:スケジュール
30:記事で、載せないで下さいというものについてのケアを文面に。
38:150万文字
5:ブログでもなんでもいいんじゃない？
大体一人10万文字くらいはあるよね？
10人だわ。余裕だわ。
50人も行くわ。100人も行くかも。
1000人も。1000万文字行くな。行くわ。
4:http://cl.ly/411N0n3c2H32
36:保険会社
3:archive_text_amp
35:親族
34:永井君
15:直接の面識
33:校正
1081:自動リンクを使えるところを探す。
自動リンクの飛ぶ先を探す。
顧客名が書いてあったらそこに飛ばすのがいいでしょう。
1234:資料請求
着荷報告
1628:#wait 修正する
1365:arcs進捗管理完成
1364:進捗管理
1894:AAC 20061110
1362:資料請求
着荷報告のmdadev
1572:#wait 支払いを迅速に
1009:#wait アークス見積り部分完成
1571:#wait たかやへの支払い
1509:記帳代行だけじゃだめなんじゃないか。
107:#wait サーバ取得とドメイン取得とトムキャットと
osとsshとphpmyadmin,apcahe2.2,php5,mysql最新
とwebmin入れる。 
1511:マニュアルでいいか。やってみよう。
どういうビューになるというのも実際に入れてみてやろう。
1508:どうすればタスクのデータ投入ができるか。
1383:顧客管理
1461:#eclipse #wait タスクのデータ投入
1827:#4444 20061030__________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
1353:#wait 文言もらう
1901:RuntimeNodeOfArcsintra
979:処理担当が決まってないとか、そういうのは
制限かけたいですよね。そういう制限リストみたいなものがあっていい。
あとはアラート出してくれるというのも必要。
1610:#wait 運送会社への郵送指示書の仕様
1376:#wait 自宅でホスティング？
1423:いままでのものについてはサービスをいれなくてはいけない。
1481:金額を全部カンマに
1422:CurrentEstiomationという情報の管理が必要。
二つあってはいけない。
必ず一つ必要。
92:arcsintra
4:stopper->bettersleeping
3:asbn
7:高め→出会い
射精→疲労
6:@air 
3:message = email / phone / skype / goto / see
2:ask
4:outsource
8:assignee
3:assign
7:assigner
5:tumblr+tagging
4:pneumatic+dropbox
3:assigner
9:tagging interfaces
11:permalink and bookmark
8:gmail+tagging
10:bookmark
7:evernote+tagging
6:flickr+tagging
32:monetization
8:company
19:company
7:invention
29:assets
6:inventor
28:filtering
17:** un found innovation
5:investment
27:consultant ?
16:investors
4:researchers
26:** unfound issues
25:issue
24:angel
13:industry
23:VC
11:innovation
1:astamuse.contract
4:知財や特許に関係している人たちを集まって
3:github
8:dbデータの移管とパス設定
7:httpconfの設定消す
18:1
6:mtインストール
17:2
5:データアップ
16:1
4:確認、デバッグ
15:1
3:atmosphere移管する
14:2
13:1
12:3
11:mtライセンスの確認。必要ならば取得
10:更新停止
24:メールには合計1人日で36000円と書いといてください
23:時間単価（3500円）
22:時間
21:作業詳細
9:イメージ・メディアデータの移管
578:フォントのでっかい文字列
1254:赤い
1295:でかい
1289:収益お金ある程度
607:凄いcss、をもらおう。
1287:動かす
1250:attention
1285:更新頻度を保つ
1290:アドセンス
7:@magicdraw 
17:CommonTranslationsを入れる@air
6:画面仕様　*画面遷移
14:@keyword [[関係modeling]]
20:関係モデリング
3:AttrPicking
11:再現指摘
4:Nouns
3:Attrs
7:画面仕様
22:@wait 金額の問題か、売れないなら人に上げるか
20:@sunでavonのものパシャ
14:@wait まとめて出品他のももっかいやってみる
8:@done Try photo and color ← camera
11:@wait 時間短くする
19:@home 見つける
25:@sun もっかいシャネル撮りまくる
18:@wait ロクシタン
56:現行サイトでの金額
55:@wait 梱包
19:写真撮る
54:@done 送料のクラス決定
53:@air_search 検索＋５００くらい
17:@secretary @done 重さ図る
52:モデル的な？
51:メイン３種
14:http://template.aucfan.com/
このテンプレート埋める
50:現行のサイトでの金額文言
49:@pad_how 売り文句
67:auction
48:@Pad_how 販売理由
47:追加の写真
120:better_auction
46:発送
45:評価
119:全部梱包
43:金額と送料を
42:テンプレートで回答
116:宛名
79:写真スタジオから荷物を退く
3:@done 電気利用減らす
112:a-w-a.jpどうする
14:@wait 梱包する
13:@wait 郵送する
10:サービス移転する
9:@done 一個写真にとる
31:@done hard
7:@done 出品する
6:@done 一個今のPCで売ってみる
5:@done 高く売れるやつを
109:@done お金
114:スペックと写真
4:@done サーバー売る
113:出しては見る
5:shootings
4:listing ups
1:auction0406
9:things at warehouse
11:ask her for it roughtly
8:things at home
10:rough shoots on warehouse staffs
7:things at shuwa
6:moving things to home? if it is not too big
6:オリジナルの商品画像でしょうね
5:写真
4:レンズたちとる
8:販売理由
3:auction
4:cf0405
3:aa
1:auto-amazon
3:auto_project
32:lighter bag
1:autocycle
30:cf and roi
18:cycle_kit
17:easier
29:better and quicker one
16:buffers
28:bigger charger
15:adapter
14:battery
25:battery
adapter
foods
24:hokkairo
7:hokkairo
23:list
6:ホッカイロ
10:more staffs
22:what to put
5:cold
4:elimination
7:automate
24:自動化
7:自動化
16:量産
4:automate modeling
14:名詞リストとコネクション。因果配置
3:automate
9:モデリング　+ RuntimeNode作成 of modeling
8:ストーリーテリング of  modeling
3:nodepadのルールの定義を明文化する。
１．分割nodeをmixiタグにする
　２．下が原因、上が結果
　３．node値のルール
　４．node値にしたがってY座標の位置がnodeフィールド上で決まる、以上を追加する
141:privacyの仕様
116:PostSentencesOnStoryteller
140:nodeの共有
49:#wait とりあえずローカルで立ち上げる。
＋sqlシェア
あとvsysにもあげちゃう
114:StorytellerCodesDownload
48:#wait hosting
113:モック
112:mock
46:HttpPostXML
111:開発機への配備
70:xhtml
45:@wait nodecomponent
110:test
42:@wait cltr-s以外のキーコマンドで、別の永続化に保存するようにする。
41:@wait シリアライズだと、変更に応じてデータが損なわれてしまうのが怖い
40:@wait どうすればノードパッドのスキーマ変更ができるか
15:量産
129:staticData.xmlはtemplate書き出しにする
153:
128:RuntimeNodeofautonoding
126:staticData.xmlをexpolroer
125:サーバのurlを持つ
59:#wait sql dupmpfile
58:TestedSystem
57:#wait war
56:#keyword [[配備]]
55:#wait server url
54:ター
53:サービスイン。
配置  = deploy
52:検収
23:FN storyteller J2eeProject
137:autonoding.buildtime
22:noding
69:xhtml
68:camp
134:XmlFileSaveOfANodefield.java
67:vital
133:XmlMultiplePostClientOfNodesOfANodefield.java
66:stsc
65:camp2xhtml
64:テスト
39:@wait ノードパッドのスキーマ変更
6:自動化
130:storytellerのtemplateとコードダウンロードを
63:OutOfPatterning == coding
38:============================= 
         Bulidtime
=============================
37:nodeserver
61:xhtml2jsp
3:autonoding
60:#keyword [[配備]]
33: = automate noding
119:http://localhost:8090/st/
3:autopatterning = automate patterning
5:application list
+ o.zip
or env.zip
or flashmemory
4:install
bringi install kit
http://installpad.com/
3:setup automatically
6:war java
4:zip?
3:autowar automate creation of war file of j2ee
2:avoid = [[less]] is more
3:node list + delete
7:wp
10:@done wpセットアップ
6:@done hosingoptions
{
vitalhosting
mitghty
atlink
nodepad
}
5:@done 364hosting
4:@done hostinginterview
3:@done 今週中に見積もり
2:@done hosting
1:awa
29:アイテムの概念がデザインされてない。
36:info@nosigner.comで。
28:項目が足りてないかも。
35:メールアドレスをもらうとか
27:data入れたいcsvで。
34:アカウントを作る
19:wp integration
33:@D #chida 先方にどういうものかと説明する
18:js coding
32:BC導入をしたい
31:いろいろ他にもNOSIGNER案件の依頼があって、BCを導入するなどしたい。
23:@done csv_upload pluginをdownloadする
16:@wait inquiry to psd2wp https://www.psd2html.com/order-now.html
30:【質問】どうすんの
22:wp_images
15:@Noding card
21:wp_images_linking
14:psds
20:wp_posts
13:psd2wp
9:wp_contents
12:@done hostname
8:wp_theme
11:@done ssh_access
1:awa_hosting
1:awake
6:pknk
5:glucose
4:カフェイン
7:no deadline
6:バックパックに資料作る
5:backpackの内容URLと範囲を指示
4:テンプレート渡す
3:backpack2でかい資料
4:mysqldump
3:backup
17:布*接着
16:プリント（インサツ）
15:キャス
9:http://www.enuno.com/shopping/outlet01.html#0057
14:イラスト
8:布買う
13:シルクスクリーン
7:textile depot
12:http://www.i-soleil.com/shoptop.html
6:モールスキン
21:レコードバック
11:神と接着
5:@out ハンズ
10:ハンズの白い紙
4:布
3:bag
18:http://www.rakuten.co.jp/takatomi/468479/468482/469941/
17:布*接着
16:プリント（インサツ）
15:キャス
9:http://www.enuno.com/shopping/outlet01.html#0057
24:スーザン
14:イラスト
8:布買う
13:シルクスクリーン
7:textile depot
12:http://www.i-soleil.com/shoptop.html
6:モールスキン
21:レコードバック
11:紙と接着
5:@out ハンズ
10:ハンズの白い紙
4:布
3:bag
6:indexings
5:category and tags. by types?
4:subbag?
3:10回 x 15sec x 365x10
1:balance
6:runtimeとか
3:meceな軸に入るリストのそれぞれの割合
2:ルーチンとか
7:userbility
10:point
6:transaction fee
5:shinsei
4:rakuten
3:ufj
9:coinscf
5:basecamp_integration
4:users page
3:basecamp
6:integration task template
5:chooose the project
4:add user in 
https://storytellers.basecamphq.com/companies
3:basecamp_integration
2:basecamptemplate
3:sharable
6:phpmyadmin
5:csv
4:excel
3:batch
7:stuckless
10:delete = 削除
6:less time
5:SC
4:お湯ためとく「お風呂ためる @bath
3:bath
49:泡作る
48:泡立て器
47:泡漬けるてしばらくする
53:それぞれの重み。
XLSかmmかndで、点入れてく
39:髪とくっつける
52:noding for both (or all ) of the nodes
38:洗髪料泡立て
51:比較
44:湯船に入る
37:流す
43:体につける
36:流す
50:ながらタスク選ぶ
42:モミダッッシュ
35:流す
41:手リソースを用いない方法
40:手
32:体洗う
31:髪洗う
16:bathtab
30:洗顔
15:ohuro tameru
21:wash teeth
14:湯船
13:prewash scalp
9:http://itc.conversationsnetwork.org/shows/detail851.html
11:runtime
38:洗髪料泡立て
37:流す
79:顔泡立てる
36:流す
78:体泡立てる
35:流す
77:たくさんとる
76:頭泡立てる
75:予洗を頭から
32:体洗う
74:湯
31:髪洗う
73:熱湯で
30:洗顔
72:浴槽の清掃
71:
70:シャワーからで湯船
49:泡作る
48:泡立て器
47:泡漬けるてしばらくする
44:湯船に入る
43:体につける
40:手
82:戻って風呂場洗う
81:ジャー
80:ドボン
16:bathtab
15:ohuro tameru
14:湯船
56:ながら
13:prewash scalp
9:http://itc.conversationsnetwork.org/shows/detail851.html
11:runtime
10:delete = 削除
7:stuckless
6:less time
5:SC
4:お湯ためとく「お風呂ためる @bath
69:効率化？
3:bath
68:脱衣と着衣
67:一日２階お湯だけ
66:自動
65:ながら一個選ぶ
64:泡の奴３つ買って３つ友使う
21:wash teeth
62:ながらができる
61:流れ作業に
60:double
39:髪とくっつける
10:lightweight
7:cables
5:less time for changing
1:battery
18:just charge many ( like 8 )
17:speed for charging
16:much volume
15:no need of carry the mac charger
14:can charge mac
21:@home try get the hyperjuice a
13:can charge 2 at once
12:can bring on cycle_kit
9:@shuwa bag
11:can add at out
8:pack to it
1:bc2jobposting
14:google filter
13:自動
12:通知フィルター？
9:clip.to
11:newly assigned todos
8:クリップボードベース
10:rtm
7:rtm
6:basecamp
5:GUI選択
4:箱選択
3:bc2rtm
15:RTMで文字列一致で
33:新しい場特集に繋げたい
49:メディアが乗る事も形式に関与すると良い

48:SVとベルリン好き
47:ブランド

46:インターン

45:バーター
44:低予算
43:素敵なカメラたくさんとメイキングと中の人とかインターン
42:ベルリン国際映画祭 x 仙台という形式に、
長く、新しい、移動と場、とそれが必然であることが欲しい
59:園子音口説いて
41:映画祭自体について、移動のコスト比重が高すぎるかも
58:3つ企画
40:移動が面白いと良い。

57:4 + 4 + 2

56:
10本/月 x ヶ月程度
54:藤川に。代わりにファッション安藤くんに
53:映画すでに書いている著者じゃなくていいか
52:競争相手も
51:JR協賛無理か

9:berlinale x sv
50:ツイッター対談はやってもらう
19:著者
8:映画祭の批評
18:園子音が震災コミットなさってた
6:クリエイティブシーンをつく・・・
場をつくる
15:映画の人
61:クラウドファンディングに
アンプ型のSV補助
14:ヴィジュアル集める人
3:仙台
60:交通媒体にバーター
29:ファッションやってもらう
11:ベルリンネタ
28:コンテンツを3倍にしたい
10:なぜ仙台なのかの問い詰め記事
27:sv

25:絵
24:移動媒体
23:広告
39:映画より映画際
22:映画監督による映画祭の批評
38:SV側から外部として論じるべき
37:新しいインデックスデザイン
20:編集企画
36:ライターも
35:編集者がボトルネック
3:GTD
27:leave for pknk more
26:bringable
25:x61 160,000
23:code
22:sing alone
19:code outside
9:code
18:t61 170000
8:sex
7:sing
6:dance
15:why the mac was not suitable to me? did I wrote programms? no . the keyboard...
if it is like x31, do i write it?
if I meated + other things? do i  do it?
5:water
14:ideas
4:meat
13:better laptop like 17 mac?
3:pknk
12:better pknk * 
11:pknk * meat * code * supernice interface
35:@wait i will get 1,000,000 permonth anyway. so buy it
10:capture
33:thebase 1500000 per month
31:places
29:codes
30:bcak easier
3:better
20:roiのルールたち
14:doubleとroiキットとhint
34:essential
11:考
28:他の目的も兼ねる
31:何かを可視化すると？
8:仕組み化
25:cfsafe
24:速度
23:効率
5:runtime/builttime/problem nodefieldの分離
17:他の project たちから見てみる。
4:どうすれば
35:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
                                     Runtime 
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
52:場所マップ（43っぽいの）とかバブルマップ？

61:習慣一覧の取得
51:priorityの高い習慣の実施の時に頭に
例のやつのうちこれやってるよ
が光る感じ
60:バブルマップを表示
アップデートされた習慣をバブルマップで
68:クール、な手法も記憶する
77:習慣一覧の取得
roiを自動取得
バブルマップを表示
アップデートされた習慣をバブルマップで
場所マップ（43っぽいの）とかバブルマップ？

priorityの高い習慣の実施の時に頭に
例のやつのうちこれやってるよ
が光る感じ
charene
clear the actions of buffer
purchase
クール、な手法も記憶する
自動的にroi順にbackpackの43ページに
resource nodes to backpack
アップデートされた習慣をpriority値順のdisplay
主導で43を作成
43をremind
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
                                     Runtime 
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#wait nodepad resources to backpack

67:自動的にroi順にbackpackの43ページに
58:roiを自動取得
66:resource nodes to backpack
65:主導で43を作成
74:clear the actions of buffer
64:43をremind
46:charene
63:#wait nodepad resources to backpack
36:アップデートされた習慣をpriority値順のdisplay
72:purchase
1:better_apc
6:web3
5:ci
4:test
69:@done 売れた瞬間に梱包する？
49:@wait 人にやってもらう
59:cfsafe
29:@wait 一回にひとつの習慣をやるようにする
68:考
18:@wait とにかく写真
8:better
58:他の目的も兼ねる
28:@cycle
97:@wait コスメが売れてからだな
67:どうすれば
17:@wait 習慣と工程
57:何かを可視化すると？
27:@wait 自分犬扱い
96:@wait とみこに出品と発送？
66:doubleとroiキットとhint
16:@wait 使い倒すまでは綺麗に使う
86:まとめて出品。
出品時に梱包。
56:効率化
26:@wait レンズ
ライト
背景
キメ
反射
色を含める
構図
確度
モデルを含める
広告を真似る
65:runtime/builttime/problem nodefieldの分離
15:@wait パッケージとか維持する。
55:cf
64:他の project たちから見てみる。
54:宛名を良くする
93:@wait 取りに来てもらう？
63:仕組み化
92:@wait 配送業者への引渡し
62:roiのルールたち
61:効率
31:遵守(reminderメッセージに従う）
71:@wait 専門にする？
51:auction
60:速度
30:@wait 1010100
40:@done 一回あたりの作業をミニマムにする
3:coz all can have common better-(kaizen) actions,
we can have a templatatyve and automatic way for them. and 
nodefield operasions and frameworks can be 
used. how?
6:AC
78:list incomes and expenses
77:list current
3:費用
2:売上
1:CF
74:CF201308
67:自炊
71:warez2.5
64:500 * 30 = 1.5
70:コーヒー
49:さらにリスクを30％
63:20 -> 240じゃんね
39:学費
38:1
37:通信費
29:場所6.5（一日2200円）
34:消耗品1
40:2.5
19:投資決める。
33:コミュニケーション3
25:食事2
18:クライアント決める
32:pknk1.25
17:自分=blue決める
25万
31:デート4
16:内部予算決める
30:交通費1万
21:24
20:実行（run）決める
9:定率外注
12:ヤフオク
33:longer battery life
29:探す
49:charge from hyperjuice
and airline charger
48:do not wire mac and mobile
50:
20:cables in fixed location 
9:less step user interface
47:can charge 4
18:finding ables
8:higher power
46:2 usb airline charger
17:afford cables
7:quicker cables
45:light weight
16:@wait discard bad cables
15:avoid cables dirty
43:google more about hyper juice 2 alternative
42:hyper juice 2 
13:shorter cables
12:better cable handling
39:cable organizer
40:bigger mobile battery
38:@shuwa mark OK cables
10:dock
35:定置管理
34:less time for charge
57:@shuwa find and try it
56:@mece 12w
55:@wait bind cables from juice
54:@mece good android cables
53:@mece good cables
52:@done compare 
light weight or 
less changes
51:@amazon more official cables
49:@wait charge from hyperjuice
and airline charger
48:@mece do not wire mac and mobile
20:@shuwa cables in fixed location 
9:@mece less step user interface
47:@mece can charge 4
18:@mece finding ables
8:@wait higher power
46:@mece 2 usb airline charger
17:@wait afford cables
16:@wait discard bad cables
15:@mece avoid cables dirty
42:@done hyper juice 2 
13:@mece shorter cables
12:@mece better cable handling
39:@mece cable organizer
38:@shuwa mark OK cables
10:@done dock
35:@mece 定置管理
34:@mece less time for charge
7:アレするか。
6:critialじゃないものか、色の安全な方に移動していく。
5:criticalをマークする
4:* RUNTIME ***
3:夜、寝てない（朝の開始時間がズレる）ので時間をずらし続けている。
8:roiにもとづいて集中する。
21:高い手
20:回数と金額
9:考
8:どうすれば
19:SC。4時かん
7:runtime/builttime分離
18:良い人
6:better
17:高速な検討
5:better
16:仕組み
4:仕組み
15:一回する
3:better_dc
14:JingedCheckList
13:モデリング
12:DirectResponsible
11:ランタイムをモデリング
10:仕組み化
24:dc
23:dddd
22:DDDD
146:tell them for it....
58:@done どうすれば睡眠を止める
145:detecting secounds attendances
143:@mece looks
169:@mece S
141:less dddd
140:@tao deai
166:days that i do not do
165:@wait tao better diyk
164:repeat
50:ACの時間
189:BUILDTIMES
74:@done どうすればそういうことできる外
162:1. very busy days.
2 out of tokyo.
3. fes, lives, movies.
4. literature, code, ideas, writings.
5. sings and music creations
188:@wait tao
73:@done どうすれば外での閲覧環境
161:@wait feel like to have g not diy. why?
187:@mece S caba
160:@done tao 1-2am
186:Meet girls likly to have S 
185:@tao deai x te
184:get contacts
95:どうすれば効率
183:decision value
182:data management cyclic way 
93:バッファ
92: planned way
212:some shops do not have the 
211:list up
too late to survery
too eary to survey
too late cos no gs
too busy
friday night
after payments
210:gware
118:部屋
139:deai
25:高級な手を時間短く
138:madoka.
24: high ones.
23:手
135:@done not to be seen
21:@mece どうすれば安く
134:diy
20:@mece how to meetup more
133:point valid
159:@wait deai, unp, eyebeam, kaminote,
shinbashi place,
158:survey method
157:@wait pick some.
130:@tao some more high te 
156:@wait tao
154:@tao 30mins for 4 times
152:secound place?
178:schedule diy and put points on that.
151:@wait check in front of the place.
177:try some those art
150:@done night time?
176:can't see the new comers and schedules untill the day come?
209:avoid bad timings
175:planning in advance?
60:@done どうすれば外泊
208:20%
199:try auto update the new comer pages for some mise
207:omakase
198:jsoning the point value
206:day time
171:do it only with directs 
after found with handies
196:new commer update
204:reservation
170:@mece S cheap
203:reservation 3 times further
192:@tao 30 mins trials for high te FindingMeetups
200:auto detection of attendance
191:@Air google about that
190:- tao 30min things 4 times cheapest tes
- tao 30min things 4 times higher tes.
- tao 30min things 4 times cheapest tes.
19:どうすれば直接
16:@mece スケール10/m*12*3=360回。*2時間=1万=720万
15:決定時間短縮
103:時間短く
129:@cycle @secretary @Noding @iPhone day time
39:@mece どうすればchances
127:hit rate
12:superg
123:@mece superasbn=75000
溜めるやつ。1
高級な手を短く4回。11000*4=44000
高級なKでアロマを時間短く4  18000*4=72000
自分で 0 * 2 = 0
----------------------------------------------------
130000＋
前
28000*8=192000+50000+50000=292000
と30時間の決定時間＝210000円
147:less mistake cost
33:@mece 良い人
59:@done どうすればストッパー
1:better_direction
5:workflow
4:director ratio
10:胃
7:better_eat
5:better_sleeping(eat_early->better_sleeping)
4:歯
19:[[背]]筋
18:あつ過ぎるもの、冷たいもの、アイス避ける
17:薬
16:コーヒーは緩いやつ。
23:@wait 食欲
15:辛いものはだめ
14:牛乳オッケー
13:ココアあり
20:カイロ
12:昇華に悪いものは避ける
11:よくよく噛む
1:better_fukide
5:富美子問題
4:interruption
7:vnc

6:insync instalation

4:data on linux / mac server
3:better_gapp

9:mycloud
8:install vnc 
8:3分以内のものと、期限がついているもの
19:1.そのコンテクストの三分以内のものは常に最優先
2.コンテクスト

7:三分以内のものリストをやる
18:生活衛生要因からの末端？は優先？
6:3分以内のものはすぐにやる？x
17:生活衛生要因系を優先はそう。
16:コンテクストにあるものはそれだけども
15:依存関係の末端
3:priority
14:contextbase
13:重要性と緊急性
12:どうすれば
28:まずlse（衛生要因）
次にroi.xlsに基づく＋時間割
LSEと、ROI上位10。
ビッグスケールと短期計画は7:3で。
27:43
26:scheduling
25:nodepad
24:[[prioritize]]
23:このダブルバインドを未然に防ぐ方法は？
22:期限が、三分以内のものの合計をそこなうケースがあるか？
21:効率
4:better
3:better_gyming
7:
10:setup the situation and runtime 
that makes everything done by tagging!
7:all the emails there
6:one inbox 
85:capture facebook to highrise
84:facebook
69:storytelling
3:better_highrise
83:メール仕分けは、

68:key tags and supporting tags
82:highrise,gmail,rtm
67:tag viewer trigger
81:all send the emails to highrise.
66:shared tags
80:input tagging to output tagging
65:10% of work
64:auto solution
62:purchase social
48:tagged person
61:better workflow
47:tagged places
60:read time 
46:tagged people
45:tagged messages with autolinks
and with the addresses and person
44:connection
43:same tag
42:pattern matching
41:suggestion
40:finding good places
26:auto importer
25:connecting addresses and 
account to highrise contract
24:tagging people
22:gmail label
21:自動リンク
79:graph
78:wwwwwh
77:better_nea
76:contacts
75:namecards
74:writing must be almost a tagging
73:incomming taggs to reply taggs
59:50%  impressinve
72:reply tagging
71:choise on the tagged
57:50% elimination of reply ( storytelling and outlining )
70:editing
56:reply
55:gmail filter
54:matching people and issue
38:gmail?
37:now

51:address and people link
36:micro tagging
50:tagged messges 
35:tagged content
34:outlined
33:patterns
19:auto linking
32:outlining

18:auto tagging from contents
31:outlining
30:better messaging interfaces

15:purshase_social
14:contact 
13:15% of the life + 25% of the work
12:80% elimination of airfinding
9:tagging the flow messages
8:requests,
ideas,
node,
free form texts
3:roiの登録をエクセルに追加する？フォームから？できるかも。
5:検索に併せて帰る
4:ユーザーがもとめているものを届ける
3:二語検索にヒットする
9:元コンテンツから除外する
11:二語ページつくる？
8:コンテンツに併せて改良する
10:被リンクふやす
7:連呼の度合いを調製する
6:すっぴんのページ作ってみる
9:余裕を。バッファーが働きやすいので効率化する。
8:@done 一回分にするx10回分にする
7:箱を適切にする
6:kit
5:kitも準備が必要？
一ヶ月分か１０日分は用意しておくべき。
4:better_習慣化
3:better_kit
79:serial
78:@done コップとる
77:@done 袋を開いて被せて倒す
76:@done 絵の通りにやる
59:袋とかの工程を形成するものを何とかしておく？
75:@done ザザザとやる。
58:@wait buffer
57:一回kit by kit試す
39:@sun 一回かたす
73:nutritionの分解
72:nutritionが特に大変かも
55:@wait buffer達くる
71:統合
54:@done 入れやすい
36:それぞれに他に入れたいものあるか。トリガーは出来そう
19:創作
53:@done でかい皿突っ込んで
35:購入履歴と消耗品から習慣がないかのレビューを定期的にする
52:@done 入れやすい
34:modeling
51:@wait 100均でバッファー？
33:創作
16:@wait 因果検証
50:@wait 消費されないようにする？
32:忘却
15:@wait ちっちゃい基本kitを作っておく
31:tagging
14:@done サイズに合わせる
30:
13:@done 小分けにする
12:物をレビューして安くしていく
89:marc
88:budget so 1st mar.
69:分解
86:how to make kits at home.<= prepare things i have sun <- budget? but they are anyways consumed so it is ok. within the income time. so for next month i should buy buffering to make next month . on the custom .... and looking at kit, get one from amazon. how many ? 
68:効率化
85:have better wayt to integrate the serial to the wakeup direct kit
67:バッファー
84:try
66:キット作成時間短縮
49:@done バックが消費される？
83:for serial part maybe you can buy other things.
65:kitのbagの回収、歯ブラシの回収
82:nutrition kit more random and balance?
47:主にnightkitとpknkkit
81:他の用意。箱に。
80:他をバックに入れていく
29:log
62:倍買わなくてはいけないものはそうする
45:kits at home
28:format
61:作って持ってくということかな。
44:7日で14のwakeupkit
60:@pknk 神谷町の百均
43:@sun ビニールで試してみる
26:logging
42:@wait バックがでかい。ない。どうする？
25:@wait いろんなパック
41:@wait 最大のキット(nightkit）に入れる
24:@done 移動に耐える？
40:@wait 大きいキットに入れる
23:@done 密封する
22:@done 汚れに耐える
21:@done 乾燥に耐える
7:banana
ham
coffebeans

10:pknk 2 times
6:affording breakfast kits
3:better_morning
9:pknk much
8:sleep early
11:pknk much foods
81:@scheduled try once
80:water in bedside
39:leave early?
69:7. clothes: no resource.
38:pknked early
99:run near and do things
68:6. organise of daily plan.
37:eliminate time
98:less space and money
67:@mece 5. go out and back time read: timing resource.
66:@done 4. face wash etc: water and bathes:
95:@wait try out anyways.
64:@mece 2. foods？: resource: budget+timing?
94:sun?
63:1. ddddプランしてる: resource: private + timing.
32:@done 1. ddddプランしてる: resource: private + timing.
2. ご飯？: resource: budget+timing?
3. mail checking. timing?
4. face wash etc: water and bathes:
5. go out and back time read: timing resource.
6. organise of daily plan.
7. clothes: no resource.
8. staffs to bring:
9. ひげ
10. making taking outfit

62:@mece outkit
31:morning
92:@scheduled try outkit onigiri?
prvious day.
61:make a few patterns.
91:@scheduled try monster
19:afford leave early kit
18:AC
79:@mece get up 9.
78:@mece get up to be able
to have emails in 10.
16:習慣化
77:essentials
46:timings
15:ながらという
14:外出
75:weekly preperation
44:ui
74:前日準備
43:@secretary 仕組み化
42:bring some cook and pack it?
41:eat at home.
71:9. bards
40:eliminate money
70:8. staffs to bring:
28:18時から断食
58:eat
27:リセッター
88:starbuck juban
starbucks tsutaya
gyms
freshness
mac
somewhere elese
apc
87:make options
86:transitions
24:髪
85:gym or cafe
54:@mece mail checks
23:泡洗顔持ってくる
84: weekly_preperation
53:@wait timings
22:リマインダー
83:remove transition time
21:morningkit造る
82:@done put near
20:外おにぎり
94:target(objective Noun)
93:custom
92:affordable
91:plentinss
90:前日準備
8:@done 仕組み化
7:@done 考
6:@done どうすれば
5:@done runtime/builttime分離
4:@done better
119:@mece so ,,, weekly thing tao
49:@done nodepadでの一元化
118:kit
25:@Air ３個買ってみよう
48:@done 仕組み
117:buffer
24:買ってみよう
47:@done 一回する
116:outsource
69:@mece ritz!
138:@tao yogalop?
23:やっぱ５００なの？
46:@done JingedCheckList
115:elimination-time
45:@done DirectResponsible
114:elimination-budget
136:@cycle http://www.7meal.jp/
44:@done モデリング
66:@mece 調達自動化
135:@mece buffer
89:afford_trigger
43:@done ランタイムをモデリング
65:#ff0000 essentials
88:Buffer = buffer
42:ノード自動変換されそうな単語にする。
一般的な名詞化をする
133:caffines?
87:@mece kit
41:@done 分解的に数える。
人間なら手が二つ。
指が5個。
->modeling
86:reminder
40:どのコンテクスト？
62:@mece 水
85:タイミング
84:remind
83:afford
17:ヨーグルトどうすんの
39:@done 類似は？
108:@mece Buffer
38:@done 質問の仕方を変える
37:@done 現状、をかく
106:@trial timer for main room warmer
129:@done yogart
36:@done バッファー、自動化、分解、現状、網羅、逆、
128:@mece @wait @secretary auto-amazon
35:@done 中心の移動
127:automate
34:runtimeの順序替えしてみる
103:@wait trial
126:outsource to tomiko?
for yogart?
afetr th
33:@done 目的、選択肢要素、選択肢セット
102:@mece sox and hokkairo and clothes?
78:@wait daily timer
?
32:@done 創造的な考え
55:elimination
77:forget about that?
31:@mece パンなどフレッシュでないとダメなもの以外は
勝っておく
100:@cycle more in 前日準備
54:@done 安く
123:@secretary 
  1. [ ]紙コップでオーツ試す。買う。ー＞auto meal
76:@wait automating it.
122:@secretary 
  1. [ ]のむヨーグルト買って試す。ー＞のみくち＋カフェロップで行けるか試す
97:@mece less in the morning
51:@done better_考える
73:@wait warm place.
142:@secretary tao estaron moka
96:乾燥
50:@done 忘却
72:@wait cold
141:find buffrables
95:clean
5:warmup
4:unmotivative tasks
3:better_motivation
9:資料をアフォードする。
8:projectbase　の
7:projectbase motvation
10:サイトのurlをアフォードする。
6:kickup
1:better_next
5:@wait breakdown死んでる
4:@wait subcontexting
19:have the "project" tag or some special
format data structure?
17:mark and display nodes?
29:make the project entry automatically
16:finding project from node
28:make the "projects" sheet entry ( row ) 
39:mece method
15:fit to the structures of 
project == returning some benefitical roi.
27:node connection should express the master 
relation ships of the causual relation ships
38:adapt the rules
14:fill the numbers
5:how to connect 2 nodes in 2 nodefields
26:automatically
37:give the rules and conventions
to the handles of relationships
13:roi caliculation
49:semi automatically
25:by hand
36:less time to node
24:so the contepts like 
"context", and especially the case where not expressing 
"causual relationshiops". the field -> node is.
35:@mece better_noding
23:set "casual rate" 
34:node field is node?
10:some nodes ( project ) is connected to the cf0411 specifially.
essential tasks.
roi values are very high.
other nodes which are belonging to the elimination
 but not belonging not effective to cf0411, 
have less rois.
46:make the project entry automatically from nodefile = nodefield
22:options
33:do not allow the "top nodes are all connected to the nodefield node"
45:so, we gonna have clouddb thing for nodepad?
21:which field is the suitable to handle those 
"bi-project fulfilling nodes?"
32:roi should cailulated micro,
 in smaller ( less than 2 hours ) 
tasks.
44:from length
31:avoid uplications of too many nodes
43:should be a node field.
30:avoid duplications.
42:the most of the fields are closed ot the "context"?
54:roi values from causal rate and relationships
53:find what part could be by hand
40:@mece handle priority
52:fill by code
51:the data caliculations 
lost. 
50:fill node.csv with current node
5:ampxsvやるべきっぽい
4:作業をしてみてもらう
3:better_ocr
1:better_os
6:得意不得意に合わせる
3:クラウドに。
地方とか学生とかバイト。
7:デザイン、メール、
プロジェクトごと
2:雇用の問題
10:一回する
7:ランタイムをモデリング
6:仕組み化
5:考
4:どうすれば
3:runtime/builttime分離
2:better
1:better_party
15:
14:参加者書く
13:テンプレと檄文と写真と場所のURL
12:atnd
9:JingedCheckList
11:仕組み
8:モデリング
11:less time in gym
10:ジム
9:
8:雨ふってても無理
7:寒すぎても無理
6:あついと無理
5:less walk time
4:better_pknk
14:gtd in gym
13:storytellernest in daikannyama
12:completedBefore:today and completedAfter: 8/5
11:learning
10:自分でやる？
9:rubyで8時間くらいっぽい。
8:どうすればapiか
7:どうすればrmilkか
6:どうすれば計算するシステム
5:どうすれば短期間
4:どうすればたまったら報酬の因果関係を脳のレベルで
3:どうすればbetter_point

12:completedBefore:today and completedAfter: 8/5
11:learning
10:自分でやる？
9:rubyで8時間くらいっぽい。
8:どうすればapiか
7:どうすればrmilkか
6:どうすれば計算するシステム
5:どうすれば短期間
4:どうすればたまったら報酬の因果関係を脳のレベルで
3:どうすればbetter_point
7:コーヒーを飲んでから
6:慣れる
5:昼食後睡眠、
午後4時、
夜4.5時間睡眠、
9時にも。
コーヒーはpowernapの時のみに飲む
4:やってみる
3:better_powernap
19:@wait http://page3.auctions.yahoo.co.jp/jp/auction/c389769973#aboutshippingandhandling
18:@wait 飛行機で使うやつ
17:@wait 胃の問題
15:@wait 胃が悪いなりにナップを食後
14:@wait 食後眠い
13:nap準備
20:@sun @home 一回食後ナップを飛行機のぴろーで試す
12:クリーンになる
11:何度もやる。
8:どうすればちゃんとできるか。練れてる感じしないが。。。
6:リターンが出てくるまでを短期化できないか
5:レバレッジきかないか
4:cfsafeにしてoutsourceする方法ないか
3:project
8:ツール
7:日数増やしてみる
6:10日連続の10分の定着
5:1010100
4:reminder
3:better_reminder
59:データ移動

58:better_kit
49:nodefield tag 例えば、chart
48:バッチアップデート
56:実行
47:@wait mvn exec
55:候補
46:@done そういうトリガーサービス
19:カスタムでも造る
54:習慣とついたものを自動的にreminderにするべきっぽい
27:mail
45:cron
18:また１００日後にもする
63:clouddbにitemを入れる
36:データ
53:自動でreminderに登録する、かtodoから？
26:メール送信
44:clouddb
17:10日のリマインドする
35:lifehack storyteller project
52:nodepadのcycleと、
terminals(todoistなどのtodo）
51:reminderの素材
15:@wait とりあえず手でやるか
60:メールで来ているものを一回ＤＢに入れる
41:quicker_storyteller
32:quicker andromda with osx
31:quicker storyteller
21:トリガー
30:MailAboutパターン
19:nutritions + less cost in digestion
9:get up easier and earlier
8:eye masks
ear thing
16:go to bed early
7:deeper_sleep
6:@wait eat_early
14:@done better_eat
5:stopper on sleep
13:notification and point
4:better_sleeping
25:@wait supercoffee
12:quiting early ? and not too early
10:make cycle
22:@done how to drink espress
58:@wait asbn
68:walk much early in the day
20:@done chew lots;500pt
56:@wait 一発あたりの効き目
55:@wait 胃の調子
78:早さ
54:@wait コーヒー控える
65:A. ３日人とあわなくていい日を作る→カフェイン錠剤で24時間起きてる＊2
B. asbnする→カフェイン錠剤で起きる。
C. pknkoutする。
77:食いまくる事？昼間？早く？
53:@done 加湿
89:12時ごろとか前日に計画
88:計画的にやる
87:10時半には入る
62:@done 歯
74:pknkout
50:@done 鼻炎
86:12時ごろ寝る
73:total workout
85:@wait 出会い
72:make you tired
84:@wait 疲労
71:@wait カフェイン錠剤
83:@wait 射精二回
81:ジムでワークアウトだと思う
90:@secretary workout asbn
194:concentration
145:* RUNTIME
144:better_sleeping_week
143:better_sleeping_week
142:カフェイン錠剤は用意
141:@done モーニングキット用意する
140:ご褒美ポイントとその日はやる。
179:体温
16:go to bed early
129:less sleep hours
128:因果関係抜く
13:notification and point
127:舞ちゃん出社に合わせる。
なんどか９時に起きるの出来た
12:quiting early ? and not too early
10:make cycle
158:太陽
90:@done workout asbn
156:大量に食べる
155:espresso
154:morningkit
153:decafe days
105:powernapのシャットアウト素晴らしいと。
151:セロトニン
150:10%
101:3時間を2回のpowernap試す
100:3時間の深い睡眠がボトルネックかも
25:supercoffee
139:疲労
138:太陽
71:カフェイン錠剤
137:目薬で起きる
136:10日続ける
183:随意
134:@done 10日コーヒーを抜く
133:集中させてサイクルを作る
58:@done asbn
180:水
132:陽の光？
201:2 shock for the last day
131:13%
56:一発あたりの効き目
200:eat
130:better speed
54:普段はコーヒー控える
166:30分ずつ。。。
116:@done totalout
163:レスタミンコーワ
9:get up easier and earlier
162:@done レスタミン
8:eye masks
ear thing
161:@done 入眠
7:deeper_sleep
6:2shock
84:@done 疲労
149:２日に一回はteかesteかd
5:stopper on sleep
83:@done 射二回
197:@done totalout
148:一日ずつ15分ずつ速くする
147:9時に起きる
81:@done ジムでワークアウトだと思う
1:better_sleeping_week
11:RUN
8:BSW_execution_days
7:BSW_preperation_days
5:時間
4:エリサちょっと減らしてもらう
3:better_storyteller
29:projectbaseで
あることによる
contextのmece性をカバー
＋強いコンテクストを守る
32:run
28:nextのうち、
十分優先順位の高い条件にあるものの
contectとprojectのバランス
大体毎日その日の優先プロジェクトを上げる
＋時間配分で、コンテクストイベントにする
31:nodepadのtopの一番したをtodayにつなげて、
todayにそいつら取る
27:一回todayにくっつける
30:project level
26:生活衛生要因系をRUNの処理で済ます？
25:これはeat and pknkでやる
24:タスク優先度チェック
22:Today Projects
18:space_context_schedule
20:タスクのレベルでは？
17:today's projectから選ぶ
15:優先順位が決まっている。。。
14:コンテクスト移動の必要をチェック
13:icalにする
9:ランタイムにする
12:context_scheduleにする
8:nodepadがベターか
11:nextに準拠していたい
7:絡み合っているのに対応する
10:時間レベルである。
4:today
3:better_today
35:そういうツールとかアプリじゃないと無理っぽい。ハードコンテクストたちは見る。
34:current projectについて、
ハードコンテクストとされてるやつを探していく
33:Hard Contextで優先的なものがプロジェクトにあるか探す
1:better_transcription
6:@scheduled bring that person
5:@wait dictionaries
4:@wait speake into
21:別の洗顔も実験
10:閾値設定
20:ヤフオク？
9:購入手段 of each buffer
8:スパン of buffer決める。
19:Buffer
7:scaleを計算する
365 * 2 * 15 min
18:AAC
6:Buffer
17:AC
5:automate
16:purchace
4:効率
3:better_wash
14:無印とかの泡で出るやつ[[買う]]
13:頻度。一回当たりの時間は短くできる
12:num of purchace of buffer
11:Add to BuefferList
perfect whip
lightbolves
travelingpad paper
brash
nice clothes
emerald mountain

9:better_ながら
8:@wait 粒度は小さくする
99:@done そこでやることをMECEに
79:道具ググる
98:バイブちゃんと洗顔をやってみる
78:一回のつけおきの時間
5:ながらコンテクストでできるものは？
細かいもの。
一個のノード
97:量
77:一日3回洗顔化
4:nagaraリストの更新
96:質
39:髪つけおく
58:ながらのフィルターは一個にしておく
76:ゴールノード
3:ながら
38:髪こする60
75:runtime
94:温度
37:顔洗う
74:ランタイム
17:モデリング
93:ひねる。温度高め。
36:髪洗う
55:洗ってる間つけおく
73:モデリング
92:浴槽にタオル入れる
35:体洗う
54:放置＋ざっとふく＋10分
72:音？
15:@wait ランタイムをモデリング
91:ドボンのまま顔
34:横断的改善とMECE
53:浴槽ドボンと頭皮ゴシゴシ　15秒
71:習慣をついでに
14:仕組み化
90:顔→髪→体に？
52:より深く
13:@wait 考
51:予洗
12:@wait どうすれば
31:道具で済むものは道具で解決
50:浴槽ドボン10秒
30:@done コンテキストベース
10:@wait better
89:毛の処理と鼻毛
69:量
68:質
87:部屋きてサーキュレーターで
49:洗い流す
86:ジェル付ける
29:ドライヤー
66:お湯入れに行く10秒＋タオルだしとく
85:コンタクト入れる
47:どのコンテクストからか一個だけ選ぶがそのフィルターを特定する＋シリアライズして高速化する。
84:洗い流す
27:ジェル
46:自分の部屋乾燥させとく
83:つけおく
26:化粧水
45:すごいドライアーと凄い乾燥した部屋
63:monogawa
82:洗顔
25:ふく
44:大量石鹸＋大量頭洗う。60秒
81:ブラシ増やす
24:かわかす
43:大量石鹸＋大量頭洗う
23:泡だてを高速にするといい・
といっても10秒とかで全部とか。
42:泡
22:要するに泡立てるということ。
41:体つけおく
21:リソースがロックされるのを避ける
40:体のわきと頭こする
20:仕組み
9:better_ながら
8:粒度は小さくする
5:ながらコンテクストでできるものは？
細かいもの。
一個のノード
89:毛の処理と鼻毛
69:量
3:ながら
87:部屋きてサーキュレーターで
68:質
86:ジェル付ける
85:コンタクト入れる
49:洗い流す
66:お湯入れに行く10秒＋タオルだしとく
84:洗い流す
83:つけおく
29:ドライヤー
47:どのコンテクストからか一個だけ選ぶがそのフィルターを特定する＋シリアライズして高速化する。
82:洗顔
46:自分の部屋乾燥させとく
63:monogawa
81:ブラシ増やす
27:ジェル
45:すごいドライアーと凄い乾燥した部屋
26:化粧水
44:大量石鹸＋大量頭洗う。60秒
25:ふく
43:大量石鹸＋大量頭洗う
24:かわかす
42:泡
23:泡だてを高速にするといい・
といっても10秒とかで全部とか。
41:体つけおく
22:要するに泡立てるということ。
40:体のわきと頭こする
21:リソースがロックされるのを避ける
20:仕組み
99:@done そこでやることをMECEに
98:バイブちゃんと洗顔をやってみる
79:道具ググる
97:量
78:一回のつけおきの時間
96:質
77:一日3回洗顔化
76:ゴールノード
94:温度
58:ながらのフィルターは一個にしておく
75:runtime
93:ひねる。温度高め。
39:髪つけおく
74:ランタイム
92:浴槽にタオル入れる
38:髪こする60
73:モデリング
91:ドボンのまま顔
37:顔洗う
55:洗ってる間つけおく
72:音？
90:顔→髪→体に？
36:髪洗う
54:放置＋ざっとふく＋10分
71:習慣をついでに
17:モデリング
35:体洗う
53:浴槽ドボンと頭皮ゴシゴシ　15秒
34:横断的改善とMECE
52:より深く
15:@wait ランタイムをモデリング
51:予洗
14:仕組み化
50:浴槽ドボン10秒
13:@wait 考
31:道具で済むものは道具で解決
12:@wait どうすれば
30:@done コンテキストベース
10:@wait better
1:better_依頼
4:everything in its right place
14:@done clear
13:@done excel
12:@done googledrive
9:@done queue
11:@done list造る
8:@done 同時に二つ以上やらない
10:@done [[データ構造]]の一つ。
先に入ったものが先からでる。列。
お店とかの待ち行列をイメージするといい。
メッセージングに近い。例：メール。
メールサーバの処理順序を参照するといいかも。

7:better_reminder
4:better_kit
3:better_習慣化
20:バッチアップデート
15:@done http://drive.google.com/#
21:顧客にとっての価値
39:バジェット
20:可動的将来
38:移動中のautonoding
37:移動中にautonodingを
36:autonoding
35:autonoding
32:book2node
31:noding
30:nodes
48:@done FN doneで
46:@Noding ←メールで「m」が使われているので他のを考える@Noding
45:@done ←mixiタグを作る

44:@done ←mixiを示す
43:@done 分割をnodeでうまく表す
40:mmの内容をndに
59:合成か間引きだけでなく、合成かつ間引きをその数が半以上であるというクリエ
イティブ・メソッド。

9:連想する。語で。
56:類推でモデリング
19:問題解決とは、最上級の可能的将来（上極来果）をこのままではやがてくる結果（正面来果）に押し下げる「将来への妨げ」を解消し、正面来果を変えて上極来果を実現することにある
55:分割の用意化か自動化か分割の分割
18:アイデアマラソンのルールのひとつは「アイデアは人に話せ」。

7:roiシートをアフォードする
54:分割
17:ブレイクスルー思考法
http://www.osaka-gu.ac.jp/php/nakagawa/TRIZ/jpapers/2003Papers/BallManual0302/BallManual030301.htm
6:目的検索する
16:mece
5:ブレインストーミング
15:ありがとう
4:要素だけでも網羅する
51:nodepadでの一元化
14:アイデア系としてキーワードにためてるやつをnodepadからdiggって。とかタグからとか反固有名詞系をtumblrあからdiggって。
3:better_考
13:検索する
12:pknked
11:印象の強い初回*毎日1度*7回＋3ヶ月に一度
10:連想曲線
29:nodeの量
28:中心の移動
63:思考コピー
27:問題を引き起こしている要因
62:「この人は！」という人の本を、できれば「出版された順番に全部読む
26:なぜだ」を５回繰り返せ』
25:一点突破
24:集団のことなら、現場
23:6w 1h
22:ベター >> best
5:服が大事　X　服の収納作業の効率が、ベットの下だということで、低い。
4:部屋片付け
8:床広くする
3:better_部屋片付け
69:外出中保湿
49:@cycle　寝る前の加湿
59:起床中の予防
68:外出中殺菌
78:@Noding 寝間着？
48:@done 睡眠中の保湿
18:better_sleeping

58:睡眠中の保温
28:@cycle 加湿器＋トリクリーン
67:外出中
77:衛生的加温
47:睡眠中
27:@wait 湿度コントロールに意識コストはかけたくない
66:部屋
76:@done 部屋の湿度
75:@done 部屋の温度
64:@done 栄養
34:@wait Bufferする必要は？
効果測定してから。
14:@done ROI評価。風邪引かない、をどのくらい因果するか。
84:@cycle @secretary 加湿器とクーラーの清掃
63:殺菌
73:@done 睡眠中の殺菌
13:@done 空気清浄機@部屋？
3:better_風邪
62:保湿
72:@cycle 厚着する服装
12:クーラーの衛生
22:@wait 衛生的な加湿器の調査
＋空気清浄機
加湿器に
掃除と除菌と
http://www.big-shot.co.jp/triclean/index_triclean.html
61:保温
31:@cycle 鼻スプレーをafford
71:@cycle 厚着して寝る
11:@wait 衛生的な加湿？
81:冬でもカイロとマスクをBuffer
21:@done 15,800
60:メソッド
30:@done 衛生な部屋の空気
70:外出中保温
14:調理方法
29:@wait 胃が痛くないとき
32:
13:@wait 食材調達
28:コーヒーの質？
31:勇気
27:アペタイト
30:@cycle ガストロノーム
10:@wait 食事place
4:@wait 食えるとこ開拓
3:better_食事
18:虫歯治す
35:定期購入
14:調理方法
32:
13:@wait 食材調達
31:勇気
30:@cycle ガストロノーム
10:@wait 食事place
4:@wait 食えるとこ開拓
3:better_食事
39:サラダ、野菜、ビタミン剤、などを定期購入
38:ワークフローに
29:@wait 胃が痛くないとき
37:作業時間短縮

28:コーヒーの質？
36:定期
18:虫歯治す
27:アペタイト
5:43
4:キャッシュ管理をもっときつくする。
購入についてはもっと厳しく取り締まる？
3:betterac
16:@runtimenode of ....とファイルレベルコンテクストで。神的には？
25:handwriting capturing is  a must
15:全部キャプチャーするなｒらいらないかも？
キャプチャー語に、コンテクストごとの作業にいく。
この内容。
9:RuntimeNodeは必要そう。
13:RuntimeNodeがかけちゃってて、追加する場合に対応。
7:nodepadのファイルを指定してたいとうこと（ファイル指定）かも
22:コンテクストは、手に入るときということなのでは。
あとついでに、全部の未処理のそのコンテクストを、ということなら？
12:RuntimeNodesOfRunimeNodeFieldでいい
21:RuntimeNodeに書いてあったら全部だから、・・・
11:RuntimeNodeで網羅して、
網羅したRuntimeNodeOf....の全ノードについて@doneになっていないといけない。
5: @storytellerとかっていうのはあんまりよくない？
20:ノードにするときに@RuntimeNodeOf...とかけばいい？
3:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
                                     Runtime 
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
19:ファイルの指定が難しい
28:crudの追加？
18:ひとつのロディアにに買いといて、自分で、ランタイムノードに。
9:another phone: -5000 * 1 + 2h * me = -11000
11:mac + network
8:more nice girls 
10:can use de-kiss again
7:don't get stacked on dddd: 3h * me * 7 = 70000
6:dddd: -(3h * me + 32000 ) = -280000
5:reserver ddd in advance
37:cheaper dddd
40:RuntimeNodeOfbetterdddd
19:pick up some
18:have direct communication * ask for cheap
35:betterdddd = better dddd
15:purchase studio for alone
44:@done search later
17:hair styles
70:melancoly
43:elimination
16:@done ipad修理いつするか判断
42:#990000 0.2%/h LINE ESSENTIALS
41:reading workflow
14:reminders
40:tv
13:ゆうきこすと
12:体
11:tamorize
10:自転車の車庫電話する。
57:maityan
56:morning
29:Psd2Html xz management
82:判断を高速化する
55:next
54:GTD and task_management
53: follow 1000 more for trial? gakusei.
26:sales
52:@wait better_betters
25:management.run
51:移動距離が小さい程良いっぽい
24:Motivation
23:shopper
22:Dxmassage
21:dddd
20:モペット型電動自転車購入判定 @amazon 
69:better_washing
67:チャリとか電動自転車？移動媒体？
39:user interface for routines. 5%/30h mabe. 2%/10h
38:ページ分割がバグってる
64:読み返す方法。リマインダー？
37:曲がっている
63:better_issue_driven
36:クラウドをクラウドな仕事につなぐ。
営業やつなぎもクラウドに。
62:roiの登録をエクセルに追加する？フォームから？できるかも。
60:@done %/5hとかのroiを計算を単純化する
33:pages
9:0.25% baggage
32:バーター
8:point not working 1 hours
31:fruits space
30:貯金の本は課金の本として読み直す。 
coz store it to readlater. Do readlater day.
79:宅配受取
4:GTD
76:FOOD POINT
75:mba11
48:looks and fashion
74:morningkit
73:CF.simulations
46:better roi with WP
18:How to keep the gorvages that takes place. 
Mainly the paper boxes.
2:統計解析です。
モデリングと似てることに気づいた。
型をつくってほしいのだ。
タグを使いつつ型にするのだ。
6:#keyword [[folksonomy]]
5:share nodepad
3:bible folksonomy
7:can use traffics for 4 days? 1000
6:wait by they are shipped?
5:buy and sell
4:battery
9:better_bicycle
8:yeah,,,,, yes. if i can do tipness and *muse
1:bicycle
1:big_data
6:bigwhy
8:自分にふさわしい場所を探す
3:1.また母に恩返しがしたい。
　重度の障害者である父は死に際して多額の医療費がかかる可能性が
　一般的な人間の何百倍も高い可能性があり、これを僕一人で負担する必要がある。
2.僕が金を持つ＝投資家＝事業家になったら世界を幸せにする変化に貢献できる。
　この循環に参加したい。
7:bigwhyを応援することで見つける
5:キーボードショートカット
4:keyboard
3:blindtraining
3:blindtraining
14:sql dupmpfile
13:war
12:server url
9:deploy
11:配備
8:http://www.enclosing.net/blog/
の吐き出したxhtmlをテンプレにする。
10:ター
7:pyramid
5:テンプレート
4:テクストデータ
3:blog作る
17:xmlから取り出す？
15:TestedSystem
1:bluebalance
10:checkblue flag -> do blue todos
4:blue flag checklist
3:blueflag
13:all inbox kinds are done
9:all the projects has sufficient prople,
or scheduled
management.xls
8:total red remains less than 20.
17:cfvalid
16:5:1
4:blue flag checklist
3:blueflag
20:
9:all the projects has sufficient prople,
or scheduled
management.xls
8:total red remains less than 20.
10:checkblue flag -> do blue todos
4:== 体
3:body
4:== 体
3:body
5:paper
4:本
3:book
7:購入コストを抑える
6:共有する
5:オフショアする
4:本にマークする
3:book2node
9:ノードと因果関係を月刊一〇〇作成しないとその翌月のアクセス権を与えないとかにする
8:インセンティブを与える
6:evernote
5:tumblr
4:delicious
3:bookmark
4:目的を見つける
3:タイアップ
4:ボトルネック
3:bottleneck
2:brails
4:#keyword [[exedist]]
1:break
4:breaking
7:someone who can do html css work for general pages?
6:common issues happening, then this should be done in,,,,
5:wordpress common css issues?
4:speed
8:should we do the css designs to fit the strucure>
1:break_css
1:break_kit
4:see it at a glance
14:autolinking
12:auto tagging with word base
9:better_breakdown
11:just writing.......
8:next
10:auto breakdown
7:auto tagging
6:nodepad content
5:
autolinking
4:auto
3:breakdown
15:auto
15:
6:html/css
5:mvc
4:loose coupling
12:methods
11:roles
1:breaking
10:pathes
9:classes
8:pages
7:server and client
2:英語でサービスをする。
ということが小さなサービスをより多くの人に提供するということだから、
和英的なものの提供が必要になる。
ブリッジングは一応和英をしているが、その展開回数はPOPでない。
（Powers Of Powers)でない。
Internet Service for Small things.
2:英語でサービスをする。
ということが小さなサービスをより多くの人に提供するということだから、
和英的なものの提供が必要になる。
ブリッジングは一応和英をしているが、その展開回数はPOPでない。
（Powers Of Powers)でない。
Internet Service for Small things.
5:bridge
5:pm
4:bridge
3:bridgepm
10:レスタミン
カフェイン錠剤は用意
6:morningkit_premeration
5:morningkit + sun + water + udetate
caffine + 目薬で起きる
4:totalout
9:30分ずつ。。。
1:BSW_execution_days
1:BSW_preperation_days
5:10 days morningkit preperation
4:decafe
8:レスタミン
カフェイン錠剤は用意
1:bttf
5:@wait デザインカンプ待ち
4:デザインから組む
3:アプのガワ作る
2:iphone 別冊
4:AC
3:budget
7:roi
6:スパン of buffer決める。
5:購入手段 of each buffer
26:パーフェクトホイップ
ジェル
インナーを2ヶ月に1回
靴下
ブラシ
ガム
カクセンとるやつ
パンツを2ヶ月に一回
服を一ヶ月に一回
11:渋谷とかの薬局
23:閾値設定
10:ポロ
20:============================= 
         Bulidtime
=============================
18:Add to BuefferList
perfect whip
lightbolves
travelingpad paper
brash
nice clothes
emerald mountain

9:routine of buffers
パーフェクトホイップの購入手段

17:Buffer
7:num of purchace of buffer
6:スパン of buffer決める。
5:購入手段 of each buffer
26:パーフェクトホイップ
ジェル
インナーを2ヶ月に1回
靴下
ブラシ
ガム
カクセンとるやつ
パンツを2ヶ月に一回
服を一ヶ月に一回4万（2ヶ月なら8万）
肉＋朝を効率化->ビーフジャーキー
栄養ドリンク
（朝を効率化）→ボトルで水3本
（朝を効率化）→せんべいふた袋
みみせん
鼻スプレー
顔ペーパー
11:渋谷とかの薬局
23:閾値設定
10:ポロ
20:============================= 
         Bulidtime
=============================
18:Add to BuefferList
perfect whip
lightbolves
travelingpad paper
brash
nice clothes
emerald mountain

9:routine of buffers
パーフェクトホイップの購入手段

17:Buffer
7:num of purchace of buffer
9:routine of buffers
パーフェクトホイップの購入手段

30:cycle 買う
11:渋谷とかの薬局
26:パーフェクトホイップ
ジェル
コンタクト
バンドエイド
靴下
ブラシ
インナーを2ヶ月に1回
ガム
カクセンとるやつ
パンツを2ヶ月に一回
服を一ヶ月に一回4万（2ヶ月なら8万）
みみせん
鼻スプレー
顔ペーパー
カロリーメート
渋谷で靴
コンタクト
リステリン
歯ブラシ
歯磨き粉
ハム
バナナ
ミルク
トイレットペーパーとティッシュペーパー
皿洗いの戦時亜
電球
夏でもカイロとマスク
10:ポロ
7:num of purchace of buffer
6:スパン of buffer決める。
5:購入手段 of each buffer
23:閾値設定
18:Add to BuefferList
perfect whip
lightbolves
travelingpad paper
brash
nice clothes
emerald mountain

17:Buffer
20:============================= 
         Bulidtime
=============================
7:三井と楽天とジャパンネットと
6:銀行どうするか決める
5:@Air https://identify.yahoo.co.jp/
4:@wait 郵送
3:本人確認
8:出品テンプレート
2:buy
5:購入
7:mahanub
6:adisan
5:bilal
4:sara
3:C#
8:palash
76:チェックと起きに、変更こけてる
78:■Myホーム：リストビュー
 ・Myチェック
デフォルトは全部チェック？
 ・EJsチェック
    - ★未実装
 ・今週/まもなく
    - ★日付スコープで切り分け
2:■EJプロフィール
 ・★全体的に
 ・ログイン
    - ★ログインエラー・完了時の遷移
 ・HotEJs
    - ★XML連携
バリデーションエラー系
 ・スペース選択
     - ★スペース登録後にイベントの入力済み内容がリセットされるajax
EJ登録情報変更がバグ
画面名 サーブレット JSP CSS 関連バグというかタスクというか 
TOP △ △ △ cal.ulz.nu/バグトラック/2,cal.ulz.nu/バグトラック/3,cal.ulz.nu/バグトラック/4,cal.ulz.nu/バグトラック/5,cal.ulz.nu/バグトラック/8,cal.ulz.nu/バグトラック/9 
キーワード検索結果 △    
日付検索結果 △    
イベント登録 △ ○  cal.ulz.nu/バグトラック/13,cal.ulz.nu/バグトラック/14 
イベント詳細 ○ ○   
イベント編集 △   cal.ulz.nu/バグトラック/18 
スペース詳細 △ △  cal.ulz.nu/バグトラック/16 
スペース編集 △ △  cal.ulz.nu/バグトラック/17 
EJプロフィール △    
イベントチェック △   cal.ulz.nu/バグトラック/15 
EJオキニ △    
ログイン/新規EJ登録 ○   cal.ulz.nu/バグトラック/19 
Myホーム-カレンダービュー △    
Myホーム-リストビュー △    
EJプロフィール確認 △    
EJプロフィール編集 △    
15:ブラシ
27:buffer 化粧水そのものの用意
5:camp
13:buffer パーフェクトホイップ
12:buyパーフェクトクリーム
10:モイスチャー
9: クレンジング
18:buffer 化粧水そのものの用意
17:化粧水
8:アクティベイト
16:軽く、リンパにむけてというやつ
17:============================= 
         Runtime
=============================
24:camp2xhtml
16:============================= 
         Bulidtime
=============================
20:牧野工房
http://www.makinokobo.com/
3:outsource indianteam
26:offshore
25:design
1:campfire
4:ピッチ
3:ビデオ
7:video
2:入家さんに連絡
4:invite
3:candidates
19:service
18:capture
17:input stream
16:cloudpaste?
15:real
14:app
9:assigner
13:photo
25:ifttt
24:inbox
7:email post in
11:clip.to
6:bookmarklet
10:tumblr
5:rtm
21:click.to
4:evernote
20:desktop clipar
3:write
2:computer
1:carrybag
17:creating hibernate mapping and column
16:
15:change the hibernate mapping
14:wp_post
8:add choise.wp_item_fk
13:db model needed
7:set nullablle to choise.item_fk
12:choise.wp_post_fk
6:avoiding fk reference error
11:link to wp_post
20:change the model?doing the 
10:image display of product.
4:Product.id?
3:cart id target
19:link to the
18:java hibernate mapping to the 
17:@wait mahabub
16:@wait stony
15:@wait aditya
9:CF
14:試験コストを欠けられないので？
新規案件には欠けられなさ？
8:新しい会社
7:渡す人
22:取り戻せるレベル＝５０％を委ねる
12:レビュー
6:渡す
21:
5:@wait 檄文
20:backup
4:@wait 檄文書く
3:cash_flow_bonus
19:@Air check the list and pick 
18:@wait good developers
4:http://localhost/superstorytellers/Nouns/CashEvents.xls
3:CashEvents
16:教育
15:利益率
9:ルートの可視化
14:社名
8:就職にあぶれた
13:ブランディング
7:レイヤーを完成させる
22:ブランド
6:インストラクター
21:実績
11:人の流入
5:nri
20:ブランドある出口の維持
4:研修
3:ccnp
19:教育（コミュニケーション能力）の、判定の質
1:CF
6:AC
9:定率外注
3:費用
2:売上
83:test
79:better_cf
12:ヤフオク
9:定率外注
78:list incomes and expenses
77:list current
80:plans to throught
6:AC
74:CF201308
3:費用
2:売上
1:CF
3:費用
89:auction maybe
94:@done point money conversaion is the lowest?
2:売上
88:0.5 per day to live 
93:@done 0.5 for now to live.
1:CF
87:10 for mom
92:if not need to talk with him
86:out
91:speed?
90:60 to give it back
79:better_cf
83:@mece @Onthego @eclipse @time renew
78:list incomes and expenses
77:list current
80:plans to throught
74:CF201308
12:ヤフオク
104:pick that node first.
103:execute from urgetnts
102:go back and pick some quick.
101:10000 for for the cafe thing
9:定率外注
100:10000 for this week
98:niw maybe
6:AC
97:maybe selling somethings quick
96:other works can be stopped?
95:@done 2 days?
83:renew
79:better_cf
12:ヤフオク
9:定率外注
78:list incomes and expenses
77:list current
80:plans to throught
6:AC
74:CF201308
3:費用
2:売上
1:CF
6:タグとかで分ける。
5:分ける
4:シュミレーションで分ける
3:simulation
143:warehouse
179:@connected warehouse.auctions
141:@wait 1d売る？
176:６月になったら椅子を捨てる
76:@delegated auction.cosme
61:椅子
75:@wait @delegated auction.servers
95:@connected web3.ftv.conditions
145:@wait ftv次第
19:findjob
18:eliminate
17:auctions
8:know when is the incomes
29:2
7:livable
28:50
39:@done APCがいうことリスト。タスクたち。
evernote:///view/2337826/s21/10513018-296a-4ec8-8f68-214863542446/10513018-296a-4ec8-8f68-214863542446/
27:other needed
38:@scheduled @Air @iPhone  check occasionary
14:igp evangel
26:now
37:@wait wait jcb updated
13:astamuse.contract
4:to live, costs 6
36:@wait amatenしてみて1万しかできなかった。どうしてか。
12:next month
24:how to know when the payment is from igp
11:get paid from apc
23:know when the payment from astamuse will come
22:ask him to wait by its ends
58:fix air. at 11.
33:have 56  = 62 for conversion
21:borrow back miyoshi
57:@wait get money sufficient and incomes sufficient
68:the battery.......
56:find the most highest roi thing
31:4
67:incomes
55:@wait how to pay it back
30:auction
66:fscan hosting
54:@wait anyway it will make ,,,50... but if it does not more than 50, then we need more money.
53:@wait how to deal with it?
52:@home Sheet on ihoine to sellable.
63:yeah just do it...
62:have time?
61:what about that one?
60:make bigger income for sure
7:出費
10:@done カードだな
15:返事考える
4:courseware確度を高める
9:場所と舞ちゃんと。3万くらい
8:@done フジロック
11:@wait stamp
4:cfrun
3:cf201304
7:job
37:* RUNTIME
51:ストレス無くelimination出来るモードで。
5:evernoteに
4:主張を決める
3:courseware
27:8月30日確定させる
26:incomes
25:elimination
31:plate
23:コンサルフィーは払ってもらう
30:7くらいで済ます
21:@Noding 親に言う
9:digitiminimi
8:apc
16:@wait どうすれば必要ならいくらか売る
25:superflat
14:どうすれば今後
8:@wait 定率外注
13:どうすれば情報をアップデート？
7:@wait 売上
22:borrow
6:@wait 費用
21:apcの精算
11:@wait どうすればまあとにかく10日突破できるか。
5:@wait ヤフオク
20:ftvの精算
10:@wait now 20
+8 28 eva 
+40 68 ftv
+25 93 apc
+20 113 borrow 
+10 123 mai
-10 123
85
 123-85 = 4
4:@wait AC
3:@wait CF
19:@wait できる限りborrowの被害を小さくする
18:ftv 40
apc 25
borrow 30を成立させる。
6:apc
1:CF201311
5:anyways, 50
4:f
6:conditions.apc
5:findjob
11:ftv.contract
10:shima 40
14:@Air jcb max
13:borrow max
9:borrow as company
8:sell somethings
10:changing to long term rebo
7:get paid for 35 before from them?
6:get paid in 1/31 from ftv
5:borrow for 6 days
4:50-70
1:cf201402
16:@air p2p loaning site views
15:google about monetizatino ( not amazon thing ) 
33:@done list
29:@done 42 * 0.03 = 1.2
28:@done estimate how much it could be better?
30:@done for the further things ( if we use something like 400, then it goes 12, huge. and it is done. so it should be done like in 
24:@done seems better and check they know what is the 
card owner. 
21:cf update
20:apc for some
9:borrow as company
8:sell somethings for 15 days.
16:@wait p2p loaning site views
6:ftv.contract
15:@done google about monetizatino ( not amazon thing ) 
5:borrow for 6 days
14:@Air jcb max
4:50-70
42:go sofmap
13:borrow max
41:go kitamura
39:were to sell it?
40:google 10 min and if not found then just gosofmap and kitamura
1:cf201402
10:@Air changing to long term rebo
37:@shuwa pack 
36:lens, ertc
35:sell things that is not needed for the days.
34:prioritize
5:pay back -80
4:borrow 120
1:cf201403
9:-80
11:maybe a little bit of selling
8:release 50 to long payment
10:-27 to home
7:paid 40 apc
6:rishi -10
5:http://cl.ly/3e0I2h263c24
4:
3:tag
35:cf
17:ローン比率決める
16:クライアント案件の外注比率決める
25:@pad cfrunのスクショをpadで見る http://cl.ly/0e0j2B0J3s0p !1 #pad #.workflow #.cfrun #.cf
14:それがだいじょうぶなら、CFのダウンピークの売上への10%をオフショア雇用を埋める
8:投資決める
32:CF
13:売上埋める
12:外注固定被埋める
6:自分 x 投資いいか
21:納品遅れを更新する
5:25に
20:支払い遅れを更新する。
4:自分 x 実行に合っているかレビュー
＋今月上げる必要あるか。
29:@Air managementシートアップデート !1 #Air #.workflow #.routine #.cfrun #.cf #management
28:eliminateチェックする
27:プロジェクト埋める。OK?
1:CGM
3:ログイン
2:インセンティブ
4:gggg
3:chances
6:chances
11:superasbn
10:ジム
2:channelbase
10:log and visiting
4:[[すごいD]]
3:channelbase
7:gggg
6:
5:channelbase
2:channnel
12:応援してくれる人が多い
9:健康
11:情報
8:motivation
10:億万長者と人脈
7:効率
6:複利
5:長期計画
4:すごいROI
3:charene
18:応援する人が多い
15:感情
5:charging
15:power bag
14:waiting 1 hour
13:better RUNTIME
12:CURRENT RUNTIME
11:connect 5 times
8:waiting 2 hours
7:finding usb port 5 times
6:finding the cables
5 times
12:CURRENT RUNTIME
11:connect 5 times
8:waiting 2 hours
7:finding usb port 5 times
6:finding the cables
5 times
17:power bag 2
5:charging
16:connect power bag
14:waiting 1 hour
13:better RUNTIME
5:分解

3:chart
13:イラストレーター
9:チャートパターン
12:語に
11:選択
10:手書き
6:ストーリー

5:分解

3:chart
13:イラストレーター
9:チャートパターン
12:語に
11:選択
10:手書き
6:ストーリー

11:sufficient man power in management sheet
4:basecamp template
8:meta process that responsible is doing checklist
3:checklist
7:Responsible
69:仕組み
89:cable
29:速度
49:中心の移動
68:一回する
8:sourcetree
88:connect device to test
28:cfsafe
48:runtimeの順序替えしてみる
67:JingedCheckList
7:view_set
87:ci
27:他の目的も兼ねる
47:目的、選択肢要素、選択肢セット
66:DirectResponsible
86:feedback tickets
26:何かを可視化すると？
46:創造的な考え
65:モデリング
85:video capture 
25:better
45:break
64:ランタイムをモデリング
84:build deploy
24:check_java
44:どうして？
63:choose some from node
83:ticket
23:check php
43:なにを？
62:速さ
82:commit and push. 
and write ticket on comment
42:どこで？
61:早さ
21:deploy
41:目的探す
60:効率
80:REALISTIC RUNTIME
20:specs
40:何が問題になってる？
79:AS IS RUNTIME
19:code to test
39:今は？
59:ボトルネック
78:build
18:@wait check_ios
38:essential
58:パラレル
77:device to check
37:考
57:バッファ
36:どうすれば
56:ノード自動変換されそうな単語にする。
一般的な名詞化をする
95:ide
35:doubleとroiキットとhint
55:分解的に数える。
人間なら手が二つ。
指が5個。
->modeling
14:basecamp 
94:check_viewset
34:runtime/builttime/problem nodefieldの分離
54:どのコンテクスト？
73:daily_check
13:test flight
93:video + skitch
33:他の project たちから見てみる。
53:類似は？
92:basecamp
32:仕組み化
52:質問の仕方を変える
91:feedback tickets
31:roiのルールたち
51:現状、をかく
70:check_android
90:ask to put on flight
30:効率
50:バッファー、自動化、分解、現状、網羅、逆、
1:check_android
5:eclipse
4:sourcetree
1:check_ios
6:connect iphone
5:sourcetree
4:xcode
7:test flight
1:check_java
1:check_viewset
6:better ui
5:
4:check viewset is viewset
6:checkpad
5:rmilk
4:checklist
3:（basecamp)
10:format
6:checkpad
5:rmilk
4:checklist
3:（basecamp)
9:todolist
1:chew
4:point
6:コンテクスト
5:山内くん
4:人
3:che借金
7:どうやってやるのかとか
7:@mece stomuche
6:@mece keep haing medicine
5:@scheduled doctor?
4:@mece fix
9:@schedule eat and take it
8:@mece stomuch medicine and 
1:@mece chinchin
4:List
3:Choise
1:ci
4:jenkins x github
4:rumba
54:collected equipments
53:organize things
52:decide location
1:clean
51:spaces
39:goverage organize
50:hung hung 
38:externalizable packet
36:bringing out
34:** RUNTIME
33:@done one big opened gorvage inbox
87:@done training
32:@done big opened
86:@done execute organize one by one
30:@done move things
19:less budget
84:@Air google outsourcable things
18:gripable?
83:outsource?
17:easy to bring
82:hang
14:bring it outside
67:put components on float on the 
higher location
66:@done better organize
64:boxes
10:@done thowing in
63:findings
62:things in its right place
60:no clutter
48:#222222
1 / week
1 h
46:buffered mixed garbage bags
45:thowing-in
44:#222222
2 / week.
0.5 hours.
43:#222222
on happen
42:nothing on floor
41:floating staffs collection
94:定置管理
40:flow
93:find the best boxes
28:gc
92:double
27:the time to do routines
91:@done what is the best user interface 
for organizations.
lifted. on the table.
no up and down from floar.
← table...
26:@done 定置管理
90:boxes
79:@wait light level
78:@wait bottle neck
24:hang
77:@wait keep pathes
23:@done move yourself
22:@done nothiong_on_floar
21:less space
20:less time
73:@done user interface for organize
71:organize
59:@secretary @done one gc
8:next
58:7 hours / month
7:15%
57:shall i hire someone for gc organize?
56:@done 5%
55:@done no clutter
14:to dos and to do list
13:ol
12:send mails
9:transcription
8:report
10:hidden requests
7:tasks
6:solutions
5:breakdown
4:request
1:client
15:translation
6:morinaga
5:tac
4:reboot
3:agapps
2:ag
8:gas
1:clients
7:hogehoge
5:open cloth + textile depot
9:verore like cloths
4:bag = cloth * hottikiss
8:buy veroare
3:
cloth
6:public service
5:storyteller
9:[[sync]] and user interface
4:own samba
3:cloud
6:public service
5:storyteller
4:own samba
3:cloud
13:multiple platform
9:[[sync]] and user interface
12:sync
27:tagging
26:batch operation
24:@wait google drive side?
23:read
47:download clouddb from github
22:sync
46:run mvn for clouddb project
20:ORM
19:join operation
43:com.toukubo.clouddb.List class
18:rdb
8:write
42:write dependency to clouddb in pom
17:@done make first line as column attribute
6:@done googledrive 2 csv
5:data access
14:cron
4:sync
3:clouddb
36:sql to csv or excel
35:if you have project and item,
then item.getProject().getName()
 should be returning name.
getProject should be returning the 
object of the proper id, not id.
33:BUILDTIME
32:RUNTIME
31:csv2xls
30:mycloud
7:insync account
10:google apps data
6:install insync in linux
5:解凍
4:cd /
tar czvf ./opt.tar.gz ./opt
3:data transfer
8:google apps user
7:beautiful
10:pojo model class from gdrive
6:csvimporter
3:cloudwp
9:nouns
8:teller 
codegen
3:
3:clutter
3:self build cms
10:storytellerphp
6:andromda
5:eclipsetemplate
4:webpattern
3:codegen
2:eclipsetemplateやandromdaやrubyやreifやgrailsがある。
webpatternにまで成長できればすごいかも。
9:generaltest
4:修正
8:mismatchtest
3:coding
6:手数料
5:管理
4:銀行
3:coniscf
7:bank
4:風邪
3:cold
4:【ショップＵＲＬ】　　　http://motherhousetest.shop-pro.jp
【管理者ページ】　　　　http://admin.shop-pro.jp
【ログインID】　　　　　motherhousetest
【パスワード】　　　　　aiueo0000
3:アカウントを作成

1:com.toukubo.clouddb.List_class
5:make the new project to use the clouddb
4:write dependency to clouddb in pom
1:communication
6:contrast
5:make positive reasons to go
4:make them feel confirtable
5:demerits both what happends
4:merit
3:compare
9:purpose nodes and thread
12:エクセルに
11:セット作成。
10:点数付け
6:make two node
1:comparison
4:比較
6:KPI variables and compare
4:comparison
3:competetion
4:競争
3:competition
6:see nodes
5:point out of nodes 
4:outsourcing
3:delete other nodes
9:
2:compitance
64:1394 ハードディスクレコーダーっぽいやつで音もとれるようなやつ　+　それなりのノート
63:現行のマシンをサーバに
62:dsの代替
61:メインマシンにサーバ入れる
60:#waits 到着待ち
117:input
86:ふっとmidi購入
現状のmidiコン
midiキーボード中古で
midiシーケンサとタップとついてるようなものでmidiアウトするもの
ロジックでアルペジエータ書く
16:二つ
85:ロジックでオートメーションとあるぺじエー他
15:演奏
84:midiキー
14:録音
113:storyteller
82:タップ、xy、
12:デスクトップサーチなどを利用してもスペックの落ちないもの
81:ふぇーだー的操作、
11:凄いのが一つ
8:スタジオでの音楽
110:macbookを購入
10:いえでの音楽
7:javaでの開発
138:でかいモニター
6:dellの３０インチ
39:DSかそれっぽいもの
5:合計cpu量
38:プログラマブルエフェクター
4:大体の作業はcpuよりモニタときーぼーどで事足りる
135:マックが使える30インチ？
3:nodepad
134:モニター+マック
2:凄いモニタ
133:軽くありたい
33:外部での作業
159:ssd
58:dsの回収
156:補強
57:サーバ
155:視点も選ぶ
154:書く
55:バンドでサーバが共有できたらいい。
153:見なおす
152:選ぶ
151:検討する
52:XP入れ
150:集める
51:OSイラ直し
79:足
109:メインpcでdell　+mac book
78:同時操作可能なデバイス数
108:t43
77:プログラマブルサンプラー
107:x60
106:eclipse+モチベーション
105:google
74:midiインタイフェイス
104:eclipse
73:powercore
103:移動中などにヒント。
101:ヒント
99:オトログ
129:pknk
98:ビデオ
97:いいカメラ
26:資本集中
95:投資対効果の高いデザイン
25:淘汰的に
124:家とかで
93:メインPCでdell
123:移動中にもinput
23:macbook
122:u50
22:mac book pro
21:アップル！
90:インタフェイスの数が一定以上必要？
149:Runtime
148:集める
49:シンプルネス
147:集める
48:モニター
146:[[集]]めて[[編]]む
145:選択
46:より良い音での録音
144:集収
143:画像
142:編集
141:写真で補強
40:マルチ
14:経理。10人（1社)
13:menus
9:進捗管理
11:ヘルプ
8:帳票出力
10:ユーザー管理
7:帳票作成
6:ワークフロー実行
5:ワークフロー設定
4:初期設定
3:comzeus
15:ワークフロー定義選択コード
データ分類
基本通過
連結範囲
フロー
年度

1:concentrate
4:集中
1:conditioning.apc
1:conditions.apc
1:conflict
4:compare
6:オフラインの作業
5:アドレス長
4:紹介してもらう人を探す
3:通知自体が[[通電]]
2:友人たちをひきつれて
1:connecting_dots_by_friends
1:connecting_dots_by_people
6:googledektoppableにする
5:make nodes * line the 半固有名詞  to 名詞
4:1010100somthing
3:connectingdots
5:google the url and blog and mutual friend
4:highrise
3:contact
5:voicememo
4:nodepad
3:context
4:space_context_schedue
3:context_schedule
201:@done Find GoalNode of contextbase programing
200:@done [[Choise]] From Verb
116:Update hasenoughnodesOfContext from NodesOfAContext.
142:効率
113:@done RSSExport verb　+rssmailer
141:@done Buffer
111:@done rss
348:ノードパッドでのタグか、リンク
319:DesktopShow ANode
347:簡易化する
318:DesktopMuseigenShow NodeOfAContext
346:いずれにしろコンテクスト名入力は必要
317:@done DesktopMuseigenShow NodeOfAContext
345:ファイル名だと、ロディアのブロック数必要
316:@done DesktopShow ANode
344:@wait sonyのu-50とか
98:秘書がPost Node
315:@done サーバーに、ノードをもらって、内容を印刷するだけの、プログラム
343:@wait ipod touch
39:at pknk
歩行中に、@moveなものと、
なるべく多くのnodeを閲覧する。というのもnodingだから。
あと、@pknkって書いてあるやつの閲覧
314:@done 両方やろう
67:at net
342:@wait キラキラハンドヘルド
38:@done Post Context
313:NodeAsParentsOfParentlinksOfANode
66:@done でかい無制限ビュー　NodesWithContext
341:紙とデジタル試す
95:美しく
65:@wait [[美しい]]シート
340:時間当たりの発見量
93:自動的に
35:@done 書く？よりよいほうほう
310:@wait what you saw instead
what you expected to see
steps to repeat

92:@wait 自動リンクで割り当てる
34:@done ロディア表紙にコンテクストをわかるように示す。
91:それぞれのコンテクストにおいて網羅的に閲覧できる
225:高橋
251:mail rss entrys
199:@done nodepad
250:@done RssExportwする
139:@cycle @eclipse キーワードと指し先投入
138:効率
109:@done notification
108:@done 通知
107:@done 15たまったらセッツクようにする
193:@done スパン of buffer決める。
4:@wait [[ubiquitouscapture]]ユビキタスにキャプチャーする
103:バッファー
3:contextbase
339:@out 秋葉
338:@done ハンドヘルド実験
309:@eclipse Run the mock on eclipse
337:storytellerbase
308:@wait steps to repeat
336:紙にして声で読みかも
307:@wait what you expected to see
335:@done ハンドヘルドいいかも
89:@done バッファ
306:@wait what you saw instead
334:secretaryじゃなくて自動か
88:@done コンテクストの一覧
pknk
cafe
home
xxxxxxxxxxxxxxxxxx
net
mail
basecamp
nodepad
runtimenoding
tests picking
AD
magicdraw
eclipse
(files)
illustrator
photoshop
phone
sss
333:キャプチャーコスト抑える
87:Display NodesOfAContext OrderedByY
332:実験ベース
28:spray Nodes of Rhodia Of A Context to 定置ワンシート OF The Context
27:@wait context rhodiaにメモ
84:@done Post ContextCausalRelation
26:@done 文字列で反応するようにする
（文字列で反応して、右クリックすればそのコンテクストがつくようにする）
249:@wait rssmailerをそろそろignatiusからもらう
83:@done コンテクストの依存関係を持つ
82:@done IncrementalGrep
24:@wait コンテクストの割り当ては容易にしたい。
23:Goal:コンテクストにあるとき、
そのコンテクストでできる作業を網羅的に閲覧している
246:@done 閾値設定
22:容易に
244:@done スパン of buffer決める。
242:@done Buffer
240:@done コンテクストキューのデキューをバッファーする
329:@done Post System
326:@basecampとか、
@netとか
@phoneとかは外でもできるよね、
ということだから、これらの、外のがやりやすいやつについては、
外でやるようにアフォードしたい。
355:Whatとか、When（朝とか）、誰かに頼めるか、とか、Whereコンテクストとかアプリ詳細とか検索語とかも
79:@done Grepパターン
354:
324:@done ノードの閲覧
19:@wait 家でもキャプチャー
323:@wait カフェでの閲覧
18:@wait カフェでもキャプチャー
351:computer
322:@wait 印刷
17:@wait 歩行中もキャプチャー
321:@wait 携帯での閲覧？
298:@done コンテクストをつける好意と
320:pknkでの閲覧
297:@done parentsをとるのと、contextとついているのをとるのの比較
239:@done コンテクストキューのデキューを効率化する
73:@done RuntimeNoding
15:@done Greppable
296:@done NodeAsParentsOfParentlinksOfANode
238:@done 15日に一度50を印刷する
http://d.hatena.ne.jp/toukubo/design/を。
72:@done 忘れない？
71:@done 裏紙にデザインいれて印刷しておく
13:@done ワンシートにsprayglue it
70:パンクに
12:@done 一覧性
293:@sss rssmailer
235:でかい、プリント、Nodes Of AtOutContxt
11:============================= 
         Runtime
=============================
40:cafe
234:@done でかい、無制限プリント、Nodes
10:============================= 
         Bulidtime
=============================
232:@done RssExport HasenoughnodesContext
203:@done modeling
202:@done MagicDrawか紙かnodepad
9:そのコンテクストで、（current project)
ロックされたプロジェクト達のitems(current projects.items ) を優先する
11:脳のロードの問題はあるが、
contextでもprojectでも同じかも。
10:contextはプロフェッショナルみたいなもの。
例えばサーチ、作業、考える、とかを分けた方がいいか。
コンテクストはつけといていいが、、、
25:来てから帰るまで速い。
6:複数のcontextを持つ場合：プロジェクトにもとづいて全部。
あとはコンテクストにもとづいてやる。
5:projectbase
23:air見たいん時には一気にそのプロジェクトの作業だけやってしまうこともできるが
small enoughではないものはやりづらい。
4:contextbase
19:速度
3:contextbase
20:指数
15:todoにしていくことはやっておく。
コンテクスト獲得はやらない。
nodingとhow以外はやらない？
1:conversion
5:zapier
4:ifttt
17:レシピ
5:go marche and buy things
14:cf
1:cook
9:食材調達
8:autocycle
11:gorbaging
10:wash 
5:to be seen
4:workspace
1:cookco
9:transmision
11:cafes
8:go and back
10:good cycle
7:pknked
6:motivations
4:同じ
3:Copy
7:teller copy
4:the children and parents
vectors are storing only integers id
lost when copy and paste happens 
there happens mismatch between ids.

at add nc hash method
it creates create ncs from nc hash 
but this reassign the sereal nodes.
then, creates liknage.
but this is bringing set of old ids.
so mapping between this two

3:after repeating 3-5 time,s
it starts to say null pinters happen
7:勇気
6:courage
4:うちから銀座
うちからぽんぎ
霞ヶ関から銀座
恵比寿から渋谷
渋谷から恵比寿
3:cource
7:
3:kenschool
17:when we 
25:we are studiovoice.jp and studio voice magazine for 40 years
 most influencial culture magazine
that everybody ( in creative scene in Japan ) knows.
and I m head of it now. they have decided to give all the responsibility to 
a programmer who has the vision of publishing.

this is a confusing fact, but i m also doing this storyteller flamework and 
client work innovations. this two axis are running . publishing innovation ( that 
makes us publicly known and influencial ) and we have good clients,
and because we are the best team who has both the highest technology level
of Sillicon Valley , and creativity that is bigger than sellicon valley average top companies,
and influence and brands top of the world. so we are getting client jobs for this 
our new flamework and workstyle. 
15:when the pattern is used.
24:we are going to have 
about 3 project in next 3 month
at similar size,
and for sure we ask you for the 
direction / technical job if 
this project's common part goes well.
we usually do not
14:types
8:show the developers portfolio
23:by 1 time of use of patterns, for client job,
10$. this development used 7-10. 
we will have 20-30 more this year.
and this will continue for 3 years at least.
3 * 25 * 8 * 10 = 6000$ for 500$
there are possibility for 1000 more this year.
13:choose suitables
7:connect to sales people
6:getting work, sales,
21:for this, how much percentage of discount?
this 10%?
11:scale possibility and evidcence
5:his runtime
4:benefit him
3:fit the scaling part
19:he can use it for him
18:give them more jobs 
( by making this part better ) 
21:ask to kato san
20:twitter account test
8:画面遷移
19:confirmation and test
7:docs
18:template url 
17:twitter 
16:iphone
4:html
25:coding to put it 
2:web
24:hashtag
13:do i do this by handy made html or a programm?
1:covers
23:gotoassist
12:create a htmls 
22:ask to check
11:@wait he prepares the design
43:mock
3:craftclip
42:sss
41:全工程
40:testdata
29:better matching of people
28:CF
27:team
26:requirement of person
25:candidates
24:history
23:voice = meru
22:シリアルとパラレル。
シリアルにしたときのボトルネックを探す
21:
20:期限ごとに
http://localhost/templates/sctemplate.xlt
からやる。
59:FirstModeling
58:ER modeling
57:PostSentencesOnStoryteller
56:story
55:Sentences
54:ValidationRuleAssign
53:CommonTranslations
52:StorytellerCodesDownload
50:a test client that post data of json ? client 
39:test
38:テスト
37:@keyword [[debug]]
36:OutOfPatterning == coding
35:開発機への配備
34:xhtml2jsp
33:payment_site
32:cash out
31:revenue
30:share
19:sc金額を得る
18:outsource
17:@wait sql dupmpfile
16:TestedSystem
66:@Home
15:@wait war
65:@secretary table定義と自分で書いたメールから
14:@wait SyncToy
64:関係モデリング
13:@wait server url
63:Preperation @Home
12:投函
62:画面仕様
11:請求書
61:Nouns
10:見積りしたものから
60:Attrs
49:get the schemes
9:motivate
48:FIllModel
8:一日予約
47:@wait generaltest
7:sc
6:サービスイン。配置  = deploy
45:checkingtest
5:請求
44:tester
4:storyteller
91:3名のオフショアと窓口
90:payment_site
19:sc金額を得る
18:outsource
17:@wait sql dupmpfile
69:人
16:@wait TestedSystem
15:@wait war
14:@wait SyncToy
66:@Home
13:@wait server url
65:@secretary table定義と自分で書いたメールから
12:@wait 投函
64:@done 関係モデリング
11:@wait 請求書
63:@wait Preperation @Home
10:@wait 見積りしたものから
62:@done 画面仕様
61:@done Nouns
60:@done Attrs
39:@done test
9:motivate
38:@done テスト
8:一日予約
37:@keyword [[debug]]
7:sc
89:cash out
36:@wait OutOfPatterning == coding
6:@wait サービスイン。配置  = deploy
88:revenue
35:@wait 開発機への配備
5:@wait 請求
87:share
34:@done xhtml2jsp
4:@wait storyteller
86:better matching of people
33:payment_site
3:craftclip
85:CF
32:cash out
84:team
31:revenue
83:requirement of person
30:share
109:@Scheduled 時間を聞く
82:candidates
108:@wait 引継ぎ
81:history
80:voice = meru
105:どうすればいいか聞く
104:結合する
103:@wait 鍵もらう。
102:@done credential
59:@done FirstModeling
100:@done 実機へのアクセスが必要
58:@done ER modeling
57:@done PostSentencesOnStoryteller
56:@done story
55:@done Sentencesofcraftclip
54:@done ValidationRuleAssign
53:@done CommonTranslations
52:@done StorytellerCodesDownload
50:@done a test client that post data of json ? client 
29:better matching of people
28:CF
27:team
79:outsource
26:requirement of person
78:tag the todo
25:candidates
77:request
24:history
76:外注？
23:voice = meru
75:facebook
22:シリアルとパラレル。
シリアルにしたときのボトルネックを探す
74:person
21:
73:人
20:期限ごとに
http://localhost/templates/sctemplate.xlt
からやる。
72:@wait basically yes
71:@wait hire more ? 
70:追加になってる。
49:@done get the schemes
48:@done FIllModel
47:@wait generaltest
99:デプロイ
98:つつく
45:@done checkingtest
97:@wait 仕様を理解してみてもらう
44:@done tester
96:@wait 読んでみてもらう。
43:@done mock
95:@wait どのようなテストが行われたのかわからない。
42:@done sss
41:@done 全工程
40:@done testdata
91:3名のオフショアと窓口
90:payment_site
19:sc金額を得る
18:outsource
17:@wait sql dupmpfile
69:人
16:@wait TestedSystem
15:@wait war
14:@wait SyncToy
66:@Home
13:@wait server url
65:@secretary table定義と自分で書いたメールから
12:@wait 投函
64:@done 関係モデリング
11:@wait 請求書
63:@wait Preperation @Home
10:@wait 見積りしたものから
62:@done 画面仕様
61:@done Nouns
60:@done Attrs
39:@done test
9:motivate
38:@done テスト
8:一日予約
37:@keyword [[debug]]
7:sc
89:cash out
36:@wait OutOfPatterning == coding
6:@wait サービスイン。配置  = deploy
88:revenue
35:@wait 開発機への配備
5:@wait 請求
87:share
34:@done xhtml2jsp
4:@wait storyteller
86:better matching of people
33:payment_site
3:craftclip
85:CF
32:cash out
84:team
31:revenue
83:requirement of person
30:share
109:@Scheduled 時間を聞く
82:candidates
108:@wait 引継ぎ
81:history
80:voice = meru
105:どうすればいいか聞く
104:結合する
103:@wait 鍵もらう。
102:@done credential
59:@done FirstModeling
100:@done 実機へのアクセスが必要
58:@done ER modeling
57:@done PostSentencesOnStoryteller
56:@done story
55:@done Sentencesofcraftclip
54:@done ValidationRuleAssign
53:@done CommonTranslations
52:@done StorytellerCodesDownload
50:@done a test client that post data of json ? client 
29:better matching of people
28:CF
27:team
79:outsource
26:requirement of person
78:tag the todo
25:candidates
77:request
24:history
76:外注？
23:voice = meru
75:facebook
22:シリアルとパラレル。
シリアルにしたときのボトルネックを探す
74:person
21:
73:人
20:期限ごとに
http://localhost/templates/sctemplate.xlt
からやる。
72:@wait basically yes
71:@wait hire more ? 
70:追加になってる。
49:@done get the schemes
48:@done FIllModel
47:@wait generaltest
99:デプロイ
98:つつく
45:@done checkingtest
97:@wait 仕様を理解してみてもらう
44:@done tester
96:@wait 読んでみてもらう。
43:@done mock
95:@wait どのようなテストが行われたのかわからない。
42:@done sss
41:@done 全工程
40:@done testdata
4:cf
3:invoice
50:creww_video
18:スタートアップ？ビジョンを次々と成功させるよ。
16:crewとのシナジー
15:動画に競争
14:ユーザーの
29:サービスイン。配置  = deploy
13:crewwのユーザーはログインできる
28:請求
12:今がα。
6月1日がβ。
7月1日ビデオなどをリリースする。
27:creww video
11:ビデオは収益源
8:6月中旬下旬
26:storyteller
7:動画の機能を作っている。
7月1日にS-in
39:xhtml2jsp
6:
38:sql dupmpfile
5:crewwが上手く行くとよくて
23:crewwのCTO
37:TestedSystem
4:みんなうまくいくといい
22:アンプリファイアーとの？
36:war
3:creww
21:インキュベーション
35:SyncToy
20:キャピタルゲイン、マッチング、会社購入
34:server url
49:シリアルとパラレル。
シリアルにしたときのボトルネックを探す
33:@wait share_photo
48:
32:motivate
47:期限ごとに
http://localhost/templates/sctemplate.xlt
からやる。
46:sc金額を得る
30:sc
45:outsource
44:難所の特定
43:テスト
42:@keyword [[debug]]
41:[[OutOfPatterning]] == coding
40:開発機への配備
51:craftclip
1:critical_path
4:noding
7:terminal
119:もうちょい大人
8:パーティーに一個いく
129:CRM頻度
38:新規顧客
116:new meeting
104:ROI could not get bigger than,,, need something to invest than AC thing
127:    conclusion
      no need for strong relationships
      acquaintances is what matters
139:営業をしている人。商材を探している人
126:How did you get your job?
  56% personal connection
    17% contact often
    55% contact occasionally
    28% barely contact at all
102:誰かに相談する
138:three is basic
47:seo oriented
101:ビジネスマンの交流会に
137:meet how many
59:Connecting with Connectors
  become friendly with a super connector
two degrees away of thousands of people
34:       measures your network strength
      "weak ties"
        know different people
        frequent different places
        know different information
        Subtopic
  19% "traditional" job seeking
  10% applied directly with the employer
  1974 study by Mark Granovettter, mentioned in The Tipping Point
100:ROIはキープする
136:meet who
58:frequent different places
135:random pickup and talk to them
57:know different people
122:gather rss and others, and learn about him
44:プレゼン
56:know different information
31:invite friends to lunch
  today  not "someday"
79:Parties
133:listup them all in highrise and keep the info
78:mix people
54:信頼感・ラポール
65:自動化する。
89:CRM密度
76:月間新しい人に5人会う
130:tags of the person
140:紹介してもらう
97:meet > call > mail
60:common super connectors
  restaurateurs
  headhunters
  lobbyists
  fund raisers
  PR people
  politicians
  journalists
96:ビジネスにシフトする
72:mass e-mail about business
82:頻度を押さえる
15:have menu of others
14:give works(done)
13:looks nicer
34:@cycle training
12:make_him_succeeded
11:know him in advance
7:follow up
10:learn to touch
  very powerful
  shake hands
    maybe with two hands
  touch elbow
    not too intimate
    not too cold
30:meet > call
4:hacks for the meetin
28:never disappear
3:CRM密度
25:ask for good news.
23:make common enemy
22:search common friend
21:become a friend
42:google this person if he is new
20:gather these web base(condensable) todo list
41:how to follow up their info. just use fr and read all in sundays
40:use tools
19:automatically
18:t商流
39:know his newsed 
4:@done そういうトリガーサービス
3:cron
7:mvn exec
5:job posting
4:cloudsourcing
3:crowd
9:orientation template
8:firsttask
7:making the list
10:direct responsible
6:rate range
58:ボトルネック発見
57:ボトルネックを解消する
56:レベニューかディレクションか。
余剰ある人だけディレクション。
クリエイティブディレクション
148:hiring and preperation
127:Todos
147:send to client
126:Taskings
146:writing report
125:Requests
145:gather
144:finding the role
123:コンテクスト
143:assignment
164:answer
122:議事録
163:message to client
121:音声議事録ログ =DVinJP
141:RUNTIME
162:translations en->ja
120:会議
161:doubts to clients
160:Transcriptions
218:competition
259:@done how to indicates.
217:箱の間の移動の自動化
258:利益
279:standardize
257:@wait kaizen
278:hiring
215:@wait completion payment
277:時間計測
214:@wait 作業毎の自動化とインターフェイス
234:@wait cf safe
233:@wait 融資の仕組み
275:作業分割
212:遅延回避
232:@wait cf
253:hiring manager
211:@wait 在庫をなくす
252:競争の可視化
210:@wait newjit
251:札幌とかのランサーの英語
250:安いとこにいる人
138:breaking
159:DV
137:solutin dir 
136:tasks done
157:Japanese Requests
135:execution
156:Transcriptions in JP
134:negotiation
133:due date
132:Poking
153:Translation
208:オフショアで最適化
229:単純に
228:@wait 分割
269:ウェブ
227:たくさん雇用
247:slack
268:ストリーム
226:利益率
246:多めに雇用しておく
267:メッセージ
245:ボトルネック解消チームの用意
266:可視化
244:current_bottlenecks
265:見える化
243:@wait 金額交渉とか
264:計測可能にする
263:最適化
283:ライン・アンド・スタッフ
240:スケール
282:要素動作抽出
260:@done reminders.
281:レビュー
280:成功報酬
76:breakdown
75:have more time
74:parallel
49:template copiable?
48:wp + including?
72:simpler tasks
47:js
71:newjit
46:functions
70:simpler assignment
45:tell so
44:less time
43:make links
41:less code
40:@mece can use time untill deadline
15:get better people
14:more like backup and cut soon
13:communication cost
12:hire
11:concern for
 cost for hiring > the work
10:test
57:put assets dir in the document root?
* keep the files in,,,,
80:mvc
54:js include
29:no wordpress tags
in the html
53:php include
28:@mece quickest test cycle
52:other cmses
27:@mece can use browser
26:pureness of html
50:one folder
25:reusable html
22:kamo
sakamoto
yamanaka
xhtmlchop
21:list first, and know suffcieient or not
20:why not?
9:android and iphone
66:mustache
8:csser
65:local testable
64:fitnss to the ability
39:@mece para
5:デザイン
37:modulation
4:css
60:link
35:js template
34:@mece loose coupling 
32:mvc
31:iterations
79:next
78:auto tagging
77:autolinking
5:maven
4:opencsv
3:csv
1:current
17:競争
16:英語
15:まともな日本語
9:solution directors of bottlenecks
14:automation
13:いいブリッジャー
12:日本人エンジニア割安
6:progress delay
21:全部デキる子
11:tech dir
5:pokings
20:東窪
10:try hire translator with fixed bid
4:assignings
3:translation?
19:議事録の記録
18:分割
4:cycle
3:custom
12:習慣化
15:
3:custom
17:http://toukubo.backpackit.com/reminders
6:cycle
16:stopper
20:担当者と教育とオフショア
13:reminder
7:do not do task and just move
6:less time to move
5:slow down?
4:very stressful ( concious cost ) 
19:takes more time
1:cycle_context
18:phone and cycle
17:brain base and continuous work just as before 
to leave
16:25% of lost time
15:buy quicker cycle 
and  less hours to move
and no task for this context
and same task as i was doing
13:follow the UI
20:concious cossty
12:choise ot the todos 
9:less stressful things that i can do
8:go silent loads only
5:custom
4:@wait water proof bag
15:find the emobile
14:常時接続とairと
1:cycle_kit
9:cycle_kit_list
11:@hone lock
10:@wait tapper?
6:routine
8:継続するもにについては、三ヶ月後まで入っているようにする
7:サイクルの一覧から、いらないものを削除する
2:削除
1:daily_check
6:check_????
5:project type
4:what is target project type?
5:organize
16:open calendar
4:
1:daily_organize
13:put routinized event instance.
in evernote
9:RUMTIME
10:pick tasks from selected project,
paralell, timing base tasks, to pomodoro
6:全部のプロジェクトについて、ネクストアクションが見つかってる
14:output base focal point
13:output per person
12:runtime
11:@wait check and read
8:kaizen
10:@wait adapt to all
19:odesk snapshots?
3:@wait daily_reporting
18:todos capturing in the basecamp
21:@wait odesk problem?
17:just send the email messages 
20:@wait how to adapt to all
16:put the url and things
4:launch firefox and go to home
3:dancetherepack
2:http://www.youtube.com/watch?v=F_4fiMIxO2E&feature=PlayList&p=86A3C9C5487A7FB1&index=2&playnext=3
4:persistance
3:data
10:glue
6:give them
5:revenue with zerobase
4:ampx
3:data api
18:amplifier
17:diggる
16:UIプログラマーで協力してくれる人
15:投資
14:hacked
13:利用者側か。
restでいいか
12:json and xml
9:wp_json
11:
8:wordpress + json thing
1:dataapi
5:cachedscraper
4:json
5:storyteller
4:mysql
3:database
4:database
3:db
10:火木か。
20:木曜ごー
9:あんまりはやりたくない
8:２日に一回くらいかも。2.5日かも。
7:作業にならない問題を避ける
29:better_sleep
28:better judgment
27:楽しい（25000)
16:すごいGのときの実験
4:dddd
26:less risk for illness
3:DC
25:fixed person
14:実験
24:他のノード
23:AC
22:出費押さえる
11:better_sleep
昼起きてる
58:more dating
57:gggg
56:channelbase
69:ある程度外の
55:AC
68:@Noding how to meet out side of,,
53:高手
65:肌
16:すごいG
62:introduction
26:less risk for illness
9:あんまりはやりたくない問題
61:party
25:fixed person
60:友達 's 友達
7:作業にならない問題を避ける
70:noshyness
3:DC
59:友達
17:ター
79:sss
16:分解
109:@done 画面仕様
78:@done 全工程
15:@wait preinterview
99:CommonTranslations
108:@done Nouns
77:@eclipse testdata
14:@wait EstimationChoiseで選ぶためのテストを出し切る
＋出し切れない場合、想定仕様未定義分コスト（未定義の場合はありません）、を出す。
仕様をこちらで出している場合は営業情報にそう入れる
98:@magicdraw
107:@done Attrs
76:test
13:@wait チェックリストに通す
■チェックリストで自己チェック
漏れやすい機能要件 

セットアップ・インストールプログラム 
データ変換ユーティリティ 
サードパーティ、オープンソースを使うためのラッパ 
ヘルプシステム 
配置モード（リリースモード） 
外部システムインターフェース 
忘れがちな非機能要件 

正確性 
相互運用性 
更新性：ごめん、よくわからないで書いている。 
性能 
移植性 
応答性 
再利用性 
拡張性 
セキュリティ 
生存性（？）：ごめん、よくわからないで書いている。 
利便性（ユーザビリティ） 
これをどのように工数に反映させるのか。
私は定型の手法を持っていない。すまない。
計測できるものならするが、非機能要件などは計測は難しいのだ。
テキトーに実装工数を何倍かしている（1.1倍、とか）。

作業の時間粒度を10時間以内にする。
97:@wait AttrPicking
106:@done FirstModeling
75:@done StorytellerCodesDownload
12:@wait 幻想ファクターなくす。悲観的に。最悪のケースは8倍くらいにはなる
9:請求書
96:@wait 再現指摘
105:@done FirstMvn
126:仕様（ユーザーインタフェイスとセット提案）デザインするべき画面自体
消えるべきか
74:@wait mock
11:@wait きちんとしたインターフェイスを出す。
リスク表
8:@wait 見積りしたものから
95:@wait GoalNode
104:@done FirstCopyCoreJar
125:関係モデリング
73:システム自体のデザイン・インターフェイスが残念な感じ
10:投函
7:一日予約
94:modeling
103:@wait put CommonTranslation @storyteller ( http://storytellermachine.net:8080/storyteller/J2eeStorys.do
124:@eclipse Preperation @Home
6:SC
93:modeling
102:@done PostSentencesOnStoryteller
71:ウェブはまあまあか。
5:サービスイン。配置  = deploy
92:@done modelを開く
101:@done Sentences
122:@secretary @wait マジックドロー渡す？
70:design

4:請求
91:annotations
100:@done ValidationRuleAssign
121:@meeting 開発機決める
3:dc3 is storyteller 
120:@Air basecampでアサイン
29:@done offshore
28:@done camp2xhtml
69:@done designer
27:テスト
68:@done design
89:story
26:@keyword [[debug]]
88:@wait 棚田さん導入
25:@done OutOfPatterning == coding
118:@eclipse ソース読み

24:@wait 開発機への配備
86:@wait FIllModel
23:@wait xhtml2jsp
22:TestedSystem
115:@wait モデリングについてぐぐってもらう
84:generaltest
21:@wait sql dupmpfile
114:@wait モデリングやてみてもらう
83:mismatchtest
20:@wait war
113:@eclipse tomcatで一回動かす
82:checkingtest
112:@done sss化
81:@wait tester
111:@done 名詞抽出とモデリング
110:mismatchtest
19:SyncToy
18:@wait server url
40:point
329:reserver supers? like rina?
328:become repeater of the shop and
let them know it
349:@mece chinchin
326:20%
348:gware
347:gware
303:no shops + 1
127:* 決断時間
325:reviews of the expericen of omakase
247:@mece my conditions is more important to complete it.
346:gware
302:tao some kan resereved
324:omakase?
345:make a db and system to put it.
323:@done give point if i use the cheap and good
168:楽できるとこ探す
322:find bugs
167:効率化
321:do all in managed way
342:find someone for direct
166:時間短縮
287:do with mai
341:do direct and 
less payment and repeating.
10 for all.
286:stop shakosei
241:no place,,, to do it home
263:dicision make
sheet?
163:8 hours / week = 90000
262:know what you want
284:stop doing twice
140:マシなしくみ
162:less hotel
261:tao some kan
283:@done set budget monthly
260:superg
282:follow point
281:pc and privacy
56:RUNTIME
239:pc performance
238:time and money cost list
337:tao reservation for 3 times further
237:@done cheaper's better 
336:reservation and plan
215:red roseの鈴木遥渚
⊂（＾ω＾）⊃ﾌﾞｰﾝさん
元八重歯ののりこさん
ゆずさん
ちさと
ぽちさん
137:@mece 開き直す
258:plan and reserve maybe
136:@mece 足してく
235:glist
279:location?
135:@mece 日のフォルダ作る
234:gリスト徹底して店見るのやめる？
333:dddd_timings
256:@mece chinchin
278:less times??
134:@mece 次の開く
233:better ui
332:so if i do good timings only
255:list up
too late to survery
too eary to survey
too late cos no gs
too busy
friday night
after payments
354:diyk
133:@mece 待つ
298:@done go once
353:30000
132:@mece まとめて開く
297:@done tao
330:tao
154:@scheduled double pc?
253:don't do on the bad timings
352:@done 100000
275:superg
umai,
super g umai
k superg
a
131:@mece なんとなく開く
296:@done maybe them? deai place? 
try and negotiate?
monthly 4?
2 + 1 + 1?
130:@mece ぼーっとする
350:80000
173:池袋への移動
272:ROI
292:stop este
171:@done deadlineチェック
170:移動時間とか
131:なんとなく開く
359:open and check attendances and new comer and girls
130:ぼーっとする
358:mise
357:candidates
137:開き直す
56:RUNTIME
136:足してく
349:@done chinchin
135:日のフォルダ作る
134:次の開く
133:待つ
132:まとめて開く
1:dddd.thesecoXte
6:try some. find and ask for direct and get phone num.
5:soooo many. try to ask them for direct?
4:did i met some te on te.
1:dddd_timings
34:around the peaks.
+ reserevation
28:eye beam,
in normal day times they are good
33:
27:in the midnights?
32:mark
26:what about my experience....
31:list good gs and review timings
25:reservations
30:good gs
24:te 15-19
d 23-26 
sunday, monday, normal days
19:日曜日に夜遅く
23:女の子の出勤時間のうち、一番最初もしくはラスト直前を狙うのも女の子の印象に残りやすい
22:待ち時間が少ない
17:hotel costs
21:サービスタイム
16:customers nd their money and feelings
20:平日開店～夕方
15:金土の夜は
14:週末は忙しい
13:more girls, 
better girls,
and better fitness girls,
and less customers
12:looks and fitness
11:think in their side
10:less customers
9:day times
8:day times
7:cheaper
6:kind of girls
5:betters girls
4:nums of girls
7:direct?
6:secound
5:her
4:compare
3:dddd_now
9:from shop with her
8:directly her
5:DiaryTop
からみる
GraphShow.do
3:いつアクセスがある？
2:描画する
12:もっかいがんばる。
bosに画像書き出しするやつをやる。
BufferedImage作って。

9:あそこにimgタグ。
11:グラフ出力できてるか試す
8:あそこに画像
10:タグはdoファイル。引数は？
日付とかもらえるようにする。
?startY=2006&startM=4&startD=23&endY=2006&endM=5&endD=6
で範囲指定。
あとは描画はできてるはず？

7:最終画面イメージ
5:3月の9ステップまでに最低限必要な機能
4:3月の9ステップまでに最低限必要な機能

ユーザ認証
プロフィール設定
公開設定
ダイアリー記入
記録を見る
無限健康Q&Aのページ、掲示板
無限健康®ドットコムのサイトイメージ
アンケートページ
49:美しくなる
212:new
47:健康になる
46:モテ
45:やせ
99:質感管理
42:ワクワク
98:ロゴだけ作って貰うというのでどうでしょうか
41:キャラクター。人格。
29:評価、口コミ
40:実体を出す
28:メニューの細かい選択
27:ランキング
125:ocに相談する
26:なくてもよいもの。
124:たかや自信のポートフォリオみたいなのはあるのか
25:なくてもよいもの。

ランキング
メニューの細かい選択
評価、口コミ

123:イメージの共有
24:広告枠、アフィリエイト
122:彼に相談
23:・グラフ化
121:たかやに
22:携帯との連携
21:メニューのカスタマイズ（自由設定）
242: やせログページ遷移と必要ならばDB書き込みのaction関係 
20:人の記録が見れる
229:問い合わせフォーム（オープン後でも）  
228:ユーザ登録からアカウント名を削除（アドレスで）  
74:デザイン
103:3月の9ステップまでに最低限必要な機能
71:画像とか作ってみてもらってどうか
224: グラフ javaのimageioで、データを下にimageでGraphicsクラスで図を描いてからファイル書き出しする。ファイル命名規則はmillisecoundとユーザのid。ファイルはいちいちはgraphimg.
 http://www.google.co.jp/search?hl=en&rls=GGLD%2CGGLD%3A2006-11%2CGGLD%3Aen&q=ImageIO+java%E3%80%80%E4%BD%BF%E3%81%84%E6%96%B9  
70:ocに仕事振るのにもうちょい量が欲しいかも。
221:安く
54:モチベーション？
53:楽しいデータビジュアライゼーション
39:モデルを育てる企画
51:データ
38:女の人のシャシンであるとかモデルさんのシャシンであるとかと、データとをわ
美しくなれればいいので、ちょっとポチャでもいいし、健康的であればいい。
50:楽しい
37:データの見せ方として、数値は避けたい。
36:リマインダにお気に入り関係の挙動を連絡する
35:お気に入りにの人の
34:似てる人をシステムが提案する
33:コーチ
32:コーチ
31:お気に入り
19:仲間とメールのやり取り
30:おき
18:メールリマインド機能
17:カレンダーで日付選択
16:これもできたらいいなぁ
15:これもできたらいいなぁ

カレンダーで日付選択
メールリマインド機能
仲間とメールのやり取り
人の記録が見れる
メニューのカスタマイズ（自由設定）
携帯との連携
・グラフ化
広告枠、アフィリエイト

13:アンケートページ
111:アンケートページ
12:無限健康®ドットコムのサイトイメージ
9:ダイアリー記入
11:無限健康Q&Aのページ、掲示板
8:公開設定
67:自己管理
10:記録を見る
7:プロフィール設定
6:ユーザ認証
4:client projects?
3:deadline
2:deals
1:deal
3:roi
14:@wait オフラインの作業
1:deals
13:アドレス長
12:紹介してもらう人を探す
11:highrise
10:通知自体が[[通電]]
8:人
7:誰か[[つなげ]]てみて５万で売れるなら。
6:outsource
5:sc
17:CRM
4:ac
16:https://storytellers.highrisehq.com/login
4:debug
3:修正
6:resource_management
5:delay
14:money and budget
13:be able to hire
12:finding enterables from other project
3:recoverying from delay
11:help people for bottleneck
10:hire people where people can enter
9:finding enterables in the project
8:make it palallel
7:finding,enterables.
4:http://storytellermachine.net/storyteller/J2eeStorys.do
3:DELETE
6:全工程をみせつつたどる
5:テスト、のSTRとWEを見せる。
4:jing
3:demo
32:汗を避ける
49:ふく
31:外で油避ける
48:風呂前後
47:塗り薬
46:外出中とか
43:やすい
42:point
59:brash wash
41:ストッパー
58:毛穴から抜く
40:遵守(reminderメッセージに従う）
57:double and triple?
54:エッセンシャル
52:ティッシュと殺菌ウェットティッシュ？
9:油補填
66:soniccare
19:@wait 保湿
65:buy cheap
18:やられない
64:one more brash?
17:油出さない
63:easier and less time thing
5:殺菌剤
16:繁殖させない
62:do not repeat it
61:fix tit once
14:日焼けサロン
60:doctor
13:皮膚作る
12:体内
11:菌に対向する
27:タンパク質
26:消毒液
25:色を隠す
24:食事とビタミン
23:肌
22:殺す
38:一回にひとつの習慣をやるようにする
21:保湿剤
37:@cycle
20:ベビーローション
36:自分犬扱い
35:習慣系
7:@wait sql dupmpfile
10:deploy
16:TestedSystem
22:SyncToy
3:@wait server url
19:@wait war
2:データ構造の一つであるqueueに対してdequeueするということ。
queueだけれども、実際にはプライオリティのあるリストだったりもする。
4:description
3:rss
58: double cutter
45:auction projector
69:@waitshe moves
17:fix date
65:move base url?
16:breakables
28:@shuwa see thing
15:cf
14:less time
62:organize things to 
1. break
2. sodai
3. normal garbages
4. bring and autcion
5. bring
6. bring and need pack
7. maityan block
26:@done decide the amount
8:breaking things 
12:contact akabo san
11:move things if we need to move
22:fix if she needs it or not 
21:sell things not needed
47:packing
59:@shuwa cut
46:@scheduled if not decided then sell
59:シンプリファイ
58:写真でとって、それを絵の具で
57:チューブで
56:原色そのまま。

55:赤と緑
54:絵の具
69:何パターンか作って捨てる
53:画面にとって写真に撮る
52:better design more
51:サンプルとセットで提示、かつ因果自動提案
50:白紙のところに白抜き、
色つきのBGなところにべた塗りの箱で中はその背景色
18:正方形の紙。長細い紙。
60:タカヤのステンシルへの横線
17:表徴的な形のとりだし
9:イロヌキ
16:ドット加工。ピクセレイト。
8:下着、
スケルトンの電車。あるいは乗り物。
素材を用意して何かに使う。
7:女性の乳、
下着、
14:ステンシル、
13:股間をクリック
5:馬をとってるだけ、
29:最低限として用意するものを固定し、施しも固定する。
その後であーだこーだする。
109:designmethod
12:フレーミング。フェチ。ボトン時の本写真。
108:designer
70:手法は何パターンか採用して、
その視点でミテミテ修正してみる。
7ほど。
結果を観察。
11:淡色ピックアップ。
3:右左違う靴下
ビニール蛍光にステンシルか切り抜き
壁紙重ね
髪一日一枚
プロジェクタで情報重ね
ohp？
馬をとってるだけ、
107:design
10:巨大化ビットマップ
85:ピンク、黄色のcmyk原色
26:http://b.hatena.ne.jp/toukubo/design/
84:時間を圧縮
83:trak2005
98:iaのwordpress theme
http://themes.wordpress.net/testrun/
82:死をあげつなく。
22:行間と色の感じ。

91:ai
31:icon
47:買う？
30:最低限用意するものはどうすれば分かるか？
46:どうすれば日本語で美しいの用意できるか
45:本語より外国語のがうつくしい問題とフォントの問題
12:designer form his
11:talk to yumiba san
10:make sure we do diirection
9:untrustworthy
8:maybe should be able to change.
18:talk with hyogo san for the update
17:share with utsugi san
16:tommorow
4:the impact of the long term delay commit ment
13:risky
11:http://storytellers.highrisehq.com/tags/142234-designer
10:商流
3:designer
14:[[new]] designer
5:馬をとってるだけ、
3:右左違う靴下
ビニール蛍光にステンシルか切り抜き
壁紙重ね
髪一日一枚
プロジェクタで情報重ね
ohp？
馬をとってるだけ、
62:designer
61:タカヤ
1:[[font]]
60:タカヤのステンシルへの横線
47:買う？
46:どうすれば日本語で美しいの用意できるか
45:本語より外国語のがうつくしい問題とフォントの問題
44:良いのだ駆っておいてプロジェクトとのマッチングだけとってもらう
43:かつアウトソース
42:作業に見合った写真
98:iaのwordpress theme
http://themes.wordpress.net/testrun/
41:すごくいい写真
29:最低限として用意するものを固定し、施しも固定する。
その後であーだこーだする。
95:agenda.ai
26:http://b.hatena.ne.jp/toukubo/design/
94:bubble.ai
91:ai
79:cmyk pure colors
22:行間と色の感じ。

78:get the elemetns
77:extremize the elemete
76:big,
tooooooo bigg
104:光。間接照明。あてて撮影してデザインにするのもあり
73:右揃え*左揃え
101:signtoon
59:シンプリファイ
70:手法は何パターンか採用して、
その視点でミテミテ修正してみる。
7ほど。
結果を観察。
58:写真でとって、それを絵の具で
57:チューブで
56:原色そのまま。

55:赤と緑
54:絵の具
53:画面にとって写真に撮る
52:better design more
51:サンプルとセットで提示、かつ因果自動提案
50:白紙のところに白抜き、
色つきのBGなところにべた塗りの箱で中はその背景色
37:designmethod
34:decorative fonts
31:icon
88:stsc
30:最低限用意するものはどうすれば分かるか？
18:正方形の紙。長細い紙。
17:表徴的な形のとりだし
16:ドット加工。ピクセレイト。
85:ピンク、黄色のcmyk原色
84:時間を圧縮
14:ステンシル、
83:trak2005
13:股間をクリック
82:死をあげつなく。
69:何パターンか作って捨てる
12:フレーミング。フェチ。ボトン時の本写真。
9:イロヌキ
81:えげつないものそのまま
68:レイアウト

11:淡色ピックアップ。
8:下着、
スケルトンの電車。あるいは乗り物。
素材を用意して何かに使う。
80:margine
67:本から取る

10:巨大化ビットマップ
7:女性の乳、
下着、
66:余白

4:@delegated 大島くん
3:designspecs.courseware
1:detaies_of_eliminations
4:Sentences
3:DifficultyPointOnSentences
7:ui specs and detailes for difficult things
7:greppable
14:archive
3:digitalize
13:なんかどうもwindowsっぽい
12:indd2text
8:autolinkable
11:現時点の企画書
5:director
4:ディレクション
3:direction
4:人
3:director
4:choise on the hired, if not existing, hire one.
3:DirectResponsible
7:request
10:roiのルールたち
7:cfsafe
6:他の目的も兼ねる
5:何かを可視化すると？
4:better dish
3:dish
17:essential
16:考
15:どうすれば
14:doubleとroiキットとhint
13:runtime/builttime/problem nodefieldの分離
12:他の project たちから見てみる。
9:効率
11:仕組み化
8:速度
3:Display
6:Hoge
8:@mece places to do those alone in day time
7:@done night time
18:bring data....
portable hdd?
6:@mece how to keep the locatoins i can stay and do it.
17:@home and @pknk bring and try hdmi cable and adaptoer.
5:@mece privacy
16:monitors...
4:stop too much dddd,
14:find some rental places to do those
1:diyk
12:tao
11:cf
27:make bags ( kit ) for do outside
10:rental rooms
25:compare
24:work places
23:cheaper ones
22:better_sleeping
21:@done try cheaper ones?
9:hotels
34:PM/storyteller
33:annotations
32:mock
31:story
30:assignment
49:名詞抽出とモデリング
48:mismatchtest
47:RuntimeNoding
46:関係モデリング
45:Preperation @Home
44:画面仕様
43:Nouns
42:Attrs
19:OutOfPatterning == coding
41:FirstModeling
18:開発機への配備
40:FirstMvn
17:xhtml2jsp
16:配備
15:@wait sql dupmpfile
14:TestedSystem
13:@wait war
12:SyncToy
11:配備
10:@wait server url
53:MagicDrawか紙かnodepad
52:@Noding Find GoalNode
29:offshore
51:@Noding 
28:generaltest
9:@wait ター
50:sss化
27:mismatchtest
8:一日予約
26:checkingtest
7:SC
25:tester
6:サービスイン。配置  = deploy
24:mock
5:請求
23:sss
4:storyteller
22:test
3:dj
21:テスト
20:@keyword [[debug]]
39:FirstCopyCoreJar
38:put CommonTranslation @storyteller ( http://storytellermachine.net:8080/storyteller/J2eeStorys.do
37:PostSentencesOnStoryteller
36:Sentences
35:page
6:ap server
5:サブクラスとライン追加
4:ajax
3:djbi
1:dns
4:dns url(dns service provider url)
3:dns setup code
a www 59.146.74.197
2:intervview current config 
1:do_not_eat_one_day
4:honey
6:job posting text source
5:html
4:doc file ( as template ) 
13:print
12:wp doc template copy in dropbox
3:doctemplate
11:wp installation + copy the doctemplatge wp
10:WP tempatize
9:award
8:inviting someone
7:job posting @elance 
4:apiのjarをコピーする
3:dom4j
7:C:\Documents and Settings\toukubo\デスクトップ\testingframeworkqueue\#done\dom4j-1.6.1.jar
1:domo
5:deal
2:つつき
2:自動すごいアイデア提案
1:dots
29:@magicdraw 
28:CommonTranslationsを入れる@air
27:関係モデリング
32:RuntimeNoding
26:@keyword [[関係modeling]]
31:デザイン
25:RuntimeNode
30:Preperation @Home
24:css
19: = Noun
23:@magicdraw
18:nodepad
22:AttrPicking
17:シナリオ　*　名詞抽出　*　関係化
21:再現指摘
16:画面仕様　*画面遷移
20:GoalNode
15:modeling
14:モデリング　+ RuntimeNodeing作成
13:ああ、「パターンマッチング」ができるということは
無限の組み合わせの中からマッチングをするっていう
ことの突き詰めだ。ってことが自動的に提案されてる。
自動化するのに、東窪自作のstorytellerという
フレームワークに流しこんでいく。その工程もnodepad課されてるから、「自動すごいアイデア量産機械」化するにいは
どうすればいいか、直近では？っていう解答に非常に高速に
近づいていける
実行系のモデリング。をしろと。
12:量産
11:ストーリーテリング
10:すごいアイデアを「量産」したかったんだってわかるってことと、
9:履歴
8:パターンマッチング
7:提案すべき最適なタイミングの検出
6:提案アルゴリズムの提出
5:自動化
9:例：洗顔ブラシ、歯ブラシ、たわし、洗髪ロボット、ルンバ、加湿器、
8:物理作業かも
7:生活のルーチン
6:リマインダー
5:マッチングに引っ掛ける

4:doubleな候補見つける
3:double
79:double development
78:triple and doublexdouble
77:nodepadの効率化に入れる
76:これからもdoubleということを

59:熟考は意識が必要そう。
75:double表舐める
58:一般にする
74:意識すげえ高い！
57:一般的な問題がありそうだからそれを治す
39:洗顔ブラシ５子にするのpc作業版は？
73:人増やす。。。
56:表埋めてく
38:pc作業一つ見てみる
72:意識をダブる

55:見つかったものについて解決
37:PC作業はdoubleになって早くならないか。

71:@wait project舐める
54:flow的なるものが多い。生活には。その改善には？
36:設備投資の問題
70:お湯をダブルに、
シャワーをダブルに
52:通信とかも（searchとかairもいけそう。3つ機材あったら1.7倍速い可能性ある。）
34:ルーチンから
33:コンテクストから
32:作業から
15:意識はひとつだが。。。
31:mece
14:温める。が早く鳴っても意味ない？
30:コスト当たりの効率の問題
13:二個あったら、、、早くはひえる。早く温まる。
12:ものから？
11:じゃあ空調は？

10:自動のもの、意識を使うもの、随意なもの、
88:doublexdouble
87:triple
69:意識はダブれないわ。
86:分解
（歯磨きならブラシの接着面積）
68:口を二個にするとかね。
85:double_development
67:bottleneckがある。。。。。
84:意識を分解
66:移動してるとか、
マスクしてるとか、
副着てるとか、

49:@done 薬を飲むとか？意識コストだが？
ダブルにできる？
83:分解が素晴らしい
65:作業を出してみよう
82:加湿とかとてもいい。
面積をダブる。
64:hiring
81:@wait however like tooth brash's case we a tooth brash roi is better than cost. 
so doubling is benefit double. 
not cost double.
63:仕事のスケールだな。
46:布をダブルに。
80:@wait double consumes double
29:@wait なぜ今一般的にdoubleじゃないか
62:3分〜5分異常かかっていること。
45:頭とか体→接着するケバケバの量
28:なぜ歯ブラシはもともと歯ブラシ二個分じゃなかったり、
二本で使ってないか。
61:@done flow的なものはその作業自体が一瞬なら無理な傾向。
44:@wait 洗顔ブラシのダブル→洗顔高速化。
場所は取らない。意識も取らない。
洗顔ブラシ→接着する毛の量
分解する
60:文章化とかもそうなっているが。。。
43:outliningを早めるdouble?
26:タスクから舐めていく
42:gtdのボックス移動は？
メールチェックの時に端末二個あったら早くなるか？
ほぼ意識がボトルネックだが手のオペレーションも入ってる。多分1.4倍位にはなる。
25:コストになっているもの

40:@wait 歯ブラシだとフィッティングの問題を一般にする
23:パターン抜く
20:モップ日本あたら二倍速い。日本の手で使えるから。
34:pknk
33:多目的化
32:自動
31:適材適所
30:モチベーション
47:checkers screen
46:cfの回転速度を上げてしまえばいいのかも。
今月に初めて、2ヶ月後には終わらせる。
45:誰でもできるようにする傾向がある。
44:"context"というものが。。。

43:g
42:communications
41:仕組み化
40:モデリング
9:ほぼ全行程がOKっぽい。。。
どうする？試す？

19:ミックス
8:
see the process and work type ( master workflow)
18:一石二鳥
7:数えてみる
17:高roiの検索
6:分解
16:美。
5:double
15:lse
4:double
14:スケール

3:double_development

13:横断的効率化
12:[[目的検索]]
29:ユーザビリティ
11:目的
28:福利
10:リスクを
27:context base
26:速さ>早さ
25:最適なUIと自動化
24:プログラミング5パー高速化で一ヶ月200万か1億
23:商流
39:食事
22:nea
38:栄養
21:すごい質問
37:網羅
20:@wait アライアンス
36:睡眠
35:バッファ
5:download urllist
4:url
3:download
15:flashget
12:#keyword [[FileDownload]]
11:location
8:HttpClient
7:		HttpClient httpClient = new HttpClient();
		GetMethod getMethod = new GetMethod("${heretheurlgoes}");
		String list = getMethod.getResponseBodyAsString();
		StringTokenizer stringTokenizer = new StringTokenizer(list,"¥r¥n");
		while (stringTokenizer.hasMoreTokens()) {
			String url = stringTokenizer.nextToken();
			FileDownload fileDownload = 
				new FileDownload("",url);
		}

6:url of urllist
1:download_clouddb_from_github
6:open eclipse
7:load git repo from https://github.com/toukubo/clouddb.git
4:https://panel.dreamhost.com/index.cgi?

3:dreamhost
3:問題を３つ
15:解決しようとしている問題を３つ
2:startup
14:KPI
1:dressful
13:ゴールの可視化
12:startuproles
11:[[fund]]ing
10:exit
7:recommendation
6:一人でお洒落になるのは限界がある。
5:social  dressification
4:問題１購入がつまらない。
16:スタートアップ
2:afford_drinking
1:drink
1:dropbox
4:sync
5:スライス
4:レビュー？
3:再現検出
9:
2:DRY
8:automate
2:Dの頻度
1:Dの安さ
2:決定時間24時間＝12万短縮
1:Dの頻度
5:terminals and tagged
4:nodepad to evernote
1:e2t
12:node 2 text
9:ifttt or zapier
11:conversion
8:directory
7:mustache template + file generation
6:evernote api things is already there. 
json is there.
10:affordable
20:num of purchace of buffer
9:plentinss
8:前日準備
19:cycle 買う
7:afford_trigger
18:
6:Buffer = buffer
17:閾値設定
5:kit
16:パーフェクトホイップ
ジェル
コンタクト
バンドエイド
靴下
ブラシ
インナーを2ヶ月に1回
ガム
カクセンとるやつ
パンツを2ヶ月に一回
服を一ヶ月に一回4万（2ヶ月なら8万）
みみせん
鼻スプレー
顔ペーパー
カロリーメート
渋谷で靴
コンタクト
リステリン
歯ブラシ
歯磨き粉
ハム
バナナ
ミルク
トイレットペーパーとティッシュペーパー
皿洗いの戦時亜
電球
夏でもカイロとマスク
4:afford
15:購入手段 of each buffer
14:スパン of buffer決める。
13:clean
1:earplug
12:target(objective Noun)
11:custom
4:食事
3:eat
6:親孝行
5:sms
4:AC
3:eat_at_home
1:eat_cheaper
4:emok
7:buffer and automate
6:workflow to have ready
5:bulleds
28:栄養ドリンクは高いかも
27:食材調達
2:walk early soooo much
19:automated and better 
ui shipping a
and better receipt
26:* RUNTIME1
1:eat_early
18:fresh but buffer
25:kit
16:eat early foods buffer
and purchase cycle
22:order to get on the night time
21:buffer 30%,
get daily 30%
get weekly 50%
20:feed_runtime
1:eat_micro
1:eat_more
10:stomach
4:chew
7:eat_cheaper
1:eat_nomado
5:one more food
4:leave
4:pknk_early_alittle
3:eatearly
2:php programmer
1:eccube
1:eclipse
4:alt shift e
4:codegen
3:eclipsetemplate
2:[[codegen]]のための基本。
時々codegenのためのサイクルを持つといいかも。
50:製造業の助力
39:レベニュー資料
38:outsource as entry point
37:theamplifier
36:創業者
領域横断者
カメラマン
プログラマー
CTO
ビデオシューター
ハスラー
デザイナー
インターンオーガナイザーとインターン
PR
翻訳
アイデアの人
CEO
場所
ディレクター
編集者
スターインターン
ライター
会計士
キュレーター
スーパーコネクター
コンサルティング
営業
ヴィデオシューター
美女
the speicialist in the business domain of the target.
35:amplifier
34:@wait 上場するときに時価総額がいくらになっているのか？
33:@wait 必要資金調達額
32:@wait IPO時の発行済株式総数
31:@wait 事業計画
30:@wait 資本政策
19:出会い
49:アイデア
18:投資の直列化
48:アイデアを出す人のMotivation
17:レベニュー
47:サイトの盛り上がりの可視化
16:投資循環
46:サイトの盛り上がり
15:着手のゴールの可視化 x　参加の可視化 x 速度の可視化 x 問題（ゴール）と
45:マイクロ、ナノのパトロン
14:参加
44:message
13:事業計画とプレゼンテーション
43:video
12:ピッチ
42:入家さんに連絡
11:投資
41:ビデオ
10:funding
40:投資原理利用
9:スタートアップ
8:解決しようとしている問題を３つ
29:サイトの盛り上がりの可視化と名のパトロンの数
7:ゴールの可視化
59:通知
28:buzz
6:KPI
58:twitter,facebook,basecamp
27:kickstarter
5:startuproles
57:stream
26:campfire
4:@secretary @wait exit
56:ウェブ
25:3つの投資のゴール
3:[[fund]]ing
55:ストリーム
24:microfunding
2:startup
54:メッセージ
23:middlefunding
1:edison
22:nanofunding
52:購入者
21:seedsfunding
20:参加と可視化
4:編集
3:edit
19:@done デフォルト設定をedyにする
17:better_gapp
15:point
14:1%
26:point
9:edy
13:@wait ちょっと入金してみる
25:カードチャージ
8:1000万なら、30万
12:@wait ポイント二倍の日に買う
24:mobile suica?
7:適用スケール
11:edy+カード
23:@done cardの見てみる
10:率
5:@done amazon
21:@done 出勤履歴から見てみる。現金って見せくらいっぽい。ネット（amazonとアップル）くらい。
20:@done 他にあるかな？
3:edy
6:別のアカウント
5:IPがヤバそう？
4:日本の別の人
3:@wait elance問題
2:modeling
1:element
15:newjit
14:double
5:concentrate
4:task_management
12:集中資源
11:pomodoro
10:モチベーション
1:eliminate-time
9:集中
8:powernap
7:erp
1:eliminate.eat
19:2shock
18:dinner 
15:
14:
9:@home put paper cups at apc
13:yogart
25:shokupan
8:@home put cup phos at apc.
12:cook more
24:emok
7:@wait drink cupped water at apc
11:dried foods at home
6:@wait nuts, vegitables, bars, vitamins, gums,smoothe,
10:@home bring it with the box
5:@wait now other dried?
21:eat dinner by 19
4:@mece dried foods in APC elimination
20:eat early
1:eliminate.food
21:水を汲む 
32:bicycle
20:@mece 交際費削減 ←
30:d direct
9:通信費削減
19:@done eliminate.オンラインサービス
18:better_gym @Hows
28:dddd
27:eat at home
4:eliminate.place
26:quit the locker
25:stop gym once if it really zero...
24:recently sometimes forgetting the routines,,,
1:eliminate
23:@done 設備投資系。削減だとしても。
12:@wait 換金利子削減
34:cf0411
22:振込と引き出しの手数料
7:wnat to be SEEN
6:ask some companies to give the table
5:go and be there
19:better_home/index
1:eliminate.place
18:library
17:g / cost
23:bicycle broken
22:bicycle
14:transit planner
21:gym
13:motivation
20:BETTERS
12:conflict
8:被志向性
1:@done eliminate.オンラインサービス
6:@done stop basecamp once again
4:@done web server
1:elimination-time
6:outsource
5:buffer
4:kit
43:eat dries at ome
38:onirigi 
37:leave early
41:one eat_rice + micros
40:time context
35:前日ちゃんと動いていたら平気かも。
30:time
24:ヨーグルト通販
23:乾物
18:逆に野菜どうする
22:発注を定期化する。
17:autocycle
16:meats and vegitables
12:朝ごはん食べるとpknkが遅れる？
２時間あける？
置きてから2時間でスタートしたい。
54:share.
49:library
53:cook and co
8:2shock
48:going so far
52:try eat rice at 8am
7:eat early
47:workable food place
51:do not eat at too high
400 x 80% + 1000 x 20%
=@500
6:get rice at least
46:place.
5:eat at home
45:40000/month
50:double.?
4:富美子問題
44:eat mini
113:@mece 軽く食べる
311:@done 20000
112:水
310:CF
7:低関与をさがして削る
6:@cycle 今の節制は1年後に64倍になる。と考える。
5:	総合節制性を考える。
89:telephone
4:elimination.biuld
29:時間、作業、金にて節制できるものを書き出す
289:400x30=12000
42:今の節制は1年後に64倍になる。と考える。
287:@mece cycle_kit
22:複利は最終的には金を介する。
ので換金する必要がある。
169:cycle_kit
286:customize
249:motivationxelimination
168:essentials
167:安く買う
265:flow
283:place
309:2%/
245:前日準備
308:better_autocycle
244:ハニー＋cafelop試す
307:move
243:朝のコーヒー
306:investment
161:コーヒーとカフェイン
305:食洗機
323:bull
124:@mece put foods on back
240:インファス
105:@mece デートでの食事を削る
302:@mece customize
320:elimination-budget
102:15000
300:more at shuwa
101:@mece 1000 x 90 = 90,000
+ 20h/m = 100000
* 50%
92:home
56:ブレーカー確認
37:意識コスト？
55:電気
36:明らかに無用なものなんてあるか？
298:amazon
297:@mece @cycle purchase_list
279:gorvaging
296:10 x 400 x 2 = 8000
32:風呂はいる、
寝る。
考える。
ジムに移動する、
葉を磨く
朝ぐだつく
dのリサーチする。
dの前でぐだつく
dcのせいでぼーっとする。
デートする
テラーでモデリングする。
ものを探す
タスクを選ぶ
プライオリティをつける
タスクをログる
タスクをログってないのがあるのについて頭にキープする
歩く（注意をなにかに払ってしまう）
ググる
チャンネルではないようなgの付近でgdつく
ゾンビー状態
睡眠できてない状態を過ごす
外食する
DDDD？一回あたり1920万くらいとかになる。。。
295:beer
31:まだノードにされていないような小さい習慣の作業もきりだす。
294:@mece 8 x 2000 = 16000
30:総合節制なので、投資のほとんどは、削れない。
が一定の線の下にあるもの、については、やらないことで64倍になるようにしたい。
293:2000
239:実印ゲット
292:700 x 30=21000
10:時間でもそう
319:elimination-time
192:[[癖]]つける
291:300 x 30 = 12000
237:習慣化
318:elimination
236:custom
155:実印もってく
254:washing
235:習慣
154:解約
172:錠剤気味で
153:みずほビジネスウエブ
315:
134:@mece プロテインバーとチョコだな
312:時間短縮
1:elisa
3:体が弱いなりにか。
結局渡せる質量とか魅力とかの外部問題に映る
2:こちらの都合すぎるか
4:木曜日のデートの予定入れるを日曜にすける
3:elisatwiceperweek
17:try more te
26:meet those who...
25:direct
15:@Noding dddd.thesecoundXte
9:cost elimination
24:go that kind of places? or ask friends?
8:time elimination
7:dddd
21:@sun clean and make it better place.
11:@wait cost x time elimination
20:@wait try at home
4:elimination
1:elmination.dddd
19:@wait at home
18:@wait thesecound
27:
1:emok
4:shokupan
80:携帯かも
31:カメラで取る
68:愛も競争であるので、多少難しいか
67:snsが今もっとも愛に近いかも？
19:mdiに接続する
66:まず人に興味を持つことができる。
ものではなくて人に
18:mdiブラウザを使おう
65:あんまりコンピュータにしばらない感じね。
17:人を愛することができる
64:まとめよみインタフェイス。というかnodepadとかの仲から
execでstart ./mdibrowser.exe urlをやる。
16:美的である
15:クリエイティブである
61:無制限ボックス的である
13:体によい
60:製作的である。
49:ノードパッド自体はなんとなく面倒くさいし
「キーボードインタフェイスがいい。」
自体は一般に開かれてない
エンジニア用という感じ。


48:ブックマークと同時にリンク検索？
95:量産にのりやすい
まだ需要を満たしていないようなもの、ができたら
それでいい？
93:サジェスチョンモードにはいると・・・。
エージェントはテクストについてのグーグルによるサジェスチョンをする。
URLスナップショット画像とテクストの2種の提案可能がありえる。
密度の濃い快感へ向かうことである。
情報そのものに快感がありえる。
快感の発生は完全に人に依存する。
有名な高密度快感はセックスである。皮膚接触も似ていて違うが高密度である。
もう一つの有名なものは死を逃れること。
人類はストレージを可能にした初めての動物である。
人工物と人間の存在比が一定以上に開いた。
また寿命まで、死に対抗するためのコストの、人間の全収入に対するコストというのは一定以上にたもたれるようになった。
（逆に一定からはのびなやんでいる）
この二つはなにかしら同根である。
むかし、自分たちのためにはたけを耕すことが、食物を因果していた。自分たちのために畑を耕すこと、自分たちのために気をたおし
いえをつくること、が自分たちの死に対抗する手段であった。
現在は、より多くの他人により強い快感を因果する－＞金になるー＞死にはより対抗できるようになった。
快感は死に対抗することと、セックスをすることの二つをメインに作られているようだ。
ミーム的、主観的な快感にせよ超越的な存在
流通の発生もそれ。
核開発もそれ。
恐ろしい量の人間が（あるいは他人は、といいかえてもいいが）毎日のようにうまれている。
その都度死への対抗と快感が生まれている。
基本的人権、などということばは、基本的な快感のためにあるといっていい。
人類一般の基本的な快感。セックスであるとか、死なないということなど・・・。
人類の最大の発見のひとつに、セックスの快感は得るが、膣内で射精することにはそれほどの瞬間的快感密度がなく、
また子供が欲しいとて、10回も子供を産みたいほどではない。というやつがある。
コンドームも凄い。
死に至らしめるところで寝なくて住む。
飯が食えるということ、などを保証してくれる仕組みができた後、
人類は他人を比較することなどができるようになった。
耕さなくても食えるようになったのである。
例えばなぜか農耕機械だけがあって、人類が二人だけであって、毎日セックスをしている二人がいるとして、それに飽きていないとしたら。
あるいはトータルドラッグ。
投資というものは？
100ドルコンピュータ。死を逃れるためのコンピュータ・・・。
主観的快感とは遠いように思えるようなものを提供するようになってからも、生きていけるようになった。ということも意味する。
いまニーズとなっているものがシーズを経てニーズになった。
逆に、畑を耕していることはそれほどよいお金にならない。そうなった。
需要＊需要／供給、というのはなんなのか？
快感の密度よりも、快感の量が問題になってきたのかもしれない。一度に全世界の男と同時にセックスをできる美しい女の人というのがいるとしたら凄いだろう。
全世界の人に、毎日一杯のコメを確実に輸送して1円しかかからない箱を作成したら？
シーズ的なものは、4点くらいつけられているものが多いね。
そういう意味で、密度は低い快感を、より大量の人に因果することは、個人の主観からするとばかげたことにおもわれるようになる。
あるノードの快感の密度＊量が需要だ。
需要＊需要／供給、だ。よって（（量＊密度）＊（量＊密度））/供給という図は、（量＊量）＊（密度＊密度）/供給と書くこともできる。
供給で割る。ということは、そういう職業がなりたちうる。ということになる。
よって
で、量は人類の数と比例しているのである。そして、人類の数が増えるにつれて、量が増えるわけで、量＊量の方が巨大化する。
質がそれほどでもなくても、量的に供給できるものは、どんどん量的になるだろう。
今後、よりそういう方向に向かう。
一定以上である場合、必要になる密度は低くても良い。
薄利量産に向かう。
量産可能な快感を提供することがよく、そのフォームがもうできているのならば、次はそのフォームでもっと量産的、もっとグローバルに、展開する。
それと同時に、快感のツブが小さいやつでも、もっと量産を、する必要がある。
それでは芸術作品。あれはどうなのよ。面白いマンガ。あれどうなのよ。
これって快感の密度の話しだ。
92:ノードパッドへの書き込みをノードDBで扱う方法は？
DBでノードを扱うということは、ポータビリティを損なう
ノードパッドは損なう。という関係を記述できない。
ノードパッドはネガティブ関係が記述的できない。
ノードパッドはポジティブすぎる仕組だ。
ノードパッドは例えばポータビリティのなさを因果する。記述はできる。
でポジティブな技術さえできていれば、ポータビリティのなさ。
という記述をすることができる。
ポータビリティのなさ、に低いスコアをつけるということ。
スコアというのはそういう意味で、完全に、ノード合計値。のことだ。
ノード合計値は充足からのスコアとそのもののノード値とから成り立つ。
ノード値そのもの値が一定以上じゃないものは、ノードになりえない。
ちょうどじゃがいもは根っこに、なんからの理由があって、発熱体からノードに変化するように。
逆、ということ。と悪いということは違う。
＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
ノードパッドで書いたものをDBに投入することができると、サーバにあげることができる。
またSQL的な演算をすることができるようになる。ポータブルなリレーショナルDBMSという
ものもありえる。特にどこかにあるサーバとは関係がない。
またphpとDBやなにかも関係がない。またphpをローカルで廻すこともできる。
問題はだからノードパッドアプリケーションでのデータを
httpクライアント経由でもなんでもいいから、80番ポートでサーバにgetして、
ファイルセーブのたびにサーバにnodeとlinkとを投げるとする。
それとノードファイルとの関係。というものも考えねばならない。
ノードパッドが一枚のファイルに入れられないのは、その一覧性を損ねているからか？
ごちゃごちゃしてしまうということ。しかしファイルを分けて、一時的な
ビューをさけても、ページングは情報料の低下を保証しない。
紐付けを視覚上にたよるか、脳の連想に頼るかである。
が両方ともおいしくなかったらどうするか？
連結のために、リンクというものと、テクストの検索というものとがあるならば・・・。


44:アプリケーションを売る。
91:タグ
43:自分の能力をあげる。
90:削除インタフェイス
42:ウェブサイトをうる。
79:印刷インタフェイスを持ちたいかも
78:imagemagicで印刷
29:スナップショット系のやつ真似る
76:bookmarkdbにアカウントを追加？
75:フォームの登録。ユーザ管理
27:ブックマークのpicasa的閲覧
74:igyシステムを貸し出す。
26:クリップボード上のurlを全部開く。
というのの実装
73:javaでのrssのやつを実装する
25:どっかにコメントのフォームをいれましょう。
72:rss対応
24:コミュニケーショの基盤になる。
71:スコアリングインタフェイス。
パブリケーション値設定のインタフェイス
70:パブリケーション。DBにはいっているノード群に対して、パブリケーションをしてみる
22:MDI上でブックマークをトリガするとDBに入る。
内容についてはpuki的な閲覧が可能。
無制限的な閲覧が可能
21:start "M A T O M E Y O M I " "C:\Program Files\MDIBrowser1041\MDIBrowser.exe" http://www.enclosing.net/blog/
start "M A T O M E Y O M I " "C:\Program Files\MDIBrowser1041\MDIBrowser.exe" http://www.enclosing.net/blog/
start "M A T O M E Y O M I " "C:\Program Files\MDIBrowser1041\MDIBrowser.exe" http://www.enclosing.net/blog/
start "M A T O M E Y O M I " "C:\Program Files\MDIBrowser1041\MDIBrowser.exe" http://www.enclosing.net/blog/
start "M A T O M E Y O M I " "C:\Program Files\MDIBrowser1041\MDIBrowser.exe" http://www.enclosing.net/blog/
exit

20:まとめよみ。
mdiを引数にひらけば開いてくれるか実験しよう
59:刺激的なもの、美的なものをもっと読み込み、吐き出す。
呼吸をしているのだが、その行きがクリエイティブで美的だ。という話し。
58:txt。ワード。
pdf。http://*/*.html（url）
などをどうするか
57:増やしたいところだ
54:現状で扱えるのは.jpgのみ。もっと増やす？
53:無制限ボックスの方に、テクストをなんとかする機能をつける？
52:写真投げ込み機能とかをつけるとか。
51:グラフィックをもっとすごいことにしてみる？
89:削除
88:スコアリングインタフェイス
9:無制限ボックスで扱うには
87:スコアリング
38:アテンションか
8:キーボードインタフェイスは良い。
37:課金
6:キーボードインタフェイス付きのブックマーカー。
35:##################################
　　　　　DONE
##################################

34:http://www.imagemagick.org/script/index.php
33:imagemagikでなんとかする
81:友達の友達。をつなぐシステム
6:1.想起回路作成queueから現在の想起回路作成処理
2.習得リストを、現状実現不可能で実現したいことの文体になおす
3.習得リストのうち、習得ではなくて、習慣であるもの（適当なタイミングで一日になんどか、というタイプのものをはじく
　例えばコーヒーを飲む、例えばミズをのむ、例えばタンパク質、
3.習得リストを一日4回メール（サイクル実施）
4.メールきたやつの連想対象想起しつつ音声よみか、行動ならそれ実施
5.習慣リストマスタからカレント習得リスト作成を毎日実施

5:英単語の時のように、
1.連結対象の想起（タイミングなら、そのタイミングを想起）
2.音声信号と書き言葉で連結元の実施（言葉なら言葉をとなえる）
3.
4:ライフイベント≒想起可≒回路作成
3:new
2:karie------------------------------------------------------------------------------------------------------------------
1:＋[[en_cycle]]
＋ターゲット連想
＋毎日少し
＋スケジューリング
1:目覚まし。

10:数日やった感想絶対いい！
すくなくとも作業量は相当あがる。弊害は感じていない。
弊害というべきなのか、体が疲れる。という素敵な弊害あり。
9:pcへのいんたふぇいすもそれに変えていく。ワイヤレスマウス購入
8:イス削除。腰かけ削除。ちょい腰のセルくらいの無理な段差と、

7:人間定数の獲得とその利用
6:身体環境
5:実験しようよ、。
4:思考と運動（思考プロセスや制作にあたって身体の移動、運動が
良い。）恐らく起っているだけでも全然違うと思う。
3:たって作業できるように変更していく。
2:時計オフィス。エンオフィス。
115:7万で
たかやに
プリンタ、PC、サーバ、液晶、バック、を、
白系の絵の具数種類混ざるようにして、、
絵を書いて貰う。＋赤と黒をしろに対して1パーセントくらいで入るように。
かつ光を下から入れる
123:絵を書いて貰う
202:タンスはルックスさえよければ
現在のようなものでよかった。
あとは下着と靴下、飾りものと、
上着のシャツ、上着の厚いもの、パンツ、
部屋着るくらいの別があれば。
ゴミ箱も同じものを買う。6種類。
それで汚くなければ。
114:マド直線
3:白＋ちょい色。

87:写真とれる＋モノの質感を思い出せるか。
デジタルで、もっとモノの思い出が扱えたなら、
95:削除
93:背景、光、すぐ手に入るカメラ
76:服のボックスを購入。それに近い収納。あるいは収納を可能にするなにか。風呂敷とか？
服ボックスくるまでは服は袋にいれて足元に
書類もボックスに。
2.7万予算でタカヤに色々
5.ATRを処理してもらう
液晶買う
イトーキの椅子はリサイクルショップに
68:直線
198:服片付け
67:マド
189:ロケーション
197:検索性
188:ちょっと外出
72:スペース
159:エレクター
191:生産効率
190:ラップトップに情報
ラップトップに電源
ラップトップに無線
166:収益になる部屋プラン作りから先にして
その後はその後
172:刺激的か
41:絵の具＋絵描き
138:インタフェイス
22:布団とシーツ
161:紙サイズを独特に。
髪質も独特に。
印刷のサイズは小さく
自動的に印刷しても問題ないような
感じは？定期印刷にしましょう。
5分に1度亜4分だと、
一日でa3表裏で20枚くらい。
160:紙とプリンターの感じ
216:☆とりあえず家
################################
ATRは処理業者にお願いする
リサイクルショップについて調べる
イトーキの椅子はリサイクルショップに
ラップトップの性能を改善する
ケーブルをワイヤレスあるいは醜くないものにする
20050827削除プロジェクトは実施
イトーキの椅子はリサイクルショップに
カメラを買い戻す。
書類の類は撮影して捨てる。
液晶モニタを買う
11月くらいになったらpcも買い換えて筐体は新しいものに。
ケーブル群は買い換える。
nodepad系は改良する
音楽はラップトップで録音と加工のできるオーディオインターフェイスで。
無意識プリンタプロジェクトやる
インプットとアウトプットはnodepadインタフェイスに統合
コンピュータは絵を書く

＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃

不動産物件を六本木1丁目近辺を探して事務所を借りる。
条件書き出しをする。
ソファーをイデーなどで買う。
机もそうする
プリンター使いは発展させる。
美しい板を買いましょう。
でっかい紙を用意しましょう
モノには良質のものを購入する＋絵などをすごいのにする


207:すべての紙は本にされたがっている。
143:部屋片付けしたい
205:#prompt
213:デジタルにする
204:広い場所を借りる
116:家
212:ものの数減らす
6:HDDぬいてほかにCVS上げる＋ENCLOSINGで答えるように他のことも買える？
5:変えてみる
4:どうすればサーバー復帰するか。電源は平気っぽい。ということはNICか？
3:enclosing.net
341:グローバルIPと自作マシン。
ホスティングしてもらうか
238:ノード形式のスキャッタードで、
密度。
237:閲覧液晶環境の増大
1239:active実施
233:画像貼り付け。
1238:cycle
1237:パーフェクトジェルの購入
909:快感は主観によって決まる。
231:テクストドラッグアンドドロップ
1236:ぶらしとパーフェクトホイップを購入
908:パーフェクトジェルと良いマッサージ
128:gigabit lan
1235:ぶらしとパーフェクトホイップをアフォード
907:良いマッサージ
127:サーバにHDD容量。

1234:カートの付いているところで働く？
906:CAMP
126:サインはVGA
905:ぶらしとパーフェクトホイップ
1232:課金
903:良いルックス
1230:行動識別がデータで必要
902:良い肌
122:ラップトップにエッジ
901:濃い泡
900:良い洗顔
55:ホットノードファイル、新規リスト、ノード種。（横断的ノード。サイクルノード。）
442:アシを振る
441:フィットネス計算
52:習得とその重ね
習得と、その習得したノードのアスペクト指向的割り当て
カリエ的なもの、自己創作した考えのリスト（連想表）作成
アスペクト的割り当て
コードクローン検索検索的な方法
アスペクト指向的割り当て。
ノード（連想ノード）
228:ノードパッドをキーボード操作可能なポータルに。
227:常時接続
224:体系をUMLにしたときにそこに
形を合わせて、少しねじる。
1229:行動だったらcycleに
223:ノードパッドの周りに
色々なツール（例えばマクロメディアサーバによる
フラッシュ連絡窓）
199:entimer（ネットワークタイマー）====
周期的あるいは指定した時間にEnclosingEvent?
 (is EnclosiongEvent?)を発生させるタイマー
1228:行動である必要がある。
222:飛び火の作成
198:カリエと欲求。
ノードパッド「形式」処理。

目的記述の各手法
1「論理」
２もし、
３集合
４かつ、あるいは、
５目的分割
６純粋な手段
７収束と拡散（集約手法）


綴じて開いている。（多目的）
その辺に散らばっている。（スキャッタード）
類似
メタ
1227:cycle
197:リソースの綴じたものへの集中投資がリソースを産むということ
1226:ターミナルズにエクセルで手動展開。
#cycleの書式
118:マクロメディアサーバ
windows server
220:類似連想
196:[[ノードパッド重力]]。位置的関係。上下、左右、距離
1225:結線されたノードからの自動接続のサジェスチョン＋判定
117:x31に無線LAN
1224:自動化
116:無制限ボックス
1199:お金に換算？
115:タブレット。

193:LifeEvent
1222:#cycle
114:ライナーなもの
1221:#cycle
1220:モテ
190:体系。
　
体系。unixという体系。
phpという体系。
javaという体系。

110:ノードパッドメール。
メールの振り分け。
振り分けルールの記述と、それによるノードフィールドへのデータの保持
検索はノードパッドマナーで。
未読と既読
送信日時による並び替え

htmlメール
434:300メートル（3分歩く）
46:マクロな価値とミクロな価値
->マクロな価値のが結構大変。
中期というのもある。
習得が利いてくるのは中期的方法
45:需要は価値ではない。
44:[[en_習得]]
複合的ノードは、訓練などで、「同時」つまり時間につめこむ感じで複合にすることで可能
430:閾値。
328:行為、ツール、物理的な道具。

327:少なくとも英語のあの記憶の方法は
いまは通用しないという意味では・・・。
しかしユニバーサルな方法はたくさんあるし、
発見は割りと宵と思う。

41:1.末端シート
2.プライオリティシート、
3.アカウントシート
4.スケジュールシート？
5.オールノードファイル
6.ノードdb。
7.URLリスト。
325:具体的な問題解決に価値がある。
問題の発見、指摘、批評のステップを踏むよりは
問題の認識とそこへのソリューションの提携が大事。
ソリューションと妙案の違いは？
需要は大体問題である。あるいは問題は大体需要である。
おなかが減っているという問題があり、それに対してソリューションを
あたえるということ。
299:タイピングはたたきつづけるときもちよくなってくる。しゃべるのといっしょで。
身体的に。
323:ある限られた状態で、なにかに、高い価値がある。
ということならば、僕が場所がえをして思考をする。
とか、コンテクストの相対としての僕にはそういう
価値がある。ということである。
よって基本的にはあらゆる方法は特にすべての人に
価値があるものにはならないだろう。

298:12パーセントのピッチシフト、オクターブ上や下の混ぜ方。
219:1.メタ抽出
2.メタ次元での方法の適用
3.具体例もどし
217:1.[[要素発見]]
2.要素極端化
294:MTR買う
1299:才能あるところからやる
293:[[atr捨て]]
1298:おもしろいこと
214:MDIブラウザへのリンク検索スイリプト
291:場所を取らないMTRに換える
1296:アラニス映像
213:グーグルAPIからの、リンク検索の利用
189:各種リソースのノードパッドへの自動変換。
ウェブサイト、テクスト文書、OCR（手書き）
サイトマップ、ディレクトリ構造（パス）
1218:自分をブランドする
290:削除
1295:スクラッチのビデオ
212:リンク検索
188:nodepadで全部選んで線引き
1217:国連16万
1294:刺激的なもののインプット
109:rssの受信
ニュースの確認
1216:AAC
1293:お洋服
210:ノードパッドで新しい連想と類似。
1215:MdiでのI検索
1214:因果充足度を達成さす。
1291:なにか失う
1213:KKKK
1290:なにかを選ぶ
183:ゼロ文字数で決定するとバグリ気味
1212:ddddをcycleで。
104:採点法
182:日記、ログ。携帯メール、自分宛てメールがそれ。
インプットには
1211:恋
103:ありなし法
429:汗がでるくらい動く。
180:ノードの整列
選択して、左そろえ、右そろえ、下そろえ、↑そろえなど
101:テクストなどでのナイーブな連関
100:ブラウザの、リンクやパーツ取り出しして、ノードでつなぐ自動プログラム
改装表示とサマリ表示。

423:充分な想起
422:順番にノードを読み、充分な想起することい。
それを連結させる。
398:恒常cycleと発展cycle
397:実験とルーチンの比率が一定（恒常性と発展性）
420:[[目的接続検索]]
396:コンピュータのバリデーションの方法は・・・。
318:関連は無意識的ではあるが、
名詞に対して、名詞が関連つき、
という風に、関連の対象となるものは、名詞だけではない。
文章もである。塊として認識されるものはすべて。
395:境界策定
316:あらゆる名詞は人間にとって価値である。
391:条件付け
289:部屋
288:アナログでの音楽
1288:予算申請
205:正規表現系
1287:動いているもの
204:http://
ftp://
joijo@jiojoi.com

1209:月額手取り27万円
1286:自分のコンピュータの画面のキャプチャーを公開すればいいんじゃないの。
203:インクリメンタルサーチ
179:ノードファイルの内部データ形式を
リレーションに変更
1208:一定比率の高価値ノード作成と一定以上の高密度快感
1285:更新頻度を保つ
178:人ノード
1284:ノードパッドとプロジェクトの往復ができたら？
201:ノードパッド＋タブレット
177:nodepadのredo,undo,
1206:マスターベーション2.0
200:nodepadの中からスカイプ
176:共有ゴミバコ
1205:近場でのセックス
1204:高い密度の快感
1281:因果をテスト
1203:高い快密度
1280:en半身浴
173:ノードパッドのノードの接続を解消することが価値の回収になる？
ようにノードパッドを設計する。
1202:統計でスコア
523:自分の資本でやる分にはい。
522:独自プランの説得にはコストがかかる。

171:ファイルポインタ
1200:数値とグラフ
170:WIKIリンク以外のリンク機能

417:ミゾがあるから。
29:[[EnclosingRoom]]
416:足の指の周りの汚れ
1069:直感で、本当に会感知が高いもの
27:enclosingtimer
411:スペース
1063:スコアリング
307:インターフェイスがいいと思考も変わる。
たとえば手をあげて、水平にして、というやつで、
入力のストレスが一定以上に少なくなると、思考自体も換わっていく感じがする。
382:スケジューリングとマネージメント。
コアコンすること。
プログラミングができる。
304:インプットとアウトプットとフィルター
インプットとアウトプットに見立てて環境としての部屋を考えて見よう。
例えば実家での服のサイクル。
母野朗が洗濯してくれ、僕が汚して返す。
僕が汚してやり、マミー氏が洗濯して返す。
というサイクル。僕にしてみればラッキーでハッピーなインプットと忌まわしきアウトプット。
彼女にしてみればファッキンダーティーなインプットといやいやのアウトプット。
副産物としていえにお金をいれてもらってたりする月額の5万。
　
正常/清浄を身近にまとわせ、残りを外に吐き出すものの文化的な例。
僕、の境界は行為の後でやってくる。自身が吐き出してる最中に、
自身の境界を形作っていることに気付く。

インプットとアウトプットとフィルター

ナトリウムポンプ。（整った情報を中に用意し、外に無限さを書き出す、というエントロピー向上の中心機能。それをつくったのは神だ。）
クーラー（部屋は涼しく、部屋のすぐ外は熱く、東京はより熱くなり、クーラーはその中心にあるフィルターであり、それを作ったのは人間だ）
衣服。汗を吐き出し、乾いた空気を飲み込む。あるいは熱を。あるいは恥も。

ということは、名詞や個体、現象に名前がつく。それがフィルターになる、なぜか多くのものは回転体、サイクリックなイメージをもっていて、それ自体はニュートラルな雰囲気がする。

幸せな仕組みがある。女性と男性のように、精子を吐き出すとそれがいとしい塊として受け入れられる幸せな仕組みがある。クーラーなどは、自分のため。東京は熱くなりつづける。地球も。そのように別の系を迫害する。
ただしまあ、ある完成された系、例えば男女が、その快感のために他の系を汚す（人口が爆発し酸素がなくなり植物もなくなり・lostlostlost)。ということもある。

暖かいのをこのむ植物の星にいって、クーラーを炊きつづけよう。

あるいは日記をつける。自己満足を吸収すべく書くのだが
それを人が快感と思うようにもしなくてはいけない。
それが死とすれ違うポイントまでそうしなくてはいけない。


アウトプットはインプットによくなりえる。自分の書いたメールは自信にとって反省的なインプットになりえる。それどころかフィルターの活動そのものもインプットになりえる。あるインプットに対してあるアウトプットをした、ということならばそれもアウトプットになりえる。

中にためこむ仕組み。インプットー＞蓄積の変換->蓄積ー＞出力の変換ー＞アウトプットならば実はインプットがアウトプットであるとは限らない。人はメールを転送しつづけているわけではない。僕達はスウィッチングハブではない。

機材の論理。インプットとパラメター。インプットに対して別の数値を「ぶつける」ようにインプットする。おおこれは発明だ。確かにそのようにしてなにがしかの変更はあるかもしれない。あるフィルターに存在価値があるのは、複数のインプットがあるからか？あるいはフィルターそのものの設計であるかもしれない。

あるいは関数の論理。引数が複数の関数呼び出し。関数の引数には0からn個がありえ、さらに関数の出力も0からnがありえる。public void getNothingAndPutNothing();


多くのアウトプットはインプットになりえる。例えば自分の書いたメール。だが例えば自分の糞はアウトプットかもしれないがインプットには基本的にはだけれどもなりえない。尿を飲むという話しはこのオドロキをしめしている。

ただし例えば糞をした、という情報はインプットであり、また自分が人に出したメールを読むのがインプットになりえるとすると？


送られてきたメールを自動的にプリントアウトする機械、そのすぐ↓にはかなり優秀なやぎがいてよまずにたべる、というのは嘘だけれども、とか、ナトリウムポンプとか。

メールを転送といっても純粋な転送はあまりない。多くの場合は転送はCCみたいなものだ。自分あてのメールだけど読んでもらっといたほうがいいから転送するね。というやつ。転送してもらうためにその人にメールを出す。という行為はあまりない。



自分にきたメールやみたサイトを美しいフォーマットの本にしたら面白いだろうか。本やフォーマットというのはかなり無意味なものを意味的に扱う。逆に、意味あるものを犯そうとしている雰囲気もする。例えば写真もそうだ。美しくとれるようにセットされたカメラで無意味なものを写しこむ。


優秀なゴミバコが必要だなあ（人生もそう）


381:英語的技術
303:☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆
インプットとアウトプットの列記
☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆
インプット＜＜＜＜＜＝＝＝＝＝＝＝＝
洗濯された服。
ご飯
知識
人のmp3ファイル
自分の活動ログ（アウトプット）
もらったメール
もらった電話
もらった携帯メール
もらった発言
会った人との会話
会った回数がN回を超えた人
文にできる現象
コーヒー
アウトプットのうちのアウトプットじゃないもの。

☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆
フィルター
igyのセンス
ナトリウムポンプ
大腸。胃。

☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆
アウトプット＝＝＝＝＝＝＞＞＞＞＞＞
よごした服
作品
音楽のmp3ファイル
書いたテクスト
書いたメール

380:発見的ではないものはやらない。
302:選択しているもの以外をグレイアウトする機能。
コントロールジー
1304:[[computer]]
275:たてものをたてるのに英吾は必要ない
たてものをたてる方法の発見が英語圏でありえ、ここで英日翻訳の価値がある。
日本発の美術コンテンツのうち多くが、日英翻訳によってとまっている。
　
英吾は知識でありえる。インターネット上で適用できる発見を英日翻訳、ローカリゼーションする。
スターバックス。発見の翻訳。
　
モノ、の発見。どこでも取れるものではないものの情報作製と輸送。
水には需要がある。性にもある。
気温にもある。食にある。
流通は食にある。睡眠場所にもある。
　　
花屋？花にも一定の需要がある。
花屋さんを田端でやっては価値がない。需要がない＝供給過多である。
じゅようがある、というのは、需要の観点のみで比較したときに、比較的大きいこと、でできていく判断。
需要は供給で割られる。田端で花をうるという需要量に対して一件の花屋は供給が多すぎる。
分子が先に決まる。ため、需要がない、というのは供給がない。ということだ。
一方で、流通、といった子ノードである。横断的なノードに乗せられる、といったことが、
花もちょっとうるスーパーというノードが発見される。
需要は先に決まっているが,流通可能なものなどと、ある別のノードに移り変わる。
花をうる、地元の花屋さん、スーパーでのちょっと花屋、なども、
地域によって需要へのフィットネスを変化させる必要がある。供給量を変える。
　
ある地点にあるモノがある。という方法でハナヤはなりたつ。
ドコモ。携帯の通信サービスをうっている。店舗は基本存在しない。
通信に需要はある。
競争で分解される。
ドコモで売ろうとKDDIでうろうとかまわない。
通信、というノードとなる。
　
ちゃくうたの需要は小さい。花の需要も小さい。
店舗を構えるには、ある場所での花屋さんの需要は小さすぎた。
適切な需要にサイジングする。フィットする。
これがコンビニの方法。
チャクウタサイトやるのに店構えとは。
チャクウタサイトは無店舗である。
サイジングでもない。それっぽい。
　
田端で花屋さんをやっている。
田端で花屋さんだけやっている。
田端の花屋さんは流通ももっている。
田端の花や、には一日に100本だけの需要しかない
が一日に500本の花をうっている。100本だけうってもくってはいけない。
すごく小さな花屋さん。１畳の花屋さん。
そういう物件がない。ならば小さな公園の一角で出張花屋さん。少しよい。
これでよくなったということは、「不動産物件という枠が適切である」という
問題をクリアしたわけだ。
　
ちゃくうたサイトであるならば、インターネットサイトを立ち上げる初期費用のようなものが
不動産物件であろう。ルーチンのサイズの適切さ。
すくなくとも存在する。という概念がある。
すくなくとも存在するために、ルーチンのサイズの適切さが必要です。サンプル数が必要。
インタビューの生声録音のmp3が必要。
つながる。そこになにか吹き込むと、音声がサーバに残せる。
それでコミュニケーションする仕組み。
需要が一定以上じゃなくてはルーチンの意味がない=存在できない。
ルーチンが存在。サンプル数が統計可能性。
インディーズのメディア配信ということならば存在可能。
そっから先、秘密のものが必要。組み合わせ。泡の濃さ。とか、フォントの線の細さ、とか。
ピッチシフタ、とか、音量のメリハリ、とか。　
インディーズチャクウタ、に適切なルーチンサイズにはまだいたってないかも。
という話。インディーズのインフラはもうちょっとだけ先。フルはペイするかも。
という話か？無店舗の場合のサイジングとは？
　
　
　
花の需要が小さいのに供給も小さい。
やっていけたのではないか？
ちゃくうたの需要に対して供給があるはずだから・・・。
　
ドコモはうれたり、KDDIは2番だったり、ボーダフォンはいまいちだったりする？
つぶれるぎりぎりまで競争は激化する。最終的には秘密に依存。
　
ハナにはそもそも一定の需要があったが、流通の発展が、ハナヤさんというのをつくり
ハナの課金需要を作製した。ハナの需要、ハナを持つ欲求は先だっていた。海とかね。
海をみるのは気持ちがいい。というと、そこには人はいくが、課金はされていない。
ヤマにもそうでいいんじゃないかね。
なえばにもうスピーカ常設してイベントスペースにしたらどうかね。
機械の発見。計算機の発見。
　
花の需要がこの程度、ティッシュの需要がこの程度、ミルクの需要がこの程度、これの需要がこの程度、
というのと、流通という仕組み、とをあわせたのがコンビニ。
　
田端で花屋さんをやるのに、はなやさんちょっと、ほかちょっと、これちょっと、
こめやちょっと、つまりコンビニ、っていうのが、供給量のフィットネスは高い。
おじいちゃんおばあちゃんの町、駅から遠くに人がすんでいる町、にて、
生活必需品は配送してくれるサービス。
インターネットをラッピングしたセットボックスで申し込み。
コンビニより安くなれるかしら。
場所コストvs流通コスト。
多少安いかもしれない。
予算はアイデアとコミュニケーション。
よって、ある単一のノードは、かならず別の、一見かかわりのない、
複雑なノード連結によって存在する。
　
供給方法の変化が需要を変化させている。
遺伝子にそもそも流通したい、という欲求が備わっていたわけではない。
が、流通や金融には需要がある。
欲求の場合、需要は先に決まるが、必要の場合、需要は、技術（供給方法）によって代わる。
欲求も、発見が可能であるが。発見はいずれにしろ可能である。
　
流通と金融は似ている。流通と金融を抽象化。
　
　
手元に500万あったとして、花屋さんはできるが、500万の花屋は売れまい。
東京で花屋さんをやる。というので変化は感じられなかった。田端のうらぶれたところで花屋さんをやる。というのだと需要はなさそう。
目的が損なわれたようだ。田端では、人通りがすくない。認知がすくない。
認知を広めようとたとえばチンチン電車に張り紙する。と地域にすんでいる人には広告される。
花よりも流通なのだろうか？花より流通とは・・・。
花より流通だとすると、流通的な花やがあればそこでも売れるか？
案外うれないかもしれない。
流通というよりは、流通的な投資が必要だという話。
ある程度までは投資額は回収率に比例するはずだと。
花と食事では食事の方が需要がある。
投資料は需要に決定される。
まず需要があり、投資がきまる。よって回収率がきまる。
競争は需要を分解する。よって需要は細分化される。
が根本的な需要が企業の規模を決定する。
よって、ローカルの花屋さん、が存在しうるとしたら、それそのものの需要、つまり
花という単語で表せるものではむりだ。
英吾に需要もある。供給がすくない。供給とは？
田端に花やをだすと、花がほしい、という用途はあるのに、
花をほしがる人が他にいってしまうから？
花の需要は一定以上ではないのだそもそも。
では食料品、ヤオヤさんは？
金額、鮮度、品質、などで勝てないが、需要はあるよね。
スーパーがなければ需要はあるだろうということにはなる。
社会が分業している。ノードがちぎれているのにあわせて？
コアコンピタンスをしよう。
ウェブで花をみてカートにいれると2時間以内に変える。という流通。
すくなくとも花よりも、流通というもののほうが需要があるのは間違いない？
大きな需要も競争によって分割される。
長いサイクルであるほど需要があるということではない。
僕の優位性と発見は別。

1279:睡眠
625:タイマーのために作られた時計。
1302:#cycle
1278:これは脳みそに似ている・・・。
624:課金
1277:データからの自動統計
599:足カイロ2.0
1300:お金
1276:コスト額の計算
169:携帯のメモリの一覧性。
電話のアクションまでの早さ
598:ラージノードフィールド
271:タイピングは腕を伸ばすなりする。
1275:睡眠
1273:秘密の発見
166:文字列に対して、どういう風に反応しましょうか。
595:予算申請
1272:発見
516:パッケージノード化横断（cycle)
所持金,労働可能時間,単価,労働金額,チーム予算,日付,のテーブル（予算表）をつくる。アップデートする。
ノードパッケージ:総コスト、総収支、投資対効果値の表（プロジェクトリスト）を作成する。
投資金額が最大のものから、順に、投資実行（投資金額＞投資可能金額）か、を日付を進めて計算する。
線表化せずに合計所要時間を書ける仕組みにする。
594:予算申請
1271:良いプリンタ
1270:ノードにおいて、否定をした。
163:記述。

592:画面からはみ出すほどのでっかい文字列
162:チェッカー。

99:node形式美
510:投資対効果が1より高く
投資対効果がなるべく高く
投資金額が一定以上のものをやる
98:cube
97:御飯
96:凄いコーヒー
482:ノードパッケージに投資できる金額は通常固定されている。
ノードパッケージ内パッケージで投資対効果＞１のものを
検索する。できたら自動検索する？
94:運動。
93:血行
92:ブラウザを中で動かす。
ブラウザ表示の各部位を
パーツに分けて、上下二つだけ出して、
それを上下ボタンでスクロールする。
91:nodepadからメール送信。
受信をnodepadになんとかする。
エクセルかノードパッドで人などの情報を人ノードなどしてくくりつける。
するとショーンさん。とかいったときにメールアドレスがあれされる。
そして方法を提示（メール送信とか）
送信履歴、受信履歴、回数、から学習。
1054:価値比較
1053:金は比較ができる。
269:一覧性
370:http://www.webshindan.jp/service/function_list.html
リピータの初回訪問ー再訪問の平均スパン
退出ページ（訪問したユーザが最期に閲覧したページ）
topが多いのは当然で、それ以外が常に上位な場合、改善すべきかも。
指定ページへの侵入元一覧（ゴールページを指定すると、ゴールへの誘導が
可能かそうでないかが簡単に分かる）
ユーザの行動履歴。
特定のページをみたユーザの行動履歴を看ると、流れが分かる。流れは、点とは別のものである。
619:一つのマシンのCPU速度
618:合計CPU速度
267:可読性。

266:移動性
265:ブラウザ

1269:カリエとノードを削除した。
615:さめた視点での観察
1268:メタ
614:ために、とか、ので、とか、で検索してみる。
方法。とか。
1267:類似
613:ノードパッドでの因果検索の自動化あるいは提案
262:Sieve
1266:その辺に散らばっている。（スキャッタード）
612:MP3
1265:綴じて開いている。（多目的）
158:マニュアルファースト
587:国連
1264:７収束と拡散（集約手法）
157:ラップトップにバッテリー
610:JAMPS
586:英語+エンジニアリング+信用
156:カメラ。

585:学習、チャンス、単価に対する圧縮
1262:５目的分割
1261:４かつ、あるいは、
475:cycle化すると効率が上がる
85:本当のツリー構造（転回ノードの作成）

83:enのモノのインタフェイス開発
360:デッドライン保守
609:LAMPS
608:全ノードファイルへの検索と、現在のノードファイルの検索。
607:凄いcss、をもらおう。
606:時間のかからない目的検索
1259:２もし、
605:記号検索
1258:1「論理」
604:nodepadのAI化。
1256:ノードパッド「形式」処理。
578:フォントのでっかい文字列
1:精神的な問題
250:インクリメンタルサーチによる検索と提案（提案ノード）
数のリンク（因果表とかから？）
シソーラス検索からのデータをインクリメンタルで。
1254:赤い
600:#cycle
1252:約束を守る
1251:木曜金曜に国連にいく
1250:[[注意]]を獲得する
899:洗顔をする
143:winshotの
サイズ指定機能で、小さく印刷
469:ヤーフミ
898:泡を作る

142:印刷までのステップ数。

897:コスト計算
141:紙使う。

570:コスト額の自動計算
896:説得
78:自分用のノード、プロジェクトに伝達可能性というのがある
それによって他人用に変換できる
465:ノードパッドは永遠的で記録的なものである。
464:ノードパッドは時間に弱い
893:貯蓄には金
462:手元でバリデーション
461:独自ノード連結
787:ためとくことが重要
460:独自相関
786:タイミングが重要
72:[[MUSEIGENBOX]]
71:[[IMAGETHINK]]
70:高価値作成
248:部屋の統一的しろさ
247:エレクター
246:部屋の綺麗さ
245:タイポとかの少なさは後の思考品質に帰ってくる。
1249:いえに3万と学費
1248:親こうこう
1247:削除
242:メインマシンのアップグレード
1246:瑣末な枝をとっていく。
139:目をつかわないでいいインタフェイス。

1245:資本集中
138:使用する機関の数。
567:ノードに入力する仕組み
＋合計値自動計算
1244:快感の質よりも、量の提供が、問題になってくる。
917:ノードの利用回数が増えたら、そのノードのサイズを大きくしてみる？
137:グーグル以外。
566:エクリプスの真似
1243:英語
1242:音楽の金額予算
135:nodepadに検索
外部アプリからnodepadの検索（例えばグーグルデスクトップに）
1241:時間予算と金額予算
914:みんなにつかってもらえるようにする。
134:キーボードインタフェイス

1240:音楽
913:視覚と連想による検索
912:快感には、快感密度と量とがある。
458:独自データ統計
911:社会的価値は主観的価値の平均である。
910:社会的価値自分の主観的価値に類似することがかなり多いというだけ。
69:目的のイメージ。例えば帳票なら帳票のデザインをイメージ。
454:相関
66:[[トータルモデリング]]
62:テストファースト
61:連想表作成と連想表の横断化。
無制限ボックス（二つさ）
（＝横断ノード）
60:投資曲線使い
反射率、
人間定数
ユニバーサル変数
連想表
マクロな方法。訓練
21:コーデイングに価値がある？
20:ノードを書く。ノードをつなげる。というのはノード？
8:印刷
19:作業って？
7:美容＊ひととあうということ
18:作業の定義をしよう
6:作業してないとなんか不安
17:カネ
5:作業が同時にできる
16:お風呂にいる時間について考えるのは良さそう
4:血行
15:お風呂にいる時間が心配
33:課金できるということ
3:お風呂
14:勝手に印刷
32:ものであるとかサービスであるとかを提供するということに一定以上の価値がある？
課金できるものということ？
2:衛生
13:レーザ購入？
12:もっと早い印刷？
11:紙などでの書式を決めるというのはどうか。
insert into terminalsとかね
10:特にinsertとselectとupdateが不安。
22:コーディングをする時間を増やしてみる？
5:ポンツタ
4:コースきめちゃう
3:ウチから国連大、渋谷、ポンツタ
2:30分、息が切れるくらいの速度でノンストップで歩く
9:more pknk ,less others.
and scale.
11:less bringing things?
7:more pknk
10:timiing
4:作業のqueue
3:enterable
4:作業のqueue
3:enterable
7:
142:事業プラン名
141:市場環境
499:projections
140:リスク、ネガティブチェックと解決策
498:DJ
497:speaker
408:RuntimeNoding
496:mixing people
407:関係モデリング
495:female in highrise
406:Preperation @Home
494:emailは一人ずつ出す。highriseから
405:sss化
493:partyネタ
404:名詞抽出とモデリング
492:partyパーティーをプロデュースする
349:@wait server url
348:ター
490:インターンさん終結の日とリリース
347:一日予約
401:@wait storyteller
346:motivate
345:sc
344:サービスイン。配置  = deploy
343:請求
342:著作者連絡先
341:連絡
340:複数主体に
609:@done content
608:@done contact info
607:@done mail / phone / skype / goto / see / basecamp / generate rss * readers
139:競合優位性
606:@iPhone teleblah
138:経営プラン
605:@wait message
137:事業スタッフプロフィール
135:権利対策
601:翻訳ワークフロー
600:国際化許諾
132:どこで？
131:目的探す
489:広告収益
488:広告営業容易性
487:DL数
484:@wait 薄給でも期限きって
483:@wait 予算
482:@wait なんか借りれてから
339:リスク
481:@wait 4000円
338:担保
480:@wait 人工芝追加
337:割合が利益を超えない、
かつ
利子分が純利益の30パーを超えないことをバリデートする
336:アカウント作っておく
335:融資契約書作成
278:自動リンクする
277:コストをかけずにコンテンツをキーワードベースでへ再編集する。
276:出現頻度が定率になるような検索結果ページにする。
275:複数キーワードに正統に反応
274:コンテンツをキーワードベースで再編集する
273:特集ってそういうことだよね？
128:資金
270:各種キーワードについてどんどん
127:資金調達スクリプト
126:どうすれば営業力の説明
125:どうすればstorytellers.CF
124:@wait どうすればシーズアタックリスト
VC系
http://cpijapan3.blog40.fc2.com/#entry1
http://www.cskvc.co.jp/gyoumu/gyoumu1.html
http://www.innovation-engine.co.jp/strategy_2.htm


円JAL
http://cpijapan3.blog40.fc2.com/blog-category-7.html

金融公庫
http://www.chusho.meti.go.jp/faq/faq/faq19_kinyu.htm


http://www.k.jfc.go.jp/sinkikaigyou/loanj_c.html


http://www.dreamgate.gr.jp/
123:@wait どうすれば事業計画
122:どうすれば人物だそう
121:どうすれば資途
479:@wait 床
120:どうすれば人を扱う力について
476:@wait 壁
474:tumblr連携？
473:@wait PDF手売り
472:@wait も一個つくってくんないっていう
471:@wait 売り上がる予兆
269:候補から
268:選定する人。加藤さんか、学生さん
267:もっとも効果的だと思ったコンテンツにしよう。
265:サイト内の自動引参照を増やす
264:自動的に被リンクしてもらえる内容を考える
263:PRの高い＊類似のところをリストして
被リンクの方法を考える
19:法務と契約
262:KEI調査
18:会社にする。
株式を買う権利を与える。
時給３５００円等とする。
261:サイトマップ
17:一冊１０万費用
118:どうすれば投資家にとってのメリット
260:pyramid
117:どうすれば買収時の金額などについての契約
15:translation
115:@done どうすれば稟議（nホップ）に対応
114:資金調達
113:@done 報酬と投資のバランス
11:iphone app
469:@wait デジタライズ
468:@wait 予算
467:@wait 有限会社設立
466:費用
463:@wait 成功報酬ではだめかも？
461:@wait 人とモチベーションのセット
460:デジタライズ
259:外注。
258:売上
257:資金繰り
254:@wait 今回のPVもって行きましょう。
199:post in twitter
198:post to tum blr
197:Buzz in english internet users
251:SEPR
196:デザイン
250:PR
195:企画
194:記事
193:lang-8
660:
517:ピンク、黄色のcmyk原色
192:学生さんで楽しんでヤリたい人
103:レベニューかつ最低限の支払い
102:@done 最低限の支払い
101:@done レベニューシェア
100:@done 内部の人のモチベーション
455:@Noding 女性か。
398:画面仕様
452:中期的広告
397:Nouns
451:中長期的な戦略として
シャツ？
396:Attrs
450:buzz手法
395:FirstModeling
394:FirstMvn
393:FirstCopyCoreJar
392:put CommonTranslation @storyteller ( http://storytellermachine.net:8080/storyteller/J2eeStorys.do
391:ER modeling
249:ウェブサイトデザイン費用？
390:PostSentencesOnStoryteller
248:ウェブサイト公開しないとだめ。コンテンツ借りれない？
247:広告？
246:広告主アタックへの準備？
659:da
245:PV実績
658:営業
244:広告
189:安価なデジタライズ
243:プラダ等大きな会社様に販路はある
188:デジタライズ
242:内部SEO
655:archive
241:被参照
654:
599:著作権許許諾コストの削減
240:seo
653:タカヤのステンシルへの横線
185:evaplan
598:売上をでっかくする
652:タカヤ
184:利益率証明
597:品質管理者キックオフ
651:bubble.ai
596:品質管理ランタイム
650:iaのwordpress theme
http://themes.wordpress.net/testrun/
182:印刷
595:物語にして売る
181:新刊制作
594:はったり（間違いない。絶対だとかいう）
180:融資
593:ネガティブチェックする
592:外見
449:buzz会議
591:声質とトーンと音量と誌
590:モック型営業
447:アーカイブ
501:パイ投げ
446:王子くん
500:美女を
445:2次的に拡散するための試料
444:@wait 事業計画とか
389:story
443:@wait 導入説明資料
388:Sentences
442:@wait 田村さんにメール
387:ValidationRuleAssign
441:@wait パートナーさん
386:CommonTranslations
385:StorytellerCodesDownload
384:offshoreに
プロジェクト名
開発機url
を伝えて、
マニュアルを教えて、
テストをしてくれと伝える
383:generaltest
382:mismatchtest
381:checkingtest
380:tester
238:SEO的に、１位表示する
237:ROI
236:@done 資金調達は何割かとってもらう
649:余白

648:本から取る

647:レイアウト

233:国際化
646:何パターンか作って捨てる
178:権利処理
645:右揃え*左揃え
177:許可
644:すごくいい写真
176:記事
589:新規開拓
230:@wait 連絡と、、、
643:作業に見合った写真
175:記事広告
588:show with design and wellmanaged design
642:big,
tooooooo bigg
174:PV
587:プレゼン
641:[[font]]
173:売上
586:会計系
640:extremize the elemete
585:顧客は何を買うのか。
584:preinterview
170:Buzz in english internet users
583:嘘ついてでも売る
582:sales
581:品質管理？
438:次号編集
436:@wait 費用
379:mock
433:インターンさん人数
378:sss
377:全工程
431:@wait 場所維持
376:testdata
430:@wait 高岡くん？
375:test
374:coder outsorcing 
373:offshore outsourcing
372:file to modify ftm
371:翻訳
370:仕様理解改善
228:@done 作者の割り出し
227:バズ
639:本語より外国語のがうつくしい問題とフォントの問題
638:ステンシル、
224:安価
637:cmyk pure colors
223:storyteller
636:イロヌキ
168:Translate Post
222:DBとクラッド構築
635:margine
634:えげつないものそのまま
220:営業資料
633:死をあげつなく。
632:trak2005
577:svweb
631:サンプルとセットで提示、かつ因果自動提案
630:時間を圧縮
574:広告営業？
160:スタバがコーヒー豆と一緒に配送する
573:業者選定と人
429:@wait アサイニング
428:@wait 適材
427:@done 檄文
6:attacklist
426:インターンさんモチベーション
425:@wait TKP配備
424:@wait 雑誌調達
369:share
2:studiovoice
368:notify
367:assignment
421:初期広告収益
366:モニター、マウスとかキーボードとかのコンピュータオペレーションの迅速化
420:web access
365:下級PGでもかける仕組み
364:難易度に応じたアサイン
363:offshore
362:camp2xhtml
361:テスト
219:営業
360:@keyword [[debug]]
218:@done rights clearance 50万/一冊
217:@wait docs
216:adz incomes
629:画面にとって写真に撮る
215:PVs
628:絵の具
214:english paper version attention
627:signtoon
159:シアトル本社に全部送る
213:カフェの購買
626:赤と緑
158:ディストリビューション
625:stsc
157:チェーン
211:配送
624:原色そのまま。

210:紙での閲覧
623:チューブで
622:光。間接照明。あてて撮影してデザインにするのもあり
154:150 y/dl の収益
567:@wait 一回会議
621:写真でとって、それを絵の具で
153:pdf download from web
620:http://b.hatena.ne.jp/toukubo/design/
152:web english page
564:キーワードと指し先投入
150:Runtime of epub
563:ノードパッドで選択して「k」を押す
562:ブラウザ上でctrl+jなどで検索にいくけどそういうの[[aop]]キャッチする。
419:iphone app dl
418:iphone buzz
414:内容をタグ
359:OutOfPatterning == coding
413:インターンの人に教える
358:開発機への配備
357:xhtml2jsp
356:投函
410:複数の視点でチェック
355:請求書
354:見積りしたものから
353:TestedSystem
352:@wait sql dupmpfile
351:@wait war
209:2000 / year
350:SyncToy
208:users buy accounts
207:design and layouts
206:japanese web pages
619:シンプリファイ
618:商流
204:@wait digitalize 10万 / 冊
617:http://storytellers.highrisehq.com/tags/142234-designer
291:CRM
616:[[new]] designer
202:Translated Posts
615:designer
614:designmethod
200:permalinks
613:design
145:複数の視点でチェック
612:
144:事業計画書
611:内容をノードから
143:販路獲得計画
610:デザイン・規模・実績・url
1:erp
5:once-total-fix
4:decide fixed places
4:choose some from node
3:essential
6:mark @wait
5:exponents
4:get the return speed quicker
3:essentials
122:@Noding 納品
199:point
198:storyteller
197:estimate
167:@Programming プログラム
194:@Nest サーバをあげる
188:@secretary 請求書はんこオス
118:@done 請求書立てる
34:@done [[Choise]] From Verb
33:@done nodepad
32:@out RuntimeNoding estimate2
31:@done RuntimeNoding
30:http://localhost:8090/st/
49:steps to repeat
48:what you expected to see
47:what you saw instead
45:sss
44:@magicdraw
19:test
41:モデリング
18:テスト
17:@keyword [[debug]]
16:OutOfPatterning == coding
15:開発機への配備
14:xhtml2jsp
59:RuntimeNoding
13:#keyword [[配備]]
58:FirstCopyCoreJar
12:@wait sql dupmpfile
57:http://storytellermachine.net/storyteller/
11:TestedSystem
56:mvn
10:@wait war
55:@storyteller
52:============================= 
         Bulidtime
=============================
51:what you saw instead
what you expected to see
steps to repeat

28:PostSentencesOnStoryteller
9:@wait 配備
50:Run the mock on eclipse
27:edit
8:@wait server url
26:修正ファイル指摘
7:@wait ター
25:変数ピック
6:サービスイン。
配置  = deploy
24:モック
5:@wait 検収
23:StorytellerCodesDownload
4:storyteller
22:モック
3:estimate2
21:mock
20:修正
39:@done RuntimeNodeOfFujiEstimate
38:modeling
60:FirstMvn
37:MagicDrawか紙かnodepad
36:RuntimeNodeOfestimate2
35:@out Find GoalNode
45:
42:デプロイしておく
41:マンキツいく
19:実機で走らせる
40:聞く系聞く
29:the tagas are  95 % suspicious.
28:ask vist apeople in india -> ignatius 
27:check how it is showing . with
9:３検索機能の整備（数頁データーがあると１頁目しか表示されない）　
39:利くしかない
25:noding  @out consider if this makes no problem with the data with correct orders 
8:２Ａ案、Ｂ案・・・個別表示の可能化　合計せずに個別にＮＥＴ表示をできるように　
12:６.　インターネットエクスプローラー７は対応
38:それ系の漫画喫茶にいく？
ダウンロードとか開始はできるか？
24:ftp
37:@wait 配備
XLSアップのファイルのクラスは配備
4:estimate再修正
34:再現できなかった。
画面共有でもいいので教えてください。
3:１部計が無い（　項目が×１　）時の表紙に名称・一式・金額が表示されない
２Ａ案、Ｂ案・・・個別表示の可能化　合計せずに個別にＮＥＴ表示をできるように　
３検索機能の整備（数頁データーがあると１頁目しか表示されない）　
４見積ナンバーでの検索可能化（工番での検索は不要）
５ＥXCEL表示の内訳がＢ－５用紙になっている
６.　インターネットエクスプローラー７は対応
７．同一見積ナンバーは存在しますか？　検討
１１.　承認依頼を掛けた後で行挿入・行削除等を行うと修正を行った箇所が目茶苦茶になる。 
45:
59:スケジュールを出す
4:estimate再修正
34:再現できなかった。
画面共有でもいいので教えてください。
62:いけてない。
9:３検索機能の整備（数頁データーがあると１頁目しか表示されない）　
61:先方の気持ちで考える
7:put japaneseword in displaytags
5:deployment 1hour
4:node / template of tasks of development + time
3:stats
2:ストーリーテリング。
自分での所要時間の計算と、
レートの計算
19:send estimation to client
18:estimation
17:database num
16:database num * cost perdatabase
14:cost per database
13:pmcsm
20:make template sheet
12:other projects?
11:review other projects
8:out of patterning
(xls export (choosing and copy and pasting, export by .. + span) 
complex ( more-than-two modeling )
4:RequestTestWithAsmainTest
3:EstimationChoise
7:RequestTestWithoutAsmainTest
4:メニュー表
3:見積もり
14:w3
9:リスク一覧
8:リスク
7:@secretary リスク的な要素をメニューにいれる
10:提供速度、
画面描画速度、移動速度、検索速度、集計速度、集計時間。
管理画面有無

6:@secretary これはやってないを防ぐ
2:evaapp
1:eva
14:分割払いで100万分なら120万分を12ヶ月で10万とかにしてほしい
13:ソースコード買取をするしないの別
9:一回の会議で決まるとは思えないので、
議題としても、問題と方針、スケジュールを出す。具体的には、
 
今日、第一回で、方針を決める。
 
次に第二回で、ペナルティ等と負担分についてAGとCHEについてのそれぞれの瑕疵を明確にする。
事前に資料のレベルで交換していってもいいが、指摘、言い分、事実関係を出すなどして。
 
第三回までに（これも併行して決めてもOK）その支払い方法を決める。
（すべてCHEの負担による損害であると結論づくならばそれもそれとして）
　
二週間くらい（3月15日まで）には決めてしまいたいです。
11:ソースコードは初期開発の問題、加えてソースの知財の再販権の譲渡の障壁画ある。
 
出来ないということはないかもしれないが
CHE側でソースを書いた人間の主張も取りまとめが入る。
これらの条件がないと次の開発にそもそも関与することが難しかろうと思う。
8:商業権を譲渡した上で開発をする？
10:分割なりで30回でもいい。
賭け事に向いてる払い方だと思う。
毎月払いを＋5万してもらう。
サーバーを止めるとかになったら
そちらだけ。
7:説明をする
6:過去と未来が切り分けられるなら切り分けたい。
切り分けられないなら切り分け
5:同様にスケジュールを出す必要がある。
4:こちらはひとが10人待ってる。
11月中までは良かったが3月までこの会議が持たれていないのは
非常にマズい。まずは場を持った。
3:purpose
18:aaaaaaaaaa
17:jwalin_
4:百万ですよの内訳？←作業にして、ジョブポストして見積もり。
3:eva_sales
34:@done screenspecs
33:competition
32:orientation
31:@done project_description
48:tag the todo
30:divigin tasks
47:外注？
46:facebook
45:request
44:シリアルとパラレル。
シリアルにしたときのボトルネックを探す
43:
42:期限ごとに
http://localhost/templates/sctemplate.xlt
からやる。
41:sc金額を得る
40:outsource
9:hire for future
8:
18:who has emurators?
7:maybe have to pay more for nothiong 
17:talk to guys
6:hire while not time
16:specify the name of developers
5:do not hire
15:Android testers
4:hire 
14:quicken hiring process.
3:no time 
13:bc 
12:作業のqueue
29:decide hiring manager
11:enterables
28:assignment
10:equipments needed.
27:offshore
26:person
25:hiring
24:cost less
23:cash flow risky
39:scoping and requirement, and person.
22:cashflow valid
38:@done gather specs and requiremnt
21:hire testers
37:@done references
36:@done basecamp textdoc
35:@done purpose,context,client,budget and size,language,
131:全工程
230:@done decide hiring manager
130:testdata
2:androidapp
269:@wait Android tester for developer
169:jsps
268:@done competition
168:@done admins
267:@wait hiring tester
149:習慣。KPIを自己設定してもらう。
167:@done progress manager
266:@elance @air
265:@done ググる
184:cost less
165:1280 for evatwit
264:@done iOSのやつコピる
129:mock
228:@wait hiring
263:@done orientation
128:test
244:orientation
262:@wait competition
144:非属人的
243:competition
143:[[投資]]原理（[[メトカーフ]]）
161:@done hiring admin for eva
224:@done hiring of recruiter
142:投資
241:divigin tasks
160:@done administrator
223:admin
141:enterable
240:decide hiring manager
222:orientation
140:スケールさせる
221:@done project_description
220:@done divigin tasks
259:@done decide hiring manager
178:hiring iOS developer
159:PageList
258:@Air invite more companies
239:hiring java developer
158:StorytellerCodesDownload
257:give scope and task requirement
238:iOSbug fix
157:annotations
138:team
156:mock
255:@done gather specs and requiremnt
273:scope for java developer
219:@done decide hiring manager
137:admin
236:@done me
155:story
272:trackable
218:@done competition
136:generaltest
235:@wait admin and hiring manager
154:offshoreに
プロジェクト名
開発機url
を伝えて、
マニュアルを教えて、
テストをしてくれと伝える
253:@done basecamp textdoc
271:hiring admin
135:mismatchtest
234:@done competition
270:@wait write so in requirement
216:@done hiring [[Android]] developer
134:checkingtest
233:@done orientation
251:@done screenspecs
170:java developers
133:tester
132:sss
231:@done divigin tasks
4:evaluate
3:評価
1:evaplan
12:PVごとに0.01円で
最大200万まで払う。
11:費用10万
10:翻訳
9:２人の学生さん
8:デジタライズ
6:交通費と時給３００円でデジタライズ
5:権利処理
4:２人の学生さん
13:レベニュー
1:evaserver
6:externalized the news
5:news
4:id
7:package
30:戻りについてコールバックさせる
1:evatwit
2:oauth
6:スケジュール間に合うコトが必須と
5:先払いしてもらえないと払えないです
4:完了基準で支払ってもらうべきと、
追加分はあと。
8:実機渡す
3:evaapp
39:イベントに強くなると
19:idを撮るなにか
9:tiny csss layout modifications and fixes and cycles speed.
29:better bloggers.
38:局所的に人をいれる
18:events sites.
8:building up methods….
28:live sites
37:時間（準備）
7:ftv
27:shopping site wear ?
36:局所的にことが
16:sdcards broken
6:ftvweb3
26:backstage and styling
35:学生さんを競争させる
15:data source chain
5:digg super person
25:what's the point for realtime streaming
sharing nowness?
business?
34:socialize styles
14:backstage and shooting on the audience
4:person connected big subscribers network
33:externalize
13:realtime interview goods
3:more people to the event 
(by calling the media, more people will come.)
32:make developers for the speed ready
42:translation
12:be friends to all the people
22:stylings
31:tagging ( social actions and connection and likable format than it)
41:どうやって見つけたの
11:the battery for the pc is dead
21:Shoichi AOKI
30:fit it for the media hierachy
40:外人インターン
10:all the equipments and phisical stafss done
20:referencial chains and media contents chainds
1:everdoro
5:maven
4:api
3:evernote
14:capture
9:apis
11:multi device
10:sync
6:see the classes you want to you
1:everything_in_its_right_place
4:erp
34:予算
33:どうすればほかを容易できる？
32:マヘシュもプロダクトレベルじゃない
31:技術者の使い方。フルタイムな人やとえてない
30:ほかにいない
49:業界によって違う、
その違いにあってない？
説明性があり、遅延がなければ問題ないのではないか。
71:どのくらい仕様変わるか、を決めてもらう
48:いい加減な作り。という印象
70:仕様リスク
47:テスト？
46:品質を損ねた
45:ＰＭ雇用
44:ＰＭに費用を払うしかない。
43:弁護士に相談するのはどのくらいかかるのか聞く
19:when i m sleeping
41:meeting
18:僕は電話を取らない傾向
40:ask
58:出来高、製品開発での売上からの支払い、といった条件の案件を拒否する
57:開発前に、資金について調査する。
56:支払いができないケースは必ず守る
55:こういう場合、両者損しがち。
54:人間を信用してしまった。
53:支払いができない、というのが武器にされる
52:毎回、遅延が認められないならやらないということを約束してもらうべき。

29:許しててしまってる
51:説明はせねば
28:kkのコードはひどい
50:仕様書提出の策定については開発の責任範囲外であるとは明確にいえない
27:どうして遅延？
26:確かに遅延
25:不当であるにせよ。
69:なんきくんとかに
テラーの開発をお願いする？
24:支払ってもらえないどころか、
原価すら払ってもらえない
68:自分でできるなと思った時間とか費用の8倍
67:十分大きな見積もり
22:コミュニケーションの問題。逃げてる
66:富士通さん案件も、30時間程度過ごしたが、完全に無償
3:exbase
21:多忙すぎは確か
65:契約書なしに、
20:いつも土日電話うけないといけない状況
64:本質的に、
4ヶ月700時間のtoukubo
＋240万の外注費で、
あれしきのことしかできてない？
資料作成とかそういうほかの仕事の方が多そうなイメージ
63:ゆとり
39:弁護士に相談
61:ACのせい？
38:コミットメントを契約で守ってない？
60:総合的なスケジュール判断が緩い
37:対外デモ、別件のソースコード等、
期限を遅れさせる要因の依頼があったときに、
しかもそれを拒否することで、
支払いが受けられないというような条件があった場合になってしまっている
36:僕のモチベーション。
期限遵守性
35:審査
2:[[railapp]]
3:exedist
5:存在チェックパターン
if exists
4:exists
7:会計士
6:上場するときに時価総額がいくらになっているのか？
5:必要資金調達額
4:IPO時の発行済株式総数
3:事業計画
2:資本政策
1:exit
5:wireflameにする
4:ていあんする
3:f.app
9:ペルソナ
11:イラストレーター
8:ペーパープロトタイピング
10:パターン
7:mockingbird
6:handwriting
8:bug/additional things
19:@mece 日時
7:avoid "it sould be included" thing
18:@Meeting
6:do not touch things before we have the agreement
17:@done 場所
5:put the big risk estimation 
16:@mece meeting
4:avoid risks
15:@done agenda
14:@done write so 
13:@done print and share
1:@google @Noding @iPhone @time f.contract
11:documentation and agreement
10:make agreement
23:give the format
22:@air appoint
21:@mece monday
20:@wait [[議事録]]にする
9:scoping
4:fa.path
1:fa
6:attendant(single)
1:fa.path
5:attendants
4:entry
1:facewash
4:洗顔
7:youtube favorite
6:input
5:output dropbox mp3inbox
4:automation
3:favorite_videos_2_mp3
9:mp3 rocket 
8:application/program
1:FBグラフ
5:名刺から調べる部位アウトソース
4:名刺に書く
3:@wait 名刺から調べる部位
2:@wait FBで探索
7:0min wakeuper
6:2h ノマド＋カロリー食
5:4 lunch at sun or home vegitalbles
4:7 ノマド食
3:13 夕食
8:1h pknk
5:putty to below
> Domain Name      : fieldtrip.unu.edu
> BlueHost Username: fieldtr1
> BlueHost Password: western
> Site's IP Address: 70.98.111.50

su(e3290sf0hd043)
4:cd /var/www/html/fieldtrip-spanish
./script/server  --environment=production &

3:recover from down
5:remote 
4:location at localmachine
3:FileDownload
5:実情権に近いものに。。。
4:他プロジェクトからコピー
3:FillModel
1:find
4:探
27:give the portfolio
26:find haken things
25:meetup
24:@Air update the list
23:デザイナーと営業マンにレビューしてもらう。
21:survey and read ( later ) 
20:list
44:mixture
19:cf
43:steps up
18:fill the list and attacke
6:matching
40:remove some lines at my side
5:request
4:job
37:review the reasons
of rejections
3:findjob
36:ask some specialist for it
35:better portfolios
34:post some more
31:schedule
29:contact
30:reasons of the hiring
28:@Air find conncetions, and fill
5:hire one more
4:competetion
3:fire
4:secound
3:first
4:FirstCopyCoreJar
3:FirstMvn
13:Attrs
3:FirstModeling
3:FirstMvn
6:FirstModeling
6:重力（池→川→海＝2000 -> 0 )
5:ナトリウムポンプ
9:make directions of mece place
4:毛細管現象
3:flow
10:find [[someone]] to ask
5:人は因果律のコンテナなので、その人に
情報をもらう
4:snsか、友達にこういうひといない？と聞く
2:Friend of Firned
8:fof
11:highrise
5:nice looks
4:make user want to write
3:folksonomy
12:fof
8:history
11:enhance
7:automatically
6:datainput
6: 飯
5:food
9:
2:費用対効果、などを含めて、最もすばらしいものは、栄養。
能力を高める。知的労働者、肉体労働者の生産性を向上する。
ただの食事ではいけない。意識的でなくてはいけない。注意を払わねばならない。
多くの人は、食事に対して意識が足りない。また、量が足りない。
また食事はしているが、栄養が足りない。
栄養は、思っているほど残忍な影響を与える。
栄養の重要性を感じさせるには何千回もの芸術家が必要。
1:food_list
10:2 vegi bags
tomato,moyashi,leaves,kinokos,
meat,poke,chicken
yogart,
39:まるやき
19:うめぼし
9:金額
29:楽に
48:まるゆで ニンジン
18:アペタイザー
8:種類数が10以上の食材と調理方法のセット
47:まるゆでブロッコリー
17:とうふ
36:品種数
46:ブロッコリー
16:やさいいためセット
26:豚汁　レシピ
35:アペタイザー
45:ノリ＋もち＋ショウユ＋ウメボシ
15:肉
5:良い食材を撰んでいく
55:時間がときどき問題
44:まるゆで
14:ミドリのもの

54:購入
24:しちみうめぼしとんじる
33:流れ作業にする。
43:調理方法をつくっていく
53:準備
23:ニンジン
32:エンクロージング、ナベ。（仮称）
別名バカなべ。

ちなみにこれは、僕が考えたというよりは、僕のつくったnodepadという、なんかAI的になってきたシステムが、作り上げたものである。うそじゃないんです。ちょっとだけ補助をしてあげれば、これは自動的に考えます、その結果がこれ。





このナベは、所要時間、味、食欲をそそる度合い。栄養がある。面白い。という点で他になかなか類を見ないような汁である。

ミキサーと手でちぎる作業やツールを駆使して、最低限の時間で、かなり栄養のあるものを作り上げることができる。慣れてくると、30分ほどで、ナベが完成する。入っているものの種類と栄養の度合いから、かなりの量を作り貯めて、一日に2回とか食べつづけても問題がない。よって、10分で、4日分の完全な栄養と食感を与えてくれるおかずができあがる。一日について10分だかの調理時間である。これとゴハンだけでもやっていけると思う。しかも貧しい気持ちにはならないだろう。


材料は、食欲をそそり（アペタイトする）、かつ栄養があり、かつお互いに干渉せず、というものを撰んである。これはどれもよく手に入るものであり、また比較的安価である。全部で1800円ほどである。8杯とれるので、一日450円です。

スープを作るのに、躊躇はいらない。書いてあるものを順序（さしすせそ）など考えずにかたっぱしからいれる。1分いないに全部入れろ。酢だけは大目にいれる。これがかなり味によい。だしになるものは食材の中にはいっているので、だしのもとなどはいわないのである。スピード重視でとにかく入れる。

ミキサー。ミキサーは、事前に洗っておく。ちょっと洗剤をいれて、水を3割までいれた状態でまわせば綺麗になる。流しにもどして泡をすてて、水をそこに流し込んでほおっておく。と完全に綺麗になる。このほおってくという技も大事である。
このあらいかたは、使い終わったときにも便利である。


皮のむき方にはコツがあり、体外の食材は回転できる。皮をむく必要があるものは特に。だから皮むきを自分から遠ざけるように動かす動き＋回転する動き、でよい。この動きをなるべく早くすると、皮などはジャガイモ一つについて2秒とかで向ける。なれてなくても。


包丁などというツールはあんまりつかわないでよい。ざっくりきってミキサーになげこみ、ミキサーをガーと廻し、中身をナベにつっこむ。というのを5階ほど繰り返せば大体の食材は食べれるようになる。栄養も充分取れる。

鶏肉なんかは、ミンチになるが、ミンチをにると、トリソボロである。大変上手い。味もよくでる。

ミンチが多いので、それだけだと、スープにならない。だから、ナがネギだけは、かなりでっかめにきってざっとつっこんで煮る。これが、ルックスを楽しいものにしてくれる。料亭っぽくなる。ネギナベ？みたいな。ネギくさくはないけど。

このような感じのことを一つ好きの作業にしたのが以下。


============================
1.買う
トリモモ。
ニンジン3本
ジャガイモ4つ
ダイコン半分
えのき
ながねぎ一本
春菊
きむち
豆腐
梅干
============================
下地を作る。
水、酒、酢、みりん、しょうゆ、ミソ大量、七味結構大目
を、常識の範囲内の量で、スピード重視でかたっぱしからいれる。ミソは後から様子をみつついれてもいい。個人的には酢を大量にいれると、おいしくなる。
============================
2.水で洗ってむく
じゃがいも、ニンジン、ダイコンのかわをかわむきで廻し向きする。
===========================
3.ミキサーにかける=
とりもも、ニンジン2本、ダイコン8割、ジャガイモ三つ
をミキサーに次々にかける。
基本的にはツブというよりはミンチになる。
手でゴソっとナベにつっこむ。
============================
包丁で切る
肉をちょっとだけ、ミキサーにかけないでとっておいて、それはブツ切りにする。
ナがネギは、一本後6個くらいに着るつもりでかなり長めにきる。
これはルックスと、なんか大きなものが入っている感じをだすため。
エノキは、ざっとあらって、根っこと、あれだけきる。
============================
春菊は、あらったら、手で半分にちぎってドーンといれる。
豆腐も、手でぶちゅっとちぎってバーンと入れる。包丁なんか
============================
全部つっこんで暫くまつ

きむちは食べるときにのっける。
基本的にはスピード重視。
これで大体20分で、10杯分くらいの豚汁ができる。一杯4分である。

============================



12:じゃがいも

2:食材と調理方法のセットをつくっていく
52:フルーツ！
22:野菜ジュース
31:ミキサー
11:米

1:食材購入とその調理
21:七味
50:サラダ。
卵
フルーツ
フルーツサラダというヨーグルト
ミカンはそのまま買う
チョコレート
コーヒー
牛肉
キムチ
うめぼし
七味
野菜ジュース
とうふ
食パン
フレークの類
もち
納豆
コメ
やさいいためセット
鶏肉
オージービーフ
ソーセージ
キュウリ
トマト
ニンジン
ジャガイモ

20:きむち
2:startup
1:fora
19:ac
18:ふわっとしているところを
17:事業計画
16:投資
15:funding
14:上場するときに時価総額がいくらになっているのか？
9:スタートアップ
13:必要資金調達額
8:解決しようとしている問題を３つ
12:IPO時の発行済株式総数
7:KPI
11:事業計画
6:ゴールの可視化
10:資本政策
5:startuproles
4:[[fund]]ing
3:exit
1:forget
5:afford
2:remind
6:wp
5:storyteller
4:google drive form
3:form
7:format
6:log
5:template
4:modeling
3:format
7:form
5:顧客はなにを買うか
13:スケールとビルドタイムとスケールメリット
4:SWAT
12:モデリング、自動化
3:frameworks
11:追加してみる
10:削除してみる
19:目的検索する。[[横断的効率化]]因子か、ROIの高いものを因果するノードか評価する。
9:Rearrange
8:Combine
16:SCAMPER Questions（出典：『creativity UNBOUND』　※翻訳は筆者ら） 	チェック
Substitute（代える、代用する） 	S1）代用可能な部分はどれか 	
S2）何を代わりに使うことができるか 	
S3）ほかに誰を含めることができるか 	
S4）ほかにどんなグループを含めることができるか 	
S5）代わりにどんなプロセスを使うことができるか 	
S6）代わりにどんなマテリアル（モノ）を使うことができるか 	
Combine（組み合わせる） 	C1）何を組み合わせることができるか 	
C2）ブレンドする（混ぜ合わせる）ことはできるか 	
C3）どんな種類のアンサンブル（取り合わせ）を使うことできるか、創ることができるか 	
C4）部分同士を、どのように組み合わせることができるか 	
C5）目的同士を、どのように組み合わせることができるか 	
C6）アプリケーション（応用方法）同士を、どのように組み合せることができるか 	
C7）マテリアル（モノ）同士を、どのように組み合せることができるか 	
Adapt（適応させる） 	A1）これは、ほかのどのような考えを思い付かせるか 	
A2）何かほかに、これに似たものはないか 	
A3）過去に似た状況はないか 	
Modify（修正する） 	M1）さらにTwist（ひねり、コトの意外な曲折）を加えることができないか 	
M2）その意味あいを、どのくらい変えることができるか 	
M3）色や外形を、どのくらい変えることができるか 	
M4）サウンド（音、騒音、音声）を、どのくらい変えることができるか 	
M5）何を加えることができるか 	
M6）高さ・高度をどれくらい増やせるか 	
M7）重さをどれくらい増やせるか 	
M8）強度をどれくらい増やせるか 	
M9）頻度をどれくらい増やせるか 	
M10）価値をどれくらい増やせるか 	
M11）何を減らすことができるか 	
M12）何を縮小することができか 	
M13）何を簡素化することができるか 	
M14）控えめに言うことができるのは、どんな部分か 	
M15）サイズをどれくらい小さくできるか 	
M16）重さをどれくらい軽くできるか 	
Put to other uses（ほかの使いみち） 	P1）そのままで、何かほかへ使えないか 	
P2）もし一部を変えたら、新たに生まれるほかの用途は何か 	
P3）ほかにどんなマーケットが受け入れるか 	
Eliminate（省略する、除去する） 	E1）何を、取り除くことができるか、省略することができるか 	
E2）ある部分がない時、どうやって実行するか 	
E3）何を犠牲にできるか 	
E4）あげてしまえるものは、何か 	
Rearrange（再調整する） 	R1）ほかに、どんなパターンが使えるか。 	
R2）ほかに、どんな配置が使えるか 	
R3）ほかに、どんなレイアウトが使えるか 	
R4）何を交換できるか 	
R5）何を置換できるか。言い換えられるか。 	
R6）何を、再結合できるか 	
R7）逆にしたらどうなるか 	
R8）上下逆さまにしたらどうなるか 	
R9）内外を裏返したらどうなるか
5:the pre-payment to offshoring is the issue.
and should be resolved at least
4:fscan
1:fscan-ipad
9:kiyosue
8:catch kiyosue san
7:tatekae
10:the existence of more works.
6:how and who pay. 
setting the 
10:and gaziring.
6:critical path
29:java guys?
5:fscan.native
28:phpers?
27:nikfor?
26:photo recog
25:10 people for php
24:cheaper newjit
16:fscan.hiring_natives
23:hire more and compare.
22:phpers?
14:answer to pictgram desings andkawaguchi sama
9:php hiring
8:parent:fscan
1:fscan.1130
12:php assignments
11:parent: fscan
10:assigning and hiring process
9:design plan fix
8:design fix
7:photo upload on ios
6:gaziriing on ios
5:critical pathes
4:fscan.AD
32:the work
29:request
28:fix
31:selection
30:estimation
27:selection
26:parent: fscan
25:stability
24:motivated
23:japanese digg
19:japanese
22:externalize to cheaper
20:asean digg
17:externalize to cheaper 
16:@wait 安く
14:digg
13:search
12:komori
9:縁故
7:asean
10:sense and ability
6:price settled down
5:how the product designers get motivagted
4:@wait プロダクトデザイナーに頼む
37:zen voにカラースキーム、
zen voにかっこいい背景
somethingmoonにresultページ、
サブページは自分で
34:hiring
33:work description
10:疎結合
7:画像の入れ替え。splash.png
6:splash
5:web screen.
4:android…
19:ホントは、タップして大きくする
18:htmlさしかえ
17:全画面にきっちり
16:splash
15:/brand
14:tabnavigation
20:htmlリンク
9:local-uiの変更をだれでもできるようにする
11:local-ui
8:立ち上げる
12:click api
11:fscan.path
8:php
14:how can i send content_id
and then move to ctionUrl
13:hire someone?
1:fscan.hiring_natives
28:android!
27:me
26:itech coders
9:@done workflowの維持
8:@done 在庫を持たない
25:veiz(chinese)
24:tim
7:@done orientation
23:beas
22:many 
5:@done check cfsafe
21:para
4:@done hiring
71:試験粒度を細かくする
4:reverage
481:the user interface
3:東窪最大化
480:fscan.env
339:人決める
473:pick urgents
338:依頼
147:* META
153:@wait しばらくはweb上で良いや。
152:@wait コピー系は毎回コピーするスクリプトとか作れば良いと思う。
151:@wait htmlの統合は？
linkは？
localの場合、ファイルとしてコピーしないといけない？
129:@wait 統合しやすい分離
439:fscan.dev
25:@wait 連携仕様
24:@wait できたらアプリの中で連携
23:@wait サービスの一貫としてのfscan 
17:@wait file to modify ftm
22:@wait nec
79:@wait ファイル単位を小さくする
21:@wait necではやらせない。
fのアプリとして。
78:@wait 小さくする
20:@wait ftvの思惑
106:ファイルの綺麗な分割
75:@wait ソーシャルアプリから呼び出しする。
74:@wait まずは動画。
227:fscan.path
479:tests
7:どこ？
73:ちょっとに抑える
6:ちょっとオフショア
7:@wait ios store
10:責任所在
6:@done play store
5:@wait パンフレット？
3:サーバー
9:@wait 会議
8:@wait 目的を確定させる。
qvgaではいらないはず。。。
3:fscan.para
37:@done getUserID() method.
15:inapp-http://fscan.com/scans
14:@done http://fdb/brand
13:fscan://brandOfPhoto
9:@done fscan://shoot
12:fscan://gaziring
33:@done #ftvyoutube
8:inapp-http://fscan.com/brands
7:@done inapp-http://baseurl/tour
10:@done fscan://gallary
31:@done #brand.splashes
6:@done #navigation
30:@done #brand.externalWeb
5:inapp-http://local/splash
29:@done #brand.logo
26:fscan://toggle-registed
47:scan/index.php
25:image resize
22:inapp-http://baseurl/register
43:notification badge count
40:photo post PostScan.php
19:@wait #main
news
18:@done inapp-http://local/fscan
6:nec data
5:histories.
9:shooted picture
4:youtube snapshot
17:why not? he is not responding.
should contact and fix it.
16:tell prodip for fix?
15:outsource, or do it myself
14:put the url referer
13:xcode works.....
34:1h 5000
9:estimation
33:do contents authoring
8:click
11:anyway impl
7:report
10:list the tasks that needs money?
30:if i do contents update. 
40hours.
29:ask them for the contents update
28:cases 
27:@Air anyway look into the code
26:@wait tell wei or do it myself
23:@wait 5 hours of fix
22:@wait put the url refered on the image path.
21:do it myself
20:cf
19:no delay
18:no money paid and added
1:fscan_recommend
6:migrate the data
5:less cost to build
8:options and elements
7:methodologies
37:長期課金モデル
79:essential
36:サーバー費用どのくらい
78:* 権利帰属問題 **
77:どんくらいの時間避ける？
33:人だと買わざるを得ない
32:値付けのコントラスト
31:アプリケーションモックを上げてしまう
73:外注比較
30:影響力の武器
49:[[投資]]原理（[[メトカーフ]]）
47:enterable
89:藤川
46:conditioning
88:問題吸い上げる
87:* なんで自分でやるか問題。
なんとなく技術やりたくなっちゃってる秒みたいな感じするが。
43:課金
85:参与出来る人だけで
会議設定のホップ数が一週間に一回など。
42:コンサル待機的なもので売る
41:PVなど従量課金する
40:分割払い
82:情報もらう
17:アメリカに売りやすい？
80:チーム
59:適材適所化
16:導入を容易化したほうがいいか
57:KPI設定する
55:習慣。KPIを自己設定してもらう。
8:pick from the workflow like typical things
10:graphics
7:tomita san for,,
52:教育制度
93:なんで清末さんに
話を聞いては
イケないか。
6:teaming
92:ニーズがないとしたら藤川が
やってることはなに。
29:@wait 人に払いたい人？
91:CHEのツール買った意味なくないか
28:@wait 会社の他の人もそうか。あるいは清末さんか。
90:他の人の認識
27:なんか思いつきでヘボい企画をいっぱいやっているようだが
「自分の企画を実現する」をやりたいか。
26:儲けたいの？
67:作業のqueue
25:@wait 心理に最適化
24:sales and marketing
23:* 稼働しているモノは払ってもらう **
64:デザイン画像とかを作ってもらう
63:依頼
20:初期費用を抑える
60:web3サーバーなどのホスティングを奪う
39:人の所属で売る
39:name cards as CTO.
19:資料
9:how to presentation
29:negative check
38:
18:口調
8:build time, runtime
28:実績を示す。営業してくれた人にどういうメリットがあるか
37:Current Target：
 1.   outsourcing workflow ( WEB3 WORK FLOW )
   and network
   by having this, 50% of the cost cuts.
 2.  build a worldwide level application
 3.  build a innovation level techdriven media.
 4.  build tech domain clients and business sales. 2500 per month 
17:発火
7:weaponize the workflow
27:すごいプレゼン
36:comparison to the Comlier社
3x!!!
16:show it with charts
6:minimize the cost
26:何が与えられるか。とその実績。
15:Simple as google
25:高橋
34:sumilation
14:物語のゴールまで導いた後に必ず用意してほしいのが、
“導入スケジュール”です
4:maximize their
24:でかい
33:CTO thing.
60-100hours.
@4000
incouding the equipments
for the outsource thing 
13:イメージをきちんと用意する
3:maximize mine?
23:[[kamoneメソッド]]
42:6month limit
12:リンクはフルーツ
22:数字と記号
31:estimate the works?
11:プレゼン
21:相手に直接的な利益、売上などをもたらす
楽しい。モチベートできる。
創造的。
30:if i cut the work,
then get the back
40:sales
10:どうすれば
20:美しい
44:scopes
50:things that should be cared.
38:@wait fscan invoice to the remaining 
payment
42:@wait shima
41:@Air make the document
45:additional works could be invoices
51:1. all the changes will be cost.
2. all the works not written explicityly is not done. 
3. the specs given with same work is the only work.
4. the wireflame, visualized graphics, must be needed. and 
   if not described, no features will be implemented.
   ( if one related function that crashes because of the work done, 
then this should be described from client side. 
and we ( developer side ) do not have the specs responsibility.
and do not work for this without additional payment
5. the deliverables are 
- the application binary
- binary upload to the itunes.
- the application descrition text, and snapshot contents,are out of work.
- no website for the advertisement or description given.
- document not delivered for this.
- source code belongs to the developer side.
- 
39:@wait get paid for outsourcing
71:testデータ？
37:multi_channel
70:udidかtestflightかは決定する？
35:workのtransaction量
34:ftvweb3
48:people x cameras and speaking
47:distance to the data source
46:references, and social subscribers, and there likes
45:自動収集
44:multi channelable data source
43:all the conversation.
interviews and texts ???
41:greatest video data source
59:freshness
40:reference
58:search and languagable chanel
57:psuedo realtime
56:interviews
55:nowness filter
9:other media doing streaming
54:人
8:keep better images quality
19:brandとデザイナー、diggと出会い
スタイルの発生
52:social network
69:[[歩いてみた]]
18:filesharing
51:"engagable" interface
68:@wait ftv.contract
5: streaming
50:nowness filter (sharing with now people ) 
67:fscan
16:international broadcastings
14:cheaper streaming
64:use core compitance
63:before as only one. and freshness 
had the roi
62:now as archive
11:use core compitance
61:why news sites are on success.
10:network to international broadcasting
60:retweetable contents
77:ファイルサーバー移管
76:ftv.sh cms変更
75:fscan
74:database
23:event
39:database
72:phpでのクリック統計データ取得api。
5:people and network
3:ftv.newjit
14:filesharing
13:types list and 5 by them
12:directions 

task modelings ,
components builds
9:translator
11:assignment
8:progress direction
6:workflow
4:ask mum for the availability
3:ftv_office
207:タカヤのステンシルへの横線
194:[[font]]
109:@wait ftv側でそういう勢力があるか聞く→藤川
206:タカヤ
193:extremize the elemete
205:bubble.ai
192:本語より外国語のがうつくしい問題とフォントの問題
107:必要か確認を。
204:designer
191:ステンシル、
106:画像埋め込みする？3時間でできそう
203:iaのwordpress theme
http://themes.wordpress.net/testrun/
190:cmyk pure colors
105:あれ権利保護？
39:maybe by hand
202:
104:ちょっとだけでも加工する？
38:maybe a gif animation 
201:
103:そういうものを撮りたくなる構図
37:maybe a movie
200:
102:良い写真。ＲＴしたくなる写真
101:拡散
35:@done dropbox in server
100:自分で探す
32:dropbox photo sync upload
31:shoot with iphone
149:user api
30:dropbox 2 tumblr 
(with the link to the live streaming urls and corresponding tweets ) 
148:stream api
147:両方準備
146:@wait 人の作業の時間とかを確定させ、募集要項的なものにする。7行くらいの条件分。（藤川）
145:@wait 人を募集する
144:人の作業の時間とかを確定させる（藤川くん）
79:@wait 動画取れるやつも含めてあるか確認→藤川
143:@wait バイトの要件。3日くらいか。
78:カメラ
142:要件はphpが動くこと
77:機材準備
141:serverどうするかキメる（藤川）
76:日程決めて3回やっとく。動画取れるやつも含めてあるか確認→藤川（予定組んでくれ）
140:wappwolfの出来によってはプログラムか手動かも。
75:ゲネプロ
74:メディア性を見せつける。可視化させる。
73:対話に参加したくなるが出来ないという誤差がメディアなので
逆に対話に参加したくなる感は出す
72:要件を満たす
71:番組設計
189:イロヌキ
70:今のstreamに関係してるようでしてない話でもいい。
ランウェイを酒の肴に盛り上がってる様を見せつけるくらいでもいい。
188:margine
187:えげつないものそのまま
186:死をあげつなく。
185:trak2005
184:サンプルとセットで提示、かつ因果自動提案
183:時間を圧縮
182:ピンク、黄色のcmyk原色
181:画面にとって写真に撮る
180:絵の具
29:dropbox 2 twitter
28:twitter 2 facebook
27:facebook auto PHOTO post
26:twitter auto Photo post
22:tumblr auto post
137:@done バイト使う予算つかないのか聞く
136:@wait 当日のオペレーションの人
135:@wait tumblrから取得するか決定
134:twitterのストリームの決定
133:仕様
68:対談形式のが、ミラーニューロンっぽいというか、
カフェに有名人がいて気になる会話をしているので
（知っている内容）で話をしたくなる感が強い。
一人で本を読んでたり部隊の上で話をしていたら多分だめ
（話しかけたりちょっかいだす気になりにくい）
131:@secretary @done 場合によってはWPでJWORDPRESS
130:@done tumblrの許可撮り
65:maybe we should have 
something to 
visualize the 
users' feedback form tumblr,
and 
62:the users RTed starts tweets more oft en
61:Users RTs and
179:signtoon
178:赤と緑
177:stsc
176:
175:チューブで
174:光。間接照明。あてて撮影してデザインにするのもあり
173:写真でとって、それを絵の具で
172:http://b.hatena.ne.jp/toukubo/design/
171:シンプリファイ
170:designer
18:downscale
15:sync to the servers
14:choose and drug and drop
13:dropbox
12:eye-fi directmode (  transfered to pc )
127:@wait ifttt account （藤川くん）
126:facebook 2 tumblr
125:dropbox 2 facebook
(with the link to the live streaming urls and corresponding tweets ) 
124:@wait tumblrへの自動ポストを試す
8:@done select with web selection ui ( custom )
123:@wait dropbox folderを藤川に共有
58:media twitter stream traffic
122:wappwolfを走らせる
57:Reblog users reblogs
121:@wait eye-fiを渡す
56:users reblogs
120:@wait dropboxアカウントを作る（藤川）
4:@done upload to ftp
55:Runtime
3:shoot with 1d
54:users' web page access to see the streaming
53:user stram traffic
52:tweets by users with their words
169:designmethod
50:social stream input text box
168:design
167:axis, and the edge oc it.
166:target element:eg pages has pages as mece element and 
tasks n:1 page
165:mece
164:選択肢
99:過去記事で断片的に引用していくと美味しいもの探す
163:比較
162:図版
97:編集者立てる？
161:文章
96:事前にランウェイ前のものをとれるならそれも。
ただライブ感も必要なのでブレンド
160:レイアウト
95:「事前」が効く
94:キャッチーなの
93:名言含む
92:キットにしてくんでおく
91:どっかで書き込みしてもらう
90:自演
214:a
213:それぞれの重み。
XLSかmmかndで、点入れてく
114:@wait CHEで検討
49:reading users stream
212:compare
113:ftv側の識者とかとも相談。
カメラのフィルターとかかも。
カメラでやりきれないなら加工かも。
手動か自動か出来る。
48:RTs users tweets 
211:noding for both (or all ) of the nodes
112:機材リストとかしといてくれ。
47:@wait 間に合わない場合の
人の調達先
210:商流
111:サクラ（火種）
46:@wait announce ment for the RT bombming requests
110:@wait cheでのボム
42:tweets the prepared tweets
41:the flow goes from bottom to top.
159:デザイン
40:maybe automation
158:選択
157:メディア
156:media
89:出来レース対談
153:表示件数とか、
縦ならべていくストリーム形式なのか
最新だけなのか、
ツイッターストリームと混ぜるのか。
88:早めに一回やってできそうか、何人で出来るか知る →初回の予定を組んでくれ（藤川）
152:@wait tumblrのところの仕様完成
87:半自動化とか出来るか。
151:@wait 契約
86:streamから拾う人
ツイートする人
写真選ぶ人
写真撮る人
150:@wait パーツたちをwebに組む
85:オペレータ
83:回線、
機材、
人、
ゲネプロ
それぞれについてバックアップ案出しといてくれ
82:バックアップ
81:バックアップでiPhoneとかも容易しておく。
199:何パターンか作って捨てる
80:やるかは別として動画取れる一眼聞いとく
198:右揃え*左揃え
197:すごくいい写真
209:http://storytellers.highrisehq.com/tags/142234-designer
196:作業に見合った写真
208:[[new]] designer
195:big,
tooooooo bigg
10:cms
16:natural relashion ships by sentences
15:if that is people it has works and things. 
14:database. not an articles. and tags and types.
3:web3 server
9:newjit
5:budget. 7万くらい＋回線
4:linuxサーバーを一個たてる
3:web3
9:workflow
12:1. リンクファイル、2. htmlからのリンクファイル呼び出しのパスズレ 3. htmlの拡張子問題、4. 呼び込みphp問題
理想的にはサーバーのお引越し。次に良いのがsp/*.htmlというネーミングをしないこと。
最悪なのがhtmlをphpにかえてcms無いにリンクファイルをおくこと。
これらとくらべて中くらいに良いハックが、リンクファイルはzxc(dropbox syncされてる）においといて、
htmlを.shとか.batでこのアホサーバーにデプロイ可能な形状に変換するスクリプト
これは10分でかける
baseurl書いといて相対パスで書かれてるやつをすべて綺麗に書き換えるやつ。
8:常時接続
11:50人のマイクロ依頼先
10:todo flow
9:電池
38:金額など調べる。
48:浮き輪
ピンクの
長靴
帽子かも
グラサン
ポンチョ
8:空気
58:@done バックつくっとく
67:@home 
リュック
バンドエイド
37:@done ③キャンプサイトへの入場開始は大体昼過ぎからですね。
リストバンド交換役・走り役・荷運び役など、常連の皆様は役割分担
をして効率良く動いてるみたいです。 
47:飯
7:風呂
66:@done ポンチョ
36:水曜も宿？
46:@wait 水
6:寝る
56:@scheduled バック３つにパック
65:@done ポンチョ 上下 x 4
吊るS字ハンガー
ブルーシート 2乗 x 3
浮き輪
ピンクの防水のファイナルホームのバック（でかいやつ）
長靴
帽子かも
グラサン
黄色いアウター
フリースのダブルベットサイズシート
栄養ドリンク（3本）
耳栓 ( 新品4組）
半透明のビニルブクロ（10cmX20cm) x 10
ほっかいろ  x 10
うきわ x 2
エアーベット 
ティッシュ一箱
アルコール１瓶
洗顔ざい1
アイマスク
洗濯ばさみ
寝袋 x 2 
35:fb
45:顔
15:@wait teaming
55:@home metal box and vinyl sheet and tape
34:@wait テント
44:髪
14:@wait team
4:@done 寝袋
54:@wait 借りる
33:@wait 宿検討？
43:@wait ポンチョ
13:@wait できたらチーム
53:@Noding 後でいいもんは後でオクル。
あと送り返す箱
32:@done 輸送戦略
42:@wait 防水
12:@wait 場所取り
31:宿かも
71:充電しとく
41:体
51:@wait 折り畳みカート
70:ビニールシートをなんとか固定
7:hikkoshi
6:kekkon
5:kaisha
4:kane
9:she told about the things.
8:mibarai
1:fukide
1:fund
3:funding
2:投資
1:fund
3:funding
2:投資
5:投資
4:fundraise
3:fund
12:air  purchase history app for android edu and mobile suica.
11:アーカイブの事務調査などの予算？←投資とか。
7:fundraising_operations
10:どうすれば、たいぞうさんのあの人に、あわばーを誘うのに、凄い誘いになるか。紹介する人を連れて行く。ガールをでいいのか。考える。
6:一覧
5:投資
4:fundraise
3:fund
12:air  purchase history app for android edu and mobile suica.
11:アーカイブの事務調査などの予算？←投資とか。
7:fundraising_operations
10:どうすれば、たいぞうさんのあの人に、あわばーを誘うのに、凄い誘いになるか。紹介する人を連れて行く。ガールをでいいのか。考える。
6:一覧
115:ac
131:multi touching detection
114:投函
130:phone
113:請求書
112:見積りしたものから
89:印刷
88:@pknk print
3:fundraising_operations
87:http://www.printing.ne.jp/
86:pdf
85:プリンター
84:netprint
83:http://www.iothe.co.jp/?gclid=CL3OxPHPwo4CFRKBTAodiU3wyg
65:@wait 人
64:pdfになってるものを印刷する
80:@delegated 請求書もテンプレートにする
63:chandramaniに
61:@elance @wait job posting
29:請求書を作って印鑑ついてデジタルでもらう
60:@wait htmlテンプレートにしてもらう。
129:internet connetivity
22:listしたのでclouddb、cloudapp担ってるわけだから、コンテンツにしたい。
128:branding
21:@done @Air 会議を設定する
127:iphone
20:株主総会をもっかいやる。その日付を通知書など書式に書き直す。
126:@pknk print
125:http://www.printing.ne.jp/
109:automate
124:pdf
108:snippet
123:プリンター
107:todoist
122:netprint
106:gist
99:template
121:ac
105:list
98:ac
120:投函
104:Pattern
97:投函
103:snippet
96:請求書
102:basecamp
95:見積りしたものから
101:nodepad
94:プリンター
100:eclipse
93:netprint
77:customfieldと見栄えをつけてく
92:printable
91:evernote greppable
75:dropbox shareと資料
90:http://www.iothe.co.jp/?gclid=CL3OxPHPwo4CFRKBTAodiU3wyg
74:彼らにWP渡す
71:@elance @PAD htmlの人inviting
33:書類一式データを作成
17:list
32:書類一式を印刷して押印する
16:スニペット入れる
31:契約書締結するのに会うなど。
15:テンプレートから自動生成する
30:請求額を入れて印刷にするテンプレート
119:請求書
12:本当はamplifier的可視化したいね。。。。
118:見積りしたものから
117:封筒
116:請求書印刷
107:todoist
33:書類一式データを作成
106:gist
32:書類一式を印刷して押印する
77:customfieldと見栄えをつけてく
105:list
31:契約書締結するのに会うなど。
30:請求額を入れて印刷にするテンプレート
103:snippet
74:彼らにWP渡す
102:basecamp
101:nodepad
100:eclipse
71:@elance @PAD htmlの人inviting
89:印刷
116:封筒
88:@pknk print
115:請求書印刷
87:http://www.printing.ne.jp/
114:ac
86:pdf
113:投函
17:list
85:プリンター
16:@wait スニペット入れる
84:netprint
15:テンプレートから自動生成する
83:http://www.iothe.co.jp/?gclid=CL3OxPHPwo4CFRKBTAodiU3wyg
12:本当はamplifier的可視化したいね。。。。
80:@delegated 請求書もテンプレートにする
99:template
97:@wait 投函
29:請求書を作って印鑑ついてデジタルでもらう
96:請求書
95:@wait 見積りしたものから
94:プリンター
93:@wait netprint
92:printable
91:evernote greppable
90:http://www.iothe.co.jp/?gclid=CL3OxPHPwo4CFRKBTAodiU3wyg
22:listしたのでclouddb、cloudapp担ってるわけだから、コンテンツにしたい。
3:fundraising_operations
21:@done @Air 会議を設定する
65:@wait 人
20:株主総会をもっかいやる。その日付を通知書など書式に書き直す。
64:pdfになってるものを印刷する
63:@wait chandramaniに
61:@elance @wait job posting
60:@wait htmlテンプレートにしてもらう。
109:automate
108:snippet
2:trifund
1:fundrasing
3:17時にツタヤ
3時ごろにポンギのあれ
6:公開
5:Paypal確認
4:権利許諾
13:`
12:Eva

11:GUI決める
1:gaia
10:ログインシステムとかを完成ほぼさせる的な。
9:現状版をアップする
8:
7:著作者出版社最終確認月曜
59:Sentences
56:見積もる
149:@wait 見積もりとか
147:@done priority優先度優先度（H/M/Lのいずれか）[任意]
 deadline期限Date期限[任意]
 taskタスクStringタスク[任意]
 revise修正？String修正or見直し[任意]

146:@done tunetlkaから飲み込むやつの実装
145:@wait やってくれという
79:了承をつつく
143:経営者が閲覧する系はウェブで
142:トランザクションの多いものはユーザビリティが欲しい
141:遊休性
9:#keyword [[配備]]
8:#wait server url
7:ター
6:サービスイン。
配置  = deploy
5:検収
29:@wait モック
4:storyteller
28:mock
167:ながめる
3:gasaccounting
27:sss
166:週１でtaskの任意項目（deadlineなど）の入力依頼
26:test
25:camp2xhtml
24:edit
163:gasbooknetにてタスクdeadline等を埋める
23:修正ファイル指摘
162:c2talkにTaskを入力
22:変数ピック
97:一元
21:@wait 修正
160:経営者
20:テスト
95:バックアップ
94:検索性
91:=======================================
2006年12月27日
東窪
=======================================

1. プロジェクト期間:1/9～4月末。
3月末に1次リリース。4月末にオプション機能のリリース。
これはユーザの業務等の都合による。

他ベンダへの見積り依頼（提案依頼）と比較などを経て
予算、機能、期間が明確になっている。

規模は4.5人月程度。

2. 機能概要
業務改善系のウェブアプリケーション。
今回の必要要件は特にSE・PMの技能・作業。
状況に応じてプログラミングや開発環境整備などの技術作業も行う。
要件定義、仕様作成、設計、スケジュール管理、予算管理、客先との交渉など。

パイオニアのマニュアルを作成しているパイオニア関連会社での
資料管理アプリケーション。
パイオニアのマニュアル作成工程の進捗管理システム。


3. 言語、環境
php。納品先にperl/phpの技術者がいるため、
こちらとの相性を重視して、php利用が決まっている。
linux。特に現状はFedora Core 6を想定。
postgres,apache,php5の利用。
開発環境のosは問わない。

java,vb/.net系、ruby等の提案は難しい？
->提案を受け入れる姿勢は顕著にあるので、
リーズナブルであれば可能性としてはあるらしい。


4.既存のシステム
いまのところ既存システムというべきものはない。
紙で行っている業務をウェブアプにする。


5. 規模、予算
PG3人月程度、SE1人月程度。4-5人月程度の規模。


6. 場所拘束
・最低2日程度。多いほどのぞましい。
・PGはヴァイタルサービス社内で開発。SEとPGとのコミュニケーションはSEがヴァイタルサービスや
　オンライン、電話などで行うという形になる。


7. 開発手法
・特にいまのところ制限はない。提案可能。
・イタレーションも可能。
（1週間、2週間と期限をきめて、動いているシステムを提出。
　フィードバックを先方からいただきながら進めていく形）


8. フレームワーク、ツールの利用について
・phpでのOSS などのフレームワークの提案も可能ですか？
→基本的にはありえる。


9. 納品物の運用とメンテナンスについて
・運用マニュアルを納品する。
・運用はユーザの開発局などがマニュアルを参考に行う。
・障害発生時や運用に問題がある場合などは都度相談。


10.ハードウェア
・ハード調達はユーザが行う。すでに調達が済んでおり、データセンタか
らのラックレンタルの形態をとっている。
・RAIL0+1をしたマシンを2台。これは上述の大きく分けた二つの業務に対応する。
・アクティブユーザ数などは未定。


11.要求定義について
手書き・テクストベースの、簡単な要求定義的な資料をいただいている。
機能仕様レベルではないよう。


12.ドキュメントの作成
機能仕様等以外に、成果物として必要資料の指定がありますか？
候補としては
1.マニュアル（マニュアル的な機能仕様を作るということもありえます）
2.UMLなどの統一規格ではない技術仕様書
3.UMLでの技術仕様書


昨今、技術ドキュメントは技術者でなければ理解できないし、
技術者ならばコードとデータベース構造と画面仕様程度の方が扱いやすい、
といった点を踏まえて、コード中心で、データ仕様などの仕様レベル以上の
ものは作らない、というケースが増えてきています。


→基本的には不要とのこと。こちらからの提案は可能。
東窪は、技術仕様書（データベーススキーマとER図）があれば、ドキュメントは不要だと考えています。



==================================


90:システム開発基本情報インタビュー
45:画面仕様に足りないもの
139:ファイルメーカーにジョブと仕入れ、請求を入れる
43:@wait modeling
138:ジョブとタスクを管理したい
42:MagicDrawか紙かnodepad
137:ジョブ原価計算したい
41:@keyword [[RuntimeNodeOfgasscheduler]]
136:請求とかの伝票出したい
40:@out Find GoalNode
134:@wait フォルダにまとめるはまとめる
＋ジョブのデータベースに進捗属性などを持つのは別途考える
133:@wait フォルダにまとめる＋属性の管理は別
132:@wait コピペで属性を変更を表現するのは避ける
131:多重管理をなくす
64:待ち
159:ユーザー
62:modeling
19:@keyword [[debug]]
158:ジョブの新規追加、編集、削除（管理）
をFileMakerとgasbooknetで行う
18:OutOfPatterning == coding
157:長谷川さん的な人

17:開発機への配備
156:ファイルメーカーとDBのシンクロ？
16:xhtml2jsp
15:先方へ連絡
154:@wait preinterview
89:サーバはすでにありますか？
ホスティングでしょうか。
契約がすでにありますか？
回線は既にありますか？
グローバルipありますか？
支払方法はなにをとりますか？
それぞれについてサービスきまってますか？
参考URLありますか。
画面仕様ありますか。
各画面についての画面仕様について、他のサイトのURLの参考資料とかでもいいのでありますか。
ツギハギでもかまいません。
ログインという概念があるサイトですか。
データ投入は管理画面が必要ですか。
物流との絡みがありますか。
発送作業が必要ですか。
javaでいいですか。
自社サーバとかですか。
予算額が先にきまってますか。
売り上げ額とスパンのセットが先にきまっていますか。
サービスインの日取り
デザイン担当。
デザインから出てくる資料は。
xhtmlコーディングは誰がやりますか。
スケジュール管理は誰がやりますか。
イタレーションでいいですか。
コーダーきまってますか。
運用は誰がやりますか。
動作時のゴールってなんですか？
動作時の収益が決定するのはどこですか？
153:@wait EstimationChoiseで選ぶためのテストを出し切る
＋出し切れない場合、想定仕様未定義分コスト（未定義の場合はありません）、を出す。
仕様をこちらで出している場合は営業情報にそう入れる
13:#keyword [[配備]]
88:storytellinginterview
152:@wait チェックリストに通す
■チェックリストで自己チェック
漏れやすい機能要件 

セットアップ・インストールプログラム 
データ変換ユーティリティ 
サードパーティ、オープンソースを使うためのラッパ 
ヘルプシステム 
配置モード（リリースモード） 
外部システムインターフェース 
忘れがちな非機能要件 

正確性 
相互運用性 
更新性：ごめん、よくわからないで書いている。 
性能 
移植性 
応答性 
再利用性 
拡張性 
セキュリティ 
生存性（？）：ごめん、よくわからないで書いている。 
利便性（ユーザビリティ） 
これをどのように工数に反映させるのか。
私は定型の手法を持っていない。すまない。
計測できるものならするが、非機能要件などは計測は難しいのだ。
テキトーに実装工数を何倍かしている（1.1倍、とか）。

作業の時間粒度を10時間以内にする。
12:#wait sql dupmpfile
87:センテンスを登録し、
http://storytellermachine.net:8080/storyteller/UpdateTestFrom.do?id=${j2eeStory.id}　自動書き出し
151:@wait 幻想ファクターなくす。悲観的に。最悪のケースは8倍くらいにはなる
11:TestedSystem
150:@wait きちんとしたインターフェイスを出す。
リスク表
10:#wait war
85:RequestTestWithAsmainTest
84:preinterview
83:EstimationChoiseで選ぶためのテストを出し切る
＋出し切れない場合、想定仕様未定義分コスト（未定義の場合はありません）、を出す。
仕様をこちらで出している場合は営業情報にそう入れる
82:開発する
39:@wait nodepad
81:契約する
80:了承絵を得る
37:@out RuntimeNoding
36:RuntimeNoding
100:
35:http://localhost:8090/st/
34:run mvn -o at andromda
33:@storyteller
32:@wait PostSentencesOnStoryteller
31:モック
170:メルマガのデータの移行？
30:@wait StorytellerCodesDownload
28:あるデータをループして、というのはあっていい。
31:パターン
27:ファイルから、みたいなのはもうあっていい。
30:Attachments of work
MainAttachmentOfAWorkとか必要。
26:フラットなフォルダを2タイプ得られる。
25:JSPで、ある条件での一覧とかをとるパターン
24:Utils吐き出し。
23:アーティストフォルダと、
フラットフォルダ。
アーティストフォルダーだけのバージョンと、
逆と、それぞれを持つ。
19:@done 作品、という記述も一種のタグに過ぎないことを表現する
18:Attachmentとしては認識しておき、かつそのメイン画像の有無などを取得する。
17:Attachment間の関連づけ
16:アーティスト名にしてもらう。
15:フォルダーとxls形式は？
14:アーティストのエントリーもする
9:画像を簡単に入れ込む
11:画像はとりあえず入れといてそれをアーティスト名にくくりつける。
44:モデルにあわせてスキーマalter
10:フラットなフォルダ
43:コード群を修正する。
（リファクタリング）する
42:データベーススキーマ変更

39:バリデーション
41:ECLIPSE PATTERN
38:存在チェック
40:データへ、制限を適用するように促すこと。
制限をインがするためのもの。
37:ファイル名にはき出すプログラム
36:ファイル名からとる
34:今はどのファイルがどのファイルのなにかとかの情報が命名規則しかない。
命名規則に従ってない場合はでたらめに入る。
これを入れるインターフェイス
117:@done タグへの被リンク
200:@done データのアップ
116:@done ArtistTaggingのインターフェイスを作る
114:@done Award,Space,Event,NewsSource,Country,TagについてはShowを作る。
書くマスタについて被リンクつくる
NewsSourceについて、外部のニュースソースではないやつを得れるようにする。
ブログ的なものを作る。
twitter的なものにしてもいい。
そこに自動リンクがついていく感じ。
自分自動リンクができるようにするのでもいい。
オートタギングされるようになる。
タグに対してユーザーが処理できるようになる？
ArtistTaggingとかのインターフェイス

113:@done Buildtime
112:@done Runtime
79:@done リンク元のテクストの作成

77:@done 統計の自動提出。
特に売り上げのあがる製品の自動作成と、自動計算
76:@done IRか企業へのバック
75:@done ソリューションであるということを提示できる。
ポートフォリオ代行をしてくれる
224:エラーへの対応？
画像がすべてはいってない問題。
139:@done 石田さんの導入
74:@done アーティスト、スペースなどについての
記事が既にあればそれはいい。
ない場合は
NewsSourcesByGasの内容を検索した内容を
アーティストページにも出す。
223:どうすればzipupload
138:@done 西野さんに進捗報告できる状態に

73:@done ユーザーが喜ぶ
137:@done xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
                                      Buildtime
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
72:@done 良質の記事への被リンクを強制する
186:@done アーティストのデスクリプションに
タグのワードが登場したら、アーティストタギングを作る。
アーティストのタグ
220:@done 請求書送付する。
70:@done Purchase
184:@done 配備
134:@done コピーの大本となるデータをもらう
133:@done かっこいいかかわいいか
性的緊張
性的接続
出会い
紹介者、DIggerという感じ
131:@done 記事の中の出現頻度を自動解析。
KEIも自動解析する。
高いやつについて、自動補正するように、
この記事の自動タグ、とかいって繰り返しだす
130:@done なんかかっちょいい
249:メールする
248:スケジュールもらう
99:@done こっからニュース作成へのリンクを出す
247:自動のケースを書き出して見積もり
98:@done ShowPublicUserの内容
246:以下二点を終了条件とする。
＋現状の32アーティストについての作品がすべてウェブ上にアップされること
＋１以外＝兼松仕様部位は、Gas as I/F様側にて提出頂いた内容
　期待されるように実装されているか確認（検収）いただく。
　検収スケジュールを出していただいく。

＋１の完成は二月一五日とする。
244:仕様策定（マニュアル作成、主にはデータのエラーのパターンだしと
これに対する対応の決定は、
石田さん分という作業の中とする。
95:@done どんなポストか。現仕様では商品登録のときのみ。
だけど欲しいのは登録してからという流れ。
243:コーディング対応の際には見積もり提出の上実装する。
94:@done むしろPublicUserの作成方法
242:アップロードするのに手動でオーサリングする必要と、
自動で処理できる場合があり、
また現状エラーになっているものについても
どちらで対応していくかをこちらで決定していく。
109:@done 広告枠売り＋高いビュー
44:@done タグ
241:マニュアルを仕様とする。
92:@done 
how can we add public user news
108:@done 買いたいもの見つかる（マッチング）
240:ご要望として、時間を週3時間程度はとっていただくことを確定する。
定例会議。
90:どうすれば自動的に検出する。頻度から。
154:@done @wait グラデーションになって入っているのを美しく見せるビューを一つ作る。
101:@done rssurlがからじゃなければニュースをとるように変更
100:@done @keyword [[型かフラグか]]
219:@done 請求たてる方法。
69:@done 商品データのビュー
68:@done ユーザービュー
67:@done ユーザー囲い込み
216:@done @wait どうやって？
214:@done @Noding アーティスト写真の速度が遅いみたい
64:@done ユーザーのブログにautolinkedな情報を出せる。
129:@done 相互リンクしていってコンテンツが増えるかも。あとキーワードページになるかも。
63:@done KPIとして、アーティストからの問い合わせ
177:@done @wait PC渡す。

211:@done @wait 自体はやってもらう
127:@done 別に編集を行って本として出すのでそのソースとなる。
61:@done ガスが喜ぶ
175:@done いれてもらおう。
126:@done はてなをモデリング。
シンプルな日記。つながる日記。
デザインはカスタマイズできる方がいい。
RSSは当然吐く。
インポートができるようにする。
60:@done タグ画面に
「このタグがアーティストによってつけられています。」
125:@done それか、ちゃんとしたブログ（日記）ツールとしてしまう。
122:@done Award,Space,Event,NewsSource,Country,Tagについては
Showを作る。
239:データアップロードのマニュアルの作成等はこちらで行う。
89:@done Hatenize.do。
88:@done 簡易の「hatenizer」があっていい。
87:どうすれば
半固有名詞（kizashi的）
234:提案する
85:どうすれば記事、の出現頻度の補正
84:@done ニュース画面とかを真っ赤（リンクされすぎ状態）にする
196:@done 着金
82:@done アーティストの登録とそのブログのデータエントリー
195:@done 評判
230:西野さんと相談の上。
81:@done artistにブログとかとりださす
194:@done CRM
80:@done PublicUserNews
193:@done storytellerdev
144:@done ニュースの自動リンクを一回は知らせる

192:@done gasbooknet
142:@done 
ローカルでデータいれてそれをアップする
141:@done 
配備する
140:@done 既にできるデータエントリーの作業を降る？
209:@done @Air 設定資料を送付する
208:@done @wait DBチューニング
59:@done アーティスト自体の作品と
自身へのタグ付けがされて
それは特別扱いする
207:@done @wait 速度
57:@done 言及がある。

56:@done artistが喜ぶ

119:@done 自動リンクもとテクストと自動リンク
167:@done ダミーフィラー以外のデータを入れる
118:@done seo + pyramid
15:自分でフォルダシンクロだけしといて、あとはサーバー側でトリガー？
9:破壊的にシンクロ
14:shell ftp
8:非破壊的にシンクロ？破壊的に

23:スリープを入れる？
13:shell + scp
7:
12:独自開発
6:選択肢と実験
11:非破壊的にシンクロ
5:開発コスト
20:ほかのオペレーションはOKになる。

10:samba + synctoy
4:保守コスト
3:セキュア
19:落ちちゃうのは避ける。
48:sss
47:test
46:ジョブとタスクは？
ジョブはガスのプロジェクト的なもの？
サンプルある？
ガスのプロジェクトは？
モックのurlを提出しますので、要望をテストとして書ける？
http://www.enclosing.net/test_way/test_way.html
デザインは？デザイナーは？
業務アプリ、の資料について、今回の人事以外のものも画面かけますか？
45:画面仕様に足りないもの
44:質問する
19:@wait @keyword [[debug]]
43:@wait modeling
18:@wait OutOfPatterning == coding
42:MagicDrawか紙かnodepad
17:@wait 開発機への配備
41:@keyword [[RuntimeNodeOfgasscheduler]]
16:@wait xhtml2jsp
40:@out Find GoalNode
15:@wait 先方へ連絡
14:@wait 検収期間設定
13:@wait #keyword [[配備]]
12:@wait #wait sql dupmpfile
11:@wait TestedSystem
10:@wait #wait war
56:見積もる
54:what you saw instead
what you expected to see
steps to repeat

29:@wait モック
53:Run the mock on eclipse
28:@wait mock
52:steps to repeat
27:@wait sss
51:what you expected to see
26:@wait test
50:what you saw instead
25:@wait camp2xhtml
24:@wait edit
23:@wait 修正ファイル指摘
22:@wait 変数ピック
21:@wait 修正
20:@wait テスト
9:@wait #keyword [[配備]]
8:@wait #wait server url
7:@wait ター
39:@wait nodepad
6:@wait サービスイン。
配置  = deploy
38:@wait [[Choise]] From Verb
5:@wait 検収
37:@out RuntimeNoding
4:@wait storyteller
36:RuntimeNoding
3:@wait gasscheduler
35:http://localhost:8090/st/
34:run mvn -o at andromda
33:@storyteller
32:@wait PostSentencesOnStoryteller
31:@wait モック
30:@wait StorytellerCodesDownload
2729:#wait どうやってデータをjsp以外で出すか。
2718:#wait すべてのパーツを対応
2728:#wait jspのあれでやるのどう？
2717:#wait nの場合どうすればできるか？
2727:#wait データ部位の表示
言語は増えるので？
置き換えたりしたほうがいいかも。
2726:#wait post disoplay and delete language
2737:how we can internationalize the 
part of artist descriptions and 
also product.destription?
needs to have an id.
2725:#wait post and display and delete message
2647:多言語対応の件、お手数おかけしますが、
お見積もりいただけますでしょうか？
日本語と英語はすべてのパーツで対応、
nカ国目以上は、例えば以下のパターンで違ってますか？
・アップする内容だけ対応
・すべてのパーツを対応
2724:#wait dbにデータを
2713:#wait やらなくてはいけないことを書き出す。どうすれば？
2723:#wait dbにデータを登録する
2734:xxxxxxxxxxxxxxxxxxxxxxx
NORMAL SENTENCES =12 * 1  + 6 * 1 = 18
xxxxxxxxxxxxxxxxxxxxxx
crud messageresources
crud languages
 
 
 
 
xxxxxxxxxxxxxxxxxxxxx
OP snetneces 3 + 3 + 3 * n
xxxxxxxxxxxxxxxxxxxxxx
generate message-resources file from db : 3
jsp taglib : 3
insertion of this things (3 or .5 per insertion point)
ユーザにデータ投入させる場合3.そうじゃない場合、.5
 
 
 
 
xxxxxxxxxxxxxxxxxxxxxx
summery 24 + (3 or 0.5 * n)
xxxxxxxxxxxxxxxxxxxxxx
設計と基本部位実装で24万。
あとは国際化対応する箇所1箇所ごとに3万程度です。
たとえばアーティストの説明文を国際化するとして、
2722:#wait メッセージリソースへのデータ書き換え
2721:#wait messageresourceへの置き換え
2720:#wait nのときのランタイムを書けばいい。
ユーザがトップページに行く
言語をスペイン語に設定する。（PostPublicUserAboutLanguage)
同ページのメニュー部位がスペイン語で表示される。
アーティスト一覧画面に行く。説明のところが英語に。
2731:#wait jspを用意する＋ラングとメッセージだけど、内容はmessage resourcesじゃないものをつかう。
2730:#wait 出す部位について、やっぱりメッセージみたいなやつをもっているが
内容は動的にdbにはいっているものをだす
144:vital
143:stsc
96:ハウジングと回線で10000円くらい+サーバハード代。
箱狩り
142:camp2xhtml
31:20070531 ----------------------------------------
141:@wait manual
30:make contact with IM
140:winshot?

109:#done wireflamings with the Story
108:ProgrammerTeam can do OutOfPatterning
107:#done RuntimeNodeOfgasweb
43:gasweb is J2eeStory
106:StoryOfGasweb
150:@wait top
40:dataentry
119:hosting of runtime server
118:#time 20070605 cvs download by programmers
117:#done project info
116:#done assign of testers
115:testing
114:Tests
113:testers creates longgest test
111:#wait #keyword [[manualOfgasweb]]
128:design camp
110:#done Sketch
127:#net #done programer team
126:service
125:make options and choose
123:#done dev serve
122:charene
121:deploy
120:RuntimeServer
137:追加分
1.契約上方追加変更、削除、一覧=12万
2.アーティストへの支払い情報追加、履歴一覧=12万
3.支払い残高計算=3万
4.取引先への支払い情報追加、履歴一覧:取引先ごとの履歴一覧。
5.取引先追加編集、削除、一覧。12万
6.アーティストの残高での一覧:3万
88:#done x and y and width and height.
contain:boolean

24:#wait xhtml coding
133:動いてるシステムみせて働きかけるところっからかと。
ask iino san

87:#done modeling
23:xhtml2jsp
132:#done snapshot with winshot
148:vital
131:#done share wireflming
147:xhtml
84:mapping of interface + model
146:xhtml
145:camp
1:gc
12:gcinbox
11:less budget
10:less space
9:less time
7:movable
6:flow
5:boxes
4:mark
13:things 
8:gtd
34:そのこと自体のロード
32:basecampへのアクセスがちょいだるい
16:早期性
4:gcd.build
3:gcd
14:フロー駆動
13:スケール
29:ページベースに実装のノードを書く
12:効率
28:常にノードがurlになってる仕組み。
11:クリエイティブ
27:ノードアップ？
26:できてる？考えるときにそれを出
25:再現手順の実施の容易化
24:テストケースが目的。
23:目的からアクショナブルズまでのノードを読む。
22:どうすれば、容易にロードできるか。ロードを分割。
21:ロード
9:忘却
35:せば？テストケースのftmを編集してノードスレッド書く
7:offshore
3:
GeeksInIndia
3:generaldb
4:offshoreに
プロジェクト名
開発機url
を伝えて、
マニュアルを教えて、
テストをしてくれと伝える
3:generaltest
4:offshoreにプロジェクト名と開発機urlとマニュアルのテストをする。
3:generaltest
1:get_familiar
6:touch nice
5:touch
9:social network
5:get familiar
1:get_familiar_with_others
32:cf 20%
29:decide quick
31:better_dddd
30:atsuko
27:not using?
26:
23:dddd
22:crazy?
21:i m not using ipad more than reading...
read later does not work if i do it?
but i think it would be OK if i use mini....
for the documents reading...
19:
20:mini better?
9:projector
18:for 5 hours?
8:ipad
17:ipad not needed?
16:time elimination and better
6:for example?
15:should follow the point system
5:sell something?
14:crazy
4:need money
13:sell things
12:secound monitor?
11:pc
1:get_her
10:runba
45:@wait なんでも良いので連絡する→早期
52:do with law?
43:@scheduled @Air @iPhone 永江さん突く。→早める。 
evernote:///view/2337826/s21/b5054c17-570c-4322-8f4b-43e50b446016/b5054c17-570c-4322-8f4b-43e50b446016/
49:@done APCがいうことリスト。タスクたち。
evernote:///view/2337826/s21/10513018-296a-4ec8-8f68-214863542446/10513018-296a-4ec8-8f68-214863542446/
4:
41:@wait meeting
46:@wait reply
5:better looks
4:first impression
3:gggg.buildtime
14:more_channels
8:Training
11:love investment
7:@cycle smiles
10:interests
32:action , based on the [[gactions]]
48:meet
31:take a log
47:meet
3:gggg
61:looks
60:get familiar
43:GF
59:social network
42:Visiting
58:fof
41:Finding
40:Parties
54:meet with three people
53:party
38:channel
52:ggggを可視化
51:可視化
9:chance
50:評価経済
6:gggg
5:ナンパ
4:力
3:girls
131:ustreamチームくる
104:fscan
130:機材が確定する
121:@done 靴
120:@done パスを手配
5:@wait コンパニオン
139:撮影対象
・モニター写す
・ランウェイ写す
・
138:候補
- 1d レンズと三脚
- iPhone
128:IP?
127:usteram
126:返事待ち
135:カメラセット
125:@done 清末さんに聞く
134:断片動画
143:1万円
 多分2万
142:精算
81:model page
3:木
2:キャス
14:パリ
1:girly
13:印象派
12:アート。
11:楽器、クラシック楽器、
10:シュシュカフェ
9:色
8:キルフェボン
7:暖色
6:木
5:デコった光
4:ヌフカフェ
4:github
3:git
5:http://github.com
4:@toukubo
3:github
5:http://github.com
4:@toukubo
3:github
2:deal
1:glacier
1:glucose
5:try glucoe
4:honey
10:easier operation with superb UI to show the contents. 
43:texts
54:layout informations
42:the codes for the 
20:* BUILD TIME
53:code to display
52:click images to evernote
51:make things clickable
50:let users foloow the contents
9:duplication is evil
8:permalink base
5:relation ships!
4:prepare glue customfield? 
or choose from tumblr links.
3:glue and js
19:wp posts to json
28:make the [[element]] super
16:posts
49:glue
27:modeling
15:wp materials
48:loading json contents and loading json view contents, and display it into the view.
26:make the [[element]] super
59:@Air find mail post
14:server
47:mail post functionality?
25:どうすれば
58:big map web
35:automation
13:dropbox
46:story telling and pages images
57:decide the format.
decide the story.
with priority
12:notebook
45:view posts with layouts
56:wp2 json == wp 2 content. mustacheing. 
+ jsonencode
33:newing
11:evernote
44:json
55:showing
1:gmap
10:nomad cheap
4:性的緊張
7:https://mapsengine.google.com/map/u/0/edit?authuser=0&authuser=0&hl=ja&hl=ja&mid=zclHUy5QUwAk.kZe2bn4Oh6rA
1:go_and_back
1:go_out__back
6:css
4:GoalNode
3:RuntimeNode
13:pay 10 by 10 and tell it anyways
12:pay 30 by 30
9:sbi
11:pay back anyway
8:やってみる
10:how can i stop hesitating sbi
7:問題発見
6:障害
5:問題
4:what is [[problem]]
1:gohome
16:emobile
15:what is needed to be hold
14:企業をする。
13:自発性
12:自発性を探る
9:資金調達への門徒
11:Customer Managed Interaction
8:メッセージにのって人が来る。
10:ファン
7:メッセージの特定をする
6:
5:銀行とかVCとか
4:web、のなにかがキー
3:goodbank
15:ジャンボジェット機
6:google
5:tag
8:keitai
3:google is resource and required sdo much . resource = tag.
appears so often
7:network?
4:https://drive.google.com/#
3:googledrive
13:clouddata
9:insync
12:multple user interface
8:list
4:meeting + tasktemplate
3:gothrough
4:Grepパターン
3:Greppable
3:package net.pmcsm.web;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.enclosing.util.HTTPGetRedirection;

import org.apache.commons.lang.StringUtils;

public class DateSpanValidation {
	public DateSpanValidation(HttpServletRequest req,HttpServletResponse res,String uri){
		try {
			String error = "";
			if(!StringUtils.isNumeric(req.getParameter("startyear"))
					|| !StringUtils.isNumeric(req.getParameter("startmonth"))
					|| !StringUtils.isNumeric(req.getParameter("endyear"))
					|| !StringUtils.isNumeric(req.getParameter("endmonth"))
					|| !StringUtils.isNumeric(req.getParameter("startday"))
					|| !StringUtils.isNumeric(req.getParameter("endday"))
					
			
			){
				error += "数値を正しく入力してください";
			}
			if (StringUtils.isBlank(req.getParameter("startyear"))
				||StringUtils.isBlank(req.getParameter("startmonth"))
				||StringUtils.isBlank(req.getParameter("endyear"))
				||StringUtils.isBlank(req.getParameter("endmonth"))
				||StringUtils.isBlank(req.getParameter("startday"))
				||StringUtils.isBlank(req.getParameter("endday"))
			){
				error += "日付のいずれかが空です。";
			}


			if (StringUtils.isNotBlank(error)){
				req.getSession().setAttribute("error", error);
				new HTTPGetRedirection(req, res, uri, "");
				return;
			}else{
				
				req.setAttribute("startyear",req.getParameter("startyear"));
				req.setAttribute("startmonth",req.getParameter("startmonth"));
				req.setAttribute("startday",req.getParameter("startday"));
				req.setAttribute("endyear",req.getParameter("endyear"));
				req.setAttribute("endmonth",req.getParameter("endmonth"));
				req.setAttribute("endday",req.getParameter("endday"));
				SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd hh:mm:ss");
				Calendar calendar = Calendar.getInstance();
//			calendar.set(Calendar.YEAR,Integer.parseInt(req.getParameter("startyear")));
//			calendar.set(Calendar.MONTH,Integer.parseInt(req.getParameter("startmonth")) - 1);
//			calendar.set(Calendar.DAY_OF_MONTH,Integer.parseInt(req.getParameter("startday")));
//			calendar.set(Calendar.HOUR, 0);
//			calendar.set(Calendar.MINUTE,0);
//			calendar.set(Calendar.SECOND,0);
				
//			calendar.set(Calendar.DAY_OF_MONTH,21);
//			calendar.set(Calendar.HOUR_OF_DAY,0);
//			Date date = new Date(calendar.getTimeInMillis());
				
				Date date = dateFormat.parse(req.getParameter("startyear")+"/"+req.getParameter("startmonth") + "/" + (Integer.parseInt(req.getParameter("startday")) - 1) + " 00:00:00");
				this.setDate(date);
				
				calendar.set(Calendar.YEAR,Integer.parseInt(req.getParameter("endyear")));
				calendar.set(Calendar.MONTH,Integer.parseInt(req.getParameter("endmonth")) - 1);
				calendar.set(Calendar.DAY_OF_MONTH,Integer.parseInt(req.getParameter("endday")));
				calendar.set(Calendar.HOUR, 23);
				calendar.set(Calendar.MINUTE,59);
				calendar.set(Calendar.SECOND,59);

				Date date2 = new Date(calendar.getTimeInMillis());
				this.setDate2(date2);
				
			}
		} catch (NumberFormatException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
	Date date = null;
	Date date2 = null;
	public Date getDate() {
		return date;
	}
	public void setDate(Date date) {
		this.date = date;
	}
	public Date getDate2() {
		return date2;
	}
	public void setDate2(Date date2) {
		this.date2 = date2;
	}
	
	

}

43:閲覧のための権限をチェックインにしぼる。
3:可視化
2:visualization
41:余剰性
1:groundzero
40:創発性
29:出会い
28:those news
78:投資循環
27:amplifier startups successful
77:着手のゴールの可視化 x　参加の可視化 x 速度の可視化 x 問題（ゴール）と
26:networking tot the startups
76:参加
25:利益
75:事業計画とプレゼンテーション
24:早めのお誘い
74:ピッチ
73:投資の直列化
72:レベニュー
71:モックアップ
20:集客
70:mock
57:クラスの可視化としての紙
54:theamplifier
53:集まった数だけ投資してくれるアンプリファイアー
52:great startup and choise
39:国際性
38:領域横断性
37:visualization
33:a meetup with japanese crazy talents
32:the tokyoness
31:合成
30:男女
19:Greatest People from Tokyo should be gathering there for the 
69:収集
18:exits
68:automate = 自動化
17:startup host the parties
67:Patternize
66:PatternMatching
15:so the mutual friends should be displayed 
65:Pattern
14:通知
64:template
13:twitter,facebook,basecamp
63:mail
12:stream
62:一通ずつメール＋テンプレート
11:content
61:集客してくれる人を探す。
10:contact info
60:パーティーの付加価値
49:amplifier
9:mail / phone / skype / goto / see / basecamp / generate rss * readers
8:@iPhone teleblah
47:参加者の一覧にmutual friensが出ている
7:message
6:ウェブ
45:イベントの参加の通知と参加の可視化
5:ストリーム
44:そのこと自体が参加になることの可視化。
4:メッセージ
30:notification check every 1 hour
88:nextの時間
86:密度
242:@wait SearchLater
83:story
82:storytelling
81:CF
80:集中
139:http://thepiratebay.se/search/girls%20in%20hawaii/0/99/0
138:capture -> search ->
136:mp3
135:favorite
134:outlines
133:reply later
132:?????
131:rtm2bc
189:多目的化
130:ShouldBeDelegated
188:自動
187:適材適所
186:モチベーション
185:ユーザビリティ
184:福利
28:todo inbox
183:context base
27:転送？
182:速さ>早さ
26:mail2rtm
181:最適なUIと自動化
25:basecampのprogress
180:プログラミング5パー高速化で一ヶ月200万か1億
239:Evironmental day [[トリガー]]どうすれば出来るか。
24:1min reply
23:2min exec
22:priority assigning
236:一回入れてみる
21:contexting
79:detailing
235:filter
20:=====================
Runtime
===========================
78:オフショア
234:nodepadでやってみるのがいいのかな。
77:delegate
233:マストなのか統計してみる
76:assign to me
232:mustではなかったときにコスト
75:basecamp todos
231:poemingFiltered
74:ルールだと新しい人がダメ
230:nothing alike
73:[DONE]ってつける
72:requestをキューにする
71:プログラミング可能性選択
70:ui選択
129:mail organize
128:photo
127:inbox
126:AD @Home
125:eye-fi
124:eos
123:permalink photos ( flickr )
122:photo capture
121:personal photos
179:商流
120:flickr
178:nea
177:すごい質問
176:data model fitness
175:inboxize
19:tobespamfilteredは自動filter作る
174:@done put the frequencies
18:tobefiltered
17:mail inbox
16:nodepadに
15:ネクストアクションたち
229:nodepad.
228:what it is like? box
13:capture
227:tagging
226:less switching of boxes.
11:favorite_videos_2_mp3
69:ifttt
225:make it lampp with insta
68:最適な箱に自動的に写す
224:too small maybe. 
67:reply outlines
223:better read?
66:organize
222:put the priorities on the reminders?
65:replys
221:not always see the reminders? why?
64:DI的にqueue化する（チェックボックスとコメント可能にする）
220:rtm
63:permalink?
62:rtm2tumblrDrafts
61:Views
60:Images Search
119:monogawa tag
118:photos
117:storytelling
116:story
115:monogawa
114:Outlinings
113:search later
165:横断的効率化
164:Buffer
163:適材適所
162:オフショア
161:automate
160:楽できるとこ探す
219:gmail
218:insta directly
59:Tumblr Posts
215:execution
214:Air1
57:iMacで開く
213:Air and Pads
56:早いパソコンでartistfile torrentsファイルだけ落とす
212:BreakDown
55:artist names @rtm
211:breaking down 
54:musician2mp3
210:smaller tasks
53:watch later
52:最適な箱
50:なにか
107:サイクル頻度設定する
9:タギングインターフェイスで実施されるようにする
106:nodepad->compare化
105:sort out
7:queueに入れる。。。
6:最適な箱に写すところは自動的にできそう。。。
103:how/compareフィルタ
5:ログ
102:done
159:scaleを計算する
101:put to nodepad
3:GTD
158:template
100:hows
157:os
156:共有
155:効率
153:毎時間、などサイクルの時間に殺るべきことをまとめる
151:Nominating
150:FBから見つかった人をタグるのはどうする。
209:
208:executables
207:BreakDowns
49:デリバリー速度
48:ギリギリの回数
204:
47:バッファー
203:better_interfaces
46:集中
45:速度
201:deligatables and people
44:定置管理
200:keyboard
43:コンテクストベース
42:UI最適
41:フロー
99:co-efficient
40:重力
98:values
97:cons and pross
96:nodings
95:set
94:elements
93:compare todos
92:比較か検討
91:nodepads
90:bc2rtm
148:reviewとbetter
147:non-projectbase?
146:CF
143:post pone
142:timer
141:readlater
199:g
140:capture
198:communications
197:仕組み化
196:モデリング
195:食事
39:phisical inbox
194:栄養
38:better_delegate
193:網羅
37:team workflow request queue
192:睡眠
36:better interface than 転送
191:バッファ
190:pknk
34:Air
248:@wait time, task, causal rows, search,
33:read laters queue
32:reminder check
31:pad
89:選択肢減らす
245:better_hiring
30:notification check every 1 hour
88:nextの時間
86:密度
242:@wait SearchLater
83:story
82:storytelling
81:CF
80:集中
139:http://thepiratebay.se/search/girls%20in%20hawaii/0/99/0
138:capture -> search ->
136:mp3
135:favorite
134:outlines
133:reply later
132:?????
131:rtm2bc
189:多目的化
130:ShouldBeDelegated
188:自動
187:適材適所
186:モチベーション
185:ユーザビリティ
184:福利
28:todo inbox
183:context base
27:転送？
182:速さ>早さ
26:mail2rtm
181:最適なUIと自動化
25:basecampのprogress
180:プログラミング5パー高速化で一ヶ月200万か1億
239:Evironmental day [[トリガー]]どうすれば出来るか。
24:1min reply
23:2min exec
22:priority assigning
236:一回入れてみる
21:contexting
79:detailing
235:filter
20:=====================
Runtime
===========================
78:オフショア
234:nodepadでやってみるのがいいのかな。
77:delegate
233:マストなのか統計してみる
76:assign to me
232:mustではなかったときにコスト
75:basecamp todos
231:poemingFiltered
74:ルールだと新しい人がダメ
230:nothing alike
73:[DONE]ってつける
72:requestをキューにする
71:プログラミング可能性選択
70:ui選択
129:mail organize
128:photo
127:inbox
126:AD @Home
125:eye-fi
124:eos
123:permalink photos ( flickr )
122:photo capture
121:personal photos
179:商流
120:flickr
178:nea
177:すごい質問
176:data model fitness
175:inboxize
19:tobespamfilteredは自動filter作る
174:@done put the frequencies
18:tobefiltered
17:mail inbox
16:nodepadに
15:ネクストアクションたち
229:nodepad.
228:what it is like? box
13:capture
227:tagging
226:less switching of boxes.
11:favorite_videos_2_mp3
69:ifttt
225:make it lampp with insta
68:最適な箱に自動的に写す
224:too small maybe. 
67:reply outlines
223:better read?
66:organize
222:put the priorities on the reminders?
65:replys
221:not always see the reminders? why?
64:DI的にqueue化する（チェックボックスとコメント可能にする）
220:rtm
63:permalink?
62:rtm2tumblrDrafts
61:Views
60:Images Search
119:monogawa tag
118:photos
117:storytelling
116:story
115:monogawa
114:Outlinings
113:search later
165:横断的効率化
164:Buffer
163:適材適所
162:オフショア
161:automate
160:楽できるとこ探す
219:gmail
218:insta directly
59:Tumblr Posts
215:execution
214:Air1
57:iMacで開く
213:Air and Pads
56:早いパソコンでartistfile torrentsファイルだけ落とす
212:BreakDown
55:artist names @rtm
211:breaking down 
54:musician2mp3
210:smaller tasks
53:watch later
52:最適な箱
50:なにか
107:サイクル頻度設定する
9:タギングインターフェイスで実施されるようにする
106:nodepad->compare化
105:sort out
7:queueに入れる。。。
6:最適な箱に写すところは自動的にできそう。。。
103:how/compareフィルタ
5:ログ
102:done
159:scaleを計算する
101:put to nodepad
3:GTD
158:template
100:hows
157:os
156:共有
155:効率
153:毎時間、などサイクルの時間に殺るべきことをまとめる
151:Nominating
150:FBから見つかった人をタグるのはどうする。
49:デリバリー速度
48:ギリギリの回数
204:
47:バッファー
203:better_interfaces
46:集中
45:速度
201:deligatables and people
44:定置管理
200:keyboard
43:コンテクストベース
42:UI最適
41:フロー
99:co-efficient
40:重力
98:values
97:cons and pross
253:30min perhour
96:nodings
252:automate your own with ifttt
95:set
251:@Air_search RSSes of each project.
94:elements
93:compare todos
92:比較か検討
91:nodepads
90:bc2rtm
148:reviewとbetter
147:non-projectbase?
146:CF
143:post pone
142:timer
141:readlater
199:g
140:capture
198:communications
197:仕組み化
196:モデリング
195:食事
39:phisical inbox
194:栄養
38:better_delegate
193:網羅
37:team workflow request queue
192:睡眠
36:better interface than 転送
191:バッファ
190:pknk
34:Air
248:@wait time, task, causal rows, search,
33:read laters queue
32:reminder check
31:pad
89:選択肢減らす
245:better_hiring
14:project base
13:exponent
12:Workflow
9:context base
11:efficiency
8:less todos on one time
10:forget and remember
7:forget the todos
6:follow 3month nodepad tasks
5:nodepad
4:follow roi and management.run
3:GTD
15:小さい作業はrunning入れる
1:gum
5:乳酸菌
4:歯
6:gw
14:share
13:basecampのファイルアップが共有
12:httpアクセス
11:driveの割り当て
20:cvsも配置できるようにする
19:bettergw
9:webdav
18:nodepad
17:dreamhost
8:ftp
19:login and scraping?
18:data connection?
17:predicted attendance
16:prediction
15:calendar view
14:point validity
29:girls. shame photos
13:scrape the costs from  city
28:shop.kinds
12:for further 3 days
9:restrction on prices range
restrction on the hitrate
27:girls.shop
11:attendance detection
26:girls.cost
10:all the gs list ( not only in city heaven ) 
25:shop .costs
39:detect from shop url for city
24:sorted attendances
38:ch girls
5:essential
23:scoring on look on g
37:girls.look
4:make minimum
22:soku
36:possible attenadances
35:girl.schedules
34:girl.schedulePage
49:shops and girls scraping and sync it to our wp
48:shop.cost by scraping.
shop lists
32:girls
47:build
31:  1. 新人検出
46:slots valid
30:
  1. 待機中になったなどのストリームビュー。
45:remaining slots
44:Slots
43:二回目性
42:girl.secound
41:shops
40:put the cost on wp
53:SlotUse
52:BookmarkedAttendance
7:洗顔
6:髪
4:protain bar
1:gym
49:snowing day
48:raining day
47:the internet
39:  16. tao?
38:  15. シャワーすればいい？
29:  6. さむすぎる。
45:shower at home
37:  14. すぐに作業できる（着替えとかない？）
28:  5. あつすぎる。
44:expensives
36:  13. 帽子。
27:  4. 総合的なROI。（運動の効果）
43:agc
35:  12. カラス？
26:  3. 駅チカ。
42:  19. 太陽？
34:  11. その辺走る？
50:day too hot
25:  2. 安めの別のところという選択肢
41:  18. 他の人がいる問題？
33:  10. 風呂にはいる。
24:  1. CF。重み強い。
40:  17. g
32:  9. 風邪をひく。
31:  8. はらと菌
14:@tao toratopia tao
30:  7. サッカーやってた時はやれてた。
12:cheaper gym
11:pknk
10:target
43:sales
38:毛穴パック
42:自信
37:@cycle 服を月4万
41:尾根
36:@wait 洗顔
40:黒目大きく
35:@cycle 顔の筋肉
29:touch
34:顔
28:touch nice
33:髪
27:take a log
32:丈
26:chance
31:香
25:get familiar
30:social network
24:looks
23:評価経済
22:gggg
21:gymg
49:get_familiar with others around the target
48:deeper
47:less time
51:get familiar with staffs
46:1bit
45:疎通
44:モテ
39:鼻
4:better_morning
3:h2h
5:starts early and paid ealier
1:haken
12:recruit takes only 15 days.
9:単価は高い方がいい。また、高い程長期では勤務しやすい。
11:payment span should be sooner
8:short terms.
10:できたらrails、swift、javaならなにかモダンなもの。
7:tech challenges. 
6:no issues to work out.
225:製作費用（初期投資）
224:収益プランニング
223:WEB仕様の決定
222:特徴、提供する価値
221:機能
220:ターゲット
98:ライターのリライト？
199:お気に入り登録
95:アテンション
159:デザインを刺激的にするチーフ。
デザインをシンプルにするチーフ。
アウトソースかをするチーフ。
コアコンをするチーフ。
ステッピングをするチーフ。
瑣末なミスを管理するチーフ。
ライターによって文章を刺激にするチーフ。
エントロピーを縮小させるチーフ。
課金チーフ
スケジュールチーフ
56:シェアポイント作る？
MLくらいでいい？
イントラCMS？
僕のツールを提供するのも面白い。
igy,nodeidなど。
197:お気に入りユーザ

94:広告枠？
158:機能を役職にくくりつける
93:課金
119:Bプランがいけるかどうかについて、
比較的距離の遠いところについても
アンケート、意見を聞くことをしてみる
92:ステッピング
118:サウンドコンテンツ？
156:1.この全ノードの中で、一番重要なノードをポイントする。全ノードにスコアする。
2.そのうち最重要でないものについては、アウトソースする。
194:画像
91:ガイド
117:メディアコンテンツ
155:ガイドの写真と紹介文がどのページにも存在する。
193:img検索系でいい？
90:実体
116:しゃべる訓練＋しゃべる人にしゃべってもらう？
自分とこでgyao？
ライブチャット・・。・
154:ガイドさんのルックス
192:画像の用意
115:タグ。というかパブリケイト的なタグ
153:顔の見せ方。写真のとり方。

50:検索回数,検索結果,KEI
のみでなくて、そのキーワードでのトップサイトを
制作するのにかかっている金額見積,の項を入れることはできませんか？
それへの投資をしたときのpv数を計算するのも
よいと思います。
113:ESP
151:健康（元氣）とあるが、健康より元気、の方がウェルネスは理解しやすい。
が元気は14977 回 9060000 件 24.8 108000000 件 2.1 
112:需要*需要/供給=KEI
150:アウトソース
111:友達の友達とデータ＆フィットネス
110:友達の友達からの情報
219:ビラ一枚で説明できるコンセプト
218:WEBコンセプト明確化
217:データdeダイエット版
216:販売、フィードバック、改善
215:製作
214:仕様決定
213:コンセプト決定
212:プロトタイプ
211:９月OPENに向けてのタスク
89:信用
88:ajax
49:ユーザーニーズ調査（健康関連ワード検索ランキング）
87:瑣末なミスのなさ
86:ルックスのよさ
47:市場調査
􀂊 2004年インターネット広告市場　1814億　（電通調べ）
􀂊 3年後に5000億という予想
􀂊 2005年　上場企業の広告収入を調査
– e-町タウン44億月3000万PV
– オールアバウト30億月7000万PV
– エキサイト32億月9億PV
– ヤフー136億1日10億PV
􀂊 各社とも、月のページビュー数、広告収入は右肩上がり
健康ポータルでNo.1のポジションをとる！
188:たべろぐに出すメニュー作成,編集インタフェイスを作る
149:IT系社長にインタビューして。
187:やったろぐ
84:ドメイン分割
148:社長と健康
186:たべろぐ
147:404　エラー報告　自動化
185:プロトタイプ
109:テンプレートデザイン
146:エラー報告を自動化する
184:仕様作成？
108:デザイナさん
145:シーズ的に体験で、検索以外からPVを充分かせぐ->半固有名詞にしていき、
それを一定以上になったら投下する
42:􀂊 トレーニングメニュー選択
􀂊 トレーニングメニュー自由設定
􀂊 記録とビジュアル化
􀂊 公開日記、コミュニティー機能
􀂊 運営側のメリット
– ユーザーがリピートでサイトに訪れる仕組みのために必要
– 情報発信だけのサイトよりも、パーソナルな情報があるほうが
再訪の頻度が多い。
107:データアンドフィットネスサイトでの友達関係の情報の
更新通知をメールで。
144:お金をかけず各テーマごとの情報発信だけページを立ててスター
トする。
182:3月20日までにアルファsin
106:データ & フィットネス
105:ページ,検索サイト順位,pv数,検索後,検索語数をチェックする。
142:高いニーズでアテンションを稼いでから徐々に展開していく。
180:BIのプラン書作成
104:ユーザビリティ
103:プログラムでデータをはく
140:プレゼンテーション
102:普遍的発見
101:更新
100:第一段階は？
209:[[dddprototype]]
9:人シート、人ノード
8:チームは個人に与えられるメリットを明記できるか
202:お気に入り表示
7:It系比率
201:お気に入り管理
6:##################################
　　　　チームワーク
##################################
200:お気に入り削除
79:rssフィードする
5:線表メタから？
78:更新通知
77:htmlが企画にあっている。
3:自分がどのくらい関与できるか。
179:アバターコンテンツの投入
76:ボットが検索しやすい
2:スケジュール。
37:キーワーデイング
178:お気に入り
1:美女と健康
139:静的テクスト化
36:ニーズ、ウォンツは、ウェブ上においては
そのもの、検索回数とヒット数が
ニーズとウォンツを表現している。
また、キーワード的である。
文章で表現してもあんまり意味がない。
74:データ入力、修正、削除速度
138:友達の友達までなら
カレンダー、スケジュールをみることができてしまう・・・

35:ニーズ・ウォンツの詳細分析
􀂊 ニーズ
– 本当に優良な健康の情報を知りたい
– 施設の場所を検索したい
– 人の経験や評価を知りたい
– よい商品を買いたい
– 仲間がほしい（ダイエット、ウォーキング）
– 自分の血液を見たい
􀂊 ウォンツ
– 情報を一箇所で見つける（健康ポータルサイト）
– 客観的データに基づく健康管理をする（データ＆フィットネス）
– ビジュアル化してライフスタイル管理する
176:全部の属性についてか、公開非公開フラグ
137:􀂊 カレンダー＆スケジュール機能
72:更新頻度
136:どっかしら場所を将来的にシェアする可能性がある
友達と友達・・・・
174:アンケート。
気になる部位
71:チェッカーでバリデーション
135:場所などのいくつかを殺す。それでも残るところに課金しないといけない
32:この印象をもつ人は例えば作る側で参加してくれる人にも
多いとおもいます。そうならば、外側からみたときの印象としても
現れるでしょう。
これに対してこの名前でいくのに、充分説明できる必要があると思います。
逆にそれができれば、全く問題はありません。
173:メールで通知。
134:自分で行う健康管理
31:無限健康というのがブランドになりえにくい名前、響き、の思えます。
172:プリントアウトできる。
133:プロトタイピング？
171:属性検索
属性提案
132:収支計画をもっと詰める
170:アンケート
230:メルマガ広告
69:メッセージがシンプルである。
29:需要の大きいところにむかっている＝ニーズ志向
だと思いました。
需要が大きいところトップを得るのに、ガイドという方法をつかっていると。
67:キーワード密度
169:ビジュアルで見れる理想体型
アバター
アバターから励ましメール
66:seo
168:年齢,性別,慎重,男女,住所,職業,プロフィールの公開:公開
体重,体脂肪,食事,運動,
ダイエット手法,
mixi///アクセスログ,誕生日?,血液型,BMI,摂取カロリー
目標値,ダイエットアイテム:ダンベルだとか,スタート時期,
リバウンド性､かかったお金？,効果,継続性
バスト,ウェスト,ヒップ,腕周り,足回り
血圧,ヨガやってるかとか
お気に入りの運動
つらさ,ペース,予算
kg/日数の値
血糖値
日記
点数化
アンケート履歴？
噛む回数
http://www.dejima21.com/d21/sp/diet.htm
お気に入り
129:資金を集める
128:動画コンテンツ一つ作るのにどのくらいかかるか
試算できるか？
166:ER
127:かめらの質
24:アメリカのオンラインフィットネスを分析。
提携、翻訳？
WEB上でトレーニング管理と記録
126:動画コンテンツ？
164:仕様を決めよう
125:スタッツを入れる。
22:コアコン
163:ヒントツール
124:青年実業家
21:健康（元氣）に関するあらゆる情報を扱うポータルサイト
– このサイトに行けば、健康になるための有益な情報
が手に入るというブランド。
– 探しているものが見つかる。
– ほしい情報に簡単にアクセスできる。
􀂊 21世紀型の健康観のパラダイム・基準を提示
– 自分の健康は自分で守る時代
– 健康的で持続可能なライフスタイル（ロハス）
– ウェルネス、予防医学、オプティマルヘルスの時代
– 自然の治癒力を発揮して真の健康を手に入れる
162:内部リンク
123:女子高生
20:キーワード的
161:##################################
　　スケジュール
##################################

122:でぶっちょ。
160:次世代科学のだしてきそうな健康をちょっとだけ紹介するとか
121:テストマーケティング
120:プランBに固定したい
229:ジェームスPR
228:マスコミPR
227:キャンペーンPR
226:マーケティング活動
9:https://storytellers.highrisehq.com/login
8:CRM
3:highrise
17:人探しのよりよい、素晴らしい方法←多分要求の定義と美文 ← tagging on highrise.
16:better highrse nd 15%
3:highrise
13:craftclip
12:better_highrise
9:https://storytellers.highrisehq.com/login
8:CRM
19:ハイライズに戻る。
18:mail client and tagging…
65:どうすれば本から取る

32:どうすればcamp2xhtml
64:どうすればレイアウト

31:どうすればgeneraltest
97:どうすればハイライズでポストできる？
63:どうすれば何パターンか作って捨てる
30:どうすればmismatchtest
96:どうすればハイライズでメールをポストすると帰ってくる？
62:どうすれば右揃え*左揃え
95:どうすればハイライズでIDを取得する
61:どうすればすごくいい写真
94:どうすればEmailをテラー側のデータとして入れる
60:どうすれば作業に見合った写真
93:どうすれば重複させない
92:どうすればemail.contentを作る
119:個人にロールを設定する
91:どうすればtags
118:チームの習慣
90:どうすればhint strings
117:recruitment
リクルート
雇用
116:メタレベルの人のタスクもテストで。
eg:品質管理者なら
[steps to repeat]ユーザー企業の実ユーザーと、経営者様、技術担当者様をが仕様を見る->開発機のURLに行く->全工程を見る
[what expeceted]まったく同様であり、品質に問題がないと思える。

115:教育制度
114:情報や知識が社内で共有化されている
113:非属人的
112:スケールさせる
111:teaming
110:team
29:どうすればcheckingtest
28:どうすればtester
27:どうすればmock
26:どうすればsss
59:どうすればbig,
tooooooo bigg
25:どうすれば全工程
58:どうすれば[[font]]
24:どうすればtestdata
57:どうすればextremize the elemete
23:どうすればtest
89:どうすればEmails with ihnt text
56:どうすれば本語より外国語のがうつくしい問題とフォントの問題
22:どうすればテスト
88:どうすれば
55:どうすればステンシル、
21:@keyword [[debug]]
87:どうすればRuntimeOfHint
54:どうすればcmyk pure colors
20:どうすればOutOfPatterning == coding
86:@magicdraw
53:どうすればイロヌキ
85:どうすればAttrPicking
52:どうすればmargine
84:どうすれば再現指摘
51:どうすればえげつないものそのまま
83:どうすればGoalNode
50:どうすれば死をあげつなく。
82:どうすればER modeling
109:チーム
9:どうすれば一日予約
81:どうすればPostSentencesOnStoryteller
108:記憶
8:どうすればmotivate
80:どうすればstory
107:hint
7:どうすればsc
106:段取り
6:どうすればサービスイン。配置  = deploy
105:ストッパー
5:どうすれば請求
104:系
103:体系の連結
2:どうすればstoryteller
1:どうすればhint
19:どうすれば開発機への配備
18:どうすればxhtml2jsp
17:どうすればhttp://www.flickr.com/photos/organize/
16:どうすればshare_photo
49:どうすればtrak2005
15:どうすればTestedSystem
48:どうすればサンプルとセットで提示、かつ因果自動提案
14:@wait sql dupmpfile
47:どうすれば時間を圧縮
13:@wait war
79:どうすればSentences
46:どうすればピンク、黄色のcmyk原色
12:どうすればSyncToy
78:どうすればValidationRuleAssign
45:どうすれば画面にとって写真に撮る
11:@wait server url
77:どうすればCommonTranslations
44:どうすれば絵の具
10:どうすればター
76:どうすればStorytellerCodesDownload
43:どうすればsigntoon
75:どうすればedit
42:どうすれば赤と緑
74:どうすれば修正ファイル指摘
41:どうすればstsc
73:どうすれば変数ピック
40:どうすれば原色そのまま。

72:どうすれば修正
71:どうすればタカヤのステンシルへの横線
70:どうすればタカヤ
125:amplifier
124:適材適所化
123:秘書プラン
122:レス
121:KPI設定する
120:習慣。KPIを自己設定してもらう。
39:どうすればチューブで
38:どうすれば光。間接照明。あてて撮影してデザインにするのもあり
37:どうすれば写真でとって、それを絵の具で
69:どうすればbubble.ai
36:どうすればhttp://b.hatena.ne.jp/toukubo/design/
68:どうすればdesigner
35:どうすればシンプリファイ
67:どうすればiaのwordpress theme
http://themes.wordpress.net/testrun/
34:どうすればdesign
66:どうすれば余白

33:どうすればoffshore
6:cashflow valid
5:cash flow risky
4:cost less
14:para
3:hire
8:person
11:hiring
33:競争のある雇用担当者雇用と、プロジェクトベースで。
32:トライアルベース
29:競争
31:たくさん人員
28:competition
30:競争の可視化
27:orientation
26:project_description
25:divigin tasks
24:decide hiring manager
23:person
22:hiring
21:cost less
19:cashflow valid
20:cash flow risky
18:hire
8:person
17:cash flow valid
7:hiring
16:ビルドかランタイムか
ビルド
イニシャルコスト
6:cost less
4:cashflow valid
3:hire_android_company
36:利益率
35:@cycle BCに雇用のTODOを作ってメッセージを送る。
34:divigin tasks
27:negotiator
26:internal dev
25:developer
24:csser
23:workflow things
22:readings
21:editings
20:chartings
19:transcriptions
9:非属人的
18:適材適所化
8:[[投資]]原理（[[メトカーフ]]）
17:秘書プラン
7:投資
16:KPI設定する
15:習慣。KPIを自己設定してもらう。
5:teaming
14:個人にロールを設定する
4:enterables
13:チームの習慣
12:recruitment
リクルート
雇用
11:教育制度
10:情報や知識が社内で共有化されている
28:C developer
99:check cfsafe
39:invite more  candidates to hit 100
49:candidates
89:company level template
29:project_description in english
78:save it evernote with templatative tags
88:project level documents
67:在庫を持たない
37:runtime
47:organize job posting document on textdoc
87:job posting document
66:高速化
46:gather specs and requirements
106:
65:workflowの維持
45:scope
15:利益率
5:雇用
55:award
44:ask for milestone to developer
14:費用
54:negotiate good person with cheaper candidates's price
43:milestone choise
13:資金繰り
3:hiring
53:orientation
103:wp_st_hiring
72:hire the roles mece
12:プレゼン
52:decision making
102:if you ve modified the task template document then fix it
41:interviews
11:crowd
51:managements checks with faws and templates
70:newjit
40:fill the sheet
50:job posting
21:automate manualization
20:jing
19:outsource
7:orientation
18:manualize
17:manual or something?
16:CHE導入
4:newjit
26:manual
15:導入
3:hiring_hr
25:Display HasaccessableurlSentences
14:person
24:snapshots
13:hiring
23:作業の経験
12:cost less
22:stsc
6:inving people in elance
5:poking balaguru
4:inviting
3:hiring js developer
7:faqs
5:job posting
4:hiring templates
3:hiring_template_system
6:prepare other job posting information
5:todo
4:scope
3:hiring高速化
7:git
10:スライス
4:再現の指摘 PointingRepatition repetitaion = 再現検出
3:history

7:hnsc78@gmail.com

4:hnsc
39:光。間接照明。あてて撮影してデザインにするのもあり
38:写真でとって、それを絵の具で
74:ai9fhiufjiof
fjiofjiofjiof
jiofjiofjiof
ajfhfjiofjiofjiojiofij 
fjiofjiokoijhghjkkoijufjoi
fjiofjifjiof
oijfjiof
ajifjiofjiofjio
37:http://b.hatena.ne.jp/toukubo/design/
36:シンプリファイ
35:CRM
71:タカヤのステンシルへの横線
34:商流
70:タカヤ
33:CRM
32:https://storytellers.highrisehq.com/login
31:商流
30:http://storytellers.highrisehq.com/tags/142234-designer
49:サンプルとセットで提示、かつ因果自動提案
48:時間を圧縮
47:ピンク、黄色のcmyk原色
46:画面にとって写真に撮る
45:絵の具
44:signtoon
43:赤と緑
42:stsc
41:
40:チューブで
59:[[font]]
58:extremize the elemete
57:本語より外国語のがうつくしい問題とフォントの問題
56:ステンシル、
55:cmyk pure colors
54:イロヌキ
53:margine
52:えげつないものそのまま
51:死をあげつなく。
69:bubble.ai
50:trak2005
68:iaのwordpress theme
http://themes.wordpress.net/testrun/
67:
66:
65:
29:[[new]] designer
64:何パターンか作って捨てる
28:designer
63:右揃え*左揃え
27:designmethod
62:すごくいい写真
26:design
61:作業に見合った写真
60:big,
tooooooo bigg
1:hogehoge
4:aa
5:projectに登録
4:roi
3:hogehogehoge
14:前日準備
13:custom
9:Buffer = buffer
12:target(objective Noun)
8:affordable
11:stsc?
10:kit
4:afford
17:clean
1:hokkairo
16:plentiness 
15:afford_trigger
132:java
410:putting comments
356:@wait 30人時間
8人時間＋5ンキ
469:@wait 危険要素は？
92:record and say so?
185:刈り取りと進捗と予定管理
298:@secretary @Noding @iPhone @time @secretary @google @Noding @iPhone @time @secretary @wait bilal
91:how to do trial
465:NcmCaptureScreen
297:@wait adisan
sara
liu1
liu2
liu3
masum
bilal
nahanub's friend
molay
one more
90:kaniz san or not
329:@wait nanki
463:@wait poke admins
68:packaging
181:SDEのtest code
67:@voice explanations
66:storyteller-demo
293:@wait assigning and explanation
460:log4net
439:nexus3
438:インプットマン
436:コンパイルエラーの品質管理
435:@wait 前処理
127:テスト。SOAPの
372:コンパイルエラーを変わりに
485:read and check all the consumer codes
371:@wait アサインして説明してもらう
370:26/08
484:determin the screen that calls mq inside ( at the corresponding server ) 
349:重複エラー
483:put ejb session bean config to ejb-jar.xml,
export as jar and 
putit to ear content and genarete ,
and deploy,
and test 
88:budgets
120:@wait バグ
482:log
87:pay to nakanishi san?
481:auto replace of no wait
179:ルーチンとか
480:check
459:IME
178:meceな軸に入るリストのそれぞれの割合
177:runtimeとか
83:#Voice 
176:balance
342:@wait アサインして説明する
289:ネットワーク
341:もう一人
174:ボトルネック発見
340:@wait test
80:recording
173:速さ
287:金
453:any other part 
172:早さ
286:環境
452:warのアップ
171:効率
398:@wait 確実な進行管理
451:あと戦略3.5時間
170:ボトルネック
317:conversion bugs
450:@wait 8とうくぼ
148:submit this to kris san
55:mq part test 
428:@wait 英語と動画と資料
427:環境と実行
425:@wait admin 夜中起きとく
422:re-deploy
369:27/08
140:sql exption
368:翌日の飯と服
367:100%カバレッジ
199:@wait コンパイル
365:160画面完成
479:残弾ないという事の無いように
364:28/08
477:hiring 3 more C# people
362:UCX test
476:more and more people and poking
475:アクションの他の試験
474:replacing  "NO WAIT" clause
110:EJB deploy
472:Value系
337:朝飯とか完璧に
169:バッファ
449:4とうくぼ
168:速度
334:EJB
332:Console Batch Application
331:CTI
442:Componentの完成
307:test and ticekts
139:SQL
440:テクニカルチャレンジ
45:@wait C# components
419:modifying imple files
418:replaing the sql
43:C#
417:an progrmam that calls all the dao classes.
301:mahanub
415:tested
247:閲覧環境
3:見積もり
2:replace
14:@wait storytellinginterview
1:hokuyaku
13:ui specs and detailes for difficult things
12:Sentences
11:リスクの洗い出しは書いてもらうかな。
10:数えてみる
9:DifficultyPointOnSentences
8:分解
7:@wait preinterview
6:
リスク表
5:チェックリストに通す
■チェックリストで自己チェック
漏れやすい機能要件 

セットアップ・インストールプログラム 
データ変換ユーティリティ 
サードパーティ、オープンソースを使うためのラッパ 
ヘルプシステム 
配置モード（リリースモード） 
外部システムインターフェース 
忘れがちな非機能要件 

正確性 
相互運用性 
更新性：ごめん、よくわからないで書いている。 
性能 
移植性 
応答性 
再利用性 
拡張性 
セキュリティ 
生存性（？）：ごめん、よくわからないで書いている。 
利便性（ユーザビリティ） 
これをどのように工数に反映させるのか。
私は定型の手法を持っていない。すまない。
計測できるものならするが、非機能要件などは計測は難しいのだ。
テキトーに実装工数を何倍かしている（1.1倍、とか）。

作業の時間粒度を10時間以内にする。
4:幻想ファクターなくす。悲観的に。最悪のケースは8倍くらいにはなる
3:hokuyaku-storyteller
1117:@wait 札幌拘束、オフィス拘束、先払い、過酷性、隠蔽性、窓口性以外になにか？
1249:
1248:@Air tell asakawa san so
1246:@home try once
1245:@wait keeping TV online + click the on the status button.
1243:@wait an hardware ( thinkpad ) there,
and shows up the availability.
online app.
1242:@wait quicker notification and less costy
1239:how to quicken the migration on the first part and weeks.
1241:@wait get more jobs to our side with them
1237:@wait ask setting up and try it once
1236:@Air kurisu san
1235:@wait google  it
1234:@wait ask him and do trially
1233:@wait tokyo office thing?
1229:@wait ROI
1232:@wait screensharing
1228:@wait providing the 0.3 * 9months = 2.7 months = 
1231:@wait 5 days per week kind of things
1227:@wait how to share availability information?
1131:@wait ローテーション
1230:@wait less flight hours 

1226:@wait better communication cost and availability
1130:@wait コンテクスト
1127:@wait オフショア
1225:@wait the engatement plan for the next months
1126:@wait コチラのメリット
1125:@wait 条件交渉？
38:@done どうすれば事業をOKにする
71:@wait 高層の売価
37:@done どうすれば高層と中層と下層で別
下層を貸すなら事業用のもの。
買うなら下層か高層
70:@wait 現在・類似・周辺
87:@wait いえにきく
35:@done どうすれば事業審査を銀行にもやってもらう
86:@wait 先方にきく
34:@done 利便性。ショッピングはもちろん、飲食店やカフェも充実し、
交通の便もよい。ほかにも、おしゃれな外観や仕様にこだわった
物件が多いという特徴もあるそうだ。
85:@wait 部屋選定いつか確定
33:@done ターゲットをはっきりさせる
84:@wait 融資可能性調査はやってみていいか。←ググる。
83:きく
31:@done どうすれば住宅ローンは借り換え
49:@done どうすれば聞く
48:@done どうすれば審査や低層のみ、など条件を出す
47:@done どうすれば確定申告
46:@done どうすれば昨年の収入
45:@done どうすれば早く就職
44:@done どうすれば収入が出来た時点で住宅ローンにする
59:@done findjobの優先順位
57:@wait 野村とかの用意したもの
55:@wait 周辺事例
9:@done どうすれば25%オプション
8:@wait どうすれば相続
53:@done 借入戦略
7:どうすれば* 将来の収益 ****
69:@wait 販売価格実績
6:どうすれば* 最低限の現金300万
18:@done 将来的な地価の評価
68:@wait 類似物件の写真や空室率
5:@done 売りモン評価
67:@wait 内装等
66:@wait デジタルでもらう
3:どうすれば* RUNTIME***
15:@done 部屋の良し悪し
65:@done essentials
12:@done 最終的に比較できる軸を作る
62:@wait 高層の評価
11:@done どうすれば借りて売る
61:@done タイミングと借入元のセット
60:資料
78:高層の１０階以上で、68,78,92-5のいずれかの制約売価。特に68と78。
"愛宕グリーンヒルズフォレストタワー"
パークコート虎ノ門愛宕タワー 
"パークコート麻布十番ザ　タワー"
the roppongi tokyo
のいずれかの売価実績
26:@done ロケーションの良し悪し
74:@wait 事業目的と旨味
22:@done どうすれば貸し物件
72:内装・周辺売価・周辺賃貸地価・周辺
6:[[目的検索]]
5:loaning
9:修繕積立金の上昇リスク
3:目的
7:住宅ローンがベター？
32:tumblr
10:画面のでかさ
21:Drawing
31:twitter/facebook
20:Sparrow/Gmail
30:adding to reminders
41:ipad
40:imac
9:画面の速度
8:性質？
7:マップ
6:画面
5:アプリケーション
4:アプリケーションのリスト
3:HOMEでの定置
19:Basecamp
18:Youtube
29:excel/numbers
39:air
17:iTunes
28:winscp/transmit
38:i7
16:ノートパッド
27:google desktop/spotlight
37:address book
15:エクリプス
26:finder/exploere
36:translation(dictionary)
14:イラストレーター
25:Dropbox
35:calicuration
13:イラストレーター
エクリプス
ノートパッド
iTunes
Youtube
Basecamp
Sparrow/Gmail
Drawing
Photoshop
iPhoto
PhotoImporting
Dropbox
finder/exploere
google desktop/spotlight
winscp/transmit
excel/numbers
adding to reminders
twitter/facebook
tumblr
calendar
date
calicuration
translation(dictionary)
address book
iaWriter
textmate/php coding
storyteller
magicdraw
24:PhotoImporting
34:date
23:iPhoto
33:calendar
11:開きっぱなしな子たち
22:Photoshop
1:honey
6:maybe at sun
5:smaller packs
9:glucose
4:bring it
35:364hosting
34:ある程度
23:サーバハード見積もりのためのインタビュー
以下はいずれも想定です。
外部ユーザ数（アカウントを持つユーザの数）
パブリックユーザ数（アカウントのない外部ユーザ数）
これらをあわせた想定月間ユニークアクセス数
これらについてのpv/access(平均4とかです）
　
内部ユーザ数
内部ユーザの想定月間ユニークアクセス数
内部ユーザについての月間pv数（業務アプリならば非常に大きなものになります）

静的・動的なページアクセスの比率（htmlなどのデータにたいするアクセスが多いか）
動画はあるか。
100k以上の画像ファイルはあるか。
100k以上の画像ファイル、動画のある画面の月間合計閲覧数。
メディアファイルの合計サイズ。
13:http://www.lunarpages.com/dedicated-hosting/
99*12=120,000
10000 for setup
memory 1G 2000*12 + 2500 = 26500
165,000
for initial year
7:hosingoptions
{
vitalhosting
mitghty
atlink
nodepad
}
31:http://www.enclosing.net/サーバー比較.xls
    事業者名
    URL
    サービス名
    コース名
    初期費用
    月額料金
    最短契約期間
    支払方法
    請求書発行
    無料お試し期間
    サービス利用開始までの所要時間
    時間外サポート
    サポート情報ページ
    利用可能OS
    管理ツール
    ドメイン名取得
    ドメイン名維持
    独自ドメイン利用
    マルチドメイン利用
    バーチャルホスト
    サブドメイン任意利用
    データバックアップ
    （ユーザーによる復元用）
    データバックアップ
    （事業者による復旧用）
    データ転送量制限
    商用利用
サーバースペック
    CPU型番
    CPU周波数
    CPU個数
    メモリー
    HDD容量
    HDD構成
サーバー
    帯域保証
    監視サービス
    再起動
    マネージドサービス
    root権限
    複数IPアドレス
    ターミナルアクセス
WWW
    グループウェアサポート
    ショッピングカート
    決済代行
    アクセスログ解析
    SSL証明書取得代行
    Movable Typeサポート
    XOOPSサポート
メール
    ウイルス対策
    スパム対策
    ログ
備考


12:MIGHTY
http://www.mtsv.jp/service/price/


項目	単価	初年度合計	初期/月額
エントリープラン	19,800	19,800	初期
エントリープラン	9800	117,600	月額*12
HDD：80GB　Single	0	0	
メモリ：512MB→1GB	25,000	25,000	
PLESK(1ドメイン)	0	0	
電源リブート（再起動）	0	0	
10Mbps（共有）	0	0	
セキュリティアップデート	5,000	5,000	
セキュリティアップデート	3,000	36,000	

合計		203,400	




月アクセス～30万ビューをサービスした際のサーバ
（４pv/ユニークなら７．５万ユニーク。一日２０００ユニーク）。
1日1万ビュー。
対ユニークの転換率１パーで売価単価５０００円なら売上は75000*0.01*5000=3750000円サイズまでです。

現在の感じだとここからスタートでいいかと思います。
11:atlink富山
http://www.at-link.ad.jp/topics/t79.html
初期費用 ： 73,500円 ～ 
 
月間利用料 ： 19,950円 ～ 

20:イントラ用ならこちらでさばいちゃうのがいいんじゃないか。
開発が容易になるので。
10:http://jsp-servlet.net/tomcat_hosting.jsp
http://www.visionwebhosting.net/tomcat-hosting.html
http://www.smedia.info/hosting-prices.asp

4:hostinginterview
3:hosting
19:アップロードが重要
28:ライブドアの営業呼びつける
36:364hosting
18:storytellerのhosting
27:今週中に見積もり
3:java？
特定のプログラミング言語？
メール送信プログラム？
最初2ヶ月の想定アクセス数は？
最初2ヶ月の想定ユーザ数は？
6:hostinginterview
4:どうすれば
3:how
13:
12:go out? why not? cf?
9:take medicine
11:facewash
8:how can my stomuch be OK
10:should i eat more.
7:どうすれば
5:workflow
4:just attach hows
3:howize
2:/sbin/htpasswd -c 
/opt/lampp/bin/htpasswd -c filename user
vi
################ 

3:[[httpclient]] = HttpClient
6:		HttpClient httpClient = new HttpClient();
		GetMethod getMethod = new GetMethod("${heretheurlgoes}");
		String list = getMethod.getResponseBodyAsString();
		StringTokenizer stringTokenizer = new StringTokenizer(list,"¥r¥n");
		while (stringTokenizer.hasMoreTokens()) {
			String url = stringTokenizer.nextToken();
			FileDownload fileDownload = 
				new FileDownload("",url);
		}

2:
1:httpd
2:putty or ssh -l toukubo .... 
1:httpd_dot_conf
6:HttpPost
10:serverurl
8:============================= 
         Runtime
=============================
3:http://localhost:8090/storyteller/Verbs.do
7:============================= 
         Bulidtime
=============================
1:hunt
6:bigger voice
4:leap
8:habitation on leap
7:breath deep
7:courages
10:RUNTIME
6:leaping ability
5:hunting
4:gggg
39:think about it
29:-do alone or not. ask someone great? compare 
benefit:
43:tricks with 5 times of leaps
36:気持ち悪いが問題っぽい。なんで話しかけてんねん、
28:30hours(100times)
42:looks not to tyarai
41:try some tricks and attacks.
34:general whole human relation ships.
26:S　と　M　の関係
40:point 150,000 for it.
19:・シンクロ

・混乱技法

・緊張感を利用した空間支配

・描写

・感情の反転現象の利用
33:すべては本をレビューして学べること
25:力関係
18:@mece looks
32:   @tao breah deep and  lesson with 
24:なたが　上で


女が　　　下


の状態をキープ
17:トリック（テクニック）
23:familiarity
16:場所　と　女のタイプ
30:get familiar with some 
intersting mentors
22:■共通点を探す（作る）


■共通の目的をもつ


■共通の敵をもつ
15:@scheduled read more
21:マインド
14:  like renewal shuffling.
20:お前なんか別に、女としてそんな興味ないよ
9:time
12:- essentials. see 10 hours of  
8:speed untill judgement
4:機材買う？
3:idea.buildtime
26:[[scamper]]
15:museigen
9:似てるものは？類似
14:無制限ボックス
8:モデリング
7:目標の今日k単価
22:考える
6:モデリングの後で要素の極端化
21:エスカーション
11:場所をすごいところに
5:発火
10:google imaegでその単語検索してみる
4:idea
3:アイデア
29:@wait [[idea.buildtime]]
18:（特許電子図書館　初心者向け簡易検索（商標））
http://www.inpit.go.jp/info/ipdl/service/index.html
にいって中心キーワードで検索する。
6:組み合わせ+評価
5:発火
4:idea
3:アイデア
21:puts which things in which links
39:商流
20:lab projects
38:http://storytellers.highrisehq.com/tags/142234-designer
37:http://blog.livedoor.jp/vtrstart/archives/50540747.html
36:designer
35:designmethod
34:美しい
33:design
32:実態を示す。写真を載せる
31:画像とか入れる
30:美しくもてなす
49:storytellers
48:freelancer
47:web services intergrates into 
45:contact_toukubo
44:wev trend map二
43:contact blocks2
42:personal site
41:linkをうめてく。
40:コントラクスと調整
9:可能ならバイリンガル
19:名刺。
8:それやってくれる人にやってもらおう
18:gallary(images)
7:編集する。読み物として魅力的にする。
17:fruits
6:designs, photos,graphs, charts
16:buzzed ( by some people )
5:charm with 
15:connecting_dots_by_friends
4:lifestreams
14:プロジェクトを展開すると、でかくなるがデカイことは構わない。
3:presentation
13:Productを持つか？
2:portfolio
12:資料的にならないとだめ。１万文字近いものを考えよう
11:膨大にならないか？なってもいいか？
10:Projectsを展開する？
29:文章を読みながら買う
28:ユーザーはなにを買うか
27:海外からのユーザーに答える
26:メニューを英語にするかどうか
25:英語どうする。

24:商流と商材
23:articlesどうやって構築する？
22:business to the internationalization
2:http://blue.ribbon.to/~snowish/lc/script/ie001_jump2url.html
1:ifttt
6:if
3:fav→なんかアクションしたいときがある。
7:then
2:iftttで何がfしたいか
1:igp_evangel
6:charene
5:finndings discovery 秘密の発見
9:rss,keywordbase
4:igy
1:ikea
3:ながら
2:内装
3:Images = image
7:良いカメラ
6:良い写真
5:カメラ
4:写真
3:Images = image
2:JPG
8:露出補正（黒と白強くする）
4:セクレタリーkickoff
3:secretarize.comをまねる
3:in.secertarize.com.build
7:ol
6:basecamp
5:requests
4:evernote
9:nodepad
8:templ
1:inboxes
5:evernote,twitter,ifttt,gmail,rtm,basecamp
9:inbox/categories,and tags.
4:have the inbox
8:mece with inbox/archive
3:inboxize
11:windowsを持っている人っぽい
10:inddの人
7:自動バージョンアップは？
6:買うか？
どうせ必要かも。
17:ジョブポストしてみる
5:調査かも
16:比較
4:cs2?
15:インターンさんがきた。
が、インドのが安いくらいか？
3:that tool
3:insert
6:挿入
4:http://amateras.sourceforge.jp/cgi-bin/fswiki/wiki.cgi?page=EclipseHTMLEditor 
http://amateras.sourceforge.jp/cgi-bin/fswiki/wiki.cgi?page=StrutsIDE 
xampp（http://www.apachefriends.org/download.php?xampp-win32-1.6.0a-installer.exe） 
tomcat 
skype,
joe,
textpad,
clipdiary,
flashpaste,
winshot
quickwindow,ahk, 
http://www.sysdeo.com/sysdeo/content/download/678/7757/file/tomcatPluginV32beta3.zip 
quickwindow,
ahk,
jing,
google talk,
 google desktop,
picasa
magic draw
andromda
xyzzy
nodepad
download codesetfrom 2 cvs + 2 svns
超録
firefox
greasemonkey(firefox plugin)
ldrize(greas moneky plugin)
autopagize(grease monkey)
firebug(firefox plugin)
amteras ide
mysql administrator
putty
adobe kuler(+air runtime)
adobe media player
intype
mindjet
office
yugma
hostsのショートカットをスタートメニューに
スタートメニューのショートカットをスタートメニューに
bookmarkのシェア
winshot
winscp
key acc
winpatrol
gotomeeting
setup remote desktop(server)
quick window
shift move
パスをコピー
flickr uploader
subversion
cygwin
toitoise svn
active perl
flash download
roboform
snap
stumble upon
ffftp
emagic a62 driver
epson printer driver
my assoc
itunes
macromedia studio
adobe illustrator
photoshop
eo archiver
win rar
adobe reader
windows messanger
inno setup
becky mail client
MdiBrowser
jdk1.6
jdk1.5
3:installpad
10:vnc
6:
5:googledrive 2 excel
4:sync
3:insync
9:install linux version
4:pattern picker = パターンピッカー = patetrn
3:great  interface
6:スポンサーを
5:番組枠を買ってくれ
8:テレビ東京
3:interfm
4:intergrouplet
http://blog.livedoor.jp/heitatta/archives/54439839.html
3:intergrouplet
6:自分で選択する
5:気になるのを
広げたいという気持ちはあった
4:気になる領域を、
3:調べて
3:interuption
6:割り込み
5:have you ever used any rails-like application?
and interested?
do you know rails?
do you know model driven?
mash up /
do you have any interests for working with japanaese countries or japanese culture.
do you have interests /activities hobby in design/art related field.
have you ever worked with testers/ quality manager
4:j2eeとかの経歴について？
rails知ってる？
ジョエルテストしってる？


3:相当できる人じゃないとコミュニケーションパスや
翻訳のコストでかかりすぎ？
テスターさんがバグをsssであげてもチェックできない？
2:英語で仕様読む？
17:storytellinginterview
16:interviewer
15:programmerinterview
8:interview
4:interviewer
3:stsc
1:investment_balance
6:ルーチンとか
5:meceな軸に入るリストのそれぞれの割合
4:runtimeとか
3:invoice
6:請求書
6:請求書
9:invoice
10:cf
3:invoice
2:請求する。
見積り画面に行く。
http://unudev.org/en/Estimatins.do
そこからdoneなものを探す
そっから請求を実際に立てる。
5:ググって対応を
4:応募書類作成する
3:未踏
21:
10:1bit
20:
9:疎通
19:
7:phone
18:computing
6:internet mobile handleld
17:Personal branding
5:multi touch
16:google  him and find the rss
4:a big screen multitouch with software input devices
15:mixi him for the rss
14:target is not on the Web
13:modeling him  and news around him
1:iphone
22:monetisation
11:less time
1:iphoneapp
3:storyteller
2:開発
6:pad用画像共有
15:studiovoiceのtwitterアカウントでの登録？
14:画像共有
13:applicationのid
12:oauth
3:ライセンス共有
2:iphoneの開発者ライセンスでサブミット
1:iphonedev
18:
7:iphoneapp
16:調べる
1:iphoneの開発者ライセンスでサブミット
5:iphoneapp
2:ライセンス共有
1:ipod_touch
5:録音はいる。
14:メール添付されたXLSくらいまでも見える。
4:32G
13:もらっといたメールが外出中でも見れる
検索性が携帯より早い
12:家で3.5インチの画面が
増える
3:ipodtouch
11:音楽がもうちょい入る
10:タスクの閲覧が歩行中に？（携帯でできてる）
9:カレンダーの閲覧が歩行中に
8:録音率
17:UbiquitousCapture
1:iridgexrake
7:unit test
6:test specs
5:specification
9:back and browser back
8:integration test
1:iridgexrake
15:meet  more people
14:tdl hours
1:@time irradiate
13:detaies_of_eliminations
12:niw
11:top 50000 eliminatable monthlies
10:@mece irradiate first 400000 in 2month.
9:not responding
8:make sure tdl time less than 120
7:+100000/month first
6:sales
5:@done do not pay for the payments for 3 months
4:@mece auctions
16:eliminate.eat
3:http://anken-navi.com/touroku.html
http://archive.mag2.com/0000236378/20080512151000000.html
http://www.web-j.co.jp/
http://www.vsn.co.jp/lp/?_ins_ad=1255&20070620google
http://www.e-engineer.jp/
http://www.nice-anken.jp/an/gjava.html
http://www.treasure-com.co.jp/freelance.php
http://www.n2hiroba.com/n2hiroba/portal/goodjob/?gclid=CMTW59DMrJUCFRBRegodL1ZwkQ
http://www.e-jobstyle.com/archives/2008/08/000626.html
http://www.itre.jp/?gclid=CLbAx83MrJUCFRNPegodkWhUkw
http://www.tribe.bz/service/person.html?PHPSESSID=db488c8a68d3248ae7319c56df02e34c
http://www.atsoho.com/jobinfo/view/no-13233.html
http://www.rakumu.com/rts/anken/dev2.html
http://www.find-job.net/fj/showjob.cgi?id=69040
http://job.acrovision.jp/java.html?source=google_java&gclid=CO7ryYPNrJUCFQ5Segod-g8skw
http://www.find-job.net/fj/showjob.cgi?id=69183&from=23
http://www.find-job.net/fj/showjob.cgi?id=54009&from=23
http://www.find-job.net/fj/showjob.cgi?id=31525&from=23
http://www.find-job.net/fj/showjob.cgi?id=65018&from=23
http://www.find-job.net/fj/showjob.cgi?id=64996&from=23
http://www.find-job.net/fj/showjob.cgi?id=25732&from=23
http://www.find-job.net/fj/showjob.cgi?id=69032&from=23
http://www.find-job.net/fj/showjob.cgi?id=66901&from=23
http://www.find-job.net/fj/showjob.cgi?id=58158&from=23
http://www.find-job.net/fj/showjob.cgi?id=69028&from=23
http://www.find-job.net/fj/showjob.cgi?id=44020&from=23
http://entrenet.jp/0000113/dokuritsuplan.html
http://entrenet.jp/0000172/dokuritsuplan.html
http://entrenet.jp/0000197/dokuritsuplan.html
http://www.it-dokuritsu.jp/sub/agent?agentId=17
http://www.it-dokuritsu.jp/sub/agent?agentId=11
http://www.it-dokuritsu.jp/sub/agent?agentId=15
http://www.it-dokuritsu.jp/sub/agent?agentId=16
http://www.it-dokuritsu.jp/sub/agent?agentId=2
http://www.creativevillage.ne.jp/landing/landing01.html?gclid=CLStsd6IsZUCFRMJewod9V4VlA
http://www.ankenjoho.com/Cgi-bin/kensaku_a.cgi?kensaku_cd=new
http://www.it-dokuritsu.jp/sub/agent?agentId=2
http://www.it-dokuritsu.jp/sub/agent?agentId=11
http://www.it-dokuritsu.jp/sub/agent?agentId=16
http://f-engineer.jp/service/first.php
http://www.jsa-online.jp/campaign.html?gclid=CKznjdGIsZUCFQH4egodQQ5ejw
http://f-engineer.jp/search/item_search.php
http://www.e-engineerhaken.com/040_anken/042_tokyo23/002844.php
http://e-engineerhaken.com/index.php
44:     テスト 
202:画面仕様
198:client style specs 画面仕様 css
201:①実機（service server)のURL


②開発のURL
http://hostname/gasweb/

③仕様
画面仕様＋機能仕様
http://www.enclosing.net/gasweb/gasweb03.gif
gas/web

④コード（cvsレポジトリ情報）
サーバ：www.enclosing.net
cvsレポジトリ:/var/cvs
プロジェクト名：gasweb
user:cvsuser
pass:a0jcfKb4
サーバタイプ:pserver

50:デザイン
197:dev server url
40:テスト環境作り 
196:regist storyteller project info
185:camp2xhtml
4:J2eeProject storyteller
3:name of project
182:storytelling = RuntimeNoding
181:ProgrammerKickoff
48:OutofPatterning 
47:配置 
45:xhtml2jsp 
123:my eclipse 勉強？
3:J2eeStory
6:http://localhost/Nouns/j2eeStorys.xls
73:
48:offshore
47:manualurl of the project
71:@air CommonTranslations
彼からもらってるxlsつかって
46:story
70:story
Post系はしない。
IntraUsers Display PublicUsers, and 
they want to do XlsExportOfPublicUsers. 
and CsvExportOfPublicUsers 
and should PdfExportPublicUsers
and the links should be in the PublicUsers page.
We can Post,Delete,Display the Cateogory,
and we can Post,Delete,Display SubCategory,
 
IntraUsers want to ShowPublicUser ,and 
ShowPublicUserForTransactions.
and ShowPublicUserForTransactionSummeries.
 
and Xls,Pdf,Csv export for these three.
 
and PdfExportPublicUserForTransactionSummeiesWithChart (OP)
19:OutOfPatterning == coding
43:offshore
18:開発機への配備
42:StorytellerCodesDownload
17:xhtml2jsp
41:mock
16:配備
40:generaltest
15:TestedSystem
14:sql dupmpfile
13:war
12:server url
10:キッズに指示
58:@wait FirstMvn
57:@wait FirstCopyCoreJar
55:@wait put CommonTranslation @storyteller ( http://storytellermachine.net:8080/storyteller/J2eeStorys.do
54:@wait wget http://storytellermachine.net/storyteller/
29:preinterview
53:@wait mvn
28:EstimationChoiseで選ぶためのテストを出し切る
＋出し切れない場合、想定仕様未定義分コスト（未定義の場合はありません）、を出す。
仕様をこちらで出している場合は営業情報にそう入れる
52:PostSentencesOnStoryteller
27:チェックリストに通す
■チェックリストで自己チェック
漏れやすい機能要件 

セットアップ・インストールプログラム 
データ変換ユーティリティ 
サードパーティ、オープンソースを使うためのラッパ 
ヘルプシステム 
配置モード（リリースモード） 
外部システムインターフェース 
忘れがちな非機能要件 

正確性 
相互運用性 
更新性：ごめん、よくわからないで書いている。 
性能 
移植性 
応答性 
再利用性 
拡張性 
セキュリティ 
生存性（？）：ごめん、よくわからないで書いている。 
利便性（ユーザビリティ） 
これをどのように工数に反映させるのか。
私は定型の手法を持っていない。すまない。
計測できるものならするが、非機能要件などは計測は難しいのだ。
テキトーに実装工数を何倍かしている（1.1倍、とか）。

作業の時間粒度を10時間以内にする。
51:nodepad
26:幻想ファクターなくす。悲観的に。最悪のケースは8倍くらいにはなる
50:RuntimeNode of J2eeStory
25:きちんとしたインターフェイスを出す。
リスク表
24:ハードウェア要件
23:投函
22:見積りしたものから
69:AttrPicking
21:テスト
20:@keyword [[debug]]
9:サービスイン。配置  = deploy
8:請求
65:@wait modeling
39:mismatchtest
38:checkingtest
37:tester
4:storyteller
3:ja
35:sss
34:test
33:RequestTestWithoutAsmainTest
32:RequestTestWithAsmainTest
31:封筒
30:請求書印刷
47:@wait layout.jspのメニュー化
9:サービスイン。配置  = deploy
44:@wait データエントリーする。
8:請求
43:@ShowPublicUser.jspレイアウトされたデータから表示する。フォームのなかとかに。

7:storyteller
4:jalayouter
3:jamock
17:配備
20:OutOfPatterning == coding
15:TestedSystem
48:@wait ja
5:ファイルタイプ？
4:テクスト
3:データ構造の記述
2:データ＋アプリケーションでオブジェクト指向。
9:jpg
11:文字を印刷する。
aiでも文字を組む
dwで文字を出力する
文字をサーチエンジンで閲覧可能にする。
文字をブラウザで閲覧可能にする
リンクでサーチエンジン閲覧可能にする。
文字列density checkをする。
ブラウザのサムネイルをつくる。
目視で必要なものをピックアップする。
ワードでレイアウトをする
ワードで編集可能な形にする
phpでブラウザ上で計算可能にする
リレーショナルモデルで連結可能にする。
リレーショナルモデルで高速検索を可能にする。
dbmsによって排他制御などを行う
sshでコマンドを発行する
puttyでコマンドを発行する
skypeで会議をする
ポリコムで会議をする
人間にとってのヒントの数は変わらないかも。
フィットネスは人間が決める。から人間に対するヒントの質もあんまり代わらない。人間が思い出してくれないならあんまり意味がない
aiで美しくする。
jpgをaiに貼り付ける。
psで画像を加工する。
FWで両方をする。
フラッシュで動かす
フラッシュでインタラクティブに動かす
ウェブブラウザ上でフォルダをいろいろする。（右クリックして、メールで送るとかする）
モールスキンでお金をもうける
快感はどこにもあんまりない？
快感の量はあるかも。
肌に触れるとかがぜんぜんない。テクストかjpgか連続的な動画である。
行動そのものもないかのようだ。メッセージをしてそれを実行するのは人間になるか。
物理的なマシーンは情報処理制御に基づいて行動し、まるで人間の筋肉のように、深く連結する。
意識はひとつ。
モニタの大きさがなにをする？
いろんなものがテクストファイルである。
バイナリかテクストか、という識別もできる。
ある文字列をメールでおくる場合は、文字列を選んで「メールでおくる」とすればできるようにできないこともない。
メーラーをたちあげ、アドレスをうち、メールにする。
物語的な文章と断片というサブセットがある。文章として読まれるつもりのhtmlドキュメントを、グーグルが一部分として結果表示する。

8:.nd
7:txt
6:ai
59:ドリルダウン
54:@air CommonTranslations
をもらった資料から入れる。
69:StorytellerStyleSpecs
68:SpecsFromCustomer
52:@magicdraw 
65:チャート
62:jalayouter
19:xhtml2jsp
61:CsvExport
18:封筒
60:PDFの一覧
17:請求書印刷
9:配備
16:投函
8:@wait server url
15:見積りしたものから
7:@wait ター
14:配備
6:サービスイン。配置  = deploy
72:全部の画面について名前が必要
13:@wait sql dupmpfile
5:請求
29:StorytellerCodesDownload
71:テスターさんに仕様から作ってもらう？
12:TestedSystem
4:storyteller
11:@wait war
3:jamock
27:generaltest
10:SyncToy
25:岡本さんに開発機どうするか菊
24:mock
23:テスト
22:@keyword [[debug]]
37:FirstModeling
21:OutOfPatterning == coding
36:FirstMvn
20:開発機への配備
35:FirstCopyCoreJar
33:put CommonTranslation @storyteller ( http://storytellermachine.net:8080/storyteller/J2eeStorys.do
48:AttrPicking
47:magicdrawing
30:PostSentencesOnStoryteller
7:arvind
6:awadehesh
5:akash
4:jwalin
3:java
9:varun
8:sara
6:meetinglogs
5:interviewer
13:catchup interviews
4:interview
11:sheet update
1:jcta
10:editor fill the sheet
9:recording and the interview
8:re-interview
16:survey sheet
7:interview sheet
20:log
39:@schefduled confirm
38:@mece not more details
37:@air tell so
36:@wait ask review
35:@pknk read and speech once,
34:@wait inquiry
33:@wait transcription
32:@done subprocess
31:@mece request to fullfill
30:@wait know the master format
49:@secretary @wait transcribe
48:
47:@secretary wei
46:@secretary hire
45:cf
44:hire
43:@wait modeler
42:@secretary developer
59:audio extraction
19:check 
58:reporting.
18:compiling
57:do it with real data
17:editors team
9:terms
56:hitrate
16:modeling and UML charts
55:data
54:FP
14:template and looks for the interviews 
6:interviews
13:@mece modelings?
5:@mece risk rist
12:systems 
51:deeper request?
10:editor
1:jcta_license
29:@mece tasks
28:@mece business process
27:@scheduled request
26:@wait hinuma
25:@done radiko interview
24:@done radiko log
23:fullfilling the 
22:@mece the template looks for the interviews 
60:give movie for first 4.
21:editor
8:enterable
19:秘書プラン
7:can i invite and use trello, or basecamp
18:KPI設定する
6:project base 
17:習慣。KPIを自己設定してもらう。
5:can we hire people
16:個人にロールを設定する
4:privs
14:recruitment
リクルート
雇用
13:教育制度
1:jcta_teaming
12:情報や知識が社内で共有化されている
11:非属人的
10:[[投資]]原理（[[メトカーフ]]）
23:task repository
22:editor
21:charting
20:適材適所化
9:投資
2:wget  http://192.168.0.201/jdk-6u22-linux-i586.bin
1:jdk
3:jing
4:@wait 実際にテストケースがでてからでいい。
3:jing2testcase.buildtime
3:JingedChecklist
5:User CU A User
4:User Removes A User
3:User Displays Users
2:User SnsConnectsTo A User
5:request
3:job
14:knockback[knockout
angular
spine
backbone
ember
13:Speed
12:Asynchronous UI
9:Web Presentation Layer
11:almost realtime web 
8:Composed Views
10:Play nicely with others
7:UI Bindings
6:event driven
5:template
4:sync between data and js
3:js
6:teller2
5:wpst
9:wp_json
4:new_json
3:js_json
5:jsp内部のjsもモダーンide的補助下に編集可能
4:jseclipse
3:edit in jseclipse
14:フリーミアム。少し。
13:伏線を可視化する。
12:宇宙兄弟
9:
11:つなぎかた
8:引っ張り上げ
10:砕き方
7:PV
5:クローズド
4:twitter対談
3:参加感
2:共時性
1:jump
21:@wait block hacking
30:@wait hiring
9:competition
8:@wait project_description
7:divigin tasks
29:@wait gather specs and requiremnt
28:@wait references
5:hiring android company
27:@Air basecamp textdoc
4:replacing
26:@wait purpose,context,client,budget and size,language,
3:jwalin
25:@wait screenspecs
24:@Air cvs and git
23:@Air ssh things
12:workflowの維持
22:@wait change passwords
11:在庫を持たない
12:早さ
64:@wait noel
11:ゆとり
63:@wait tell three people to do so.
10:Buffer
62:@wait replace tech dirs
61:reporting email with excel
119:
117:project directory
169:outsource
116:ticket sync
168:manualize
115:replace sales
167:manual
114:replace expensives
166:@wait Update PM Checklist
113:less communication cost
165:check notifications shoudl be there
112:smaller run ,
for each of the ticket
164:more notifications on all the process.
162:ask Transcriptors and translators 
being on the meeting
161:CF
160:sales
209:someone in the designer list in odesk.
208:designer to use our methods. reviewing
207:@ifttt.com see the recipi
206:@wait bookmarks?
205:
204:q iphone app images snapshot sync
203:iphone app
202:snapshot and sync with timestamp
201:recipi to notify the transcribers for voice
200:notificaitons
58:@wait アカウント作らせる
57:Quality Checklist
56:Testers
55:Quality
54:@wait PM (Resource manager system )
53:@wait avoice cheating
52:less interuption
50:less interuption to developers
109:english requests
108:request to todo
159:speed of workflow
107:status sync
158:inboxize
106:check
157:inboxize
105:execution
156:better UI
104:assigned todos + details
155:detailing
103:RM and Checks
154:custom to assign it to testers
102:RM
153:better_detailing
101:assigning
152:ask client for it.
100:todos
151:auto fowarding
150:file to modify
244:ask kaniz
243:japanese transcription 文字起こし
48:@wait less steps for share
240:「どうすれば付与」、など横断的なものをoutsource？プライベートではない情報の横断的提示
47:basecamp template
99:mapping between tickets and images
46:chceklist
98:mapping between tickets and images
45:manual
97:quicker answers
44:@Noding use ID?
42:HIRINGできない問題
41:@wait Managementシート
93:notification to transcribers
40:チェックリスト
90:cvs update
148:hiring sales person
147:meta tests
199:workflow
146:what mac server can do for finding basecamp urls and medias.
198:@secretary directories made
145:@Air fix the ratio sheet
197:ask to make dirs and then workflow
144:@wait more admins rate
143:admin + routines
195:in iPhone
142:try replacing
194:in PC
141:test automation
193:sync
less steps, notify,
140:tools
192:movie
191:timing
190:tools
237:@wait Noel
234:25%
233:see the scales
232:gotomeeting
39:METAチェック
37:横断的
89:ifttt
36:UI
35:less steps
87:Dropvox
34:@wait Daily Report
86:transcription
33:iphone app
85:sync+notify
32:mapping between tickets and images
84:sales person
83:translation + capture
30:ssh access
81:recording
9:Hiring Sufficient
139:automation
80:meeting log
7:Runtime
137:@Air do it by myselft
189:monitors and iphones,quicker PCs and SSD
136:better_sync
188:Motivations
135:better rules
187:@wait kaniz san
4:チートしたのかもしれないけど上がってる。
134:@wait update part detection
186:buget and person
3:Finance
133:quality check inside
185:hiring
132:doing things inside
184:proper position proper power
131:detailing inside
183:meta
130:rules and manuals
182:@pad google
181:@wait better tool for sharing
180:Productivity
229:pre-sales
226:in advance
225:comparison
224:KPI variables and compare
223:competetion
29:@wait repository
221:fire
28:Mac Server
79:choose notification
26:pickup updates
78:forward to basecamp
77:better process fro 
check -> share in basecamp
24:reporting
23:notifying translator
75:auto filter from specific client
22:En->JP Translation
74:better notifications
21:Focal
73:permalink for files
20:@secretary BCPhone
72:@wait ifttt account
71:speed until l sharing finishes
129:admins
70:@wait smaller images?
128:how can we map the dropbox files and basecamp?
127:move from strorytellers
126:VM
178:Product Bonus
125:budget for kaizen
177:@Air check if joan is uptight or not
124:kaizen ratio chart
176:@wait @Air 一回具体的にDetailingだという作業をやってみる。
123:budget
122:plan, so
174:snapshots
121:recipi to notify transcripers via email with dropbox
173:@wait 作業の経験
120:more translators?
172:stsc
171:automate manualization
218:new odesk account
and elancer
215:@wait delay
214:july
213:budget
19:非顧客案件？
18:速さ
210: daily reportにodesk screen shot urlとBC todoをkojiにアサインすることを入れる。
17:最初のターミナルノードになるものを早く着手する。
69:meeting
16:中夜分割
68:request from voice
15:利益
67:request from email
14:創造性
13:循環
65:@wait kristina
4:axisフォントでいられからpんmg書き出ししてディレクトリからキーボードでパワポ貼り付けする
3:kamoneメソッド
131:予算修正
17:システム配置
80:管理画面設計
130:実績管理
16:静的ページの切り出し
15:属性取得個所の見直し・変更
14:取得属性の見直し・変更
13:登録フローの見直し・変更
12:ロゴ、画面デザインFIX
11:フロー完成版FIX
10:管理画面実装
49:線表更新
48:作業担当の割当
47:コーチ人員配置
46:人員、リソースの配備
45:リソース（所要時間の計算）
44:作業タスクと線表の承認
43:作業タスク洗い出し＋線表作成
42:マネージメント
41:ユーザサポートプラン
40:Sin時の指標データ
79:管理画面仕様作成
78:ユーザページ実装
129:予算（サービスイン～１年）FIX
77:ユーザページ設計
128:予算たたき台作成
76:ユーザページ静的文言作成
127:予算
75:ユーザページ仕様作成
126:プレスリリース
74:PCサイト構築
125:紙媒体出稿
73:コンテンツ獲得等の外渉
124:オーバーチュア申請
72:コンテンツ獲得交渉のプラン作成
123:アドワーズ申請
71:オーサリング作業手順書作成
122:Yahooディレクトリ登録
70:オーサリング作業プロトタイピング
121:SEO対策用ページ(ブログ)
120:SEO対策用ページ（一般）
39:媒体プラン
38:sin時の企画FIX
37:企画概要まとめ
36:課金プラン
35:企画
34:定例MTG
9:管理画面設計
33:MTG
8:管理画面仕様作成
32:ゲスト告知
7:ユーザページ実装
31:運用作業表の変更点の洗い出し・運用作業表の更新と提出
6:ユーザページ設計
30:運用人員の手配
5:ユーザページ静的文言作成
4:ユーザページ仕様作成
69:初期データの投入
3:５月版
68:初期データのオーサリング
119:他力プロモーション計画策定
67:テストデータのオーサリング
118:メールサーバプラン
66:コーチ管理
117:PULL媒体詳細FIX
65:運用作業表の変更点の洗い出し・運用作業表の更新と提出
116:PULL媒体仕様FIX
64:運用人員の手配
115:メール媒体詳細FIX
63:運用作業表（月）作成
114:メール媒体仕様FIX
62:運用作業表（週）作成
113:広告媒体洗い出し
61:運用作業の所要時間分析
112:集客・広報
60:運用作業の洗い出し
111:エラーメール処理調査・設定
110:システム構成ドキュメント作成
99:その他の画像データFIX
98:その他の画像データたたき台作成
97:ロゴ、画面デザインFIX
96:ロゴ、画面デザイン作成
95:ユーザ画面テストシート実施
94:サービスイン時のユーザ画面テストシートの作成
93:システム配置
29:運用作業表（月）作成
92:静的ページの切り出し
28:運用作業表（週）作成
91:属性取得個所の見直し・変更
27:運用作業の所要時間分析
90:取得属性の見直し・変更
26:運用作業の洗い出し
25:サービスイン
24:デバッグ（動作確認後）
23:動作確認
22:統合テスト
21:その他の画像データFIX
20:ロゴ、画面デザインFIX
59:運用
109:DB構成ドキュメント作成
58:解析システムの実装
108:サーバー構成ドキュメント作成
57:解析ルールの作成
107:バックアップ実装
56:ログ処理のデータベース設計と実装
106:バックアッププラン
55:ユーザ画面へのログ処理の実装
105:システム関連
54:ログ取得アルゴリズムのプラン作成
104:デバッグ（動作確認後）
53:統計手法調査・統計プラン作成と提出
103:動作確認
52:BI
102:統合テスト
51:リスクの洗い出し、解決
101:テスト
50:開発分の線表管理
100:サービスイン
89:登録フローの見直し・変更
88:フロー完成版デザインFIX
87:フロー完成版FIX
86:フロー第一弾作成
85:バナー管理画面仕様変更
84:バナー管理画面仕様
83:管理画面改善実装
19:ユーザ画面テストシート実施
82:管理画面改善
18:サービスイン時のユーザ画面テストシートの作成
81:管理画面実装
1:katering
3:kateringユニットぐぐる
2:yunakamura
4:永井君に。
まずは会うか。
3:法律対策
7:aleas:加藤外し
81:全工程
50:server url
124:@wait それだけだな。あとは大体別添で。
80:testdata
123:@wait 請負ではないですよ。責任はないですよ。

122:@wait 注意するべき、避けるべき点をリストする
121:@wait 支援契約書にする

120:@wait 作業スコープにする
49:conncetion to offshoring
79:test
17:彼ら1。支援。100万。
48:更新容易性
78:テスト
16:3人月＋1
47:deploy
77:@keyword [[debug]]
15:簡易なところ？
46:complex evaluation
76:OutOfPatterning == coding
14:中の人一定使う
45:WP_teaming
119:@wait 機能スコープにする
75:開発機への配備
13:すりゃいいじゃんね。
44:estimation
118:@wait 契約書にする

74:xhtml2jsp
12:最初の作品として喧伝したいそうです
73:シリアルとパラレル。
シリアルにしたときのボトルネックを探す
11:座組
42:use templates
72:
10:storyteller
41:デザイン
115:座組
71:期限ごとに
http://localhost/templates/sctemplate.xlt
からやる。
40:デザインはTAC
70:sc金額を得る
113:進行管理、レビュー、テスト、テスター配備、テスト仕様作成、
デザイン。HTMLCSSもできるならそれ。
143:@Air 書式に落とす
112:作業の分担
142:@wait 記載の通りもっかい出す？
111:Course view
notifications view
steps view
141:あとで出す
110:機能一覧
9:wordpress
8:テクニカルディレクション
ディレクション（スケジュール）
リソースマネジメント
仕組み
アドミニストレータ
ブリッジエンジニア

要件定義
試験仕様
仕様・画面仕様
ワイヤフレーム
人員配備
見積り
オフショアはイアリング
テスト
プロジェクト管理ツールセットアップ
テスト
テスター配備

7:ロール
6:バランス
5:開発のどっか
4:kenschool
3:WPST
39:支援で1人月100万
69:outsource
38:7人月を4人月に。
99:Nouns
67:分解
98:Attrs
97:FirstModeling
35:不足をリストする。
109:機能制限
65:
リスク表
96:modelを開く
34:@Air いくつか不足しているWFがありそう。なのをかたちにする
138:@Search 業務支援契約書調べる
95:@wait annotations
137:@wait 今はこっちでやってあとでレビュー
94:mock
62:投函
136:@wait 時間かからない方か。
93:story
61:請求書
135:@wait お願いしたほうがいいか。

92:assignment
30:テーブル定義は一緒に作る
104:offshoreに
プロジェクト名
開発機url
を伝えて、
マニュアルを教えて、
テストをしてくれと伝える
60:見積りしたものから
134:remind
91:offshore
103:sss化
133:@wait
90:@wait design
102:名詞抽出とモデリング
132:@wait 確約を待つ
101:mismatchtest
131:@wait 大体3分割くらいにして。マイルストーンごとに。
100:画面仕様
130:@wait 書式決定
29:WPとSTと残りで作る。
28:要件を作る
59:motivate
89:@wait offshore
27:機能を分ける
58:一日予約
88:@wait camp2xhtml
26:早急に作る
57:sc
87:generaltest
25:キャッシュアウトは小さくする。
86:mismatchtest
24:小さくする
55:請求
129:@wait 支払いサイトは翌月で。
85:checkingtest
54:sql dupmpfile
128:@wait 進行を報告します。
84:tester
53:TestedSystem
127:@wait 速いほどよいので早く終わればそれで。
52:war
126:@wait 内部的には３分割するくらいで進めます
82:sss
20:林さん2人月。
51:SyncToy
125:@wait １２，１，２，３で分割する。
230:mock
286:@delegated designをaiで
338:js
61:@done 請求書
335:assistant designer
47:deploy
334:@wait データエントリ
333:ask to invite
210:データ仕様
45:WP_teaming
332:logic impl
319:@delegated HR/PM
318:dropbox sync
42:use templates
317:@done html deploy
249:ValidationRuleAssign
311:バリデーション仕様
79:test
90:@wait design
77:debug
299:core jar
76:OutOfPatterning == coding
298:teller2?
240:inviting more
75:開発機への配備
297:FirstCopyCoreJar
226:json specs
59:@done motivate
292:@wait sub designer
220:hiring_js_developers_for_courseware
55:@done 請求
54:sql dupmpfile
53:TestedSystem
328:js
52:war
273:商流
327:html
326:difficulty part
203:https://basecamp.com/1768706/projects/1732016-courseware
https://www.elance.com/inbox
259:tester
325:sharing filter
324:sub pages design
323:fb part
256:@Air 英語のやつから、ソーシャルの機能一覧を文章にして説明して昨日要件にできるようにする @evernote
322:what we an provide with teller
321:wp sync deploy
308:@wait データエントリー準備
320:@delegated PM
88:@done camp2xhtml
306:* Para*** 
252:PostSentencesOnStoryteller
87:generaltest
305:pureのとこの準備
86:mismatchtest
238:me writes for sample facebook api codes.
304:js_json_teller
250:Sentences
85:checkingtest
236:FB api developers
302:pureつかってjs1ページ組んでみる
82:sss
80:@secretary testdata
232:StorytellerCodesDownload
219:java developer
231:annotations
29:project review
28:google imaegでその単語検索してみる
30:
27:場所をすごいところに
26:無制限ボックス
25:発火
24:モデリングの後で要素の極端化
23:museigen
22:目標の今日k単価
21:モデリング
19:（特許電子図書館　初心者向け簡易検索（商標））
http://www.inpit.go.jp/info/ipdl/service/index.html
にいって中心キーワードで検索する。
20:似てるものは？類似
9:[[在庫]]を上げてしうまう
8:影響力の武器
17:@wait [[scamper]]
7:zaiko
16:idea on ken
6:give
15:give ideas for them.
5:close as job
14:在庫list
13:値付け
3:kenschool_consultant
12:コントラスト
11:自動性
10:上げてしまう
6:ccnp
5:
4:技術レイヤー
257:キーワードページのトップページもWallとかにする？
256:Quoteしてもらう。
169:UX
255:CGM
168:記事量産
253:横展開
252:ピラミッドを可視化する。
251:承認
250:関与の用意せいと関与の感覚。
可能性の中心やブランドの中心。
承認。
163:@wait SV.jpの記事か
289:檄文流したり、Tumblr募集ポストの方にそれをのっけたりしたほうがいいか？
160:@wait さやわかさんとか
286:@wait ソーシャルビルド
285:ツイーとボタンを引用につけるか？
284:そういうクレジットページつくってOKかというのを加藤さんと連絡する。
283:投資原理利用
282:レベニュー資料
281:内容をタギング
280:highrise
192:oauth
307:eclipse
191:twitter
306:画像のリンク機能実装？できてる？
219:知り合い
305:画像のリンク機能実装
218:メイントップキーワードごとにその大御所からのリンクを。
304:@wait 画像がないのちょっときついかも
66:@wait 美しい外見
303:クライアントみてみてかな。
216:SVのアカウントで、Twitter上に流れてくる言葉についてのキュレーター（担当者）を
つけて彼らにピックさせるとメンションしながらハッシュタグつけながら
バックリンクしながらやる。
129:アーカイブページコンテンツからのリンクを作るという仕様
302:twitterのoauthの機能と、tumblrもoauthもしてもらう画面と、
そっからログを取る機能。
アカウントを作ってログインしてからこの画面にきてください。と
214:@wait すたちゃさんにリンクしてもらう
213:@wait 条件
125:サイトマップ自動化
61:@wait SEPR
210:@wait 有名人（選択できるような人）
98:コンテンツ
247:@wait ログイン機能つくってから。
97:backlinks
96:PR
158:Twitterとかに自動リンクされるような感じに。
244:@wait nanki
157:ボタンを押せば参加できたりする的なやつとか、
156:@wait 最初の火付け
242:Twitterなどをタンブラーに保存するアプリ
155:@wait サンプル
241:Tw対談的に短くする？
154:@wait 使っていいか相談
240:キーワードページの中身についてRTとか死安くする。
90:自動リンク
279:レベニュー。
いまこれこれこれの人が協力してくれている。
こんな感じで掲載される。
案件とかが増える。広告効果で。
151:
278:レベニュー
150:SitesCandidates
277:Commonsから引用する。
276:@wait 加藤さんにそういう。
本当に近いところで既に連絡をとっているところをと。
著者原稿料は25万くらいまで使ってもらって増やしてもらってOKと。
189:ストリームを奨励する
275:檄文をシェアする
188:発火とRTと関し可能な状態。
274:@wait 著者切り権利処理
187:参加の感じ
273:ガイアについてもキーワードページ、Evaについても。
186:インセンティブ
272:キーワード画面のグラフィックの候補をだし、
185:ログイン
271:これはやってくれる人がいるかも
270:引用の質を構造的に上げる
209:他サイトを出現頻度チェックツールで検査
207:@wait nanki
205:届け的な
204:Tumblr連携ツール
203:Twitter
202:サービス連携
201:サイト量産
200:量産
239:@wait テストページ作る
89:一般ユーザーが自動リンクしたくなる感じに。WIKI的に。
238:キーワードページの下部にリンク元へのリンクを作る
88:svkeyword.tumblr.comの利用
111:普通のページの改善も
237:@wait ちょっとつついてみてだめなら自分で
236:WQうおてｓキーワードページコンテンツ
149:サービス以外のサイト
86:@wait グラフィック
234:toukuboのやつやる
232:部隊を作る。
231:キーワードポストブックマークレットがあればいい。ｌ
143:サイトレベルでの自動リンクをする。
269:引用の質を上げる
267:ハッシュタグにしてしまって書きこむ？キーワードごとに？
Svkeywordっていうツイッターとかどう？
引用が1つ1つ名言ならば。
265:http://storytellers.highrisehq.com/tags/142234-designer
264:[[new]] designer
263:designer
262:designmethod
261:design
173:インターフェイス
299:Twi
171:CGM
297:SVでどうせつくるので。
170:キーワード量産
296:本を一冊流す。
295:
294:参加の報を可視化
108:サイトマップ
107:トップページとか汚さないようにリンクする
106:出現頻度チェックツールで検査
291:@wait 実験してからか。もうやっていいか。
290:@wait SVの記事の方にもオートリンクをする
229:インセンティブ
101:仕組みに
228:人量産
314:quoteを自動的に直していいか。
313:quoteが汚い
312:キーワードページが汚い
225:@wait 成功の定義を理解させてイメージさせる
成功までの閾値を示す。投資が十分であることの可視化。
ソーシャルビルド
311:出資
224:@wait みんな期待してる。
発火させよう。アイデアを渡そう。
これはやばいわ。
310:小口の人ら
223:人
222:Twitter対談。
ツイッタークライアントつくったらどうか？
・発言の都度自動リンクが付与されて見える。
・それがHTMLに記録されていく。
221:ディクショナリービュー(Hints from archive)
Twitlog的ななにか。
でもフローも見せれないといけないね。
133:@wait 戻せる（かかってない状態になる）ようにする
220:こえかけてまわる
259:デザイン
258:hackedbyページを作る。
4:ご褒美
3:kickoff
1:kickstarter
12:アメリカの住所
4:microfunding
15:英語
18:campfire
4:bag
3:kit
17:他のものとまとめる
16:一回の利用に分ける
4:bag
3:kit
15:better_kit
12:ツールセットにする
8:afford
11:購入
4:エクセルの型
3:キーワードアド倍すツールとキーワード密度チェッカーのurl
2:seoをちょっと勉強してもらう
9:本さがし
8:QandA?
11:pdfを幸平君に
7:発見の密度
6:メール
1:KPI
5:演者による了承
2:変数出し
2:http://storytellers.highrisehq.com/tags/651986-lawyer
1:lawyer
1:leave
17:行き先
20:性的緊張
56:watched
53:being not sure 
to leave is good or not.
49:eat_nomado
52:cycle_context
46:better nagara
45:better ikisaki
43:morningkit
38:コンビニに行く用
41:protain bar
37:gym
36:歩いて、もどってくる
35:gmap
34:go and back
29:tebukuro hokkairo
28:mask
32:PCコンテクスト
27:cycle_kit
7:agc
31:ながら作業？
26:hokkairo
30:critical pathes
4:pknked
23:pknk_early
19:ながら作業
2:洗顔
59:hairset
1:leave_early
6:less
5:less
http://itc.conversationsnetwork.org/shows/detail851.html
2:delete = 削除
1:less_load_cost
5:contextbasexprojectbase
4:portal
3:todoist
9:priority portal
8:remove them
7:for air, nodepad, how, in nodepad + screenshot + brain
10:today thing
6:hard context, and .run things, on todoist.
5:aaa
3:don't do toomuch on design
2:less  for design
10:DomainChart of Class and select
6:出力変数
5:閾値
4:入力変数
3:入力変数　*　閾値　*出力変数
13:Leveling
9:入力の名詞（属性か名詞）
7:Patternize
4:Pattern of Leveling
21:sales
for 
5000-10000
9:homexloaning
8:invested
19:better_keyword
7:loaning
36:sales
6:their benefit
5:presentation
16:company_loanable
4:sell company
14:blog network
31:better_keyword
1:leverage
30:投資循環
29:着手のゴールの可視化 x
参加の可視化 x 速度の可視化 x 問題（ゴール）と
10:投資
28:参加
27:事業計画とプレゼンテーション
26:ピッチ
25:投資の直列化
24:レベニュー
22:mock
1:library
6:watched
5:keio library
4:hibiya
7:http://localhost/lifehack/roi.xls
10:投資飽和しているものはdoneに。
（衛生要因）
6:ランキング１０位以下のものについてはROIを小さくする。
5:スケール単位を考える→スケール数を考える→利益単価を考える→イニシャルコストを考える
3:roi順守
39:水を4リットル飲む
29:avoid getting [[cold]] AGC
36:kaizen ratio
35:context ratio
27:pknked
34:
26:タグ付
19:通電
33:@fired
25:フォロー写真取る
18:permalink
32:外出
24:フォロー写真渡す
17:clutter
31:トレッドミル
23:素晴らしい写真を渡す
16:inbox
30:飯
22:質
15:todo管理
21:評価
14:contextbase
20:connection
13:ratiobase
9:roi.xlsのアップデート
12:ビルドかランタイムか
ビルド
イニシャルコスト
8:着金ノードの結果に高い値を与える
11:複数を因果するようなものは半固有名詞にnaming。
14:create item http://www.backpackit.com/api/　
13: open 655da1d4d25923d90b69a3496f89490f85409ffa

12:backpack API 
9:get gps.

11: get TaggedNodes + Update the list of the resource pages of the backpack 
8:get the status 
10:backpack’s resource pages 
7:@cycle 
3:Notified When @ resoureces 
18:@cvs 

17: backpackurl.txt + backpackhash 
16:@eclipse

15: Create UpdateResroucesOnBackpack.java 
71:@done どうすれば[[GTD]]
459:適材適所
457:ユーザビリティ
249:どうすればbuy from social
456:福利
248:どうすればconnecting the dots
455:context base
454:@wait 速さ>早さ
452:@wait プログラミング5パー高速化で一ヶ月200万か1億
451:商流
450:@done nea
559:ワークフロー的なやつを、定式化する。
558:@wait 困ってる事仕組み化
557:@wait 困ってる事 social lunch meetings 
349:@cycle プロテインスティック
556:@done meat someone and think 
solution
348:@wait 家での食事
555:threashold to do this 
nodings at once
347:@wait 好きなタイミングで食べる
554:Attention
553:ルーチンとか
345:@wait workable at home
552:meceな軸に入るリストのそれぞれの割合
551:runtimeとか
343:@wait 風邪を避ける
550:make the balance of hours
341:チーム
340:outsource
449:@wait すごい質問
448:@wait me more voice
190:どうすれば最初のターミナルノードになるものを早期着手
440:横断的効率化
549:balance
548:@wait 作業のqueue
547:@wait 入れやすいところから入れる
＋ずらす
339:利益率
546:@wait ボトルネック発見
545:@wait enterable
544:@wait looking for someone 
who is working on the artitifial intelligence,
and web. hope 
someone who is really doing this,
not a pop one. not just interested in that,but who is making it. 
coz i m making it, i m about to complete it, 
and belive this could be the hint the greatest invenstion of human beings had ever.
if he is a programmer, that would be great.
i m working as producer, programmer,
artist, business developer, but i believe this is more than this.
i do not own this myself. share it to anyone for free. coz artificial intelligence is in the domain where the scale would be 10000 times bigegr of any spreading services like iPhonoe or twitter. 
I need genius to help this spread out. i m not crazY i hope. 
 
this letter and the motivation that i wrote ( to gatehr people interested ) si 
triggered by the artificial intelligence i made. he told me to do this. 
seriousv
543:@wait 考えを共有する
542:毛細管現象
541:ナトリウムポンプ
540:重力（池→川→海＝2000 -> 0 )
398:nomore_cash_payment
397:@pknk 火曜朝
396:@wait 平日
395:@wait 銀行行く
438:適材適所
437:@wait オフショア
184:どうすればえさでつる
436:@done automate
434:scaleを計算する
433:template
432:@wait os
431:共有
499:@wait スケールメリット
430:テンプレート
498:インターフェイス
497:マニュアル
496:CGM
494:@wait 機械
286:@wait pknked
493:@wait routinize→outsourceしてから自動化
538:それが起こす結果（親ノード）を考える。
それはどんな悪いことと良いことを引き起こす？
492:@wait automator
537:flow
329:routinize→outsourceしてから自動化
491:@wait ifttt
536:ワークフローの移動はできるかも。
328:storyteller
490:storyteller
535:習慣にする価値があるか比較
534:@wait 遵守(reminderメッセージに従う）
533:@wait 1010100
532:@cycle
324:@done better for each context
531:@wait 一回にひとつの習慣をやるようにする
116:@wait どうすればgym
323:@done organize
530:@wait 自分犬扱い
321:@wait 凄い計算機環境
45:どうすれば服
320:@wait 食事
44:どうすればchannelbase
43:どうすればgggg
xxxxxxxxxx
594:elementing
386:売上
593:移動自動化検討
40:@wait どうすればsleeping

178:どうすればroi.xlsのアップデート
385:利益
592:
384:スケール
429:@wait コンピュータの速さ？
383:@wait タスク探索
428:@wait 考えをコピーする
382:@wait pknk_early
427:@wait でっかいPC?
174:スケール単位を考える→スケール数を考える→利益単価を考える→イニシャルコストを考える
426:@wait 速度
218:@cycle 処理のタイミング
425:@wait パラレル
172:どうすれば創造性
424:@wait 自動
423:速さ
170:どうすれば早さ
422:@wait 早さ
421:効率
489:@secretary axis
420:ボトルネック
488:@secretary それぞれの重み。
XLSかmmかndで、点入れてく
487:@wait compare
485:@wait 比較軸の決定は自動化したい。
484:@wait 決定要因をオフショアに
529:習慣？
483:@wait nodepad をオフショアに
528:比較と絶対値
482:@wait どうすれば、考えをコピーできるようになる？
527:連想の素晴らしいユーザーインターフェイスは？
274:@done contextbase
319:CFセーフな外注
481:専門家をワークフローに＋コンテクスト共有
526:考える、意思決定時のシナリオ　*　名詞抽出　*　関係化
318:** CF **
525:画面仕様　*画面遷移
524:modeling
316:集中
523:@wait 凄い質問に転換するボックスとワークフロー
315:nodepad+scale法
522:@wait 凄い質問に自動的に変える
39:どうすればsuperasbn
314:nodepad
521:考えることなどに
ノートパッドより完全なコンテクストは？
38:どうすればDC

313:因果依存
520:意思決定、考えること、美しいこと、
PKNK？
PKNKインターフェイスを完成させる？
589:@wait workflow
588:@wait Y/n interface for RTM and Workflow and iPhone
310:自動化
379:成長戦略
586:@wait workflow
378:定期購入
585:どっかもう一弾別れる所ある？
584:@wait csv
169:どうすればゆとり
583:@wait 方法を見つける
582:@wait CFお金3万
374:contextごとのoutsource=patternize
581:@wait csv+a tool
373:自分の高速化
418:*****
意思決定の速度
580:@wait automater
372:受託の現状の月間上限売上額200万に従う
209:@wait どうすればqueue
371:@wait 費用削減
208:@wait どうすればavoid interupt
370:でっかい会社にその方法を注入する
415:iphone
414:通信費削減
413:@wait 交通費削減
479:@wait 量産
410:@pknk 印鑑持ってパスポートもっていく
477:@wait routinize→outsourceしてから自動化
475:@wait ifttt
474:@wait storyteller
519:@wait 連想行為の分割
473:@wait 自動化
518:@wait 連想自動化
266:@wait ** どうすれば栄養 **
472:@wait 考えるやつ、オフショア？
517:@Noding 連想を工程に入れる。
309:脳の自動化
471:@wait g
516:Nodeなのでできるのでは？
470:@wait communications
515:表計算だが。。。
308:スケールを加味
514:結構自動化できる
513:でかいモニター
306:@wait 時間7200円＝2円換算して比較
512:[[組合]]せ作成の素晴らしユーザーインターフェイスは？
305:@wait ボケ時間削減
304:@wait 時間を得る
510:分解して自動化できるサイクルをオフショアアウトソース
579:@wait ifttt
302:SCかつボトルネックかつCF
577:@wait 比較軸抽出をNDからNumbersにするところ
369:@wait 場所代削減
576:@wait まず言語化か
575:資料作ってから
574:@wait ナナピの人探してとにかくお話はする。
仕事くれ。
366:パラ
365:速度
571:@wait 相互接続の快感
362:routinize→outsourceしてから自動化
407:@pknk もらえるみたい いく
406:@wait 保険証
405:@wait 薬
404:@wait 逆食
402:new_exclamations
401:aaa
400:new!
469:仕組み化
468:モデリング
467:@wait 食事
466:栄養
465:@wait 網羅
464:@wait 睡眠
508:@wait 組合せ作成の自動化
463:バッファ
507:意思決定のバッファ？
462:@wait pknk
506:データ
461:多目的化
505:データの自動化
253:どうすればmeeting_people_is_easy
460:@wait 自動
504:データがもっと入るようにする。
503:@wait 連想
502:nodepadをもっと完成する。
501:考える作業を、もっとワークフローにする。ボックスたちに分けてルーチンにする。
569:@wait パブロフと快
500:ビッグスケール
568:@wait 類似

567:@wait 印象の強い初回*毎日1度*7回＋3ヶ月に一度
566:連想曲線
565:@wait 連想辞書
357:contextごとに
564:辞書？
563:nodepad
355:@wait ガソリン避ける pknk
562:programming, automater or ifttt to automate the  workflow to think?
354:fashion to tkp
561:@wait cf
353:tkp
560:@wait ナナピに行く
352:@wait ミルクにとか素敵な習慣がないかもしれない
350:@wait プロテインとミルク
73:どうすればnodepad
72:どうすればroiの遵守
500:ビッグスケール
190:どうすれば最初のターミナルノードになるものを早期着手
569:@wait パブロフと快
568:
567:@wait 印象の強い初回*毎日1度*7回＋3ヶ月に一度
459:適材適所
566:連想曲線
349:@cycle プロテインスティック
565:@wait 連想辞書
457:ユーザビリティ
348:@wait 家での食事
564:辞書？
456:福利
347:@wait 好きなタイミングで食べる
563:nodepad
455:context base
562:programming, automater or ifttt to automate the  workflow to think?
454:@wait 速さ>早さ
345:@wait workable at home
561:@wait cf
560:@wait ナナピに行く
452:@wait プログラミング5パー高速化で一ヶ月200万か1億
343:@wait 風邪を避ける
451:商流
450:@done nea
608:
607:@wait double
606:ほとんどの物が「ダブル」によって、
両手リソースによって倍速化できるかも。
73:どうすればnodepad
603:tag
72:どうすればroiの遵守
602:monogawa
71:@done どうすれば[[GTD]]
601:tag
184:どうすればえさでつる
600:workflow
559:ワークフロー的なやつを、定式化する。
558:@wait 困ってる事仕組み化
557:@wait 困ってる事 social lunch meetings 
449:@wait すごい質問
556:@done meat someone and think 
solution
448:@wait me more voice
339:利益率
555:threashold to do this 
nodings at once
554:Attention
553:ルーチンとか
552:meceな軸に入るリストのそれぞれの割合
551:runtimeとか
550:make the balance of hours
116:@wait どうすればgym
440:横断的効率化
398:nomore_cash_payment
397:@pknk 火曜朝
396:@wait 平日
395:@wait 銀行行く
286:@wait pknked
178:どうすればroi.xlsのアップデート
174:スケール単位を考える→スケール数を考える→利益単価を考える→イニシャルコストを考える
172:どうすれば創造性
170:どうすれば早さ
549:balance
548:@wait 作業のqueue
547:@wait 入れやすいところから入れる
＋ずらす
546:@wait ボトルネック発見
438:適材適所
329:routinize→outsourceしてから自動化
545:@wait enterable
437:@wait オフショア
328:storyteller
544:@wait http://cl.ly/2R3Q2w311a34
436:@done automate
543:考えを共有する
542:毛細管現象
434:scaleを計算する
541:ナトリウムポンプ
433:template
324:@done better for each context
540:重力（池→川→海＝2000 -> 0 )
432:@wait os
323:@done organize
431:共有
430:テンプレート
321:@wait 凄い計算機環境
320:@wait 食事
499:@wait スケールメリット
498:インターフェイス
497:マニュアル
496:CGM
494:@wait 機械
386:売上
493:@wait routinize→outsourceしてから自動化
169:どうすればゆとり
385:利益
492:@wait automator
384:スケール
491:@wait ifttt
383:@wait タスク探索
274:@done contextbase
490:storyteller
382:@wait pknk_early
538:それが起こす結果（親ノード）を考える。
それはどんな悪いことと良いことを引き起こす？
537:flow
429:@wait コンピュータの速さ？
536:ワークフローの移動はできるかも。
428:@wait 考えをコピーする
535:習慣にする価値があるか比較
427:@wait でっかいPC?
318:** CF **
534:@wait 遵守(reminderメッセージに従う）
426:@wait 速度
533:@wait 1010100
425:@wait パラレル
316:集中
532:@cycle
424:@wait 自動
315:nodepad+scale法
531:@wait 一回にひとつの習慣をやるようにする
423:速さ
314:nodepad
530:@wait 自分犬扱い
422:@wait 早さ
313:因果依存
421:効率
420:ボトルネック
310:自動化
489:@secretary axis
597:better_sleeping
488:@secretary それぞれの重み。
XLSかmmかndで、点入れてく
487:@wait compare
379:成長戦略
378:定期購入
594:elementing
485:@wait 比較軸の決定は自動化したい。
593:移動自動化検討
484:@wait 決定要因をオフショアに
483:@wait nodepad をオフショアに
45:どうすれば服
482:@wait どうすれば、考えをコピーできるようになる？
44:どうすればchannelbase
374:contextごとのoutsource=patternize
266:@wait ** どうすれば栄養 **
481:専門家をワークフローに＋コンテクスト共有
43:どうすればgggg
xxxxxxxxxx
372:受託の現状の月間上限売上額200万に従う
371:@wait 費用削減
40:@wait どうすればsleeping
529:習慣？
528:比較と絶対値
527:連想の素晴らしいユーザーインターフェイスは？
526:考える、意思決定時のシナリオ　*　名詞抽出　*　関係化
418:*****
意思決定の速度
309:脳の自動化
525:画面仕様　*画面遷移
524:modeling
308:スケールを加味
523:@wait 凄い質問に転換するボックスとワークフロー
415:iphone
522:@wait 凄い質問に自動的に変える
414:通信費削減
306:@wait 時間7200円＝2円換算して比較
521:考えることなどに
ノートパッドより完全なコンテクストは？
413:@wait 交通費削減
305:@wait ボケ時間削減
520:意思決定、考えること、美しいこと、
PKNK？
PKNKインターフェイスを完成させる？
304:@wait 時間を得る
410:@pknk 印鑑持ってパスポートもっていく
589:@wait workflow
588:@wait Y/n interface for RTM and Workflow and iPhone
479:@wait 量産
586:@wait workflow
477:@wait routinize→outsourceしてから自動化
39:どうすればsuperasbn
369:@wait 場所代削減
585:どっかもう一弾別れる所ある？
38:
584:@wait csv
475:@wait ifttt
583:@wait 方法を見つける
474:@wait storyteller
582:@wait CFお金3万
473:@wait 自動化
365:速度
581:@wait csv+a tool
472:@wait 考えるやつ、オフショア？
580:@wait automater
471:@wait g
470:@wait communications
362:routinize→outsourceしてから自動化
253:どうすればmeeting_people_is_easy
519:@wait 連想行為の分割
518:@wait 連想自動化
626:体
517:@Noding 連想を工程に入れる。
516:Nodeなのでできるのでは？
515:表計算だが。。。
407:@pknk もらえるみたい いく
623:meta
514:結構自動化できる
406:@wait 保険証
513:でかいモニター
405:@wait 薬
512:[[組合]]せ作成の素晴らしユーザーインターフェイスは？
404:@wait 逆食
620:auction
510:分解して自動化できるサイクルをオフショアアウトソース
579:@wait ifttt
577:@wait 比較軸抽出をNDからNumbersにするところ
469:仕組み化
576:@wait まず言語化か
468:モデリング
575:資料作ってから
467:@wait 食事
574:@wait ナナピの人探してとにかくお話はする。
仕事くれ。
466:栄養
357:contextごとに
249:どうすればbuy from social
465:@wait 網羅
248:どうすればconnecting the dots
464:@wait 睡眠
355:@wait ガソリン避ける pknk
571:@wait 相互接続の快感
463:バッファ
354:fashion to tkp
462:@wait pknk
353:tkp
461:多目的化
352:@wait ミルクにとか素敵な習慣がないかもしれない
460:@wait 自動
350:@wait プロテインとミルク
619:習慣化
618:better_customize
617:better_morning
508:@wait 組合せ作成の自動化
616:morningkit
507:意思決定のバッファ？
506:データ
505:データの自動化
613:contextbas
504:データがもっと入るようにする。
612:加湿
503:@wait 連想
611:tagv
502:nodepadをもっと完成する。
501:考える作業を、もっとワークフローにする。ボックスたちに分けてルーチンにする。
4:@keyword [[linuxsetup]]
3:linux
4:
3:usb用意
6:linuxsetup
14:tomcat
13:jdk
9:webmin
12:samba
11:xampp
10:clouddb
6:googledrive
5:excel
4:clear
3:list
9:csv
27:@done ・認め印
26:@done ・身分証明書。パスポート。
24:@mece 　・確定申告書  or 納税証明書
22:@mece ・収入のわかるもの
19:@done 税金支払
8:@mece 審査申し込み
17:@pknk ・間取り。
7:@mece pre-審査
16:@done ・借り入れの資料
6:@ol tell her
15:@done ・承認
5:@secretary @mece explanation, and to schedule to mom and shima
14:@done 登記簿謄本です。
38:regist as incomes
4:@mece contract
37:export the expenses and withdraws
12:@mece documents
36:make invoices
11:tax reporting policy
35:and remove the visa,,, thing 
10:@mece tax reporting
34:importing the card expenses transactions
33:duplicated expenses
31:easiest ones
29:schedule for it
4:
3:loaning
8:che
95:search about godo llp and kabushiki llp
for the cost and investability, loanability
94:CF201402
79:モビット。レイク
93:cf update
3:loaning
78:ＣＩＣや日情連、全銀協などの審査機関に情報開示請求
92:short
75:f
74:loaningできるところ試す
59:@wait 効く
73:仕入資金調達支援サービスのご案内 ←報酬体系探す。
58:自己資金
57:合同会社がいいのか？
70:
39:@wait リスクは？
54:@wait 定期雇用の名義等が必要
38:成長したい
53:@wait その金融主体とのトランザクション（売上＞利益）。
例：不動産シェアの親になって年額５００万の入出なら
５００万の売上と見なされる。
ー＞７００万の売上が別にあるなら１２００万の売上の信用
ー＞これは利益が一緒でも売上が大きければ信用に
37:銀行にいきなりはだめ。
52:同一銀行使うようにする
51:@wait 利率は７以上は異方的な裏金
35:融資
50:@wait 金融は強烈な中毒性を持つ
34:少額の実績
33:@Air キャッシュフロー表
16:機会購入
15:ショート資金の態勢
14:資金調達
13:loaning
12:投資
11:資金調達
10:バーター
89:p2p loaning
87:http://www.sg-finance.co.jp/?a=SA&aid=94d16ef7276f445ba06ed3a373666d8f
86:https://www.pocketcashing.com/form/index.html
85:http://www.any-cashing.co.jp/?mbid=PILEAFF&aid=d710ec2a0e5774be85f82fe361242fd3
69:あとで株式今は合同
84:https://business.form-mailer.jp/fms/9ce5da8327994
68:キャピタル・ゲイン
83:genkinka http://0120447888.com/jigiyo.html?aid=496630512bcb9ea715453b3b220892a5
82:http://softblack.info/
66:株式会社？
81:ソフト闇金
65:たくさん検討する
80:固定電話があるかないか
64:話をする
49:経済的信用
63:たくさんの人になるべく声かける
48:@wait 不動産
62:競争サせる
47:信用
61:任せるべき人に任せる
46:海外
60:たくさんの銀行に行く
45:担保
44:リスク
43:競争
42:複数主体に
41:アカウント作っておく
26:決算がマシ
40:段階ローン？
25:@Air loaning_context
24:@wait あの人連絡してみる
23:売掛担保
21:設立期間
20:会社を分ける
9:top
14:アカウント作っておく
13:融資契約書作成
9:共同代表？
25:原価レベニューでやってくれる人いるか？
24:担当者？
4:融資の根拠を決める
19:資金調達
3:loaning1209
18:複数主体に
21:大きな額の受託が決まってキャッシュがある状態で借りる
20:受託？
16:担保
15:割合が利益を超えない、
かつ
利子分が純利益の30パーを超えないことをバリデートする
6:スケジュールは？
5:リスクは？
4:mindnodeを。
3:時系列
SVのベンチャー性。終えた。
投資。
その割合。
1:local-ui
12:default view
11:take from web.
10:copy-frompath
9:copy-to
8:android basepath
7:iphone base path
6:one-way copy
5:two natives inclues(links)
13:write so in code
4:sent emails
project todos ( base todos )
rtm todos 
koku
bank account history
seach history
typings
clipboard history

3:log
14:@wait tag
13:flickr
4:sent emails
project todos ( base todos )
rtm todos 
koku
bank account history
seach history
typings
clipboard history

3:log
12:evernote
11:bookmark
10:tagging
21:忘却
20:創作
17:modeling
7:logging
4:LoggingPattern
3:logging
7:format
6:format
5:LoggingPattern
4:logging
3:logging_expenses
4:storyteller
3:LoggingPattern
2:ktax
71:@wait 日焼け止め
44:ながら洗い
70:栄養
42:@cycle 服をヤフオクで
13:sales
12:モテ
11:@cycle 服を月4万
58:ビルドかランタイムか
ビルド
イニシャルコスト
57:複数を因果するようなものは半固有名詞にnaming。
56:投資飽和しているものはdoneに。
（衛生要因）
29:アクティベイト
55:roi.xlsのアップデート
28: クレンジング
54:着金ノードの結果に高い値を与える
27:モイスチャー
53:http://localhost/lifehack/roi.xls
26:roi
52:ランキング１０位以下のものについてはROIを小さくする。
25:camp
51:スケール単位を考える
→スケール数を考える→利益単価を考える→イニシャルコストを考える
24:pknk
22:泡洗顔
98:
69:血流
95:鼻
68:@wait 栄養
93:runtime
38:ボディースプレー
64:@cycle 顔の毛定期的に
37:毛穴パック
90:@wait 目の下
63:@home 変えてみる
36:黒目大きく
62:@wait まゆげ
35:コンタクト
61:leave
34:尾根
60:ながら
9:丈
8:髪
7:@wait @cycle 顔の筋肉
30:香
6:@wait 洗顔
5:自信
78:@cycle 顔訓練
2:looks
75:やってみるのが良いかも。
48:肌
74:小瓶
47:毛
73:@cycle 習慣
46:顔
72:睡眠
45:染める？
10:SC（睡眠）
7:風邪引かない
4:生活衛生要因
3:lse
19:eat well and early
18:pknk
17:衛生（顔、紙、体）
16:NC栄養
15:服（外見）
14:SC
スケジュール
13:CRM
12:AC
9:cycle準拠
11:DC
8:roiに準拠
9:@Air cfにアップデートする
8:いくら必要か。多くていいか。
多いほど金額が減る（15%くらい。）ので
20万だと3万減る
でかい。
19:もっかい買う
5:タイミング後の程良いが。
16:cf
4:いつやるか。
15:マッチング
3:mac_auction
14:auction
13:出品の方
68:offshore
67:today

4:MagicDrawing
3:RuntimeNoding
7:Preperation
10:要件@Noding
3:mail
13:one-additional-wet
17:MailAboutパターン
10:要件@Noding
3:mail
13:one-additional-wet
29:Mails
32:node braek
28:Text
31:PopAccess
27:============================= 
         Runtime
=============================
26:text2nd
39:account
24:jmail
23:retrive mails from node
40:get jar and google how to pop + test
22:mailtonode
36:decide added file
33:nodes
6:give him many info
5:if he doesn't have menu, tell him
4:mix him up with others
3:make_him_succeeded
7:get all the node files
6:match the node
5:get all the node
4:get all the node
9:getNodes
8:there is a method already
1:make_links_from_all_the_nodes_in_all_the_node_files_not_only_the_nodefield_node
1:make_the_project_entry_automatically
17:data access
16:tagging
15:network?
14:keitai
8:make list
13:each of the node should have the roi vaules? no. project node only should be fine now.
7:and common for the further development
6:do quick
11:excel, csv, and some format
5:clouddb
20:mvn
10:batch operations
4:a list? how to load and fille
1:make_the_project_entry_automatically_from_nodefile_=_nodefield
19:some way to handle in web app
18:sync
1:make_the_project_enttry_automatically_from_nodefiles
2:nest
1:maki
42:@wait FirstCopyCoreJar
41:@wait put CommonTranslation @storyteller ( http://storytellermachine.net:8080/storyteller/J2eeStorys.do
40:@wait PostSentencesOnStoryteller
65:@wait RuntimeNoding
64:@wait AttrPicking
62:@wait FirstModeling
19:@wait TestedSystem
61:@wait FirstMvn
17:SyncToy
16:配備
8:@wait 投函
15:@wait server url
14:@wait ター
6:サービスイン。配置  = deploy
5:@wait 請求
29:@wait camp2xhtml
71:@wait MagicDrawか紙かnodepad
4:@wait storyteller
28:@wait war
3:malta
27:@wait テスト
85:
26:@wait debug
25:OutOfPatterning == coding
24:@wait 開発機への配備
98:@wait CommonTranslationsを入れる@air
39:@wait StorytellerCodesDownload
23:@wait xhtml2jsp
97:@wait 質問全部くるの松
38:@wait generaltest
96:@wait 仕様の完成
37:@wait mismatchtest
21:配備
101:xmlだけは書いてもいいかも
95:@wait Storyにする
36:@wait checkingtest
20:@wait sql dupmpfile
35:@wait tester
34:@wait mock
33:@wait sss
32:@wait test
31:@wait design
30:@wait offshore
7:running top projects ( has wait time, when we can't invest == do no actional tasks ) 
6:but run things should be 
5:currently, to choose next, and follow the 
1. exponents ( concentrate as possible , and let return faster ) 
4:purposes
9:some top tasks should be running parallely
8: cases we can7t do it. anyway
1:managemen.run-20141024
13:THE CHECK LISTS,
# All the projects in basecamp is updated,
# All the cells are filled regarding the projects sheet,
# All those hired from odesk,and shufty are cazptured , in the Staffs sheet
12:Expense
 date,
 value,
 done.
9:ContractType
 name,
 paymentConditions 
 
name=DevelopmentSupport,ProjectBase?

8:Payments
 date,
 value,
 done,
10:Client
7:inserting Projects when we have it first,
 update price and startdate, payment date, and prepare the payment method,
give the menu an
6:Projects
 name,
 price,
startdate,
 enddate,
 paymentMethod,
 paymentStartdate
 (paymentLeft)
  (benefitRate)
5:
2:managementの人
1:management
16:Staffs
 baserate ( hourlyrate)
 hours to work monthl
 vcard information
15:Assignments
38:find them and learn
37:need and less supply
36:get rare ability
for scabling works
35:conversion rate
52:30 conversions at 
34:google
51:40 more buffer
33:great portfolio
32:many channels
50:10, stack or flow
31:quick conversions
49:400hours = 25
16h/1
30:cf
48:160h
47:get invested
46:or both stack and flow
45:by stack
44:by flow
43:have 660
42:objective c and 
android
41:meat people
40:rails
16:Staffs
 baserate ( hourlyrate)
 hours to work monthl
 vcard information
15:Assignments
9:ContractType
 name,
 paymentConditions 
 
name=DevelopmentSupport,ProjectBase?
24:cfrun
8:Payments
 date,
 value,
 done,
13:THE CHECK LISTS,
# All the projects in basecamp is updated,
# All the cells are filled regarding the projects sheet,
# All those hired from odesk,and shufty are cazptured , in the Staffs sheet
7:inserting Projects when we have it first,
 update price and startdate, payment date, and prepare the payment method,
give the menu an
12:Expense
 date,
 value,
 done.
6:Projects
 name,
 price,
startdate,
 enddate,
 paymentMethod,
 paymentStartdate
 (paymentLeft)
  (benefitRate)
21:tag:management
5:
20:tag:cfrun
10:Client
2:managementの人
1:management
19:cfrun
27:tag:roi
16:Staffs
 baserate ( hourlyrate)
 hours to work monthl
 vcard information
15:Assignments
9:ContractType
 name,
 paymentConditions 
 
name=DevelopmentSupport,ProjectBase?
24:cfrun
8:Payments
 date,
 value,
 done,
13:THE CHECK LISTS,
# All the projects in basecamp is updated,
# All the cells are filled regarding the projects sheet,
# All those hired from odesk,and shufty are cazptured , in the Staffs sheet
7:inserting Projects when we have it first,
 update price and startdate, payment date, and prepare the payment method,
give the menu an
12:Expense
 date,
 value,
 done.
6:Projects
 name,
 price,
startdate,
 enddate,
 paymentMethod,
 paymentStartdate
 (paymentLeft)
  (benefitRate)
21:tag:management
5:
20:tag:cfrun
10:Client
2:managementの人
1:management
19:cfrun
27:tag:roi
75:check from the feelings
74:see "tagged" management.run
73:see all the readlater inputs
72:see all the reminders, and one week notes
69:regist it as project in evernote and nodepad
93:details of the costs + irradiatables
68:capture from evernote
92:irradiate
67:RUNTIME
91:CF free
89:@mece irradiation
90:sales
88:dddd
64:３つのやつより重要そうなやつだけピックする
87:sales.
63:並び替える
86:CF issues
62:roiを入れる
85:the ROI point
84:balance
83:cf
82:avoid make the productivity row.
81:eliminations
79:make sure it average is 120hours.
78:make sure the apctime less than 160 hours.
67:RUNTIME
75:check from the feelings
74:see "tagged" management.run
64:３つのやつより重要そうなやつだけピックする
73:see all the readlater inputs
63:並び替える
72:see all the reminders, and one week notes
62:roiを入れる
69:regist it as project in evernote and nodepad
68:capture from evernote
15:outsource
12:manualize
2:一般的効率化。<-SNを高める<-作業工程のNoiseを減らす

10:outsourcable
20:manual
19:Display HasaccessableurlSentences
18:作業の経験
17:snapshots
8:history
16:automate manualization
7:manual
57:HtmlDesignWithDreamweaver
61:UpdateOrderOfHtml
56:Post AccessableUrl
60:#done RuntimeNode
55:ManualGeneration
54:HtmlForNonOutOfPatterningSentences
53:HtmlForOutOfPatterningSentences
12:modeling of manualization
11:automate manualization
48:#done mock
10:auto snapshot and editing?
39:ai
38:work
41:html
40:xls
36:modificable
76:jing
9:snapshots
33:pc
73:============================= 
         Bulidtime
=============================
32:opertion gothrough
72:stsc
6:outsource
66:Display HasaccessableurlSentences
65:Post SampleData
3:manualize
22:manual
59:SetSentenceHasaccessableUrl
18:作業の経験
12:@secretary:jing入れる
11:@secretary:winshot入れる
10:リストを上から実行しつつ、winshotで保存
9:remember the milkにリスト作成
8:作業をみる。文化いする。n化する。
7:仕組み
16:ゴースルー
4:manualを仕組み化
15:一回
3:manualizize
3:IntraUser can Post Site. so that we can post product adding to the site.
イントラユーザーはサイトをポストすることができます。これによってプロダクトをサイトに登録することができるのです。

The Final goal(output) in Runtime of gasweb project is, to get ActualPayment from PublicUsers. to get paid from public users who make orders on gasweb site.
最終的なgaswebプロジェクトのアウトプット（ゴール）は、実際の支払いをパブリックユーザから受けることだ。支払いを受けるためには、ガスウェブのサイトにおいてオーダーをしてもらう必要がある。

This could be done when we finish a deriveration(public user get the ActualProduct). The deriveration itself is done by a derivery componey we have contract, and so the final step which our process care for is to do ActualShipping, and after that, we regist Shipping Information. to this system.
これ（支払い）は、われわれが配送を終了した（客の手元に商品が届いた）時に起こる。しかしながら配送自体は配送会社によって行われる。そのため、われわれの販売プロセスの最後のステップは、発送作業を行うことである。そのあとにわれわれは発送情報をシステムに登録

IntraUsers Post Shipping. for doing this, they need to know which Order doen't have Shipping data. so need to Display OrderWithoutShippingOfADate. IntraUsers sometimes need to Display OrdersOfADate and to Display OrdersOfADateSpan. and OrdersOfAMonth. and need to Display Shippings. 
イントラユーザーは発送情報を登録する。このためには、われわれは、どのオーダーがまだ発送情報を持っていないかを知る必要がある。発送情報をもっていないものが発送をしていないものである。そのためには、われわれはシッピングデータを持たないものののうち、ある日付のオーダー（OrdersWithoutShippingOfADate)を表示する必要がある。
また、内部ユーザーは時々、OrdersOfAData=ある日付の、発送記録有無に限らずの表示をする必要もある。また内部ユーザは日付範囲内のオーダーを出す必要もあるし、全部の発送記録を出す必要もある。



IntraUser Printes SendingsheetToSagawa. however, this is not supported by the system. the system displays orders information as we described anove, and we this has address of the user of the order, so they use this . and we need to ExportXlsOf OrdersOfADate.
イントラユーザーはサガワへの発送伝票を印刷する。しかしながらこれは本システムではサポートされない。このシステムは上に述べたとおり、発送情報やオーダーの情報を出し、これらは住所氏名電話番号などの伝票に必要な情報を含んでいる。われわれはいずれにしろ、ある日についてのオーダー一覧のエクセル書き出しもし、伝票などにつかう。これはなおイメージマジックというシャツ作成代行会社が行う。


Also IntraUsers Displays Orders, simply to know how much orders are we get , and when we want to get more information, IntraUsers need to request the system to Show Cart.
イントラユーザーは、オーダーを全件表示させもする。これは端的にどのくらいのオーダーを受けてきたのかなどの統計のためでもある。われわれがより詳細な情報が望むならば、閉じたカートの記録や詳細を見ることができる。


the Order is ofcause made by the public users, so, PublicUsers Post Order. and for that, we need to request PublicUsers Post PublicUser itself. information about public user himself. this includes address, phone,name, password and check box showing if he wants to regist to the gasweb system. etc. after postingVP called and processed successfully, we Show Thankyou, 
and we SendMail NotificationOfOrder and we show bankinginfomraion if the PaymentMethod of the Order is bankingtransfar. show contentofmails depending on the paymentmethods. accessable by ${staticData.Bankinginfomarion),
 when the code of PaymentMethod is banking, we send , this is stored in the form of html , accessable by ${staticData.Bankinginfomarion),
オーダーはもちろんパブリックユーザーによってつくらる。つまり、PublicUsers PostOrderである。そしてこのために、われわれはPublicUsers Post PublicUser itselfが必要である。ユーザーにパブリックユーザー自身の情報をポストしてもらう必要がある。これは住所、電話番号、氏名、もしも彼がシステムにメンバ登録したいという意思があるチェックボックスに氏名をいれるならパスワードなど、が含まれる。



For doing this , we need to request our PublicUsers to PostACartAboutPaymentMethod. and depending on the choise of paymentmethod, navigate to these patterns.
when he chose banktransfar, we need to send Bankinginfomarion to our user Listening to  PostOrder,but this time, the publis user will be navigated to the PostOrder page. 
when he chose creditcard, we need to ask our public users to Post CreditCard. and at VP of this pattern we just check this card is valid after calling a speciall native apis which is given from credit card componeys.
when he chose payatarrival, public users need to do nothing. so he is navigated to PostOrderDetail
when he chose npfuturepayment,we navigate users to PostORderDetail directly(after saving the payment method adding to order in the session).
We CheckPaymentMethodIsValid for the choise of payment and if it is valid with our public user.
オーダーをためには、われわれはユーザーに、支払い方法をまず選択してもらう必要がある。その後で、支払い方法ごとに、その支払い方法の詳細情報をポストしてもらう必要がある。
について、カート情報をポストしてもらう必要がある。われわれはユーザが選択した支払い方法がこのユーザについて有効であるかのチェックをする必要がある。


For doing this ,IntraUsers Post PaymentMethod at the start time of the sysmem we often use this feature, so we maybe don't prepare an interface for PaymentMethod, and just put data using phpmyadmin or odbc(access).We also Display PaymentMethods to see what method is registered.
このためには、あらかじめ内部ユーザーが支払い方法（の選択肢たち）をマスタとしてスタート前に登録しておく必要がある。これはしかしながらそれほど頻繁に使う機能ではないので、インターフェイスは用意用意しない。phpomyadminなどでデータは入れる。

And to let our public users go to Posting Orders ,we need to Show Cart with Choises of Products.
また、われわれのパブリックユーザにオーダーをさせるには、われわれは現状のカートにいれている商品（選択している商品）を見せる必要がある。

PublicUsers Display ProductReviews of the Product at ShowProduct page.
パブリックユーザーはプロダクトページにて、商品レビューのリストをすることができる。

at least one Choise should be Posted. before they make order. PublicUsers Post ChoiseAddingToCarts. for this , we need to have many ways to display our products, so that our public users can reach what they want easily and they can click it and make choise,and order. we Display Products simply as all the products, and also let PublicUsers Grep Artist By name. 
also , We Displays Artists and Show Artist in detail. with his Products. 
最低ひとつ、選択がなされている必要がある。オーダーする前に。パブリックユーザーはカートに商品の選択という情報をポストする。wれわれはこのために、パブリックユーザーがほしい商品に簡単に近づけるようにしてやる必要がある。われわれはこのためん、商品の全一覧を出すし、また、パブリックユーザに、アーティスト名で検索させたり、製品の各情報についてgrepさせたりする。
また、われわれはアーティストの一覧表示をするし、アーテイストを一人ずつ詳細表示もさせる。ここにはそのアーティストの商品も出る。

Throught this surfine, users can see the Choises of Cart of the PublicUser. it is stored in the session. not in the db. 
このサーフィンをつうじてずっと、パブリックユーザーはそのパブリックユーザのカートについて選択されたプロダクトの一覧をみることができます。これはセッションに保持されていて、dbには保持されません。

Plus, the PublicUser can Display ProductViewHistotrys of the user. we store this data to session not in the database. at ShowProduct page.and For this, system creates ProductUserHisotry(story to the session when the ShowProduct.do is called).
加えて、パブリックユーザは、ユーザーの製品閲覧履歴を製品ページでにて見ることができます。これらはセッションに保存されます。データベースにではなくです。このためには、システムは、そのユーザの製品閲覧履歴を、ShowProductが呼ばれるたびに作成する必要があります。


He can see the tags of ArtistTaggings of a Artist Displayed at Artist page(when we Show AArtist).and also tags of ProductTaggins of a Product at Product page.
パブリックユーザはアーティストの、アーティストタギングのタグ群がアーティスト詳細ページにて表示されるのを見ることができ、またプロダクトについても同様です。

when he is already logged in, he can Post ProductTagging adding to product. and he can Post ArtistTagging adding to artist.All the PublicUsers can Post ArtistTagging and Post ProductTagging even if he is not logged in yet, but they will be notified after he click "submit" button that we need to logged in or if he is not a member he need to regist.
彼がログインしている場合は、彼はプロダクトについてのプロダクトタギングをポストできます。アーティストについてのアーティストタギングもできます。パブリックユーザーはログインしてないときにもフォームを表示させることはできますが、サブミットボタンを押したときに、ログインしているかあるいはかつ、メンバー登録をする必要があることが知らされます。


PublicUser can Post Wish of a product. and Wishs (wishlist) is Displayed at all the pages in the side bar.
パブリックユーザはWishを製品についてポストすることがでいます。そしてまたウィッシュリストを全部のページのサイドバーに表示されているのをみることができます。

and these products data and Artist data are displayed only when they are public.(public flag is set). this flag can be modified (swithced) done when IntraUsers Post Artist and IntraUsers Post Product pages. 
そして、これらの商品、アーティスト、のデータは、すべて、パブリックであるときにのみ表示されます（パブリックフラグがたっているときにのみ表示されます）。これはイントラユーザーが、アーティストをポストするとき、またイントラユーザーがプロダクトをポストするときにスイッチすることができます。

IntraUsers can reuqest this system to Display Artists and Display Products and Display PublicUsers and Display IntraUsers. 
イントラユーザーはシステムにてアーティストの一覧を表示させることができます。また製品の一覧を表示させることもできます。

IntraUsers can MultipleFileFormUpload WebImageFiles addingto Product, and can SimpleFileFormUpload A PrintFile addingto A Product and IntraUser can SimpleFileFormUpload ArtistImageFile addingtoArtist.
イントラユーザーはプロダクトのウェブ画像（複数枚）をアップロードすることができます。また、製品にシャツ印刷用データをアップロードすることができます。またアーティストに、アーティストイメージファイルをアップロードすることができます。

IntraUser can Post IntraUser.
イントラユーザーはイントラユーザーを作成することがでいます。また一覧することもできます。

4:お客様の心理やその動向を捉えて行う知的作業である
3:marketing
131:itagents にメールとか買く。
17:実績
130:情報保護
16:共有
15:売上
14:行動（購入）＝
13:確信
169:ナイスビジネス
168:ナイスガイ
11:欲求
167:design
10:興味
166:飯野さん
163:デザイン・規模・実績・url
49:@wait 動かす
48:@wait フォントのでっかい文字列
47:@wait 赤い
160:モチベーション

46:@wait 凄いcssをもらおう。
45:@wait attention
44:注意
43:すでに顧客を持っているところに教育とセットで
42:@wait 技術者コミュ
40:@wait 大手=>中堅->下請けへの流れ
79:自動化できない（他とちょっとでも違う）が、
自動化し切れてないところ。
あるいは新しいビジネスモデルでありものが利用できないが、
自動化したいところ
78:客は誰か考える
129:試用：mockを作らせてもらう。無償。
77:@wait SIerに入る
76:1:5の法則
127:gasbook.net
mailmag
startbahn,
storytellerそのもの
photo
autonoding
recipe
75:会社とか
126:1.言語選択がまだなくて提案可能か、javaで、sshがつかえる。
2.ウェブアプがベスト。そうでない場合はテンプレートを作る作業をしてからになる。
　適合性が高い場合は、30時間もあれば対応可能。
　cobol,php,perl,vb,c#などのシステムでは比較的すぐに対応可能。
3:まるごと受託がベスト。
4:インドオフショアについて。
5:会社などについて。
6:東窪そのももの立場について。会社自体は持ってない。
7:まるごと受託ではなく、部分なら、内部設計と実装で、言語、
8.成果報酬？

74:アドセンス？
73:ウェブ[[広告]]
124:受託少ない。常駐多い。社員契約多い。
72:それっぽいやつらがいるところでチラシ配る
123:バッチ処理、多い。
71:マッチャーが行動する
122:チーミング済み多い。
70:マッチャーに確信させる
121:言語指定済みおおい。
120:Java2.5割。cobol、.netが1.5割、php1、ほか3.5
159:持ち帰り
158:持ち帰り比率は増やす
157:常駐要因
156:常駐してみるしかないかも。
155:開発実績などを一緒に
152:@wait 何が与えられるかだけ
売上総額
151:@wait テラーの資料化？
150:@wait あちらにどんなメリットがあるか。
9:連想
33:どうすればクロージングできるようになるか
32:マーケティングについて知識を得る
7:注意
31:コトラー読む？
6:セリングをなくす
30:技術側から評判にするとか
69:マッチャーに欲求させる
3:コピーライティング
68:マッチャーが興味
67:マッチャーが注意を向ける
117:言語を設定している人がいる。
65:マーケティング
116:マッチングサービスの仕事分析
64:顧客が行動する　＝買う
115:@wait ACまで待つ
63:顧客が確信する
62:顧客が欲求する
61:顧客が興味を持つ
60:コンサルが注意を向ける
111:http://www.bizloop-match.jp/request_form.php
99:発火
149:@wait 人々の一番したのノードを集める
98:数字と記号
148:@Meeting
97:show it with charts
96:Simple as google
146:@wait agenda
95:プレゼン
145:@wait meeting
144:@wait ask
93:どうすれば確実に納品できるか
143:@out 案件の精査
29:スケール
92:確実に納品
142:@wait ismさんと相談する
28:製品？
91:資料
27:価格戦略
90:ウェブで興味を持たせる
140:@wait 常駐じゃなくてもよさそうなケースもあるというところから
26:天才的な人がいます。
慶応、東大、早稲田といった一流大学のエンジニアの連結があり、
そのなかでもトップレベルの技術と技術運用があります。
技術だけではなく、マーケティング、システム開発の根本的理解があり、先進的技術の押し売りなどで
技術者代替性を損なうといったことはしません。

25:人事
24: ペース＆リード
23:営業として
22:ビルドタイム
21:クロージング
177:4smサイト
59:コンサルに興味を持たす
58:コンサルに欲求させる
171:印象の強い初回*毎日1度*7回＋3ヶ月に一度
57:コンサルに確信させる
107:資料を
170:連想曲線
56:顧客が注意を払う
55:まずコンサルが行動する
54:セグメントと動線。適切なところにのみ置けばいい。最初は。
104:美しい
53:@wait pyramid on システム開発
103:すごいプレゼン
102:高橋
51:@wait でかい
101:でかい
50:@wait 更新頻度を保つ
100:口調
89:合同で会社にしてはどうか
139:常駐で実績を積んでから
88:規模稼ぐ
138:チームで売りに行くことは喜ばれる。その場合でも常駐は常駐
87:会社じゃないといけなそう
137:@wait フォロー[[メール]]はする
86:開発についてのサイトとか
136:@wait 基本、常駐で実績を
85:@wait pyramid
84:.netならそれはそれでテラー作りますと。
134:フリーランスターさん

19:動線に置く
82:matching servicesに相談に行く
18:動線にある
69:親と会うには準備が必要だと言われる
18:指輪100万
17:資金的と時間
16:分析
62:本当はこうしたいと思っていることおよび
その時点で思いついたことを言う
61:どんでん返しをする
13:早くすべて進むべき。と考えているが、早く進まない。
12:挨拶早くするべき。という思いがある。
126:tomiko and her discussion
11:ニューヨーク行くなら挨拶できる
125:marriage date
97:会えるなら会えるとなる
124:reverages
96:似ているという思い
123:budget
95:早く進む＋問題が蓄積する
47:通じない
94:準備しない
121:@secretary discussions
93:わがまま成りにの
説明はしておく
120:@done travel date
44:仕事が遅れる
108:指輪
41:marriage_better
107:婚約というか結婚しない限りダメかも。
常識というかいちいち聞かないと分からない
79:お母さんと舞ちゃんの関係が
良くない
106:婚約しない限り旅行はダメと考えている
78:舞ちゃんがそもそもわがまま
77:説明しない
104:一人っつは嫌と？
76:説明できないことがある
103:関係を作る
27:早く次の問題が来る
26:対処なしに早く進める
25:NY行かないなら舞ちゃんが怒る
24:事情を説明する
71:そもそもわがまま
70:親がわがままだと言われると取る
20:婿側の親族からクレーム
58:お母さんのまわがままが通らない
57:お母さんのどんでん返しが通らない
55:破局かも
54:舞ちゃんがそこまでは僕の事好きじゃない
119:@done reservations for the travel
53:そもそも孤独
118:dis engage thing
117:yuinou thing
51:舞ちゃんが怒る
116:rings
50:お母さん愚痴
115:just cyclly call and meet
114:how to have more communications
9:準備10時間割り込みと相談10時間割り込み
113:more commnications
38:想定できない問題が沢山かかる
7:僕も行く？
85:仕事が事故る
6:舞ちゃんが急遽ニューヨーク行きたい
84:舞ちゃんと僕が遊ぶ
83:急な仕事が増える
12:喉の加湿
11:鼻腔加湿
8:バッファから
3:mask
7:コンビニ
21:cvs deploy and migrator
10:estimation
20:@wait sql dupmpfile
9:TestedSystem
8:use templates
19:TestedSystem
7:storyteller
18:@wait war
6:wordpress
17:SyncToy
16:@wait server url
4:st4wp
15:@wait conncetion to offshoring
3:matcher
14:@wait 更新容易性
13:deploy
12:complex evaluation
11:WP_teaming
6:tagging
4:same tag
3:matching
17:debug
16:OutOfPatterning == coding
15:開発機への配備
29:run mvn -o at andromda
14:xhtml2jsp
28:@storyteller
13:#keyword [[配備]]
27:PostSentencesOnStoryteller
12:#wait sql dupmpfile
26:モック
39:[[Choise]] From Verb
11:TestedSystem
25:StorytellerCodesDownload
38:nodepad
10:#wait war
24:モック
37:@out RuntimeNoding
36:what you saw instead
what you expected to see
steps to repeat

22:mock
35:Run the mock on eclipse
21:sss
34:steps to repeat
20:test
33:what you expected to see
9:#keyword [[配備]]
32:what you saw instead
8:#wait server url
31:RuntimeNoding
7:ター
30:http://localhost:8090/st/
6:サービスイン。
配置  = deploy
43:modeling
5:検収
42:MagicDrawか紙かnodepad
4:storyteller
41:RuntimeNodeOfmazdaestimate
3:mazdaestimate
40:@out Find GoalNode
19:修正
18:テスト
4:liveのtweetのurlにこれ入れる
23:ウェブ
22:会場の物理的な搬入
79:名詞抽出とモデリング
119:PING。接続確認。
78:mismatchtest
118:死の忘却
77:@magicdraw 
117:セックス
76:CommonTranslationsを入れる@air
116:インセンティブ
75:関係モデリング
49:http://storytellers.highrisehq.com/tags/142236-camera
115:ログイン
74:再現指摘
48:カメラマン
114:manualize
73:@keyword [[関係modeling]]
113:スナップショットつける
72:画面仕様　*画面遷移
112:winshotで
71:デザイン
45:かも
111:ビッグスケール
70:RuntimeNode
110:スケールメリット
17:写真撮る？
43:レンズ
ライト
背景
キメ
反射
色を含める
構図
確度
モデルを含める
広告を真似る
42:
15:fashionshows
99:sc
98:サービスイン。配置  = deploy
137:ためすと何がおこる？
97:請求
136:どうすれば試せる？
96:then
69:css
135:それが起こす結果（親ノード）を考える。
それはどんな悪いことと良いことを引き起こす？
95:iftttで何がfしたいか
109:インターフェイス
68:DRY
134:
94:if
108:マニュアル
67:automation
133:
93:場所資源消費
107:CGM
66:outsource
92:場所資源とトレードであることを回避するような
106:@wait sql dupmpfile
65:newing
131:取得する
91:量産
105:TestedSystem
64:@magicdraw
130:oauth_appklication_id
90:機械
38:xlsを入れる
104:@wait war
63:AttrPicking
37:コンテンツを
103:SyncToy
62:再現指摘
102:@wait server url
61:GoalNode
101:motivate
60:シナリオ　*　名詞抽出　*　関係化
100:一日予約
33:スナップは？
32:ランウェイ以外は＿
31:スナップ写真を撮るのは多少
30:うちで収録してyoutubeに
89:routinize→outsourceしてから自動化
129:oauth
88:automator
128:twitter
87:ifttt
127:衣食住
86:storyteller
126:場の共有。一緒にいる。つながりの増大。
85:自動化
59:画面仕様　*画面遷移
125:金
84:automate
58:modeling
124:つながりではなくつながり売る場所
83:再現検出
57:相互接続の快感
123:容易性
82:RuntimeNoding
56:モデリング
122:TLとかストリーム
81:サイトマップ
29:missoni
55:類似
121:ネタ
80:sss化
28:コンテンツが必要
54:必要に引っ掛ける
120:リブログ関係
27:クライアントはない
53:chart
26:明日の朝
52:CRM
25:動画と関連記事
51:https://storytellers.highrisehq.com/login
24:お手伝いとニュースの登録
50:http://storytellers.highrisehq.com/tags/142235-photo
4:依頼内容
3:お手伝いさん
21:@wait 入金
10:@wait 引き取り
4:@done http://www.sofmap.com/spkaitori/basket_detail/exec/_/tid=APPLE/-/RURL=http%3a%2f%2fwww.sofmap.com%2fspkaitori%2fsearch%2fresult%2fexec%2f_%2ftid%3dAPPLE%2f-%2fdispcnt%3d%2f-%2fpno%3d%2f-%2forder_by%3d%2f-%2fKWD%3dMD104J%252fA
3:@wait mbp買取
44:     テスト 
43:     ドメイン当てる 
42:     ドメイン容易 
58:storyteller
41:     サーバ調達
57:トムキャットとアパッチのコネクション。
トムキャットのフォルダのプロキシの指定
40:テスト環境作り 
56:サービスイン
55:tomcat入れる
52:アンドロメダ環境作り
51:エクリプス環境作り
50:デザイン
19:一覧表示
18:関連連結系のフォーム
17:ライク検索ビュー
16:フォームの作成と入力
15:作業
7:jspをviewにするもの以外でも使えるようにする。
プログラム以外でも使えるようにする。
6:アンドロメダ事態の勉強
13:作業工程表にする
29:GUI以外の処理。
12:セグメント化と時間利用のリストを作る
28:強力すぎたら違うんじゃないか
11:作業を分析。
27:アプレット
26:ウェブスタート
25:ajax
24:リッチクライアント（アプレットレベルで）を使う
39:     ストラツエディタ書く 
23:ドメインに対してもう出来てるものについてはそれですます
22:十分登場回数の多い作業をリストして自動化できるところを自動化する
37:     ストラツエディタ書く 
     環境作り 
     サーバ借りる。 
     ドメイン容易 
     ドメイン当てる 
     テスト 
     jspコーディング 
     デザインいれ 
     配置 
     アクションをコーディング 
     アンドロメダ吐き出
21:一覧表示
36:aa
34:シンプルvpテンプレートやバイ
49:     アンドロメダ吐き出
32:http://masuidrive.jp/validation/
48:     アクションをコーディング 
31:バッファする
47:     配置 
30:サイクル化する。
46:     デザインいれ 
45:     jspコーディング 
2:mdaapp
はmdaで作られるウェブアプ
3:mdadev
2:mdachart
3:mdapattern
35:コーディングにモチベーションを持つ
15:mdadev
41:誰かにいてもらうことにお金払えないときついかも
8:導出埋める
32:本
40:その開発自体に二人人がいないときついかも
7:画面リスト化
6:アクションリスト化＋ストラツエディティング
5:#wait numbering
10:[[modeling]] [[モデリング]]1次
4:[[drawing]]　+　wireflaming
39:どうすれば　ペア　プログラミングができるか
38:ペア
46:mdachart
28:外出
45:mdapattern
14:コード書き出し（手動）
13:自動導出の定義を書く
9:Of記法によるNoding
8:nodeから名詞と動詞と形容詞を導出
7:is関係とof関係とof関係の数を記述
6:因果と重力での配置（ノードパッドの該当図に似せて配置）
5:因果導出Listenterと自動導出を書く
4:導出書く
3:パターン選択
18:デバッグ
17:テスト
16:デバッグ
15:eclipse補正
2:mdapattern
3:mdachart
2:mdadevに流し込みたいものをトータルモデリングの後でどんどんもっとく。
この場合wireflamingにおいて、パターンを参照するといいだろう。
あるいはデータモデルをモデリングした辞典でそこから可能なビューパターンが可能になってすでにこれでwireflamingが可能になる。
当然Actionなども書いていく。これにはみ出すようなパターンのDeriveration＝導出を書いていくことになる。
15:作業
29:GUI以外の処理。
28:強力すぎたら違うんじゃないか
27:アプレット
32:http://masuidrive.jp/validation/
26:ウェブスタート
31:バッファする
25:ajax
30:サイクル化する。
19:一覧表示
24:リッチクライアント（アプレットレベルで）を使う
18:関連連結系のフォーム
17:ライク検索ビュー
16:フォームの作成と入力
6:ビーフジャーキー
5:フレッシュネス
4:肉
3:meat
4:target element:eg pages has pages as mece element and 
tasks n:1 page
3:mece
7:axis, and the edge oc it.
2:メディア
1:media
19:その内容を
18:対話
17:出会い
16:likeできる先をたくさん作る。
likingをlikeするとかだ。
15:like的なものにする
14:3つ以上の共有を作る
9:一個共有を作る
13:ビットにする
25:どこまでかプッシュする
8:RTさせる
12:流れやすくする
11:もう一個共有させるといいことない？
10:言葉の共有
22:サービスが成功する
5:RTで登場
21:キーワード
4:トランザクションを発生しやすくする
20:テキスト
3:粒度を小さくする
7:go to the place where he or she is.
6:topic
5:contact info
4:contact
3:meet
8:meet the friend of them more than 5
20:stsc
30:資料制作
9:[[議事録]]にする
19:mail / phone / skype / goto / see / basecamp / generate rss * readers
18:message+
6:agenda
28:進行管理
17:message
5:場所
27:体を空ける
4:@Meeting
26:チーミング
3:meeting
25:投資
ファイナンス
14:お時間の調整[[連絡]]
24:fujikawa
13:gcal
12:日時
33:目的のための人脈とか。
31:scheduling and attack with cupidz
28:menu and contract
24:商流
52:gggg
49:用事
48:つねに女子とSVの紙とかもっていけるか？
47:designer
46:mano
45:director
16:nea
6:CRM
44:basic messages
15:lunch
43:writer
14:it consume time
4:courage
42:messages
3:meeting_people_is_easy
41:web
39:Sentences
40:storyteller
38:webapp
37:web page
35:candidate
34:用事がある人に、なにかを付与して会っていく感じで。
27:運動
26:熱いなど。
25:卵黄油
24:リン脂質を十分に
23:視床下部にエネルギーとセロトニン
22:http://utsu-kanchi.jp
21:足を骨折している人に　走りなさい。 胃が悪い人に　食べなさい。 高熱がある人に　仕事をしなさい。 
20:「最大のデメリットは、うつ病の履歴があると生命保険に加入できない可能性が高いこと。また、うつ病で休職歴があると経歴に傷がつき、転職活動に影響が出る可能性もあります」とは社会保険労務士の栗本裕司氏。 
19:今血液検査でうつ病かうつ病じゃないかがわかるようになったというニュースを少し前にmixiニュースで見た気がします。 確かうつ病の人は血液中にある物質が分泌されるとか。 
http://detail.chiebukuro.yahoo.co.jp/qa/question_detail.php?page=2&qid=1144717501&fr=rcmd_chie_detail
9:go to isha
18:周囲があんまり焦りすぎない
8:read more  and more adn more anyways 
17:マッチョな方法はダメかも
7:首と足？
16:神経言語プログラミング
6:健康と体の不快
15:不安、易刺激性、快楽追求能力低下、集中力減退
5:鬱
4:RUNTIME
13:姿勢が悪いやつ
3:睡眠障害
12:
11:抗うつ薬>プラセボ(統計)
効果は低から中
10:セロトニン
28:脳神経で見えるらしいです。
http://www.shinjuku-mental.com
4:memoryschedule
3:復習のインターバルは実は心理学の実験である程度決まっています。
Pimsleur という学者が memory schedule という有名な論文を書いていて
反復のタイミングは最初の学習と第２回目の学習の間が
たとえば３日だったとすると、それ以降はその３のべき乗になるというんです：
つまり３日後に復習した後は：

３の２乗　＝　３　×　３　＝９日
３の３乗　＝　３　×　３　×　３　＝２７日
３の４乗　＝　３　×　３　×　３　×　３　＝８１日
（以下同じ）

という感じで間隔をとって復習するといい、ということを言っています。


19:自由文からのノードパッドデータのマイニング　≒　[[text2nd]]
18:[[text2nd]]のアウトソース
16:アウトソース
15:自動思考
14:nodepad 　≒　因果記述
128:音声でのポインティングデバイスとブラウズ
13:因果記述
127:#wait テクストの3倍速くテクストを書く
48:#wait 思い出し。短期記憶とかに入れる
126:#done 音声　＋ mp32text
125:変換規則を意識して話した内容をmp32text
46:#wait purchace
124:音声ベースでもnoding
159:cygwin
123:音声ベースでも因果律記述

44:#wait ipod + をもう一個？sonyのにする？
43:#wait 良い音質
121:#wait ノード読み上げとベースキャンプのバグリスト読み上げ
156:#wait ローカルでナイトリー
42:ipodで利きなおせる容量が増える
155:scp
41:ipodの容量を大きくする
76:text2mp3
75:無制限
153:import of dumpfile from tomcat
74:#wait 無制限ノードのものを読み上げ
152:mysqladminコマンドと
73:#wait 因果律の思い出し
151:Create ActualFileOfDumpFile
72:#wait fired
150:FileUploads of DumpFile
71:#wait あったまるかつpcが触れる
70:ができれば？
どうすれば？
するとどうなる？
ために
ひきおこす
因果する
のためにいい
の
Of
for
by
so that
9:mp32text
8:自動リンク
7:文字列一致検索　≒　grep
6:[[RSSBus]]バスでやり取り
5:自由文でストーリーテラーアプにもっとく
116:#wait 携帯にモデルをフォルダとしてのっけとく（メールで）
37:textのマニュアル　
≒　ノードパッドの逆　
≒　basecampのtodo template/todo 
≒ 
115:#wait RuntimeNodeとUMLの記述とをたとえば携帯や移動中に。
3:倍速再生
114:#wait ちょっと買いすぎ？湯浅さんとこの待ち
2:meru
149:#wait ローカルでのサクサクさを失わない
113:#wait viavoceでなにができるか次第で待ち
112:#wait viavoiceでできるか試してみるnew
69:[[ノードパッド]]を[[自由文]]に[[変換]]
147:#wait sqlをナイトリーでコピーする
111:#wait ahkの使い方覚える
68:#wait ノードパッドの読み上げ
146:#wait データベースの内容を最新に保つ？
32:#wait Upload NdFile
110:#wait ahk
145:#wait storytellerをpublicにも。
31:ファイル保存もできてサクサク＋
ネットワークに保存するとdb上にデータを保存する。

144:storytellerからnounsとattrsを自由文に変換
65:良いモニターのpc
143:#wait nounsとattrsから
179:デザインをマックで簡単に
64:RuntimeNode、プログラミングコード、UML（db設計）の詳細さへの対応
142:#wait text2mp3にUMLからつなげる
178:computer
141:#wait nanoに入れとく
99:FileuploadNdFileを作る
177:大きな声で呼んで良いようにする
62:#wait 聞くようと話すよう二つある
140:#wait ウェブにこれらの情報はのっけてオク
98:nodepadを修正する
61:#wait 音声で再生できる
97:#wait フォーカス（パーシャル）
175:エンロール？
60:#wait 歩きながら情報が十分ある
95:使い方説明と利用推奨
173:vaoiのとかmacつけっぱなしとか
94:#cycle eclipsingができる
172:#wait なんかマスターとなるデータが維持されている感じ？
93:ノードパッドの限られたひとへの公開とデータのシェアー
171:#wait 歩きながらもサーバとかが処理してくれる
92:フォークソノミー
170:今の3倍の早さでまた外にいるうちにストーリーテラーアプを作る
109:#wait mp32textをバッチ処理
108:upload text to storyteller
29:#wait nodepadのストーリーテラーアプ
107:#wait cp text at 紙 dir
28:#wait ネットワークでシェアーできるように
27:自由文
104:#wait サーバ側のものか
139:ウェブにアクセス
138:Verbs
137:SelectionFromVerb
59:#wait ノードパッドのmp3化
136:UMLの記述
100:#wait ツールを自動起動するとかして自動化
58:変換規則を意識して話す。
135:charene
134:storytellerアプリ
133:[[RuntimeNode]]を記述する
169:自由文から
132:java soundとかで独自実装
168:ソニーの試してみる
54:#done 音声でテレコに
131:ツール検索
89:自由文に因果関係評価
53:#wait pknkを阻害しない
88:音声で聴取
166:#wait 自然言語に近しいコード
52:#wait 良いpc
87:#wait ストーリーテラーなどで選択したものをバッチでtext2mp3
165:#wait コードの読み上げ！
51:#wait PCインターフェイス
86:#wait 読み上げといてランダムに再生
164:importするmysqladminコマンド
50:ノードパッドの前にいる
163:#wait importするクーロン
84:#wait text2mp3
162:#wait サバ側でimportするcycle
83:#wait 自由文をmp3に変換かつノードパッドの読み上げ
161:#wait windowsタスク
160:#wait ローカルでcycle
10:notification
4:message
3:message+
7:Phone
17:contact info
23:メタメッセージ
6:message
15:@iPhone evernote
20:edit
3:mail / phone / skype / goto / see / basecamp / generate rss * readers
465:投資
500:TKP
261:随意な方法
463:loaning
260:どうすればストッパーの発見
462:営業の自動化
461:teller2
448:amplifier
460:kaizen
447:nodepad
446:top
445:roi
444:ampx
443:商流
442:meeting_people_is_easy
429:archive
428:sv
440:sales
499:TKP
498:量
389:自動化
495:lancers などから？50万のものを？
422:lifehack
492:競争
479:大企業
478:提携
477:ボトルネックバーター
476:ampxbottleneck
475:ボトルネック解消
259:系
474:crowdos
473:評価経済
472:ampxst
459:利率下げよう
471:ampxsv
458:集中
470:定率換金
457:マッチングサイト
456:sv2new
455:量
454:newjit
453:在庫list
439:換金
452:在庫
438:CF
436:RUNTIMEの創造
435:RUNTIMEの所有
434:利益率
433:exponent
432:バーター
431:レバレッジ
489:Workflow
488:GTD
487:CoC
412:自動化
485:横断的効率化
506:sv 2 sales
505:大規模カスタマイズ案件
469:speed
482:elimination
468:essential
481:SVVSSV
467:archive_essential
480:一回侵入？
466:キャッシュ投資
501:product
26:システム開発基本情報インタビュー
25:systemmeta.mppと、Meta.ndをからコピペ
24:スケジュール表作成
23:シナリオ記述。画面ダンプ。ウェブ化対象画面作成。名刺化。
22:サーバハード仕様確定
21:定例会議の設定。会議の設定
20:情報伝達、ファイル共有ツール
19:サービスリストに基づいてサービス設定
18:環境構築終了
8:機能仕様書作成
17:ドメイン決定
7:イタレーションシート作成
16:ドメイン取得
6:コーディング
15:サーバハード調達
5:テスト
14: [[動作サービスリスト]]
4:フィードバック
13:業務調査
3:イタレーション１
12:月間運用表作成
2:線表更新
11:週間運用表作成
10:マニュアルベースの機能仕様書作成
7:running
15:see evernote @micro
4:running projects tasks.
12:task are comoing from dependencies. and terminal tasks only should be there.
and have to mark those only.
8:1. open all the projects from evernote shortcuts
2. select all the notes ( tasks ) reminders and mark pomodoro or micro?
1:micro_tasks
11:options
5:投資
4:buzz
3:campfire
2:kickstarter
1:microfunding
11:middlefunding
8:アメリカの住所
7:英語
6:startup
1:middlefunding
5:outsource
2:theamplifier
8:how much
19:no disk space
7:elimi
18:windows?
6:time is money
17:buy and bring it there?
5:computer resources
16:drive and what?
4:taking time
15:do i have another pc?
14:use another pc?
13:700gb=200 hours
1:migration_to_drive
12:total
11:4 gb/h
10:so far
10gb 2.5 hours
24:borrow laptop and sync
22:copy command and insync at linux?
21:usb memory?
20:put harddisk?
9:how can i know it
6:分解
5:納期
4:目標
3:milestone
4:@wait せんべい（朝を効率化＋better_sleep)
ペットボトル（朝を効率化＋better_slpee)
3:minibuffer
16:annotations
3:mismatchtest
7:mock
13:story
2:描画
タイル（○つけとナンバリング）とタイルリスト
ドメインモデリング
バリデーション付け、
導出記述
アクション、JSPリスト作成
ホストプラン、ドメイン作成
グローバルリスティング


4:難易度と計算を各
2:マイクロソフトプロジェクトの依存関係記述は因果関係かを検討をスケジュール
2:別名 [[携帯]]
2:SEOも。
10:[[飯野さん]]
3:mock
7:StorytellerCodesDownload
29:model
30:modeling
34:再現指摘
47:GoalNode
28:modeling
32:AttrPicking
31:@magicdraw
50:automation
28:modeling
34:再現指摘
32:AttrPicking
47:GoalNode
31:@magicdraw
52:newing
51:outsource
1:models
6:project
5:place
4:node
7:tasks
4:drink
3:moisture
7:血流
11:シンク
10:加湿
4:drink
3:moisture
7:血流
2:マネタイズ
1:monetize
214:汗も
32:looks
149:template
31:leave
148:os
30:pknk
147:モテ
146:sales
145:自信
144:尾根
143:黒目大きく
142:@wait 毛穴パック
119:パブロフと快
141:鼻
118:印象の強い初回*毎日1度*7回＋3ヶ月に一度
140:@cycle 服を月4万
117:連想曲線
116:連想
115:プロジェクター
114:映写室と見れない映画
113:映画と映画館
84:住みやすいへや
112:音楽
111:experiment
110:quiet thing?
80:留学
197:ホテル代
195:@wait プロジェクターとルームランナーの部屋を、乃木坂に
194:@wait 近くて荷物おいとけて寝れる
193:聞く
51:@wait 作らない行動
191:@wait どうすれば、トライするべきか
25:@wait 洗顔
205:picasa / iphoto
24:@wait 削る
204:reminder
23:@wait メラニン
4:清潔感
163:機材を。倉庫を
202:忘れずにたまに
139:@wait 洗顔
21:@wait 肌
162:TKPと共有
201:マークしとく
138:@wait @cycle 顔の筋肉
200:いくつか写真ピックして渡してみる
137:顔
160:@wait 映画館に[[似]]てるもの
136:髪
135:丈
134:香
133:reminder
132:テックを訓練と思い出す
109:know her
131:気持よく
130:sex
106:歯
77:英語
76:@wait 職場に近いとか
75:働き過ぎないとか
74:生活をよくして上げる
49:@Air 作り方について読む
48:@wait 作らない
47:@wait チーズとかも頼んでみる
45:@wait スタバでの選択とか。牛乳多めで。
186:近いところ
185:共有
43:@wait 外出中乳製品
184:英語で音楽やる
19:@home 探す
42:@wait 家
18:@wait 保険証
159:@wait @secretary 掃除
182:@wait 好きな音楽から連想
221:@pknk go and see 1920 projectors
17:@wait 医者
158:@wait 署名
40:@wait 乳製品
220:@wait monogawa projector
16:@wait 体の
157:探
15:美白
156:横断的効率化
155:Buffer
154:適材適所
153:オフショア
152:automate
129:@wait もっと好きな音楽を知る
151:楽できるとこ探す
128:効率
150:scaleを計算する
127:好きなものに近づく
123:好きものを知る
121:類似
120:好きなもの、嫌いなものから連想してみる。
65:better_sleep
64:better_sleeping
63:@wait @cycle チーズを頼むようにする
38:@wait 脂肪とタンパク質
60:@wait 髪の色？
37:@done ビタミン
36:@wait タンパク質
216:医者
35:@wait 補う
215:光
131:気持よく
130:sex
106:歯
202:忘れずにたまに
201:マークしとく
200:いくつか写真ピックして渡してみる
65:better_sleep
64:better_sleeping
63:@wait @cycle チーズを頼むようにする
186:近いところ
38:@wait 脂肪とタンパク質
185:共有
37:@done ビタミン
184:英語で音楽やる
60:@wait 髪の色？
159:@wait @secretary 掃除
36:@wait タンパク質
158:@wait 署名
35:@wait 補う
182:@wait 好きな音楽から連想
157:探
156:横断的効率化
155:Buffer
32:looks
154:適材適所
31:leave
153:オフショア
30:pknk
129:@wait もっと好きな音楽を知る
152:automate
128:効率
224:sunriver
151:楽できるとこ探す
127:好きなものに近づく
150:scaleを計算する
221:@pknk go and see 1920 projectors
220:@wait monogawa projector
123:好きものを知る
121:類似
120:好きなもの、嫌いなものから連想してみる。
4:清潔感
84:住みやすいへや
80:留学
51:@wait 作らない行動
149:template
148:os
25:@wait 洗顔
147:モテ
24:@wait 削る
146:sales
23:@wait メラニン
145:自信
144:尾根
21:@wait 肌
216:医者
143:黒目大きく
119:パブロフと快
215:光
142:@wait 毛穴パック
118:印象の強い初回*毎日1度*7回＋3ヶ月に一度
214:汗も
141:鼻
117:連想曲線
140:@cycle 服を月4万
116:連想
115:プロジェクター
114:映写室と見れない映画
113:映画と映画館
112:音楽
111:experiment
110:quiet thing?
77:英語
76:@wait 職場に近いとか
75:働き過ぎないとか
197:ホテル代
74:生活をよくして上げる
49:@Air 作り方について読む
195:@wait プロジェクターとルームランナーの部屋を、乃木坂に
48:@wait 作らない
194:@wait 近くて荷物おいとけて寝れる
47:@wait チーズとかも頼んでみる
193:聞く
45:@wait スタバでの選択とか。牛乳多めで。
191:@wait どうすれば、トライするべきか
19:@home 探す
43:@wait 外出中乳製品
18:@wait 保険証
42:@wait 家
17:@wait 医者
139:@wait 洗顔
16:@wait 体の
163:機材を。倉庫を
40:@wait 乳製品
138:@wait @cycle 顔の筋肉
15:美白
162:TKPと共有
137:顔
136:髪
160:@wait 映画館に[[似]]てるもの
135:丈
134:香
133:reminder
109:know her
205:picasa / iphoto
132:テックを訓練と思い出す
204:reminder
16:@Air 検索する
52:住民票どうすれば作れるか
51:@wait 自分で行く
24:@wait 確定申告23年度
41:monogawa
23:@wait どうすれば契約者に僕なっても平気？
7:@wait 内見
12:@wait 物件見てみる
6:@wait decided
5:@wait contract
20:@PKNKED TKPがという。。。
4:@wait goalin
3:@wait monogawanest
49:舞ちゃんの住民票
46:住民票
19:@wait 主体の問題相談する
4:@sun shooting and writings
3:@wait put things in variables 
2:moreは、メタなかんじ。
たとえば「cycle」になているものがあったとして、
それをモット改善するための方法を探す。
5:less air
4:parties
3:more_channels
9:chats
8:NEA
7:parties
10:segmented
6:chools,gyms,shops,works
21:foods
10:pknk
9:飯
8:生活衛生要因を確認
19:sleeping time
7:朝キットを食べる＋ストレッチ
18:sleep
17:like foods and sleepings i want to have a  tools as that.
16:at least, i want to have a checklist
4:朝
3:morning
14:formats
24:affor
13:log
23:覚醒
12:have daily review on it
22:ハム→カロリーと肉->better_sleeping
砂糖で少量の濃いコーヒー→pknk_early
11:decision making not done even tho i have many methods there. 
what is the problem
33:avoid getting [[cold]] AGC
30:外出
27:朝
24:afford
23:覚醒
22:ハム→カロリーと肉->better_sleeping
砂糖で少量の濃いコーヒー→pknk_early
49:just have the bag
48:eat
9:飯
47:go to planned place
8:生活衛生要因を確認
46:mail check
7:朝キットを食べる＋ストレッチ
44:start eating and go out
43:wear preperad
4:朝
42:water
3:morning
41:wake up ub 9am
11:decision making not done even tho i have many methods there. 
what is the problem
38:段取り
10:pknk
37:@fired
36:外出
35:トレッドミル
34:飯
59:make kits
58:水
カフェイン錠剤
ritz
暖房
29:better_morningkit
42:水
カフェイン錠剤
ビタミンドリンク
starbucks
yogart
蜂蜜
パン
暖房
目薬
47:RUNTIME
61:fullfill
39:発送漏れリスク回避
欠品受注回避。
一個当たり、時間当たりの在庫コストは売上に比例する。
在庫数が一定数を超えると倉庫を別に。そこに発送依頼を出したほうが安い。またコミュニケーション、通信の必要性が発生する。
9:b2c発送
29:携帯サイト
38:送り状印刷/記入
48:10月の想定売上は？
現状月間売上は？
平均単価は？
平均原価率は？
想定売上最低値は？
欠品受注回避はマスト？
欠品受注の現状発生頻度（回数/受注数）
発送伝票の印刷はshopmakerでやっているか。
発送伝票の印刷自動化でどのくらいこうりつがあがるか？
ウェブでの売上割合は？
ウェブでの現状月額売上は？
ウェブでの今後の月額売上は？
直販は？
想定ウェブチャネル数は？
想定ウェブチャネル数-現状ウェブチャネス数=増分ウェブチャネス数は？*ヤフーショップ、
colormeショップなどASP型へショップを回転した場合の1つについて1増やします。
会計、売上履歴（情報）の管理が3人以上などで行なわれるようにするのはどのタイミング？
委託販売の現状店舗数は？
委託販売からの発注をこちらのウェブアプか、こちらの指定書式でのファックスで受け付けるようにできる可能性は？
在庫1個保持あたりの保持コストは？
倉庫アウトソースの可能性は？
10月の想定商品数は？
現状の商品数は？
10月の想定商品数ー現状の商品数（増分）は？
1度成田→motherhouse@tokyoに輸送しているが、倉庫から客先へ送るということは（難しいと思うけど）なぜ非効率なのか。
8:売上をエクセルに追加:チャネル数*b2b平均受注回数
28:在庫管理
37:#wait ピッキング　月10回
売上 * 2min(商品数に対して所要時間も変更）
17:b2b受注(fax受信）
7:統計情報作成。
57:ガスのつもりでツkツテしまう
27:発送
36:受注確認連絡
16:b2cウェブ受注
6:Display Stats
56:コピーで表現
26:受注確認連絡
45:picker作るのどうか
15:在庫有無確認？=受注回数*5分
55:ガスとの類似
25:エクセルで在庫数を増幅？
34:在庫有無確認？=受注回数*5分
44:自動化できるとこポイントする
54:どうやって想定ランタイムを書くか
24:入荷（はんこ押して配置）？

43:よくあるプロセスは良くあるツールで。
あとはカバレッジと、
独自展開をするときになんじゃないか。
ガスのように[artist]とかあるならっていう。
この場合はそういうことある？データためるってことでもないのか。
商材とかか？
3:想定roiを考える？
32:売上をエクセルに追加=売上数*時間？ショップメーカーのデータ？
42:どうすればこれがなにかになるかわかるか？
22:発送
61:#done 山崎さんに作成したアカウントを知らせる
51:============================= 
         Runtime
=============================
21:メール受注
60:[[ColorMeshop]]
30:ウェブチャネルへ情報登録
40:これかけたからなんなのか？
そうそうあんまり自動化できないかも？
10:#wait 未発送売上一覧
4:share_photo
3:motivate
38:どうすればキックオフポイント
80:pknked
57:@wait ヤッてみる
56:@wait 毎日１つだけはそのプロジェクトのものをやる？
77:motivation
33:ウォームアップ
74:motivationxelimination
10:@wait どうすれば勇気
31:@wait どうすればルーティン化
（面倒なことをやるのに非常に強力な方法なのです。）
でクライアントワークに参加できるか。
51:アラートの形態の上にレッドブル負いてるとか。。。
30:@wait どうすればmotivate unmotivative tasks
71:朝のキックオフ
50:類似
4:@wait どうすれば発火
48:どうすれば完成形のイメージ（画面とか）
89:性的緊張
47:どうすれば50%の到達可能性
46:どうすればremind
23:どうすれば体を使ってコントロール
86:leave
42:どうすればkit
83:watched
41:どうすれば化
17:かも
16:@wait それが起こす結果（親ノード）を考える。
それはどんな悪いことと良いことを引き起こす？
15:@wait ためすと何がおこる？
9:@wait 家と一緒にしない
14:@wait 被指向性を得た後に戻って作業する。
8:@wait 実家で寝る
23:外の場所で、
会う+居心地/時間当たりの費用の状況をリストする
13:@wait CF
7:@wait 一回試す
22:外の場所を選ぶ
12:@wait 良い作業環境
6:@wait dddd一緒にしない？
11:@scheduled [[試]]す
5:@wait どうすれば被志向性を上手く使えるか
10:@wait 作業を擦る所を作業をするとこにする
（脳の関連付け）
4:@wait 満喫いってサクッとプランする[[？]]
1:motivationxelimination
47:
50:auctioning
46:how can we bring it to somewhere
45:bringing it somewhere?
44:the remaining garbages ( can't put it in sunriver ) 
43:can we bring them today?
39:the last staffs by tommorow.
42:no time? other apps.
41:what is the problem?
40:how can we remove the last things by tommorow.
19:clean up again
20:takeover
1:moving_plan
5:moving plans of theday. 
4:30 min anyways. and work there.
12:UploadTypingRequestedMp3
11:CreateTypingRequestedMp3
9:#keyword [[mp32text]]
10:タイパー
5:ソーシャル上
4:tkp2
3:cupid
7:amplifier
6:webapp?
5:storyteller?
4:条件
3:mrbook
39:凄いデータ
38:ミシュランと食べログ
29:web
37:最高の本屋決定戦
28:web
android
36:message
27:横展開する
19:TLとかストリーム
35:ExportRss + rssmailer
26:旅
18:ネタ
34:message+
25:出会い
17:リブログ関係
33:notification
24:衣食住
16:PING。接続確認。
32:notification
23:場の共有。一緒にいる。つながりの増大。
15:死の忘却
31:通知を増やす
22:金
14:セックス
30:webapp
21:つながりではなくつながり売る場所
13:インセンティブ
20:容易性
12:数えてみる
11:分解しましょう
4:会議
3:mtg
4:core compitance
3:multi_channel
1:multi_device
6:dropbox
5:clouddb
4:icloud
4:type m
3:museigen
7:speed
6:partial load
5:modulation
4:templating
8:view confirmation
1:mustache
5:modeling
4:MagicDrawing
3:mvn
5:modeling
4:MagicDrawing
3:mvn
6:clouddb
4:insync
3:mycloud

4:1. mysql admin
2.
3:mysqldump
4:ながら
3:nagara
4:ながら
3:nagara
4:（特許電子図書館　初心者向け簡易検索（商標））
いって検索
3:naming
1:nanofunding
6:ゴール決定する。届けならモノの送付とかいったコミュニティとかへの参加。
3:ビジュアライズドメトカーフ
2:メディアモデル
50:on the go
38:mvn
37:PostSentencesOnStoryteller
36:camp
66:[[StorytellerKickoff]]
34:offshore
33:camp2xhtml
63:manualize
32:StorytellerCodesDownload
62:画面
31:OutOfPatternなテストの作成
61:story
60:manual
19:テスト
49:@out Find GoalNode
18:@keyword [[debug]]
17:OutOfPatterning == coding
47:[[Choise]] From Verb
16:開発機への配備
46:RuntimeNoding
15:xhtml2jsp
45:magicdrawing
14:配備
44:FirstModeling
13:@wait sql dupmpfile
43:FirstMvn
12:TestedSystem
42:FirstCopyCoreJar
11:@wait war
41:RuntimeNoding
10:SyncToy
71:営業するよ
40:put CommonTranslation @storyteller ( http://storytellermachine.net:8080/storyteller/J2eeStorys.do
9:配備
8:@wait server url
29:テスター
7:@wait ター
59:preperation
28:offshore
6:サービスイン。配置  = deploy
58:create basecamp projcet
27:generaltest
5:請求
57:projectname
26:mismatchtest
4:storyteller
25:checkingtest
3:narrators
55:css
24:tester
54:story
53:modeling
22:sss
52:MagicDrawか紙かnodepad
21:test
20:mock
7:@wait すげえ大量に乳酸菌を飲むのを習慣で７日試すには？
10:@wait シャワーフィルター
6:@wait カンジタかも
49:@done 野菜の通販検討と比較？
48:@sun try once 塩素なしシャワー
47:@sun 吸うなど
46:@home 玄米バックに 
45:@sun 黒糖入れてググって 
51:@done 家
44:@wait 乳酸菌作る
37:@reminder ペットボトル飲み方
43:cycleに入れる
36:@wait 水の付着時間減らす
50:@done どうすればヤシ食べる？
42:@reminder 早く服
35:@wait 塩素ダメ
41:@wait 塩素無しシャワー
34:essential
19:@wait 磁石マットレス
25:@sun 何してくれるのかもっかい読む 
18:@done 有機チョコ
24:@wait 電子レンジとめる
17:@done 有機リンゴ
31:kit
23:@done 有機野菜とフルーツ
16:@done 有機栽培ナッツ
30:CFと安く
22: マッサージ
15:@wait 洗剤帰る
21:@reminder ストレッチ
14:@wait 空気清浄機
11:凄い水
4:choose from
3:natural_cures
3:natural cures
4:see nodepad codes a little
3:in todoist runtime is written
169:ガス
116:twitterとかから自動取得
19:ニュースのURLを自動収集して、かつRSSの中身を最高のビューワーに
17:@wait ニュースのrssの、url
16:友人、知人の行動を、より強く追う。
rssとかほかのニュースより。
164:@cycle
15:@wait reminderからのタスクを自動的に値として埋める
14:@done osxのアドレス帳に、電話番号を、自動的にやる
12:@done more skype not phone
10:gmailとかだったらgmailって
61:Update
139:@wait node
138:Tags in highrise
209:nihongo 
137:@wait keyword
189:@Noding partyやイベントのリスト
135:Update Entrys from rssurls of contacts
206:atnd
188:@wait 定期的なpartyあいたくない人
134:@wait Entry with autolinks
205:my event
187:クロールか
133:@wait Post Notes with autolinks in the nea system
9:相手のアドレスから、タグをつける
204:update_highrise_template
8:ヒントを提供する
203:see tags
185:コンタクトのrss情報、mixiアカ、等の補助的UI
131:@wait isRss()
7:rtmのデータを取得。
文字で、自動的にnodepadの自動連結からの、子を提示する
89:@wait Pattern
36:google imageの画面を出して？
202:click around ther emails in highrise
184:@wait google  him
130:@wait Update Notes with autolinks from the user.rssurl
35:[[半自動]]的に
201:search them by name and find info in web
183:@done target is not on the Web
87:@wait https://storytellers.highrisehq.com/login
34:顔写真
200:there recent status updates
182:@done 疎通
181:@done touchを効率的自動的に
32:相手の問題を解決する
180:@wait storyteller
31:音声ログとかをアップでき、関連づける
30:モチベーション
159:@done タグを付与する習慣
158:@done http://toukubo.backpackit.com/reminders
157:@done reminder
156:@done タイミング
103:@Air cocoaプログラミング、をやる
155:@done remind
102:@wait 双方向
154:@wait
101:@done addressbook/gmail/highriseは自動的
153:@done 再びあがるのを待つ
58:motivation
152:@wait rmilk api
129:displya upload page
and image file path
128:help to upload by hands
179:@wait display Persons
178:@wait search Persons
29:深い認知
124:@fired a syncing between social and highrise
28:@wait highrise apiiでsetselection パターンで
123:@wait web api between highrise and the app
27:@wait タグごとにつけるインターフェイス
26:@wait 人ごとはhighriseで
25:人をタグ付けする。
173:@done [[閲覧]]しながらの[[Post]]
120:@wait exporting to cards + importing from vards + making vcards from highrise
24:@wait キーワードと指し先投入
172:@done http://toukubo.backpackit.com/reminders
171:@done reminder
170:ねた
20:自動リンクして、RSSを吐く
147:@done タグ
199:care for each
146:@done たっちしがたい人[[属性]]の[[付与]]
198:update newes
145:@done たっちしがたい人に[[タッチ]]する要にリマインドする
197:capture incoming tasks
144:タッチしてない人にタッチする。
143:タグの[[推薦]]？
142:@wait FNローカルにおこう。サーバーに。
213:http://toukubo.backpackit.com/pages/1941962-201002
194:レコメンデーション
141:autonoding？
212:CRM
193:類似
140:@wait node？サーバーに必要
211:https://storytellers.highrisehq.com/login
192:提案
191:タグ。カテゴリではなくてタグ。
タグは情報を限定する、絞り込むために基本的には使える。
しかし「特別タグ」「special tag」は、動作にかかることができるようになる。
　
たとえば日記は新しい順に出すかもしれない。
たとえばpublicタグとprivateタグとで、booleanを表現する
Modelに構造としてもっていたものがタグになる。
すると？


190:タギング
228:bigger network numbers 
to apeal
227:networks not networking
32:** give solution
226:*give
224:connecting leaping
252:international, regions and 
144:touch
222:connecting people 
not connected as dot
249:any other nagara times
221:automation of solutions
248:TKP lunch meetups
220:connecting the dots
247:authorized
245:use the time for nagara
244:lunch time
8:give the hints 
243:gatherting in the place
where friends 
helds
16:follow and read feeds?
242:sv books and with girls
241:@wait looks and auth
236:joining the parties or something 
that has more than 5% density
235:* quantity
233:* quality
232:less hours meeting 
for general conversation
231:hint
229:TKP
5:nea
4:manage nealist
3:nea
9:update nea
11:log all teh schedule,no. schedule all the meetings in cal ->  and update that to ighrise
8:how to meet more people?
10:update a meeting

7:
6:meeting_people_is_easy
146:ソース
32:不足を。
145:資料作る
143:@air 
142:@Air ask iino san　チラシつくってもらいにきてもらう
141:@cycle 噴射
178:@cycle cycle
177:@Onthego スタバいってパーツをモデリング
176:CRM
175:https://storytellers.highrisehq.com/login
99:外人さん
174:highrise
173:do party with someone 
109:like キャス
108:girly design
225:膝掛けのあったかいやつ
107:[[girly]] place
224:あたたかさ
106:@Air highrise forign people to come there
105:@wait sean@twitter etc
222:野外用のやつがあるね。
29:@Noding 内装支援金、岡本さんにやってもらっていいかも。
104:me wants to meet girls too
221:光
103:girls
220:ハンモック
102:@done ask someone for this 
101:@concact sean san
139:@wait 香水調達の定期と
100:some freelancer
138:@done におい
24:@done if you can get the joseikin 
137:@wait シーツの洗濯？
23:recipi and girls
136:布団カバー？
135:@wait お布団？
133:@done チラシつくってもらいにきてもらう
132:チラシつくってもらう？
130:cleenup really
169:@wait すたば
55:@cycle afford
54:山内さんに場所きてもらえば？
167:@Noding 英会話の個人事業とかの会場に。
53:ちらしのアフォードきいてない？おく＋持つを徹底
165:@wait 英語
164:@Noding すごいスイーツ
163:料理
162:レシピ
161:調理
7:@wait 女性
160:cook super
198:@Noding 10万。やるかどうか検討する
4:storytellernest
82:more people
217:@Noding 費用を募る？
195:広告をしてあげるしホスティングするからやってよという
3:nest
81:@wait 壁破壊
216:ガラス？
194:明るい部屋から買う？
80:費用を
215:シーリングはろげんかケーブルのハロゲン
193:西野さんとかに相談
214:ハロゲンさん
192:フラディクトさん
213:傾向の黄色のjeffとかっていす
191:one-additional-wet
212:防水素材のテーブル＋折りたためるいす？
211:植物？木？クリーニング？ベンチ？ハンモック？
18:@wait more people
210:ベランダ
15:@done 現状を書く
127:auto stitch
12:AC
126:painting day
125:@Air sofa from ikea?
10:balance
incomes of him,
sales,impl
marketing,
product type,
design,art/
programming/edit
general,special
male/female
english/japanese
124:@done http://toukubo.backpackit.com/reminders
48:@done toukubo.xlsから
123:@done reminder
121:@done remind
120:@done forgetting
44:バーターで、人を一人連れてきてくれる旅に1000円
156:@Noding 寝具がガーリーかすてき
155:@Noding この和室。変なものおきようのやついらんな。あそこにもってって棚にするか
41:創造性
154:@Noding 安あがりな方法？
40:@wait 広大なスペース
151:ステイしやすさ
150:性的緊張
209:リルベリ3人掛けソファーか
2人がけソファー白
188:mail
208:イケアで
たてるライト+2
ケーブルのハロゲン
207:あの部屋は低い位置に維持する
186:@wait http://closeduser.auctions.yahoo.co.jp/jp/show/mystatus?select=won
206:板
185:@wait レシピシステム
205:籐のいす。
184:http://toukubo.backpackit.com/pages/1895041
183:メール
203:ハンモック
182:ヤングフックさん
202:ブランコ
181:check the web
201:ロッキングチェア
200:遊び
119:@done just give them the tasks 
118:@done share the tasks
117:@done burter
116:@done for them less cash
115:@wait ペンダントライト
39:@wait ヤフオク
114:@wait more bright
38:@wait more greern?
37:new_people
112:@wait more woods
36:会場貸しする
111:ikea's decorations
149:内容をノードから
35:more party
110:modeling more
148:デザイン・規模・実績・url
34:内装
147:プレゼン
7:vital
10:purchace emobile
6:unu
5:home
4:academy hills
3:net

5:pdf
4:http://www.printing.ne.jp/
8:@pknk print
3:netprint
7:new_exclamations
3:new!
5:new!
3:finding
33:余剰を集める
109:RUNTIME
32:閾値を設定する
108:new_hiring
107:new_roles
30:受託案件のボリュームより多く、
良い開発会社だけ残す
106:internal dir
59:資金繰り。原始的な点では
すでに体験済み。
また、そうしたシステムの構築の経験もあり、
業務としては（もしかすると会計士さんとか
その道のプロよりも）
低いレイヤーで理解している分だけ、
詳しいかもしれません。
58:、複数の視点でチェック
104:apc
57:事業計画書
103:new_workflow
56:販路獲得計画
102:newos
55:事業プラン名
54:市場環境
53:リスク、ネガティブチェックと解決策
129:
52:競合優位性
128:new_ci
51:経営プラン
127:new_test
79:suggesion directors
50:事業スタッフプロフィール
126:new_assigning
78:teaming
9:会社概要
125:ci
77:web director
8:kaizen
124:dependency injection
7:new connection
123:sales
6:new
122:payment to developers
121:break all the 
routine process
and
simplify
3:new_exclamations
97:good offshoring designers
96:chart
29:ダメな会社は避ける
95:図
28:カンパニーに
94:[[visual]] suggesions
27:cash_flow_bonus
93:noding
26:CFSafeにする
92:お客様の心理やその動向を捉えて行う知的作業である
25:CF
91:marketing
24:キャッシュ・フロー
23:プロセス（仕組み）多数を雇う方式とかゆとり
22:コミットメント
20:エンジニアの質が低かった？
49:未踏に提出したやつ簡易化する
48:権利対策
47:事業計画
44:株式を一定率必ず入れていく
43:効果があるなら当然集める。
集まりすぎてもダメ？
42:お客さんをみんな誘うか判断
118:loaning
41:多いほどよい
117:microtask
40:投資原理利用
116:ticket2jobposting
115:new_breaking
67:theamplifier
114:loaning
66:PR担当とプレゼンテーション
113: newjit
65:amplifier
112:CF
64:参加してくれるはずのネットワークを書く
111:newjit
110:new_teaming
61:高岡君の質問反映
60:チェック
15分で読めるか第三者チェック
書くべき比重を正確に。量を。
内容が専門的すぎないか。
プレゼンテーションとの役割分担を
86:document form exchanger
19:金？
131:new_os
18:どうずればずっと解消できなかったボトルネックを解消できる？
130:new_done
10:@wait PR
39:レベニュー資料
38:outsource as entry point
37:レベニュー
34:1500万
5:PM
4:akash does not work without him?
3:new_jwalin
5:夜にしてもらおう
4:人がクルときに掃除しておく。
2:条件だけ精査して修正して更新する
1:new_pannics
9:25 + 5 = 30くらいかかってる
11:やや慎重にやったほうがいいかと思ってしまった。
前回
10:一番大きい部屋で7強は負担してもらいたい。
6:水道ネット電気ガス光電話
消耗品（トイレットペーパー、ティッシュ、食器洗い洗剤、洗剤系、ゴミ袋、フィルターの類）、必要な機材は別で6万
1:new_roles
25:雇用
24:営業増やす
23:para
22:スケール
19:定率の融資
9:マッチングサイト
18:融資調達
8:営業も外注
7:CF
16:シリコンバレーマッチングサイト
6:ロングテール
5:利益率
14:商流
4:大規模
13:WPST
3:new_sales
12:差別化
11:シリコンバレー
35:営業のレートあげる
10:検索人員
33:アフェリエイト
32:取り分を上げる
29:portfolio
28:meeting_people_from_sv
25:newjit
22:admin
21:craftclip
18:hiring managers not 
17:good designer
7:their budget is bigger
6:no one is escaping
39:information switcher
5:competition wiht 100 candidates and hiring
14:keep dividing tasks.
4:companies
13:keep,competitions
3:hiring
36:hiring manager
11:project base admins
35:visualization
10:hiring manager
34:progress manager
transcriptor
translator
hiring manager
33:translator
32:
31:ubiquitous capture
29:break down
30:os
28:progress manager
1:new_workflow
1:newcss
6:how can we have css integrated smoothly
5:externalize the enterable tasks
4:newjit
7:compare the result css and html
9:要件定義と資料を用意しておく
29:ボトルネック
38:効率
48:super hiring manager
18:前作業のリストと
8:雇用を高速に
28:バッファ
37:Buffer
47:分割
17:スコープ
27:速度
36:作業のqueue
46:パラレルな雇用
6:スケール
26:テンプレートたち
35:入れやすいところから入れる
＋ずらす
15:分割
5:在庫をなくす
25:hiring manager 冗長化
34:@wait ボトルネック発見
14:利益率
4:遅延回避
33:enterable
13:競争
3:newjit
23:やること
32:速さ
12:声掛け
22:そのうちやらなくていいこと
31:早さ
11:声掛け候補の事前準備
21:作業の全部のリスト、
30:効率
10:声掛け候補数
50:crowdos
20:プロジェクトデスクリプション、サイズ
17:スコープ
15:分割
36:作業類型のqueue
108:そういうのもってる人に
14:利益率
107:共通化された人材がいたらそれも試してみる
76:トライアル
13:*** 競争 ***
106:最初のところをキメる
12:声掛け
54:double development
11:声掛け候補の事前準備
8:雇用プロセスを[[高速]]に 
104:@wait double on bottleneck
94:でっかいPC?
103:double hiring manager and double transcriptor
72:タグ
6:スケール
186:contextbase
123:人かPCか
71:タスクと人
5:在庫をなくす
101:basecamp todos
50:crowdos
70:適材適所
4:遅延回避
100:visualization of compitition
184:発注先の支払いサイト負荷軽減
90:試験
182:シリアルにつながるところの高速化
180:better
217:native / html specs
214:template
213:invitation conditions
212:manuals for 
hiring job
210:applicants
26:hiring_templates_system
25:double hiring manager
66:****** 前払いをゼロに。（３０％からもっと落とす）
117:os的なこと
65:指数部位
23:やること
179:* candidates ***
199:adminについては支払い総額を上げる
22:そのうちやらなくていいこと
115:@wait directorにそれを明確に依頼する
63:translation
198:軸
21:作業の全部のリスト、
114:納品のボトルネック
62:dir
197:invite more
20:@done プロジェクトデスクリプション、サイズ、あとはテンプレート。
113:@wait ボトルネックを見つける人
196:分割をずっと回す
175:自動化出来るものは自動化する
195:hiring manager
174:誰でもすぐ入れるようにする。マニュアルレス
111:納品までの速度
194:inviting 30
173:outsource
110:project translator needed? or not
193:job posting
171:hiring manager
191:* RUNTIME ***
170:社員->マニュアル->自動
209:tast requirement ( 
task list and scope )
208:job posting text
207:basecamp orientation
206:compare and hire
205:update spread sheet
204:reply with faq
203:tech questions
202:CC chain and poking
201:ask them for updating the form
200:offer 40% more for the complition payment
+ -10% of prepayment
12:@home 家に移動を早めにして、大丈夫か確認
11:荷造り
10:胃薬
14:旅行
13:ダメなものを確保
17:オフショア比較の棒グラフ
16:安さ比較の図
15:図
14:WHOのところを見てくれれば分かるだろ。
13:点をつなげる
12:WP++
8:クラウドソーシングチーム
11:差は品質、安さ、デザイン
7:STUDIOVOICEチーム
10:twitter,
nosigner,
tokyopistle
pingmag,
6:WHO
5:WHAT
4:HOW
3:OUTLINE
26:WPと一緒にできるやつ作った。
WP側もJava側もオフショア。
25:ユーザーが情報を入れるところはできない。
WPプラグインではだめ。
24:WP++
23:アドミニのイノベーション、
すごいレビュワー、
仕組み＝ワークフローとテラー
22:肝がわかってるの図
21:SVの絵
20:ワークフローの図
19:テラー＋オフショアの図
18:テラーの図
76:context and task fitting
131:routines and body
39:RUNTIME
75:taily tasks in 25 mins should be there.
130:routine and body
74:@mece investment_balance
73:@mece project_capture
72:@mece project organizet = management.run
70:@mece routine
108:ui
88:follow task priority
107:timing  priority
106:better_next
86:terminal
49:context
104:noding
103:critical_path
47:@mece projectの選択肢減らす
102:longer hour for one task
46:@mece タスク選択肢減らす
99:daily organize
80:can't refer outside( not in air ) 
117:@done readings
and routines?
116:critical path terminals
42:@mece GTD
113:hard phisical context tasks
93:@mece speed
112:open time base nodefield
111:miscs
91:context fitness
110:evernote
129:task_management
90:@mece project priority
127:routines
125:tv
51:@mece do not do metas outside of metas
69:@mece current project
124:use evernote more and 
123:depending on
the context ?
67:@mece choose project and tasks
122:ui
66:pomodoro
121:choose pomodoro
task following 
the node?
65:@mece how can i [[concentrate]]
79:following nodepad?
78:follow some ways ( nodepad ? ) 
77:how can i find the next tasks soooo quickly
5:archive
4:same one as jca 
1:nhkarchive
9:document 28th 1800
12:do
8:presentation
11:ecommerce
10:18:30
1:nice
4:hunt
4:nir@sfc.wide.ad.jp
3:nir
1:niwriver
44:MECEな軸
42:探
40:how to find the node?
52:node content
51:if the there is no node field file, then make make. and gather all the parents and save it there.....
50:node should not belong to node field as data. 
node field is just the use.
19:email post in
18:desktop clipar
17:service
9:sync
16:click.to
8:multi device
15:inbox
7:api
14:ifttt
6:see the classes you want to you
13:bookmarklet
5:use parse  <- to node functionlaiy
29:dropbox
12:capture
4:evernote
28:dropbox api
11:apis
27:差分検出
26:ID
1:node_entry_easier_from_other_tools
25:write
24:point the current existing node
23:get the text input
38:e2t
22:then
37:load text from the write dir
21:iftttで何がfしたいか
20:if
35:load from write?
34:something to turns into text that could be load into nodepad using ifttt
33:target 
49:@done compare
32:find the nodes that matches the node content
48:@done compare which to use if id == nodefield + node.id?  or to make all the nodes of this string....
31:get all the nodes
47:nodefield = nodefile? or nodes inside of them...
30:make links from all the nodes in all the node files not only the nodefield node
65:put the url as a solution(child) of a node?
64:url?
63:tag?
3:nodepad
62:list up all the types of content
2:[[RuntimeNode]]を記述する
61:depends on the contents?
49:resourcemapper
60:download the content?
48:nodepad2googlecalendar
47:nodepad2ical
44:bookmarklet to webapp 
* bookmarklet for nodeopad
43:post nodefield bookmralket
99:macでノードパッドのリンク開けない
42:Bookmarklet for nodepad
98:NodepadObserver
29:xmlからインポート
97:OpenFromWikiFilenameのときに、パスを文字列でなく
fileのセパレータに
28:xml書き出し
27:nd2text
26:キーワード（kをタイプ）した時に
作成されるデータを
94:シリアライズラインモード
25:そのノードフィールド名のノードがまだない場合、それをつくるショートカット
24:keywordについてグーグルとかの結果とか、
グーグルのfeeling luckkyから検索するとか、
rss、google desktopとかその
feeling luckyを最高の見せ方で見せる
91:============================= 
         Bulidtime
=============================
90:============================= 
         Runtime
=============================
21:型変換
108:下のノードに自動リンクから自動取得後するときに、組み合わせる。
[steps to repeat]annotaionの改善というノードの改善というノードがリンクになっているのでこれクリックする
[what expected]どうすればannotationを仕組み化と出る。
[what you saw instead]「仕組み化」というのがでてる
77:IncrementalGrep
20:data conversion
105:リンクのしたの色にタグがついている（startsWith"@"),
ときは、線も透明にする
74:FontManager
73:change fonr to helvetica
102:人ビュー
59:accessable with nodepad
70:similarity
58:connect
57:tag a document  or quote + greppable or ma
55:autonoding
52:nodepad2rss
39:nodepadにメディアファイルできるようにしたい
51:nodepad2mail
50:nodepad2backpack
36:開いたときにリンクされない
33:suggestion_in_nodepad
89:nodepad
88:x31
30:xmlでほじ
117:あらゆるものに循環する（リソース的なもの）はなし
87:mac
17:mailto
86:nodepad
16:ノードをクリックしたら、別ファイルにある文字列が一致するノードの子と親も取る。
114: me or someone .  nodepad linking event by drug and dropping the node……
14:text2nd
83:自動リンクからの自動取得後の展開
111:折りたたみ壊れてるの直す。nodepad @Computer
69:grep?
12:#wait #keyword [[rsstonode]]
68:list the node field 
or node
11:mailtonode
8:nodeserver
80:出現頻度の高い単語をキーワード依頼 == Word
67:tagging?
66:pointing node
14:http://basecamphq.com/api/
13:basecampAPIに
12:basecampアカウント
11:basecampurl
8:自動化できる。
10:ノードパッドデータ
7:手作業？
6:[[ブースト]]できる
5:[[チーム化]]できる
4:nodepad2basecamptemplate
3:#keyword [[sharable]]
2:[basecamptemplate
10:xml保存にする。
データをテクスト情報でストリームに書き出す。


4:サーバ通信。
1.待ち。
2.トリガー後処理

3:3.クライアント通信（saveの）
1.クライアント通信。
2.サーバ発見。
3.文字列通信開始、
4.ユーザ名通達
5.ファイル名通達。
6.ループ
7.コマンド
8.データストリーム。
9.クローズ。
18:JSP立ち上げる
17:＊２クライアントソケット通信（open）
1.サーバ発見
2.文字列通信開始
3.ユーザ命通達
4.ファイル名通達
5.データストリームループ
6.クローズ

16:＊トリガー後処理
1.ユーザ名もらう
2.ファイル名もらう
3.ファイルを読み込み
4.ファイルをそのまま書き出し
5.クローズ
23:nodepad
15:サーバ
1.nodepad.phpで、ユーザ名(toukubo)、サーバ名(www.enclosing.net)、スクリプト名(nodepad.php)、wikiネームにもとづちえparameterを吐き出す。
2.待ち。
3.トリガー処理

14:＊1.クライアント
1.別ブラウザで、host＝www.enclosing.net/nodepad.php?f=filename&u=usernameを起動
2.アプレットスタートにて、パラメタからファイル名とユーザ名を獲得
3.ソケット通信クライアント

13:＊1クライアント（のsave）
1.wikiネームのダブルクリックが起こる
2.netかどうか確認する
3.netだったら、クライアント通信

20:アプレットにファイル名とサーバ名を与えるには、
phpで、f=filename&s=ccz03.sfc.keio.ac.jpみたいにすると
<applet jar"nodepad.0.9.8.jar" code="enclosing.application.node.NodeFieldApplet">
<param name=f value="filename">
<param name=s value="ccz03.sfc.keio.ac.jp">
<param name=u value="toukubo">
<applet>
を吐き出す
12:1.save
2.open
9:＊2OPEN
1.クライアント
2.サーバ

11:*トリガー後処理
1.ユーザ名をもらう。
2.ファイル名通達。
3.データストリーム
4.クローズ。
5.もらった名前でテクストをファイルに書き込み。
8:＊１save
1.クライアント
2.サーバ

3:nodepad feature3 3 test 
67:
66:
75:[[nodepad_feature3]]
65:
74:[[nodepad_features2]]
64:
71:
70:
69:
68:
3:テスト
3:ほげほげ
10:フィールドをクリック
45:待機用語集
44:左上のメニュー間違える
79:←こういうのいちいち繋ぐのめんどい。
全部選んで線引きしたい
43:最下位（待ち）をアラートしてみる？
78:delete解除まで消えない
40:新たにノードをつくって決定すると抜け出した？かも
29:接続がむずい
28:インレット
27:概念や思考の要素を表す
26:このテキストが入っているボックスのこと
25:ノード
24:用語集
59:REDO
23:フィールドをクリックすると決定
58:UNDO
57:一般的編集コマンド
21:ノードの下の黒部分をクリック、
接続したいノードの上の黒部分をクリック
56:微妙
20:ノードの接続
55:ノード内の単語からのリンク
53:その他属性表示をどうするか。
52:削除にdeleteキー押しがち。
84:接続線が消えない
83:垂直の線が消える
81:上位ノード、下位ノードに相対的な呼び名が欲しい
36:接続先ノードの上位概念、メタを表す
35:ノード下部の黒い部分
34:接続先ノードの下位概念、継承を表す
33:ノード上部の黒部分
32:アウトレット
67:優先順位低め
31:問題
66:画像書き出し
30:編集モードから抜けられないことがある
65:新規フィールド作成
62:PASTE
61:CUT
9:ノードの作成
60:COPY
18:思考やタスクを要素（ノード）に分けて表し、関係を構造的に記述するツール
8:改良案
17:nodepadとは
7:選択して整列したい
16:ノードを選択しドラッグ
6:バグ
15:ノードの移動
5:選択したいノード郡をドラッグする
14:ノードを選択し、上のdeleteをクリック
4:複数選択
49:Ctrlを押しながらクリック
13:ノードの削除
3:nodeをクリック
48:ノード内を選択し、書き込む。編集する。
12:ノードをダブルクリック
47:指し示すものを参照可能にする。
（リンク、ショートカット、、、）
11:ノードの書き込み、編集
1:nodeの選択
46:ポインタ
26:ポインターノード
＋表示に困らないように
25:データ形式＋データを飲む
42:prioritySeedsSet入力後、
新しいPriorityNodeComponentや
PriorityNodeを作成し新しくつくりなおし
関連しなおす。

＋nodeの脇に表示

9:ApplicationNode拡張で
24:new
33:ファイルも扱いたい
41:prioritySeedsSet入力
＋現状のノードに追加する

＋nodeの脇に表示
32:他のポインタの挙動をマネ
7:UML書く
22:プライオリティを表表示したい
＋ポインターノード
＋ウェブで

5:自作AWT表表示ノードコンポーネント＋
ポインターノード
4:プライオリティを表表示したい
＋表中のノードをクリックで呼べる
38:ノード-----------
nd://testwiki/あいうえお
ファイルは-------
file://c:/test.txt
ノードファイルは-
[[nantoka]]かファイルなのでfile://h:/current/enclosing/nodepad/data/test.nd
urlは------------
http://www.sfc.keio.ac.jp/^t00517kt/
　
=========
かつ表示識別が可能な
[[mojiretu:file://c:/test.txt]]
[[toukubo:http://en.no-ip.org/]]
[[なんとかノード:node://test/testfile]]
[[なんとかノードファイル:node://node]]
　
　
これらは「開く」場合で、
fileとurlはopenurlする。
＋wikiファイルはurlに置き換えてopen。
＋ノードもurlに置き換えてそのノードをオープン。
「削除」で、このリンクだけ削除。
「シフト＋削除」だと
ノードおよびノードファイルの場合はそれを削除。

47:nodepad自動リンク
45:node脇に表示
18:ウェブで挙動
27:シートノード
1:nodepad_to_evernote
4:(mark = tagging) *
3:matching resources  Buffer
21:quick computer
20:big moniter
19:nice keyboard
=mitsumi
43:cycle
avoid
home
resource
wait
done
eclipse
net
mail
ask
time
4444
out
purchase
keyword
google

18:eclipse
8:causual relation ships between resources
home -> storytellerbase
storytellerbase -> eclipse
17:storytellerbase
7:detection of resources availablity
16:home
10:nd directory
7:screenshot
6:open
5:nodefield
4:photos
3:nodepadpad
19:nodepad 2 photos
18:evaapp
17:import int adobe idea
16:photos on photostream
15:cronize
14:directory
13:triggering
11:automator to import to iphoto
8:filenames
7:本
6:paper
5:中心の移動
4:iphone + nodepad + nodepad[[book]]
3:nodepadでの一元化
9:autonoding
8:予算
3:[[20060829]]

SS it.

how can I earn super person.
ask some
[[20060]]



*1156744034*recruiting
1.the fittness,betwe
[[20060910]]
もうnodepadに登録されたCreateとDeleteを反映するには？
[[20060]]
partialnoding + merge partialnode
[[20060911-]]
#wait partialnoding + merge partialnode
[[200609]]
#done a3かa4の紙とペンとtopnodeの参照
[[20061008backtop]]
nodepadで「すごい」の解決をしたにつける。sudjestion
[[20061011back]]
nodepadで「すごい」の解決をしたにつける。sudjestion
[[EnclosingSystem]]
nodepadで全部選んで線引き
[[EnclosingSys]]
nodepadのredo,undo,
[[Enclosing]]
nodepadの中からスカイプ
[[Enclos]]
node形式美
[[Enc]]
nodepadからメール送信。
受信をnodepadになんとかする。
エクセルかノードパッドで人
[[]]
nodepadのAI化。
[[Estimation]]
node / template of tasks of development + time
[[RuntimeNodeOfAutoCalcNodepad]]
System Update SNV of a node from SID and SHD and F
[[RuntimeNodeofautonoding]]
#done System Update selfnodevalue of a node from s
[[RuntimeNodeofautonod]]
User HttpPosts y of node
[[RuntimeNodeofauto]]
System Update averagenodevalue of NodeField
from 
[[RuntimeNodeofa]]
System Update nodevalue of Nodes of the NodeField
[[TKDG_研究計画書]]
ブリッジエンジニアリング。
rse+nodepad
video(international)

[[TKDG_研究計画書_20050722bak]]
ブリッジエンジニアリング。
rse+nodepad
video(international)

[[aiu]]
nodepadで「すごい」の解決をしたにつける。sudjestion
[[avoid]]
node list + delete
[[back.top]]
nodepadで「すごい」の解決をしたにつける。sudjestion
[[compitance]]
see nodes
[[compita]]
point out of nodes 
[[comp]]
delete other nodes
[[computer]]
nodepad
[[copy_and_paste_of_nodepad]]
the children and parents
vectors are storing only
[[dddd]]
User HttpPosts y of node
[[d]]
System Update averagenodevalue of NodeField
from 
[[en20060103]]
まとめよみインタフェイス。というかnodepadとかの仲から
execでstart ./mdibr
[[en20060]]
ノードパッドへの書き込みをノードDBで扱う方法は？
DBでノードを扱うということは、ポータビリティ
[[en_部屋]]
☆とりあえず家
################################
ATRは処理業
[[fooding]]
エンクロージング、ナベ。（仮称）
別名バカなべ。

ちなみにこれは、僕が考えたというよりは、僕
[[healthportal]]
シェアポイント作る？
MLくらいでいい？
イントラCMS？
僕のツールを提供するのも面白い。
[[mdadev2]]
nodeから名詞と動詞と形容詞を導出
[[meru]]
nodepad 　≒　因果記述
[[m]]
nodepadを修正する
[[nodepad]]
nodepad
[[nodepad2basecamptemplate]]
nodepad2basecamptemplate
[[nodepad_applet]]
サーバ
1.nodepad.phpで、ユーザ名(toukubo)、サーバ名(www.enclosi
[[nodepad_app]]
アプレットにファイル名とサーバ名を与えるには、
phpで、f=filename&s=ccz03.s
[[nodepad_]]
＊1.クライアント
1.別ブラウザで、host＝www.enclosing.net/nodepad
[[nodepad_manual]]
nodepadとは
[[nodepad_man]]
nodeをクリック
[[nodepad_]]
nodeの選択
[[nodepad_priority]]
prioritySeedsSet入力後、
新しいPriorityNodeComponentや
P
[[nodepad_prior]]
prioritySeedsSet入力
＋現状のノードに追加する

＋nodeの脇に表示
[[nodepad_pr]]
ノード-----------
nd://testwiki/あいうえお
ファイルは-------
[[nodepad]]
nodepad自動リンク
[[node]]
node脇に表示
[[noding]]
System Update SNV of a node from SID and SHD and F
[[p2nd]]
p2ndチームにnodepadを渡す
[[paper2nd]]
more node contents
[[patternweaverdev]]
nodeから名詞と動詞と形容詞を導出
[[priority]]
ノードパッド = nodepad
[[pyramid]]
アバケ文章。
node on unu
puki?

[[sharable]]
nodepad2basecamptemplate
[[simplenode]]
simplenode
[[storytellerruntime2]]
nodeから名詞と動詞と形容詞を導出
[[storytellertools]]
1.mitsumi keyboard
2.nice moniter
3.nodepad data
[[suggestion_in_nodepad]]
suggestion_in_nodepad = [[suggestion]] in nodepad
[[suggestion_in_node]]
after space or start of content of node
[[top]]
more nodes and links
[[]]
more keyboard with nodepad
[[コピー (10) ～ top]]
nodepadで「すごい」の解決をしたにつける。sudjestion
[[コピー (11) ～ top]]
nodepadで「すごい」の解決をしたにつける。sudjestion
[[コピー (12) ～ top]]
nodepadで「すごい」の解決をしたにつける。sudjestion
[[コピー (14) ～ top]]
have nodepad
[[コピー (14) ～ ]]
more nodes and links
[[コピー (14)]]
less nodpad when I can work  by my brain? out of p
[[コピー (]]
nodepadで「どうすれば」と「事実は」をつける提案
0,-10000
[[コピ]]
nodepadの自動リンクをデータベースに。
[[コピー (15) ～ top]]
create nodefile
[[コピー (15) ～ ]]
put node file to the server from them
[[コピー (15)]]
plugin name.
&2node 
[[コピー (]]
text2node
[[コピ]]
nodepadで「どうすれば」と「事実は」をつける提案
0,-10000
[[コピー (3) ～ top]]
nodepadで「すごい」の解決をしたにつける。sudjestion
[[コピー (4) ～ top]]
nodepadで「すごい」の解決をしたにつける。sudjestion
[[コピー (5) ～ top]]
nodepadで「すごい」の解決をしたにつける。sudjestion
[[コピー (6) ～ top]]
nodepadで「すごい」の解決をしたにつける。sudjestion
[[コピー (7) ～ top]]
nodepadで「すごい」の解決をしたにつける。sudjestion
[[コピー (8) ～ top]]
nodepadで「すごい」の解決をしたにつける。sudjestion
[[コピー (9) ～ top]]
nodepadで「すごい」の解決をしたにつける。sudjestion
[[コピー ～ 20060910]]
#done a3かa4の紙とペンとtopnodeの参照
[[コピー ～ 20060]]
#wait partialnoding + merge partialnode
[[コピー ～ storyteller]]
nodepad
[[コピー ～ top]]
1.nodeに、日記、のタグをつける。
2.rssをタグごとに吐き分けるものをつくる
3.書き込
[[コピー ～ コピー ～ top]]
1.nodeに、日記、のタグをつける。
2.rssをタグごとに吐き分けるものをつくる
3.書き込
[[コピー ～aa top]]
1.nodeに、日記、のタグをつける。
2.rssをタグごとに吐き分けるものをつくる
3.書き込
[[スケジュール]]
nodepad2mpp
[[スケジ]]
#keyword [[nodepad2basecamptemplate]]
[[ノードパッド]]
ノードパッド = nodepad
[[国連_ドキュメント]]
 　　　　　　　　　　　　　　　　　　　　　　　　　 
=====================
[[国連_ドキュ]]
SISCO PIX FIREWALL
　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　
[[構造化]]
たとえば「places」というエンクロージングなシステムがあって、これは構造化されている。
一方で
[[進路]]
☆近場で
1.english japanase bridging engeneer
2.thin

21:点数をつけていく
20:ノートパッドに書く
16:結果ノード（おやノード）は？
15:考える
14:Noding
11:ノード所要時間と日付と。
10:因果計測
38:critical_path
37:noding
34:nodeの連結。
how ( 上から下へ）
すでにmeceになっているものをそうするなど？
29:決定要因を蛇皮てもらう
28:「どうすれば」系
8:User Moves the Y position of A Node
27:「凄い
」にしてみる
7:User Connect Nodes
31:定型化する
26:ソートする
6:System Update SNV of a node from SID and SHD and F of the node
30:比較を出してもらう
25:目的とかを書く
5:User Create Frequency Of Node
24:要素にする
4:User Creates CRUD SID Of Node
23:組合せ＝セットにする
3:User Creates CRUD SID Of Node
19:comprisonシートにする。
22:ソートする
2:1.ノードは
SHD（SelfHappyDepth）と
SID(Self Investment Depth)と
F（Frequency)と、
SH（SelfHappiness)と
SI(Self Investment)
SNV(Self Node Value)
NV(Node Value)
を持つ。
2.SH=F*SHD
3.SI=SIF*SID
5.SNV=SH/SI
7.NV＝SNV + SNV of directly connecteds.
  なににも繋がっていない場合のノードはSNV=NVとなる。
8.ActionNodeは、F=1のノード。
9.FはCycleとなる。
10.MetaNodeはF>2のノード。MetaNodeのSHDとSIDはこのノードのActionなノードのそれと等しい。
12.ノードのyの値はnvによって決まる。
13.ノードのyの値をマウスでノードパッド上で変更すると、これはnvの値に跳ね返るが、SHDとSIDの値は、比率固定？
5:まだノードパッドになっていない本。
ノードパッドファイルにする。
チェックリストをチェックする。
   1.「因果関係になっている。すべての関連が   」
   2.同じ名前の文字列が二つない。
   3.ほぼ同じことを意味するノードが二つない。
チェックする。


4:secretaryと会議
3:nodize.buildtime
19:gw
7:@secretary 裁断機購入
18:basecamp
33:nodizeになってないファイルをアップする。
6:@wait 本を捨てる
32:nd fileをdropbox/storytellers/nd/
に置く

5:@wait 10冊ほどまとめて [[ScanSnap]]ing
31:dropboxの[nodize/queue】フォルダからデジタル資料をゲットする。
4:nodes
30:[[nodize.buildtime]]
3:[[nodize]]@secretary
14:@secretary
29:decide with who
12:@wait purchace
11:@wait purchase
10:digitalizeしてdropboxに置く
25:iweb/dw/site
24:subversion
21:sambe to docroot
38:urlリスト。tumblrとかにnodizeタグとnodizedタグをつけてく
35:webのurlのノード化
1:nomad_cheap
11:emok
4:library
8:watched
7:eliminate.place
12:tagging
11:photo inbox
10:photo
9:outlininig
8:message template and additional message
7:tagging
6:Facebook page
5:purposes = todos
4:Inbox
3:Nominating
5:レビュー
4:ログ
3:時間削減
12:そういうアプリあるんじゃ
8:@cycle カード払い
11:データ・ソースから自動で落とせる？
7:集計自動化
6:ロギング時間削減
12:そういうアプリあるんじゃ
11:データ・ソースから自動で落とせる？
7:集計自動化
6:ロギング時間削減
5:レビュー
4:ログ
19:@wait モバイルsuica
3:時間削減
18:edy
17:@wait card
20:@wait 持てるようになったら持つ
16:logging
15:point
6:courage
5:courage
2:gggg
1:nothiong_on_floar
66:ifttt
57:message
56:notification
63:message+
67:iftttで何がfしたいか
60:ExportRss + rssmailer
6:Noun
10:Preperation @Home
7:関係モデリング
65:どうすればtoday
408:dries
429:recieving
219:どうすれば朝
428:pknk
218:どうすればmorning
426:洗顔
459:@wait vegitables
359:2shock
425:髪
458:@wait one more as morning
215:hardcontext todos
457:warm
445:bring it
225:どうすれば4.5%(45分)
456:keep awake
268:どうすればshoulder
389:maybe at sun
102:どうすればbody
464:sleepy
222:どうすればpknk_early
420:home
233:leave
463:@pknk convini
320:better_sleeping
386:do_not_eat_one_day
363:どうすればpknk
462:keep outside
253:どうすればstreches
451:eye?
362:食欲？
395:eat
461:@wait grucose
450:nose
361:2shock.不足を埋めるには？
360:2shock.18時までに二食、2000kcal食べる
392:honey
282:どうすればmussles
489:elimination
225:@mece 3month
490:eliminate.eat
414:hiring admin
486:
222:@done hardcontext todos
353:morningkit preperation
219:朝
326:check
482:@wait leave
398:parallel
407:maybe someone needed for document authoring
406:direction
479:@secretary eliminate
454:shinsei
393:direction and assignment
451:sv2
402:前日準備
401:today @evernote
400:@mece terminals
496:findjob
495:going out? you mean you want to be ther eand meet her? yeah,,,, she is super.
228:timing base
252:routine?
226:@mece body
489:elimination
225:@mece 3month
490:eliminate.eat
414:hiring admin
486:
222:@done hardcontext todos
353:morningkit preperation
460:dddd
219:朝
326:check
482:@wait leave
398:parallel
407:maybe someone needed for document authoring
406:direction
479:eliminate
454:shinsei
393:direction and assignment
451:sv2
402:前日準備
401:today @evernote
400:@mece terminals
228:timing base
252:routine?
226:@mece body
6:works
5:docs
13:apcsetup
4:take over
12:roles
11:tickets
10:specs
1:nts
9:code
8:teams and communication
7:project understanding
29:
28:@wait 埴輪さんにアプリケーション仕様ラフ案出す。
27:tester
30:@wait みぎ見たいな。
drobox/sv/covers/pages2.jpg 




26:htmlの実装 #chida 
25:ガワの実装
24:@keyword [[debug]]
23:@wait OutOfPatterning == coding
22:開発機への配備
19:@wait sql dupmpfile
21:xhtml2jsp
18:@wait war
20:@wait TestedSystem
17:@wait SyncToy
16:@wait server url
15:@wait ター
13:deploy
9:実装
12:人員配備
8:オフラインのときは何をだす？
11:オフラインのとき何を出す。
7:表現能力。ウェブブラウザ全面ということでいけるのか。
10:テスト
6:@wait アプリケーション仕様
5:配備方法
4:資料購読
1:ntt_sv
2:Backpack: Numbers
http://toukubo.backpackit.com/pages/1943261-numbers
1:numbers
2:oauth_appklication_id
1:oauth
2:取得する
1:oauth_appklication_id
120:insetのjspを書き換える
64:#################################
          　W A I T S
##################################
119:バリデーション系を書き換える
127:そうでもないっぽい
126:ためしてみよう
117:jspにかきかえる
125:hibernateを使う？重くなるか？
33:ピングを受け付ける
32:更新を維持
123:check new
1:ocr
1:ocrxui
5:windows
4:survey
12:candidate list in bookmarks

11:test
10:quality
9:take many and hire 1
8:deside how many for trial
7:deside the role
4:odesk
3:依頼してみる
14:send message at odesk dir 
13:[[context]] and task ( pick one task )
8:reviewer other than me? 
19:advertise someone 
7:reviewer
6:advertising that we are reviewing and watching
17:workers informed that he is notified he is not working 
16:Odesk privilege of ticketing
4:avoiding cheating
15:output base reporting
14:the rules authentic Sir.
13:the fact we had no communication. 
12:Having one sample of firing 
11:daily report?
10:putting reviewer from japan side other than me and he sometimes act ( can see the activity on the basecamp )

25:panishment
24:
23:CHE-QA@gmail.com

22:snapshot deletion
21:system.
20:reviewer system
9:reviewing process
2:の　== Of
536:分解
533:代謝効率
362:coder outsorcing 
532:@
515:take snapshots and use img tag
361:スケールネックを解消したいよ
531:画面仕様
514:should be able to see the previews easily in the list.
360:スケールしたいかつROI保ちたい
530:Nouns
513:PM
308:1翻訳あたりの置き換え時間量
79:assignment
512:適材適所
479:誰かにsecertaryと同様にmからBCかRMILKへのタスクアサインをしてみてもらう
511:難易度に応じてassign
478:バスな情報を作業を個人に当てるには
510:時間見積もり
476:@secretary 通知がいくようにgmailかえるように指示
150:better communication
gotomeeting
skype
475:@Phone maheshに彼らにレクチャーするよう指示
474:@wait more autolink to offshore
439:@wait aop的にタスクの一覧を見て、offshoreできる評価する
438:video
472:CRUDと、
Server/CloientのMECEな別
CRUDのCとUには上級
Rは初級。
サーバーサイドは上級
画面は初級。
パターン抜き出しが上級。
53:============================= 
         Runtime
=============================
470:難易度認識
419:仕様理解改善
418:PageList in basecamp and upload jing url
417:*******************************
Page Base Jing Annotation
*******************************
416:file to modify ftm
412:in.secretarize.com
529:Attrs
528:FirstModeling
525:basecamp,eclipse connector
524:contextbase codingの改善
336:
149:out source
505:←ジングToテストケースのスキームを考える@Noding
←ジングToテストケースの実施
←ジングToテストケースのGoする
334:@done どうすればdiaplaytagについて、
ルーチンを勝手にやってくれるか
504:依存しちゃわないようにする
333:@done display tagging
316:notify
350:品質管理とセット
315:share
469:難易度に応じたアサイン
314:autonoding(webapp)
313:ExportXmlOfNodesOfContexts
467:blindtraining
125:@done テスト専門の人とか
466:モニター、マウスとかキーボードとかのコンピュータオペレーションの迅速化
310:PG以外のoffshore
81:model assigment
482:結果ノード（おやノード）は？
80:automate assigment
480:@[[Noding]] sunitaさんに
257:@done camp2xhtmlをオフショアできないか聞く
26:patten matching?
if they understand storyteller
427:story
409:品質劣化させない offshore coder
426:offshore outsourcing
442:message+
425:better_roi
407:翻訳者の時間を削減する
440:@Air rmilkをみる
423:annotationの改善
422:マヘシュに仕様に関しての詳細の
アノテーション×プロセスにする
421:jingでannotationをgothrough
420:仕様プラン・制作パターンの教育、
チェックリストをベーススキャンプにテン
プレートで作成する
368:翻訳
367:offshore
29:見積もり
32:motivations
28:確約。契約。発注書など。
27:test and programming
26:美しい
25:1人月？
24:永続的なスケーラビリティ
23:キャッシュアウト
21:適材適所
17:網羅
14:ミックス
13:目的
9:lse
12:一石二鳥
8:スケール

11:高roiの検索
7:横断的効率化
10:美。
6:[[目的検索]]
39:1人月以上。
38:3人月？
4:連絡する。目的は？
3:offshore_trigger
36:the minimum is?

35:total price? how much can we buy? and is that fixed?
34:たぶん仕様伝達は早めにしたい。
あとは規模感。
画面数。
データ数。
リスクのある画面
重み。
jkさんとのチャットログの中身から抜粋
33:can we see his own blogs or twitter or tumbr or services or tools 
if he has? we don't care even it is so personal or 
10:ランタイムをモデリング
7:一回とにかく[[頼]]んでみる
6:上山さんつつき
5:オフショア
4:oDesk仕組み
3:offshoring
17:direction
16:@voice コンテクストを吹き込み
15:依頼
14:仕組み
13:一回する
12:JingedCheckList
9:仕組みで何があがる
11:モデリング
8:仕組み化
6:bag
5:bag = clothes * hotchikiss
4:cloth
3:okadaya
5:gmailのアカウントの取得
4:秘書利用環境セットアップ
3:okamoto.secretary.runtime
9:メッセージプラスの取得
8:銀行口座の稼働
7:dropboxのアカウントの作成とmailqueueのフォルダの作成と共有
10:フォームのメール送信以来
6:rmilk account取得
7:7000
10:socket
6:cf
4:okiro and auction
3:10 normal light with bar
9:light bulb 
8:calicurate how much per one
6:transcriptor
5:company translator?
4:hire translator for 1 shot job
3:one_shot_translation
719:線表書く？
550:#cycle
716:広告
779:メタに今日以外も
715:できごとであえる
746:日曜パック
778:今日のスタジオ大を
714:グラフィックである
777:永井君に振って払う
713:曲
744:4月とかにライブできんですか
776:もっと払う
712:cd
743:長期のスケをみんなについてまた聞くところから。
年間スケもらっちゃえば？
455:1.みんなのだめな日を2週間先まで聞いてエクセルに記入
2.その時間で予約とってエクセルに記入
775:もっとふる
711:プロトタイピング
742:康平君
454:1.3週先の予定まではいってるかチェック。
2.月間担当決定
710:おかね
741:自分は音楽にスケとお金を！
453:サンデー基金
740:new
647:サンデー訓練法
2.一日に、1時間かけてできる限りやる。
3.ひとつについて7日連続にんなるように。

646:sundayエクセル内訓練リストから。
645:部分訓練内容を決める
644:フタリッツにメールを5d1hでする。
676:楽器がきまらない問題
675:シーケンサだな
674:打楽器の多い感じ
386:＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
 
F

I

N

I

S

H

E

D

S

＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃

673:サンデーポポポポポ
回文でのポポポポポ
672:予算申請
384:モチベーションの維持など
671:検索
383:早めに予定組み。
549:毎日演奏
350:1.最初ゆっくり
2.キーかえる
3.ベースとギター7th
4．どこからあげるか決める。
あげる
7thの単音での全体コード感
ゆっくりやってフレーズつくってみる。
その後しずかに。
670:たちあがり静かに
709:スケジュール
708:つつき
739:アウトプット
＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
シャツ。
CD。
cdの外見
コンピュータ
おもちゃ
電話番号
コミュニケーション
場所共有
鏡
ウェブサイト
フラッシュ作品
ajax作品
データベース
ほかのバンドとの交流
絵画
サーバ
愛
愛関連の書籍
真空パック
707:ツール
738:音の練習
737:練習をして完成させましょうよ
769:息を止める
705:もの
704:人
735:つつく

767:スケジュールしてくれるよう公平君に
703:[[iloveyoupackage]]
734:逆線表

766:se
733:実施日スケ調整
765:ds回収
701:他の人にも相談
732:イベント
764:ロッカーに機材を配置
700:定義
731:3/9ライブ
762:ｒ
761:ふる？
760:音楽MLみたいなもの。
349:ハナヤキ構成
669:炸裂音
668:リストのアフォード
699:もっとお金
698:もっと康平君
666:うしなってわかる理論

697:スケジュール康平君。
665:Methods整備
376:スケぐみチェックルーチン＋α
早めに。
眺めに。
前後に時間とる。
ジュンビ会議も
695:#cycle
694:レビュー
693:レビューをして褒めよう
661:腹筋とギターの握り。
余計な力をいれないこと
660:うしなってはじめてわかる理論
372:スケ組を負かす
691:お金は払おう。
690:ほめる戦略とつつく戦略
536:全部の音符に決定的意味があるように。
535:ちゃんと引く。
一音一音意識をして。
729:受渡
728:サーバにHDDを用意する

726:埋めていく
758:コンピュータ待ち
725:録音テーブルの作成と管理
788:録音
724:音パッケージ
786:ライブまでに声を
466:二つ以上の楽曲構成のつなぎ合わせ
（フレーズ、コード進行、ネタの羅列とランダムな接続。評価と次の選択のループ）
785:new
753:葬式
戦争
ドレドミ
回文
花焼き
日曜日
whather report
煙草
海
爆弾
ジャジャジャ
ダイブ

784:実験
752:候補
783:口あけて
751:曲を決める
782:感情表現。

780:タバコ？
659:レイテンシのないシフタ
658:もっと面白く
689:人を管理する
657:小さくキープ
688:ノードパッド内に全部展開して合成かけてみる
656:ハナと唇のアイダにあてる感じ
399:#cycle
655:##################################
  KOE
##################################
686:waits

654:しゃべってから
685:WAITS
684:構成をする
683:1010100
682:ライブブッキングを固定する
650:cycle
681:#cycle
680:こーへいくんにはちゃんと金払う
6:コーラス一人で
5:音符砕く
4:機材
3:ピックもってく。
SEもってく。

2:リストから。
11:歌詞を書いて御覧
1:ピッチ、テンポ、程度だ
10:ラインの上昇。サンプルの変更
連打。サンプルの変更
9:かわき
ひずみ
ぬれ
ひびき
の切り替えをすばやく
8:ためて入る
7:話すにあたってbmpを充分に考えて
1:1.2泊のとこと、3拍の遊び場との構造。
2.言葉で「ラララ」とか入る
3.それらが昇ったりしながら入る
4.ドレドミレドレドミレドソをいろいろな楽器で。
5.心拍音。
6.色々なタイミング色々な音でドレドミレドレドミレドソを、ノボリ、くだりで入れる。
7.サンプリング的合いの手の数が少ないかも
8.アラビアータ
9.比率決める
10.パンテラ
11.カナタスペシャル（ドラムのスライド）
12.カシオペア（ベースが高い音域でゴリゴリ）
13.ジャズ（ジャズサンプルをフィスト）
14.逆アラビアータ
15.シドドドドレレレレミミミミソソソソ
16.シドドドドレレレレミミミミソソソソミミミミシシシシミミミミシシシ
17.ペンタの8表紙引きをギター2本でカラムやつ
18.アコギ2本でバラバラでカッティング
19.輪唱
20. サビで「あ、い、し、て、る」の裏箔にはいる
21. サビのあ、い、し、て、るとかは二人とかでうたう
22.ジョジョに大きく
23.ベリーショート
24.上下
25.シドドドソソソソレレレレララララミミミミファミレレドラミーシッラー
27.ダブウラ
28.サンデー合唱
29.サンデーレゾナンス
3:ドレドミレドレドミレドソをサンプリング。
三つに着る
1:

17:[[海と男の子]]

20:[[告知販促]]
16:
■[[音楽環境040517]]


15:=============================~
hanayaki模様を背景においた写真~
←花~
←←~
←撮影場所（慶応でいい）~
←撮影する人（一人じゃ難しい）~


13:
=============~
■10分削る。曲自体ではなく曲の長さをけずろう。~
wr２分~
遊園地1分半~
花を焼かない10秒~
核爆弾１分~
プロトタイプ２．５分~
テンポラルトーク1分~


49:ちゃんとしたの印刷
10:テンポラルトークしゃべり~


47:佐々木篤に見せてみる
46:[[hanayaki]]
50:白黒買う
45:ライブする
43:コネ新規の「ために」企画怪しい。
バンドという「企画」でもいい。
39:企画やる
42:リリースしてから。
38:[[onnnanoko]]
41:皆デはなやき
40:こね新規作成
36:演奏者
35:保持
29:←←代々木公園か芝公園~
9:==================~
■花焼きグラフィック２
（グラフィックと花との混ざったもの、絵の具で花をつぶす。）~

28:
←花つみ~

←花がさいていません。~
←花をライターかなんかで焼いているところ。~
8:==================~
■[[aud]]~


32:音再作成
31:浮かび沈む、
25:郵送
2:=============================~
■物語書く（音楽が先）

140:new
329:new
328:new
327:new
326:new
325:new
324:new
323:new
322:new
321:new
320:new
509:new
508:new
139:new
507:new
138:new
506:new
505:new
136:地図の発想やばいかも
504:new
135:コールハースのプール。
503:new
502:new
133:世界地図
501:new
132:new
500:new
131:new
130:new
699:new
698:new
697:new
696:new
695:new
694:new
319:new
693:new
318:new
692:new
317:new
691:new
316:new
690:new
315:new
314:new
313:new
312:new
311:new
310:new
99:new
98:new
97:new
96:new
129:new
95:new
128:new
94:new
127:new
93:new
126:new
92:new
125:new
91:new
124:new
90:new
123:new
122:new
121:new
120:new
689:new
688:new
687:new
686:new
685:new
684:new
309:new
683:new
308:new
682:new
307:new
681:new
306:new
680:new
305:new
304:new
303:new
302:new
301:new
300:new
499:new
498:new
497:new
89:new
496:new
88:new
495:new
87:new
494:new
86:new
119:new
493:new
85:new
118:new
492:new
84:new
117:new
491:new
83:new
116:new
490:new
82:new
115:new
81:new
114:new
80:new
113:new
112:new
111:new
110:new
679:new
678:new
677:new
676:new
675:new
674:new
673:new
672:new
671:new
670:new
489:new
488:new
487:new
79:new
486:new
78:new
485:new
77:new
484:new
76:new
109:new
483:new
75:new
108:new
482:new
74:new
107:new
481:new
73:new
106:new
480:new
72:new
105:new
71:new
104:new
70:new
103:new
102:new
101:new
100:new
669:new
299:new
668:new
298:new
667:new
297:new
666:new
296:new
665:new
295:new
664:new
294:new
663:new
293:new
662:new
292:new
661:new
291:new
660:new
290:new
479:new
478:new
477:new
69:new
476:new
68:new
475:new
67:new
474:new
66:new
473:new
65:new
472:new
64:new
471:new
63:new
470:new
62:new
61:new
60:new
659:new
289:new
658:new
288:new
657:new
287:new
656:new
286:new
655:new
285:new
654:new
284:new
653:new
283:new
652:new
282:new
651:new
281:new
650:new
280:new
469:new
468:new
467:new
59:new
466:new
58:new
465:new
57:new
464:new
56:new
463:new
55:new
462:new
54:new
461:new
53:new
460:new
52:new
51:new
50:new
649:new
279:new
648:new
278:new
647:new
277:new
646:new
276:new
645:new
275:new
644:new
274:new
643:new
273:new
642:new
272:new
641:new
271:new
640:new
270:new
459:new
458:new
457:new
49:new
456:new
48:new
455:new
47:new
454:new
46:new
453:new
45:new
452:new
44:new
451:new
43:new
450:new
42:new
41:new
40:new
639:new
269:new
638:new
268:new
637:new
267:new
636:new
266:new
635:new
265:new
634:new
264:new
633:new
263:new
632:new
262:new
631:new
261:new
630:new
260:new
449:new
448:new
447:new
39:new
446:new
38:new
445:new
37:new
444:new
36:new
443:new
35:new
442:new
34:new
441:new
33:new
440:new
32:new
31:new
30:new
629:new
259:new
628:new
258:new
627:new
257:new
626:new
256:new
625:new
255:new
624:new
254:new
623:new
253:new
622:new
252:new
621:new
251:new
620:new
250:new
439:new
438:new
437:new
29:new
436:new
28:new
435:new
27:new
434:new
26:new
433:new
25:new
432:new
24:new
431:new
23:new
430:new
22:new
21:new
20:new
619:new
249:new
618:new
248:new
617:new
247:new
616:new
246:new
615:new
245:new
614:new
244:new
613:new
243:new
612:new
242:new
611:new
241:new
610:new
240:new
429:new
428:new
427:new
19:new
426:new
18:new
425:new
17:new
424:new
16:new
423:new
15:new
422:new
14:new
421:new
13:new
420:new
12:new
11:new
10:new
609:new
239:new
608:new
238:new
607:new
237:new
606:new
236:new
605:new
235:new
604:new
234:new
603:new
233:new
602:new
232:new
601:new
231:new
600:new
230:new
419:new
418:new
417:new
416:new
415:new
414:new
413:new
412:new
411:new
410:new
229:new
228:new
227:new
226:new
225:new
224:new
223:new
222:new
221:new
220:new
409:new
408:new
407:new
781:new
406:new
780:new
405:new
404:new
403:new
402:new
401:new
400:new
599:new
598:new
597:new
596:new
595:new
594:new
219:new
593:new
218:new
592:new
217:new
591:new
216:new
590:new
215:new
214:new
213:new
212:new
211:new
210:new
779:new
778:new
777:new
776:new
775:new
774:new
773:new
772:new
771:new
770:new
589:new
588:new
587:new
586:new
585:new
584:new
209:new
583:new
208:new
582:new
207:new
581:new
206:new
580:new
205:new
204:new
203:new
202:new
201:new
200:new
769:new
399:new
768:new
398:new
767:new
397:new
766:new
396:new
765:new
395:new
764:new
394:new
763:new
393:new
762:new
392:new
761:new
391:new
760:new
390:new
579:new
578:new
577:new
576:new
575:new
574:new
573:new
572:new
571:new
570:new
759:new
389:new
758:new
388:new
757:new
387:new
756:new
386:new
755:new
385:new
754:new
384:new
753:new
383:new
752:new
382:new
751:new
381:new
750:new
380:new
569:new
568:new
199:new
567:new
198:new
566:new
197:new
565:new
196:new
564:new
195:new
563:new
194:new
562:new
193:new
561:new
192:new
560:new
191:new
190:new
749:new
379:new
748:new
378:new
747:new
377:new
746:new
376:new
745:new
375:new
744:new
374:new
743:new
373:new
742:new
372:new
741:new
371:new
740:new
370:new
559:new
558:new
189:new
557:new
188:new
556:new
187:new
555:new
186:new
554:new
185:new
553:new
184:new
552:new
183:new
551:new
182:new
550:new
181:new
180:new
739:new
369:new
738:new
368:new
737:new
367:new
736:new
366:new
735:new
365:new
734:new
364:new
733:new
363:new
732:new
362:new
731:new
361:new
730:new
360:new
549:new
548:new
179:new
547:new
178:new
546:new
177:new
545:new
176:new
544:new
175:new
543:new
174:new
542:new
173:new
541:new
172:new
540:new
171:new
170:new
729:new
359:new
728:new
358:new
727:new
357:new
726:new
356:new
725:new
355:new
724:new
354:new
723:new
353:new
722:new
352:new
721:new
351:new
720:new
350:new
539:new
538:new
169:new
537:new
168:new
536:new
167:new
535:new
166:new
534:new
165:new
533:new
164:new
532:new
163:new
531:new
162:new
530:new
161:new
160:new
9:new
8:new
719:new
349:new
7:new
718:new
348:new
6:new
717:new
347:new
5:new
716:new
346:new
4:new
715:new
345:new
3:new
714:new
344:new
2:new
713:new
343:new
1:new
712:new
342:new
711:new
341:new
710:new
340:new
529:new
528:new
159:new
527:new
158:new
526:new
157:new
525:new
156:new
524:new
155:new
523:new
154:new
522:new
153:new
521:new
152:new
520:new
151:new
150:new
709:new
708:new
339:new
707:new
338:new
706:new
337:new
705:new
336:new
704:new
335:new
703:new
334:new
702:new
333:new
701:new
332:new
700:new
331:new
330:new
519:new
518:new
149:new
517:new
148:new
516:new
147:new
515:new
146:new
514:new
145:new
513:new
144:new
512:new
143:new
511:new
142:new
510:new
141:new
12:@mail 2日にデモを希望
11:機能一覧
10:仕様策定後。
9:バッチのトリガー？
8:要件としてまとめる。
7:一覧から詳細に遷移するケース、などで
ダウンロードボタンをするとウェブへの遷移なしにエクセル中での
6:excel addonのダウンロードの方も。（引数私とかはどうする）
をしたい。
一覧から詳細に遷移するケース、などで
ダウンロードボタンをするとウェブへの遷移なしにエクセル中での
15:
3:取引先、イベント（scheudle),週報?のテーブルをIMとあわせていく
13:一覧等から詳細への画面仕様等の提案をする。
3:		
		Path modifiedpath = new PathImpl();
		Session session = new HibernateSession().currentSession(this
				.getServlet().getServletContext());
		Criteria criteria = session.createCriteria(Path.class);
		criteria.add(Restrictions.idEq((Integer)req.getAttribute("id")));
		modifiedpath = (Path) criteria.uniqueResult();
		int preordernum = ((Integer)req.getAttribute("preordernum")).intValue();
		if(preordernum != modifiedpath.getOrdernum()){

			
			Criteria criteria2 = session.createCriteria(Path.class);
			criteria2.add(Restrictions.eq("chapter", modifiedpath.getChapter()));
			criteria2.addOrder(Order.asc("ordernum"));
			
			if(modifiedpath.getOrdernum() >= criteria2.list().size()){
				modifiedpath.setOrdernum(criteria2.list().size());
				Transaction transaction = session.beginTransaction();
				session.saveOrUpdate(modifiedpath);
				transaction.commit();
				session.flush();
			}

			for (Iterator iter = criteria2.list().iterator(); iter.hasNext();) {
				Path path = (Path) iter.next();
				if(modifiedpath.getId().intValue() != path.getId().intValue() ){
					if(path.getOrdernum() == modifiedpath.getOrdernum()){
						if(preordernum < modifiedpath.getOrdernum()){
							path.setOrdernum(path.getOrdernum()-1);
						}else{
							path.setOrdernum(path.getOrdernum()+1);
						}
					}else{
						int diff = 0;
						if(path.getOrdernum() > preordernum){
							diff--;
						}
						if(path.getOrdernum() > modifiedpath.getOrdernum()){
							diff++;
						}
						path.setOrdernum(path.getOrdernum()+ diff);
					}
					Transaction transaction = session.beginTransaction();
					session.saveOrUpdate(path);
					transaction.commit();
					session.flush();
				}
			}
		}
		
		new HTTPGetRedirection(req, res, "ShowChapterDispatcher.do", modifiedpath.getChapter().getId().toString());
		return null;
	}
10:ネクストアクション
7:Project Assigning
6:choose wait and pendings
5:AssignContext
3:evernote_2_basecamp
2:ubiquitous capture
19:RUNTIME
1:organize
18:put tasks in pomodoro
23:schedule sync
15:整理
22:calendar updated
12:プロジェクトについて次のアクション、を見つける。
9:次のタスクが見つかっている
8:全部のプロジェクトについて、ネクストアクションが見つかってる
4:導入
3:orientation
1:os
5:ルーチン
9:progress manager
8:scheduling
2:タスクをキャプチャしてる
タスク管理。
生活衛生要因
スケジューリング
タスクオーガナイズ
ストリームデザイン
BC規約と順守
ディレクション
翻訳
文字おこし
エバーノート
雑務（購入、コンピュータを預かってミッシー系）
写真共有してる。
議事録からタスクにしている。
二つの資料を見比べてマージしてる。
手書きのノードからデジタライズしてる。
会議日程調整してる
エンジニアの予定取り立てをしている。
3:p2nd
1:outkit
11:battery
8:afford
7:一回の利用に分ける
18:foods
6:他のものとまとめる
17:
5:bag
4:kit
14:cycle_kit
1:outline
4:outlining
17:speach
16:storytelling
25:template
15:oled
24:
14:ol tasks
8:context base
13:tagging @ol
7:touching devices?
12:inboxes
6:better ui
21:outlining time
5:try 
20:sent
4:Runtime
19:drafts
18:outlining
6:parallel
4:難所の特定
8:developer
3:OutOfPatterning
7:tech dir
20:voicelog
9:candidates
38:CF
8:requirement of person
19:voice = meru
7:outsource
18:history
35:share
34:revenue
4:automate
15:team
33:out
3:routines
14:better matching of people
13:work at least per week
12:from when to when
30:payment_site
11:place
29:cash out
10:price per date
26:mathing(finding) of outsourcing
23:pattern matching
8:@wait ol2message
16:write the Runtime
7:@wait write document from materials
28:@mece transcribe for 
email messages?
15:hand writing chart 2 software
6:enterables
27:@wait invite more
14:SE
5:@mece escrow
13:Roles
49:@done one more
24:@mece set the hours to be used weekly and hire double
11:@mece hire more
23:@mece crowd ( not one ore 2 ) 
working for easier tasks
59:@wait HMja
10:@done transcribe in english
46:@mece better_transcription
58:"every thing in its right place principale"
33:better_依頼
69:@done trial
21:@mece loaning with better asap
32:request
68:@wait orientation
20:@mece less loaning interest
67:@wait orientated
43:@mece make it enterable
55:edit
66:GTD
42:@mece invite 2 more
transcriptors for jp
65:specialist
77:@wait apply
53:@done hire one more admin ( supporter )
76:@scheduled
for the replies
52:@wait invite to basecamp
51:@wait charter
73:@wait ja admin
ja information organize
progress managaer
translator
ja charte
72:@wait response
71:choose one for transcription
70:@done hire 3 as trial
7:
1..fix db/model mismatch
(##hostname##'s phpmyadmin.)
(account is ##account##/##pass##)
2.access http://##hostname##:8080/manager/html(account is ##account##/atif7k3z)
3.create war file of ##project##
4.deploy war file for gasaccounting(on the manager above).
5.start ##project##if it is not started(on the manager app).
6.notify me

#7.check the log file if you have trouble. and if tomcat is not running properly,  start and stop tomcat with these commands.
#/etc/init.d/tomcat stop
#/etc/init.d/tomcat/ start


10:phpmyadmin
6:how 
For general information about how to access to ftp, 
or how to deploy the webapp to a remote linux host , 
learn from web + ##menter##(especially,
 for the matters which are specific only for us).

use this info
host: gasbook.net
user: deployer
pass: af4kJi08



5:whom
4:outsource_deploy
8:to where(hostname and password) 
<- ftp setup 
<- ssh user setup
<-webmin
71:#wait ひとりひとりに聞く
65:#wait payment YUASA SAN
58:team
70:#wait 彼らにそういうことしてもらっていいか問題
64:#wait AC
55:#wait share handwrited nodefield 
49:#wait more nodepad data
51:charene
39:#wait めールを出す
38:#wait RSSリーダーの使い方を教える。オススメを教える
50:#wait autothink
37:#wait もうつかってるか聞く
36:#wait RSSリーダーで見てもらう
34:#wait 画像の日付を見て、RSSを吐く？
27:#cycle ベースキャンプのメッセージでファイルアップ
33:#wait bcでなくて、自動で通知でき、
かつサーバにアップする
26:#done ノードパッドデータを送り返してもらう
32:#wait bcに手でアップ
24:#wait p2nd =紙で書いたやつを、ノードパッドデータに
17:#wait purchace eos kiss: -70000
15:#wait p2ndチームにnodepadを渡す
69:#wait チームって。
11:#wait アップされたことを自動で[[通知]]する
74:FN otayori
68:put freashreader to PuublicServer
7:#wait team looks handwrited nodefields
10:#wait サーバにアップする　*　通知
73:generate rss
67:freshreaderのアカウントを公開する
72:#wait サチャーンはOKっぽい。
小森君
66:rssリーダーをメールにするの考える
4:Sentences
3:page
4:ampxpagesxarchive
3:pages
7:a3 + 
二つおり＋
コンパクトホッチキス
+　いけてる台紙
10:歩行中閲覧
6:小さく書く練習
3:moleskin + 細いペン
47:@Onthego buy lether thing
46:@done try
39:歩行中
52:@Onthego buy moleskin a4
38:歩行中記述
51:@Onthego buy clip
37:右端とじ
29:閉じといた部位が閲覧できない。
36:めくる
50:@Onthego buy ktagami p hands
35:中とじa3
26:@Onthego ハンズでいけてる台紙チェック
19:@done いらんの捨てる
25:@wait いけてる台紙をバッファー？
18:重さをなんとかする
32:広い
24:@Onthego picknic on picknicの
17:そろい
23:自分で革＋型紙＋横バインダー作る？
16:軽い
30:中とじだと捨てれない
15:美しい
21:基本、デジタライズする
14:美しくて軽いバインダー
20:検索性
9:印刷したものもまとめる
12:better 座位閲覧と編集
8:展開
11:綴じ
5:charene
4:automated thinking
3:more node contents
2:ad paper2nd
2:紙上にコーディングする。
3:コード印刷
8:travel_chance
19:breakdown
34:outsource201413
5:speed
31:price and cost?
4:enterables
15:fscan android
30:ui for this
3:parallel
14:shinsei apps
13:fscan ioser?
29:roles?
12:fscan
28:cf, and sales
11:hiring manager maybe
27:how to know the sales.
10:tester maybe
26:cf?
22:a
21:nts
20:japanese to make the snapshot and who can do the edit. image ...
48:二日間っていうのやってみたい。party二日。お泊り。１０人くらいで意味もなく。合宿だ。
70:ホスティングとかやってある。
45:アイドル女性kateringユニットさがす
44:ポートフォリオのストリーム と power point とか。
19:アクションペインティングパイ投げ
43:仕事の紹介
18:共催
42:日常的な利用者につなげあるためのなにか？
17:共同オーガナイザー
41:甘くないホイップ料理
16:organiazer
40:お礼メール
15:稼働率
12:パイ投げ
10:projections
56:numbers
54:introduction
29:一元化されたところへの記録
53:友達 's 友達
28:忘却
27:前のパーティーの動画とかを流すというか「すごい記録」
51:タモリ（友達を紹介してください）
26:アクションペインティングパイ投げustream
25:ちょっとsupportする
23:ポートフォリオ作成仕事助成 1万円 
x その先５回のパーティー参加義務と、 
x パーティーに友達を毎回一人連れてくる課金。
22:let people share photo more 
69:良いプログラマー
21:カメラ用意してタイムリーに
20:動画撮影
9:DJ
8:speaker
65:血がこくならないように
7:mixing people
64:良い
39:バトル
6:female in highrise
63:良い質問
38:katering
62:良いカメラマン
37:集客
61:良いデザイナー
36:商流
3:partyネタ
60:良いカメラ
35:partyの酒
2:emailは一人ずつ出す。highriseから
34:@wait highriseから全員にちゃんとメール書く
1:party
33:ネタ
32:中心の移動
31:創造
30:集中
130:@wait どうすればTKPの音を決める人が来るか。音やりたいひと。
169:メール当たりの来客伝播
168:メール当たりの時間
167:送信メール数
166:利益
164:パーティーの魅力
162:ケータリングの人
161:出演者
39:@wait どうすればバトル
160:効率
38:どうすればkatering
37:どうすれば集客
36:どうすれば商流
35:@wait どうすればpartyの酒
34:@wait highriseから全員にちゃんとメール書く
195:ルーチンの完成。
33:@wait どうすればネタ
194:岡本さんと契約とか、それぞれの利益配分の話をする。
MOSで立替無理みたいな話も。
融資完成を外出ししない？
192:友達の友達
191:introduction
190:party
129:@wait どうすればTKPの音決まるか。
65:どうすれば血がこくならないように
128:@wait もう毎回彼にプロジェクターと音設置だけやってもらおう。
内容をキメねばならない。
124:@wait お手伝いさんとして参加する人はただにしますのでtoukubo@mail.comに連絡してください。
・パイ奉行（一人）
・お会計さん（一人）
・お酒冷やしとく人
・翌日にお掃除しにきてくれる人
・ご飯をつくってくれる人（男女２名ずつくらい）

99:どうすればpknk
98:どうすれば多目的化
97:どうすれば自動
120:@wait 人とスピーカー
159:@wait 編集者
96:どうすればモチベーション
158:重なってないターゲットに一括メール
95:どうすればユーザビリティ
157:送る人の単価
94:どうすれば福利
156:ヒット率
93:どうすればcontext base
155:誰か単価1000円の人にやってもらう？一括メール系で。
一括メールを送ってくれる人を5人集める。
92:どうすれば速さ>早さ
91:どうすれば最適なUIと自動化
153:一回する
90:どうすればプログラミング5パー高速化で一ヶ月200万か1億
151:モデリング
29:どうすれば一元化されたところへの記録
150:ランタイムをモデリング
27:どうすれば前のパーティーの動画とかを流すというか「すごい記録」
189:友達の友達
188:友達の友達
25:どうすればちょっとsupportする
187:introduction
186:party
8:@wait どうすればspeaker
185:友達の友達
7:どうすればmixing people
22:どうすればlet people share photo more 
184:そういう人が要るか
6:どうすればfemale in highrise
181:人
3:@wait どうすればpartyネタ
1:どうすればparty
119:どうすればkatering誘う
117:どうすれば内容をノードから
54:どうすればintroduction
116:どうすればデザイン・規模・実績・url
53:どうすれば友達 's 友達
115:どうすればプレゼン
51:どうすればタモリ（友達を紹介してください）
113:どうすればTKPのパーティーの資料を作る
89:どうすればnea
112:どうすればパーティー素材を一回集めようメール
88:どうすればすごい質問
111:@wait どうすれば集客
87:どうすれば横断的効率化
110:どうすれば新しい人。知らない人。
149:仕組みで何があがる
86:どうすればBuffer
148:仕組み化
85:どうすれば適材適所
84:どうすればオフショア
83:どうすればautomate
145:片付けの仕組み
82:どうすれば楽できるとこ探す
144:一人あたりの利益を上げる？
81:どうすればscaleを計算する
143:またキてくれる
80:どうすればtemplate
17:どうすれば共同オーガナイザー
179:有目的的に過ごす
16:どうすればorganiazer
15:どうすれば稼働率
175:female
12:@wait どうすればパイ投げ
174:ひらのさきこさんをさそってみるなど。
173:@wait 一輝くんに受付やらないかって聞いてみる
10:@wait どうすればprojections
172:@wait あの子たちにメールしてみる
171:@wait 会計担当に美女たち
170:友達連れてきてくれたら友達連れてくるのやつ。
109:どうすればノミネートして、男女4人で料理をやってもらいｍたいというやつ。
108:どうすればg
45:@google どうすればアイドル女性kateringユニットさがす
107:どうすればcommunications
44:@wait どうすればポートフォリオのストリーム と power point とか。
106:どうすれば仕組み化
105:どうすればモデリング
42:どうすれば日常的な利用者につなげあるためのなにか？
104:どうすれば食事
41:どうすれば甘くないホイップ料理
103:どうすれば栄養
40:どうすればお礼メール
79:どうすればos
102:どうすれば網羅
78:どうすれば効率
101:どうすれば睡眠
77:@wait どうすればカクヤスにログインして人数＊1000円分くらいを買う。2ヶ月分買う。
http://www.kakuyasu.co.jp/
100:どうすればバッファ
76:どうすれば繋ぎたい内容をタグで
138:二週間前くらいいっとくと来れる人が多い。
137:@wait mixing people 担当
74:どうすれば日常的な利用にパーティーをつなげるなにか
73:@cycle どうすれば2回先まで予定しておく。
135:@wait メインビジュアルと紙の印刷。
登壇者とその解説資料
・お手伝いさん募集の話
・酒とパイの発注を依頼。
・素材くれメールを書き始めること
・つぎの予定を決める
・プロジェクターできるか聞く
・スピーカー選定する＋誰か紹介してをいう。
・人をミックスする担当（企画）をやってみてもらう人を探す。
・写真頂戴メール書く
・前回の模様などのレポートをする。
134:@wait パイ奉行
133:編む
132:集める
131:編集
1:partyの酒
6:酒を冷やすすごい方法
8:外の冷蔵庫と指示だ。
3:Buffer
2:酒は多めに買ってバッファー。
http://www.kakuyasu.co.jp/
5:mixing people
4:speaker
3:DJ
2:projections
1:partyネタ
8:美女を
7:パイ投げ
6:female in highrise
16:Patternize
20:PatternMatching
9:automate = 自動化
19:
2:[[Upload]]　[[Pattern]] [[ファイルアップロード]]
12:pattern = Pattern
8:Pattern
10:Code Of StrutsActions of J2eeProjects
7:#keyword [[autopatterning]]
6:out of patternだったもの
5:コード
4:特定のコードを${modelclass}と
${modelobj}などに置換。
この置換先は・・・
19:Entries of war of the J2eeStory
3:テンプレート
テンプレタイズ
templatize
18:warfile of J2eeProjects
21:User FileUploads warfile of J2eeProject
17:Replace name of attrs of Nouns of the J2eeProject in code of struts actions of j2eeproject with "##modelobj##"
16:name and code of StrutsActionTemplate
15:Replace name of Nouns of the J2eeProject with "##modelclass##"
15:struts context
24:ReverseTemplate
14:./data dir
8:Patternize
23:============================= 
         Bulidtime
=============================
13:place to put

7:#keyword [[autopatterning]]
22:============================= 
         Runtime
=============================
12:fileForm of struts
6:out of patternだったもの
21:ソースの検出？
11:
Upload requires what?
Attached Secound noun.


5:コード
4:特定のコード→${modelclass}と${modelobj}への置換→テンプレートへの登録→
http://localhost:8090/st/Verbs.doのどれか選んで投入

19:patterning
18:storyteller
27:歴史
6:各属性のみを保存するようなものの、boolean以上のもの。
SetAiueoKakikukekoみたいなパターン。
5:dateのフォーム。
4:クラスの複数にわたる場合のフォーム。
3:#wait #done displayタグの中身も書き出せるはず。
2:allを読んだ場合、addingcrudとかは表現できない。
21:パターンをいくつか入れる。6種類くらい。
1:bpmを決めよう
17:サビは歌。
20:ノイズも入れる。
16:サビのメロディを書く
14:ギターコード的な展開をbとサビではしよう。
太陽と組み合わせるというのもよさそう
13:C:\deqk031219 
39:これはなんだ。ヒップホップか？
君は誰だ。僕を愛しに着たのか？
絶望を移すために買った鏡が、
いまやうぬぼれを移している。ちゅう話や。どないや。
42:サビのメロディを書く
38:録音表作る
41:オケを作っておく？オケ歌分離はしないほうが作りやすいかも。
37:ドードドドードレミーミミミーファミ
ドードドドードレミーミミミーファミ
ソーソソソーソラシーシシシーラソ
ドードドドードレミーミミミーファミ

40:アカノアにいける状態にする
29:押韻
9:サンプルを完成させる
33:曲をつないでずっと話し続ける。
28:楽器も弾こう。強く握って
8:聞いてみよう
32:夜に入るあたりで死んだ獣をみた。
かなり強そうでいかにも凶暴そうな獣だった。
物語が始まりそうな感じだ
強い獣が死んで弱い僕らが生きていることは、なぞめいた警句のように感じられた。
強すぎる獣には友だちはいただろうか。
いなかったとしたら、彼は結局言葉も覚えることなく死んだのだろう。
いや強い獣なのだから言葉くらいは覚えていただろう。
しかし使う機会がなかったのだ。
殺したのは誰か。
次は僕ではないようにとただただ祈るばかりだ。
フクを着たまま死ぬことが多い僕たちと違って
獣は全裸で死ぬのだ。
27:サンプルの奏法を作ろう
31:夜のトバリが折りて
きみのトナリに場所を借りて
物語の語り手を名乗りて
つまらない思い出を心に抱いて
これは何かと同じくらいつまらないな。
何だろう。そうだ愛だ
愛と同じくらいつまらない、くだらない
僕はこの発見に興奮する。その後で
すぐにと落ち込む。愛と同じくらいのフカサまで落ち込むのだ。
26:先に大量のサンプルを作ろう
30:パターンソングの誌を書いてみよう
24:ペダルノートを入れるパターンを作る。
23:エアーバッグの
19:ゆっくりシャベルパートがある。
22:それをつなぎ合わせる。
2:サンプルでもうできてるじゃんね
18:しゃべりもいれる。
3:パターン選択
15:eclipse補正
14:コード書き出し
13:自動導出の定義を書く
9:#cycle Of記法によるNoding
8:nodeから名詞と動詞と形容詞を導出
7:is関係とof関係とof関係の数を記述
6:因果と重力での配置（ノードパッドの該当図に似せて配置）
5:因果導出Listenterと自動導出ルールと自動導出クラスの作成
17:テスト
22:SimpleCrudじゃないやつを書きだしてOutOfPatternも登録する
4:導出書く
16:デバッグ
21:Validationruleを書く
4:installpad
3:pcsetup
17:server and client
16:html/css
15:loose coupling
9:break
14:methods
8:in other context it can be done
13:classes
12:pages
6:Codes
11:mvc
5:Input
10:breaking
4:Nodepad
1:PCコンテクスト
19:roles
18:pathes
4:pdf
3:http://www.iothe.co.jp/?gclid=CL3OxPHPwo4CFRKBTAodiU3wyg
4:highrise
3:people
6:clouddb
5:db
4:hibernate
3:persistance
7:tag the todo
4:facebook
14:
3:person
8:request
11:外注？
6:php4で表示
11:aptana
5:phpで表示
8:bm君
7:php
3:pipe
186:textile depot
124:capture
185:プリント（インサツ）
123:nodepad
184:布買う
183:布*接着
182:http://www.enuno.com/shopping/outlet01.html#0057
181:http://www.rakuten.co.jp/takatomi/468479/468482/469941/
180:レコードバック
66:trial
96:idea
34:portablestorytellerbase
199:コンタクト
210:カナル
198:整髪
167:better_pknk
92:departure
195:ハンズの白い紙
164:motivation
194:神と接着
193:http://www.i-soleil.com/shoptop.html
192:布
161:facewash
191:シルクスクリーン
190:ハンズ
46:first storyteller base
45:sleep outside
118:600,000 income permonth
44:work untill sleeping
179:bag
178:AGCkit
116:20000/hour
42:pknked  * storytellertools
177:avoid getting cold
115:coding hour
176:imac24
175:mightymouse
110:contextbase with the balance
209:storytellerbase
208:ポンツタ
8:want to be hot places 
daikannyama aoyama shibuya
207:triggered by the gps,
check the places near
206:placesなど、[[構造化]]されたものに
入ってるデータは、[[自動リンク]]できたらいいのだが
27:アフォード　afford　pknk
205:Places
204:[[parklife]]
87:15 in daikannyama per month
24:storytellerbase in daikannyama
203:places
202:PknkTargetPlaces
189:イラスト
188:モールスキン
126:impl
21:pknk
187:キャス
125:reuse
42:@wait pknked  * storytellertools
240:外出
219:better_pknk                 
92:@done departure
218:less walk time
8:@wait want to be hot places 
daikannyama aoyama shibuya
217:@done courceの決定
227:あついと無理かも
216:@done 朝を効率化
237:@fired
116:20000/hour
115:coding hour
224:夏はジム
246:飯
233:pknk
178:AGCkit
177:avoid getting [[cold]] AGC
243:トレッドミル
198:整髪
118:600,000 income permonth
195:ハンズの白い紙
116:20000/hour
194:神と接着
115:coding hour
193:http://www.i-soleil.com/shoptop.html
34:portablestorytellerbase
192:布
191:シルクスクリーン
190:ハンズ
110:contextbase with the balance
89:meat
169:米の飯
87:15 in daikannyama per month
167:better_pknk
46:first storyteller base
126:impl
45:sleep outside
125:reuse
164:motivation
44:work untill sleeping
124:capture
123:nodepad
42:pknked  * storytellertools
161:facewash
179:bag
178:AGCkit
177:avoid getting cold
96:idea
176:imac24
175:mightymouse
8:want to be hot places 
daikannyama aoyama shibuya
92:departure
189:イラスト
188:モールスキン
187:キャス
186:textile depot
66:trial
185:プリント（インサツ）
27:アフォード　afford　pknk
184:布買う
183:布*接着
182:http://www.enuno.com/shopping/outlet01.html#0057
24:storytellerbase in daikannyama
181:http://www.rakuten.co.jp/takatomi/468479/468482/469941/
180:レコードバック
21:pknk
8:@wait want to be hot places 
daikannyama aoyama shibuya
219:better_pknk                 
218:less walk time
217:@done courceの決定
216:@done 朝を効率化
92:@done departure
246:飯
42:@wait pknked  * storytellertools
227:あついと無理かも
259:RUNTIME
258:pknked
257:go out and back
240:外出
224:夏はジム
116:20000/hour
254:stretch
115:coding hour
253:gym
252:pknk
177:avoid getting [[cold]] AGC
66:gym
20:pknk everyday
57:洗顔
56:髪
18:leave
53:warm
61:cycle_kit
60:性的緊張
3:pknk_early
50:morningkit
4:can't go ther e for some reason
3:pknk_early_alittle
1:pknked
4:pknk
1:pknkout
5:things you can do on pknk
2:pknk soooooo much
4:六本木から表参道へ
霞ヶ関から銀座へ
恵比寿から渋谷へ
うちから六本木へ
うちから銀座へ
3:pknkqueue
5:places
3:Place
16:places
6:[[parklife]]
13:places
9:triggered by the gps,
check the places near
2:placesなど、[[構造化]]されたものに
入ってるデータは、[[自動リンク]]できたらいいのだが
12:Places
8:storytellerbase
62:checkingtest
181:@wait Crwaler,Basic Pages,Algorythm,Admins,Feed,Performance
61:@wait tester
149:@wait 100
180:PM
60:mock
148:@wait average whats of users of a day
147:@wait num of what
146:@wait unique rate 10%
145:@wait 100
144:@wait average of following
143:@wait plest users and its following
142:@wait users in what
23:投函
141:@wait plest value
22:請求書
140:@wait rows and columns for big tables
21:見積りしたものから
20:参加を可視化するとかナノファンディングとか
106:page
105:PM/storyteller
101:@done 画面仕様
93:ValidationRuleAssign
92:CommonTranslations
91:StorytellerCodesDownload
179:ディレクション
90:annotations
178:director
59:@wait sss
58:@wait 全工程
176:assignment
57:testdata
175:Basic Screens
56:test
174:SQLs
55:テスト
173:buffer part
54:@keyword [[debug]]
172:challenging part
53:OutOfPatterning == coding
171:test cases
52:開発機への配備
139:@wait HDD =
500 (days ) * 100 whats * 100 following users * 0.1 unique rate * 100,000 users * 20 byte * ( 1 / 3 ) = 200G
51:xhtml2jsp
138:@wait memory
19:amplifier
50:test data
137:db size and cals size.
18:余剰がある人を募る
136:algorythms operations
17:startupを増やす
135:replication.
16:バーター
134:features that risks performance
15:スタートアップの資金調達
コネクティングザドッツ
クリエイティブ資源とのマッチング

14:@done 僕らが何を得るのかを解決する。
132:@wait specialist maybe?
13:startup
131:@wait assignment for hardware
12:theamplifier
130:@wait config
11:PR担当とプレゼンテーション
10:amplifier
87:@wait 
85:[[コンテクスト]]を編集
84:direction
83:@voice コンテクストを吹き込み
82:依頼
81:request
169:@pad see their website.
80:requirement
49:tes
167:@wait normal web servers. and clouds
48:update deploy
9:motivate
166:@wait cpus and hdd?
47:TestedSystem
8:一日予約
165:@Air japanese text
46:sql dupmpfile
7:@wait sc
164:make it as text
45:war
6:@wait サービスイン。配置  = deploy
163:@wait 32GB for cals
44:SyncToy
5:請求
162:@wait 30% of plest table is the biggest case.
43:server url
4:storyteller
161:@wait 30%
3:plest
160:@wait pay load of data 
41:@wait シリアルとパラレル。
シリアルにしたときのボトルネックを探す
129:estimations

128:hardware
125:開発機
124:[[バージョンコントロール]]からUPDATするスクリプト
123:@wait 機能と作業一覧
122:sample for deploy
121:requirement
120:assign person
79:sample
78:requirement and sample
77:@time @wait hire 3 more pep@ple
76:@wait varun and ehab
75:auto test codes
70:assignment
158:@done 8
39:期限ごとに
http://localhost/templates/sctemplate.xlt
からやる。
157:@done int = 1-4 byte average 2.5
156:@done mosts int
37:@wait outsource
155:@done type
154:@done size of each column
153:@done column nums
152:@wait columns 20 byte
151:@wait 1000 days
150:@wait days to store
31:封筒
119:sample
118:[[コンテクスト]]を編集
117:direction
116:@voice コンテクストを吹き込み
115:依頼
114:request
113:requirement
112:how to make crewler if one is there
111:outsource
110:screen specs to page
189:time
69:crawler
188:gotomeeting share
67:@wait modelを開く
66:@wait assignment
184:完成
64:generaltest
183:
63:mismatchtest
182:tableちょい治す
14:やってみるしかないかも。
13:他に使わないことの証明
12:フォローとか演算する？
9:DBに維持
11:どういう演算をするかによってはいらないかの判定。
8:マスター系をDBに維持する必要があるか。
10:演算速度
7:@magicdraw
6:AttrPicking
5:再現指摘
4:GoalNode
3:plest_modeling
16:どうすれば取得できる？
全てんのベニューが取得できる？FBから？常に？ほかのサービスは？
7:KPI
10:amplifier
6:ゴールの可視化
5:startuproles
4:[[fund]]ing
3:exit
2:startup
1:plesto
37:designと、SVと、お金とあったら
29:テクニカルディレクター的なことをできる人。
36:design
28:インドオフショアとにかく安いのですが
35:SVで掲載
27:チームにする
34:映像作家たち
19:message+
33:PRたち
18:notification
32:
17:通知
31:アンプ
23:ライフログが死蔵していて散財している
16:twitter,facebook,basecamp
30:nanki
15:stream
14:ウェブ
20:ExportRss + rssmailer
13:ストリーム
9:スタートアップ
12:メッセージ
8:解決しようとしている問題を３つ
11:創業者
領域横断者
カメラマン
プログラマー
CTO
ビデオシューター
ハスラー
デザイナー
インターンオーガナイザーとインターン
PR
翻訳
アイデアの人
CEO
場所
ディレクター
編集者
スターインターン
ライター
会計士
キュレーター
スーパーコネクター
コンサルティング
営業
ヴィデオシューター
美女
the speicialist in the business domain of the target.
3:pm
5:[[RuntimeNodeOfPMCCMS.nd]]
C:\Documents and Settings\toukubo\デスクトップ\cms概要仕様\s
[[pmccms.nd]]
pmccms
[[top.nd]]
cms

[[top.nd]]
pmccms
OutOfPatterning
[[コピー (13) ～ top.nd]]
#wait pmc cmsテスト
[[コピー (13) ～ top.nd]]
--------------------
pmccms
--------------------
[[コピー (14) ～ top.nd]]
#eclipse pmccms
OutOfPatterning
[[コピー (15) ～ top.nd]]
#eclipse pmccms
OutOfPatterning
[[レビュー.nd]]
pmc会議 1
pmcsmコーディング 4
sh  4
cms 2
９日にのみ。.7
彼女

4:RuntimeNodeOfpmccms
3:pmccms
5:現在チェックが終わった内容を先に上げさせて頂きます。（●はメニューを表します）
●CSVインポート
1）エクセルファイルなど間違えたファイルをインポートしようとするとHTTPエラーになるので
「このファイルはインポート形式には適しておりません」などのエラーメッセージを出して欲しい。
2）またcsvファイルでも日付の形式がおかしいと何もメッセージが出ずに終わる。
3）機種名がヌル（入っていない）ものは読み込まない

●日程管理
1）出力ボタンで機種名（エクセル内：製品型番）が入らない
2）実行の変更をしても履歴が残らない
3）実行？ディレクトリ一覧は右側にもう一つ表示列追加

●部品番号採番
1）下の最終がSMDのほうが表示されない
例えば、SMD07-602Bという番号を登録しても最終が変わっていない

●SM計画書
1)19インチディスプレイで見ると編集ボタンが半分になっている
2）編集参照マニュアルの追加を押すと出る種類（漢字）を関係種別に表示して欲しい
3）PSN公開を押すと日程管理にSM計画書の列を追加し、ボタンを押した日付が入る

●SM計画書一覧
1）SM計画書のタイトルが完成→未完成になっているのSM計画書に変更

●各モデル登録
1)機種名検索した結果表示されたモデルのマスタ納期はMP+実働8日を入れて欲しい
2)機種名検索した結果表示された時Submitボタンが出現するが、そのボタンを押すと白くなる

以上宜しくお願い致します。



4:仕様で未実装機能をとりだして、
手順ベースにする
2:ユーザーを外部からえ採れるようにする。
ディレクトリ構造を先方からのものにあわせる。
権限を確実に管理できるようにする。

4:storyteller
3:pmcschedule
14:#wait perlのアップ
29:どうすればパールが実行できるか。イマできてない
13:パールの実行
12:#wait SGMLの書き出しにて、
11:項目について日本語入れる
26:mbgの。
22:あるの？聞く
3:J2eeStory pmcsgml
21:bcに行く？
バグリストを取る
17:#wait サーバーの準備を待つ
20:作業を探る
16:#wait サーバーのip
15:#wait ftpサーバーとかscpサーバーとか
3:pmcsgml2
11:★ログイン時の表示区分

◆mbgeditor
◆hbgeditor
▲表示メニュー：SM計画書一覧、SM検索、日程管理（ログイン時表示）、部品番号採番、完成→未完成
ログイン時の名前と各モデル登録で登録された担当（名前）が一致しているもののみ表示
例えばuchinoのログインなら各モデル登録で内野に割り振られたモデルのみ表示
SM検索以外のメニュー全て内野以外のものは表示しない。

◆mbgdirector
◆hbgdirector
▲表示メニュー：SM計画書一覧、SM検索、日程管理（ログイン時表示）、部品番号採番、完成→未完成、csvインポート、各モデル登録、休日、帳票日、未承認一覧、PMC出力
PMC出力というメニュー追加：エクセルにエクスポートするためのメニュー（下のほうで詳しく説明）
ログイン時の名前と各モデル登録で登録された担当（名前）が一致しているもののみを表示（SM計画書一覧、日程管理、部品番号採番、完成→未完成）
ただしSM計画書一覧、日程管理、部品番号採番、完成→未完成の各右上に全担当表示ボタンを押すとmbgdirectorならmbgモデル全て表示する

◆pmcadmin
▲表示メニュー：全て
ログイン時はMBG,HBG問わず全てのSM計画書一覧を表示

◆psnusr
▲表示メニュー：SM計画書（ログイン時表示）、SM検索、出力
ログイン時はMBG,HBG問わず全てのSM計画書一覧を表示

◆psndirector
▲表示メニュー：SM計画書（ログイン時表示）、SM検索、出力、未承認一覧
ログイン時はMBG,HBG問わず全てのSM計画書一覧を表示


10:★承認項目
1）日程管理の実行の日付が変わったら、チーフへ承認。チーフが承認を押さない限り実行の日付は変えない。
　履歴欄に○承認で真ん中に日付入りの赤いマーク（以後承認マーク）を右上に入れる
2）SM計画書、psn公開後で変更ボタンを押し修正したら、チーフへ承認。チーフが承認を押さない限り変更しない。
　履歴欄に○承認マークを右上に入れる
3）SM計画書のpsn公開ボタンを押したらチーフへ承認。チーフが承認しない限りpsnuser,psndirectorでログインした人に見せない。
（psn公開ボタンが押される前に現状は全て見えていますが）
またSM計画書の右上に承認マークを表示
4）SM計画書でpsnusr,psndirectorでログインしたときに該非待ち1次のボタンを押したらチーフへ承認。チーフが承認を押したら
SM計画書の下に承認マークを入れる。
5)日程管理の実績のページ数（bページ）が変わったら、履歴が必要。更にチーフへ承認。チーフが承認を押さない限りページの実績が変わらない。
履歴欄に承認マーク。
実績のページが変わり、総ページ数が変わったとき、
SM計画書にspec_change.xlsの47行目から52行目の仕様を追加
SM計画書一覧にspec_change.xlsの13列目から15列目、34行目から37行目の仕様を追加

●SM計画書内の履歴　変更日も修正実行をおした日を上のほうに入れる。（1回前の修正箇所が赤くなっていない？）

●出力
参照マニュアルについて検索の検索結果が型番のフィールドに企画型番が入っているので、機種名にしてほしい+仕様別記号と製品型番も表示

●SM計画書
1）企画型版→企画型番
2）企画型番、機種名、仕様別記号の横に製品型番の表示欄追加およびPSNが修正を押すと製品型番に登録できる
3）ステータス管理はpsnusr,psndirectorでログインしたときのみ表示

●SM計画書一覧
1)現在表示されている、受付、該非待ち1次、2次、PM登録、発注、PDFチェック済み、受注、引渡しはPSNでログインしたときに表示
　PMCでログインしたときは上記の代わりに、実行納品予定日を入れる。またこの実行納品予定日でソートができる
2)編集-psn公開ボタンがHTTPエラー
3)psn公開ボタンを押すとでJ00001もしくはE000001（J,Eは各モデル登録のE/Jで判断）から連番で計画書No.として表示
4)psnの編集ボタンは下のほうへ移動
5)現在機種名が合本の数だけ表示されていますが、親のみでOK

●各モデル登録
1)各モデル登録画面で担当を割り振ります。
ですからこの画面に担当未定リスト表示ボタンを作成（出力してお渡ししてある紙4）
ボタンが押されると
マスタ納期順に企画型番、機種名、仕様別記号、備考、担当の一覧を表示し担当のところはプルダウンで、
ログインで登録されているユーザで選べる

●帳票費-支払い
1)数字を入れた後の登録が分からない
2)2社目を追加すると1社目に数字が入力できない

●PMC出力
1）PDF売り上げ追加
XXXX年XX月～XXXX年XX月（売り上げ年度、月）
部品番号、企画型番、機種名、仕様別記号、売上年度、売上月、Bページ、Bページx100
という表を表示およびエクセルへ

2)PSN校正（出力してお渡ししてある紙1）
XXXX年XX月～XXXX年XX月（ここでは1日から月末）
部品番号、企画型番、機種名、仕様別記号、担当者名、マスタ納期

3)担当別負荷状況（出力してお渡ししてある紙3）
XXXX年XX月～XXXX年XX月（ここでは20日から翌月の19日）
担当、企画型番、機種名、仕様別記号、日程管理の実行ページ、マスタ納期
hbgdirectorが操作した場合はhbgeditor、hbgdirectorの該当月を表示し、担当毎の合計ページ数を出す


9:●納期評価

何月度～何月度を入れ、実行を押すと
部品番号、企画型番、機種名、仕様別記号、マスタ納期、実績納期（上記SM計画書のPDF納品日）、納期評価（PDF納品日からマスタ納期を引いた日数）の一覧表示、及びエクセル出力

●全部エクスポート
DBテーブル内の全データをエクセルにエクスポートするメニューの追加

8:1)PDF納品日で検索、印刷物納品日で検索とありますが、エラーになります。
2)上記各々テキストボックスがありますが、帳票費のように年、月を入力しその年月に当てはまるものを表示

7:●SM計画書一覧
1）SM計画書のタイトルが完成→未完成になっているのSM計画書に変更

●各モデル登録
1)機種名検索した結果で採番されているモデルのマスタ納期はMP+実働8日を入れて欲しい
2)機種名検索した結果で採番されているモデル時Submitボタンが出現するが、そのボタンを押すと白くなる（多分このSubmitボタンは必要ない？）
3)機種名検索した結果は部品番号、仕様別記号まで表示してほしい

●完成→未完成へ
1)SM計画書上PMC終了フラグたtureになった時点で、PMCの人がログインしたら表示される
（現状はPMC終了フラグとPSN終了フラグ両方tureにならないと表示されない）
2）マニュアルを完成にするための処理を行います→マニュアルを完成から未完成に戻す処理を行います


6:●SM計画書
1)19インチディスプレイで見ると編集ボタンが半分になっている
2）編集参照マニュアルの追加を押すと出る種類（漢字）を関係種別に表示して欲しい
3）PSN公開を押すと日程管理にSM計画書の列を追加し、ボタンを押した日付が入る
4）PDF納品日（PMC側の終了フラグの上）、PDF納品日、印刷物納品日、フリーメモ（PSN側へ）の項目を記入できる欄追加
5）チーフ以上は全体表示を押すと全員のも見られる
6）総ページが奇数は+1にする
7）実行納品予定日は日程管理の基準納期の実行を入れる


5:●部品番号採番
1）下の最終がSMDのほうが表示されない
例えば、SMD07-602Bという番号を登録しても最終が変わっていない
2）このコードに割り当てを実行の欄にAさんとBさんが同時で部品番号を同じものを入れたとき
　このボタンを先に押した人が番号取得でき、後の人はエラーになるようにしてほしい
3)部品番号採番後に各モデル登録の機種名検索した結果で採番されている画面（E/J、マスタ納期、納期変更理由・・・）がこちらでも表示するようにして欲しい


4:●CSVインポート
1）エクセルファイルなど間違えたファイルをインポートしようとするとHTTPエラーになるので
「このファイルはインポート形式には適しておりません」などのエラーメッセージを出して欲しい。
2）またcsvファイルでも日付の形式がおかしいと何もメッセージが出ずに終わる。
3）機種名がヌル（入っていない）ものは読み込まない
4)アップロードした後、下に一覧が出ますが、クリアボタンをつけ必要ない一覧は消してほしい


3:現在チェックが終わった内容を先に上げさせて頂きます。（●はメニューを表します）
●CSVインポート
1）エクセルファイルなど間違えたファイルをインポートしようとするとHTTPエラーになるので
「このファイルはインポート形式には適しておりません」などのエラーメッセージを出して欲しい。
2）またcsvファイルでも日付の形式がおかしいと何もメッセージが出ずに終わる。
3）機種名がヌル（入っていない）ものは読み込まない

●日程管理
1）出力ボタンで機種名（エクセル内：製品型番）が入らない
2）実行の変更をしても履歴が残らない
3）実行？ディレクトリ一覧は右側にもう一つ表示列追加

●部品番号採番
1）下の最終がSMDのほうが表示されない
例えば、SMD07-602Bという番号を登録しても最終が変わっていない

●SM計画書
1)19インチディスプレイで見ると編集ボタンが半分になっている
2）編集参照マニュアルの追加を押すと出る種類（漢字）を関係種別に表示して欲しい
3）PSN公開を押すと日程管理にSM計画書の列を追加し、ボタンを押した日付が入る

●SM計画書一覧
1）SM計画書のタイトルが完成→未完成になっているのSM計画書に変更

●各モデル登録
1)機種名検索した結果表示されたモデルのマスタ納期はMP+実働8日を入れて欲しい
2)機種名検索した結果表示された時Submitボタンが出現するが、そのボタンを押すと白くなる

以上宜しくお願い致します。



2:担当者は部品番号採番後になっているので、インポート後もしくは新規で各モデル登録で追加時に入れる

11:better_point
4:どうすればポイント機能する？
3:point
17:生活費削減 1-2%
4:どうすればポイント機能する？
14:edy
20:カード 1%
3:point
11:better_point
3:poke
6:make it basecamp in todo
8:concentrate
97:request
96:pathes
95:roles
94:methods
79:next
93:loose coupling
78:keep tasks in evernote
92:mvc
77:context tag + pomodoro list
91:html/css
76:task dependencies link
1:pomodoro
90:server and client
75:evernote 2 nd
74:nd 2 evernote
59:node and bc
73:today's todo to pomodoro tagging UI
58:choose the terminals only
57:@done survey
56:@done sort in evernote
70:daily organise -> pomodoro choise ui should be there
54:bc2evernote
38:follow BC event,
53:messages
37:best ui for thinkgstream @air
52:execute
36:paper,
dashboard
write
51:read
50:tasks
34:best ui for thinkstream on 
19:taggable,
33:best ui for thinkgstream on ios
32:best ui for think streaming
31:connect think streaming note
16:* contextbase
30:think streaming note
13:dispushing properly
89:pages
88:classes
87:breaking
86:tag.bat
68:how <-> execution tasks?
83:timer dead if the iphone is deepsleep
67:search + body ?
66:make the links to the evernote + write,
81:better_pomodor_ chain_ ui
80:@pointed today to pomodoro routine
64:@done data structures
49:how 
63:use bc for the dates
48:break down
62:text tags parse
47:nodes
61:outsource
46:nodings
60:voice capture
45:client project
44:* pomodoros
29:thread
43:runtime
28:* follow the project
42:task systems
27:* no duplication
41:same notebook
same projectname
word ( keyword )
tag
same string,
sharing the id. ( row ) 
40:link
24:@done sortable
23:daily orgable
22:@done follow timing
6:1.mitsumi keyboard
2.nice moniter
3.nodepad data
4.window's eclipse
5.network
6.faceclean
3:storytellertools
2:portablestorytellerbase
69:designmethod
19:高橋
9:[[kamoneメソッド]]
68:design
18:でかい
88:che_portfolio
28:美しく
77:numbers on me
projects that 
17:口調
7:プレゼン
87:glue and js
76:声、話し方、デザイン、風貌、匂い、video portfolio?
普段着とか？
趣味。音楽の趣味。
芸術系の固有名詞。
6:職務経歴書
86:data
26:履歴
15:数字と記号
25:パターンマッチング
94:numbers, solutions, 
14:show it with charts
73:商流
13:Simple as google
3:don't make them think
83:numbers
23:提案アルゴリズムの提出
12:negative check
2:makes them understand and easy
22:物語のゴールまで導いた後に必ず用意してほしいのが、“導入スケジュール”です
91:glue
71:http://blog.livedoor.jp/vtrstart/archives/50540747.html
11:実績を示す。営業してくれた人にどういうメリットがあるか
1:portfolio
21:美しい
70:designer
10:何が与えられるか。とその実績。
80:index thing
20:すごいプレゼン
3:悪い点
よい点の裏返し。刺激的すぎる。秀才的集団にいると悪影響がある場合もある。基本的には協調できる。
コミュニケーションが完璧ではない。特にこもって仕事をするタイプの作業中などに外にでたときに。
声が小さい。声の質もこもっている。はきはき話さない印象がある。しかしながら営業的？企画書発表的な段階では、むしろすごみとして体感されているときの方もあるようです。
　一方で一対一のコミュニケーションのときには、会話の最初から最後まで非情に強い興味、注意を獲得することは可能なようです。　

刺激（stimulating)、一流の知識人や経営者や芸術家などとお話しても、刺激的とか、天才といった評をその場で得ることが、非情に多くあります。
　直接口にされている限りでも１００人以上、自分の知らない間に誰かにそう印象を述べていた、と耳にしたことなどを会わせると、
　おそらく一般能力の高さ（頭の回転や知識の量や発想）が他の印象（性格や外見など）に先んじて印象づけられるそうです。
　有名な人間や天才といわれる人ともたくさんあってきたけど、これほどの人とあえることは人生で一度しかない、といったようなこともいわれることがあります。
　こうした傾向は年齢に応じて増えてきました。
論理的
　非情に数学的というか論理的だと思います。論理（因果関係）の取り出し方、その構築と運用は、おそらく一流企業の外資の人物で最高峰のものです。
　メタに、そのためのツールを設計する立場にいます。
プログラミング
　アクチュアルにも、哲学的にも、日本では１００−５００人に一人程度の具体的プログラミング能力があります。一
　般的なプログラマーの３−２０倍のアウトプットがほとんどの場合で得られます。これは３年間、技術者選定と技術者に指示を出しながらも平行して同様の
　作業をしてきて得られた非情に具体的な値です。また、非情に難易度の高いシステム、非情に抽象度の高い芸術や哲学にかかわるシステムといったものに
　実装と仕様（アイデア）の両面でおそらく世界トップレベルの提供ができると思います。世界に１万人はいないでしょう。
育ち
　他社から指摘されてわかることですが、１４、５歳のときには、青山や代官山、表参道、銀座といった日本のカルチャー、美意識を牽引する地区に、「い」ました。
　大学生になったころにはそうしたものにある種の飽きを感じましたが、周囲の学生などがそれらに興味を持ち始める段階で、自身はそうした洒脱さを遠ざけていたので
　ブランド、トークのようなものには追従しませんでしたし、きませんでした。すると周囲からはそういうものを知らない人、興味がない人だと認識されたようでした。
　六本木ヒルズの建設前の地区に生まれ、最寄りの図書館がABC六本木店であり、知るひとぞ知るサブカルチャーセンターのシネヴィヴァント／ウェーブが最寄りのCD屋、映画館であるという環境におりました。
　そうしたものがかならずしもいいことであるかはわかりません。
サッカー
　天才的です。小学校のサッカークラブをやめるときには、お前はプロを目指せるよといわれました。
　アイデア型のプレーヤーでした。素人目にみても、２分みればただ者ではないといったことがわかり、１０分みれば天才的であることがわかり、
　２試合ほどみると、プロの試合をみていてもめったにみうけられないアイデアとその実現をみることができ、みるだけでなく実際に
　相手にしてみれば、スポーツで天才的であるということの差に脅威を感じるレベルです。
　中高一環の男子校にはいり、学年キャプテン、中学部部長となり、この際には１００人以上の部員を率いました。
　高校では部をやめ、全国大会レベルのクラブチームを受験し、１年で全国大会の試合に出場中に膝を故障し（小学校のときから膝には問題を持っていました）
　サッカーや強度のスポーツは禁止されています。
　サッカーをやりながらも、知的なことがらにも非情に強い興味がありました。当時は特に、文芸の執筆、哲学、心理学、文芸、制作にまつわる諸額に熱中しており
　そうした観点で、自身が天才的に体を動かせ、発想をしている、という行為を客観視して、それがどのように可能か、そしてもちろんどのようにすればよりよくなるか、
　といったことを一種脱構築していきました。
　一方で、最も重要な体験は失敗、敗北感でした。
　モダーンサッカーの中で一流で戦うプレーヤーになるのは、東大で主席になるより遥かにむずかしいです。
　知の天才性は運動の天才性と比較して小さくみられているという印象はこの頃にうまれました。
　（「語り部」として優秀な人がみな知力であるからです。）
　「地元ではみな同じ人間とは思えないとおもわれている」ような人しかいない場にいき、その中でも大人と子供くらい抜きん出ている１００万人に一人の天才のプレーを真横でみたり、
　これに準じる天才たちとの試合でコテンパンにされる感覚は、テレビやマンガで、１０００万に一人の大天才たちについて、人々が早急な評価を下すのとは違う種類の
　経験になりました。また、天才とよばれてきた人間にとって、天才性に対するプレッシャーとしての敗北は非情におおきなストレッサーで、これもまた
　希有の経験になりました。自身はこれを非情に客観的に監視したと思います。哲学者が死について語るなら、天才的な運動者は敗北を死とみなしてかたるでしょう。
家族
　父は森ビルの常務で、ヒルズ計画など主要な森ビルの計画でも当然重要なポストにいたようだと見聞きしています。
　父の交通事故は私が５歳のときにおき、これはやはり大きく自身を特徴づけているように思えます。
　一番大きいのは、やはり死について考えること、そして身体障害者として言行に難のある父と以下につきあっていくか、といったことは
　幼少期の自身に大変大きな影響を与えたようです。
　森ビルという会社自体が、六本木ヒルズ計画やその前のアークヒルズによって大きな変更を迫られていた時期で、
　なにか大きなことを成し遂げることができるかもしれない遺伝子を引き継いでいるのかもしれない。という感覚と、
　同時に、そうでありながらも、人はこのようにもろいのだ、といった、成功趣味とはほどとおい抑制感覚や、生活や、命というものを、持つようになりました。
　自身の特徴は天才性であるが、それにうぬぼれないというか、与えられていることに感謝はするが、
　それも消え去るのだし、それでも得難いものがある、という感覚に向かうようになりました。
　母には無償の愛を受けました。これが自身の生涯最高の経験です。このようなことを思い知ることのでき、幸福に思いましたのと、
　こうしたものの価値を、社会的ポートフォリオに謳うことに恥じず、自身の美点としてあげることを躊躇しません。
　これは自身の最高の武器であろうと思います。
　
文
　訓練をきちんとするべきです。文章は稚拙です。自身の文に酔う表現がおおく、詩の力を用いすぎます。ファンはいます。文章だけを読んで天才とよばれたり、
　将来は小説家になるに違いないともいわれたことがあります。小説（物語、キャラクターがい、筋があり、起承転結がある）ものを書く手腕があり、構成力もあります。
　ストーリーテリングや詩にはおそらく一般的なものの書き方とは全く違う能力が必要ですが、これもあります。
　一般的なドキュメンテーションにおいては、おそらく表現過多でしょう。一方で企画書などで、こうしたものを好む読者に対しては、
　非常に大きな到達力を与えることになるようです。
総合性
　文をかいていても、サッカーをやっていても、音楽でメロディーをかいていても、ビジネスプロジェクトをやっていても、タスクの実現者として活動していても、
　プログラミングをしていても、おそらくそこにはそれぞれの専門に内包されるものをヒントにして、相互のアウトプットを高めているという感覚はあります。
　たとえばプログラミングをするときに、詩的洗練をコーディングのエクセレスに用いたり、企画書に小説を書くときの刺激を潜ませたり、
　音楽を制作する際の複雑系的構築の諸種法を、プロジェクトやビジネスプランに用いたり（非常によくはまります）。
　おのおのの専門にて独立的に天才と呼ばれてきましたが、一方で、こういう人は、どういう成功をするんだろう。といったことを考えることがあります。
　おそらく、すべてで成功する以外にないのだと思います。どれか一つにおいて成功し、それによる投資可能なリソースの増分などが、他の専門へのいきわたり洗練へ向かい、
　それが再び別のものに回っていく。というイメージ。


4:storyteller
3:Post
17:FirstMvn
16:FirstCopyCoreJar
20:put CommonTranslation @storyteller ( http://storytellermachine.net:8080/storyteller/J2eeStorys.do
3:PostSentencesOnStoryteller
14:夜中の睡眠を240分短縮。=24%=7億円
13:一日4度やる。
12:寝なくてもいい。リラックスるする。
11:コーヒーを普段から飲まない
8:スプーン持つ
7:横にならない
6:コーヒー飲んでから
5:夜中起きる
4:寝過ぎない
19:
3:powernap
16:better_powernap
15:午後2時に
7:facebook
6:person
5:

4:人
3:PR
9:@wait tag the todo
8:request
4:preinterview
3:storytellinginterview
7:@wait 
1:preparation
6:time to preperation itself gets bigger?
5:risks?
8:like blue sign thing. or bags. etc?
7:take some examples
31:人
30:作業者決定
27:講習会場所
26:講習会日程
32:PrePyramid
11:講習会
4:mock
3:presentate
4:プレゼン
3:presentation
1:prinpad
5:evernote and cliping userinterfae
4:nttls and prinpad
5:backup
4:
1:prinpadxmarubeni
9:bugs
8:remote
11:installation to 3 all
7:network
10:ipad
4:印刷
3:print
4:43
3:prioritize
7:まずlse（衛生要因）
次にroi.xlsに基づく＋時間割
LSEと、ROI上位10。
ビッグスケールと短期計画は7:3で。
5:scheduling
4:nodepad
3:priority
9:project update
12:tool
11:roi
10:less time to put the roi sheet
6:[[prioritize]]
1:problem
6:問題発見
5:障害
4:問題
7:やってみる
5:pick
4:make the messages list as candidates,
and pick
1:how to make greatest profile suitable for ignition point
9:find the best way to set the profile
8:
7:messages
10:me
6:candidates
4:programmerinterview
3:


	  自分をいくらで評価しますか？pmとして、外部にたったときに、お客さんに見積もらないといけないですが、そのとき、いくらくらいだと思いますか？ how much do you evaluate you are worhty? if you are Project manager?


	  注目している技術 do you have any technologies you are watching? interested in?


	  なんでそれ注目したか. why you have interested in it?


	  ツール。any super-nice tools?


	  rssしってるか。do you know rss?


	  rssツールどれ？which reader are you using.


	  ハードとかでなにかしら考えがあるか？こうすると人の生産性はもっとあがるとか？what about hardware? and interfaces?


	  リナックスの経験は？好きなディストリビューションとかあるか？experienced in linux/*x operation? do you have favorite distribution in linux? freebsd?


	  レイルズしっている？do you know ruby on rails?


	  モデルドリブンは？model-driven?


	  ドメイン駆動は？domain driven?


	  コード吐き出しは？code generatin?


	  データベーススキーマ設計したことある？have you ever designed the database scheme? how many times 


	  何テーブルくらい？how many tables?


	  コード見せて do you have any the codeset you wrote which we can see? be careful about information management.


	  ブログある？running a blog? 


	  ウェブある？do you have a web? or url to express you?  could you give us some?


	  SBMある？are you using social bookmarks_? could you give us the url?


	  好きな言語は・なんで？ what's your favorite language(computer lang) and ,why?



	  UMLは？how about UML.


	  メタ言語はつかったことある？ hove you ever used any meta languages ?
	  
	  
	  
21:     プロジェクトのwarのアップと自動更新 
15:     phpmyadminセットアップ（xampp) 
14:ダンプしたsqlのインポート 
13:プロジェクトごとのdbとユーザを 
11:     tomcat 
45:read andromda and install and 
follow startup process of andromda site.
and create sample blog application with andromda
44:mail address
43:storytellermachine.net
42:dev server?
38:開発機情報共有
41:storytellermachine.netで開発
37:change password(of unix user)
36:ask for account name
35:ssh access test
34:create ssh account on dev
33:バグトラッキング・開発フレームワークの説明
28:talk to toukubo using skype.
8:introruction of basecamp
http://storytellers.projectpath.com/
27:     eclipse上でutf-8に変える 
7:     go to meetingをつかってみもらう 
31:ローカルでの起動を確認
30:cvsからプロジェクトコード取得
25:     FireFox,skype,joe,textpad,clipdiary,flashpaste,,winshot,quickwindow,ahk, 
24:     サービスとデータソースのwindowメニューとショートカットキーの割り当て 
23:     odbc登録http://dev.mysql.com/get/Downloads/MyODBC3/mysql-connector-odbc-3.51.12-win32.msi/from/pick 
3:skype install
19:     マイクとヘッドフォンとスカイプテスト 
22:     dbのアップロード（ダンプ作成とダンプインポート） 
4:project.xls
3:project
7:ゴールの設定
1:project_capture
10:email post in
9:service
8:desktop clipar
7:click.to
6:bookmarklet
5:capture
4:capture
14:inbox
13:ifttt
5:purpose,context,client,budget and size,language,
4:basecamp textdoc
3:project_description
13:job posting
12:scope
11:gather specs and requiremnt
10:hiring
7:references
6:screenspecs
3:短時間で結果を出しうるプロジェクトノードを自動提案
6:費用削減がマーケティングと接続するときにバク亜発的な複利性が生まれうる
6:auto sending message to jabber lient
5:twit
4:afford
3:prompt
7:account
1:PR担当
3:amplifierナンパ力
2:資料とプレゼン
1:psd
4:specs
3:design
2:designer
1:psd2wp
6:card
4:psd
3:mail 
2:inquiry to psd2wp https://www.psd2html.com/order-now.html
26:@secretary
15:AAC
19:purchace
23:Buffer
22:ヤフオク？
4:purchace
3:purchase
3:pure_courseware
6:media format
5:contents format
13:
4:ads
12:tv 
11:
10:micro moviews
1:purplecow
9:reaching and growth
8:advertisement revenueshare and advocacy
7:expansions formats
5:tagging
4:staffs or region
3:purchase_social
9:better_purchase_social
11:tagging
8:purchase
10:better_highrise
7:outline
6:person tagged
4:期間
3:枚数
13:見積
12:納品確認
8:仕様作成
11:請求
7:その時点でのpyramidseoの仕様
10:支払
34:HighKeiTargetKeywordsetを計算
107:キーワードセット
33:SEPR
106:============================= 
         Bulidtime
=============================
32:高いKEIのもの
105:stscにpyramidテクスト
31:ターゲトキーワードセット指定
30:RSSInput From http://localhost:8080/en/NodeRssExport.do
to RSSInput AvailableText
75:MT
73:読み込み元を書き出す
71:自分自動リンクブログツール。
1.アカウントを登録する
2.キーワードを登録する
3.rssのurlを登録するか、ヒンツで日記を書くすると、キーワードがリンクになります。
　リンクのとび先は、最初はキーワードページで、「飛び先指定」か、「説明」を書くことができます。
4.orml（購読しているrssのリスト）を読みこませることで、ブログリーダーとしてつかえます。
ブログリーダーでは、登録したキーワードがやっぱり自動リンクとして表示されます。
あなたのブログ、人のブログ、キーワードページのいずれにも自動リンクがされますが、
このページの横には、現在のページに登場しているあなたの設定したキーワードについての、
グーグル、ヤフーでの検索結果が表示されます。
また、あなたのブログの中でもっとも使われているキーワードのうち、
グーグルで一般的に検索されている回数が一定以下だが、それについて書いているブログの重要度（グーグルのページランク）
が高いようなキーワードについては、グーグルアラートを、ウェブ、ブログについて、表示してくれます。
ダッシュボードページではこれらの情報のrssでの配信状況をプログラムすることができます。
配信して欲しいものを選択することができ、それらをrssとしてまとめるrssにできます。
全部を一つのrssとして配信することもできますし、一つのrssとして登録することもできます。
ご自分でブログを書いておけば、この自分のキーワードの自動リンク付のrssを配信することもできるのです。
フィルターみたいなものだと思ってください。

117:計算
19:パブリカブルコンテンツから出現頻度最適スニペットを自動作成
114:stscにリンク申請
17:ror自動作成
112:pyramid
16:sitemap自動作成
111:============================= 
         Runtime
=============================
15:アドセンス付加
14:charene
13:自動リンク
58:英和＋英語情報
12:マルチドメイン
57:因果律
11:inbond link
56:3000円
10:リンク
55:100クリック
54:1日10000PVでアドセンスでで1パーセント
29:RSSExport Node
96:ターゲットキーワードセットとキーワードとで、利用が一つの場合がある。これは？
おとなしく、ターゲットキーワードセットをスペースで分割して使う？
51:飛び先自動検出。キーワードを含むターゲットキーワードセットでコンテンツが空じゃないやつ。
28:コンテンツを自動取得＋パブリカブルをSelection and do
95:RuntimeNodeOfPyramidSeo
9:出現頻度最適なhtml量産
50:飛び先指定
27:マルチドメインにアドセンス付加
8:量産
7:出現頻度最適
120:著名固有名詞の場合は、自身をターゲットキーワードにするのではなく、
自身を取りまいたり、実装している普通名詞（より大きなパワーワード）で検索すること。
ほとんどの場合、自身は、自身を呼ぶ語では検索語において１位になることができる。

23:dbにもって流れ作業に
4:ナイスコンテンツ
22:効率化
3:クロール
21:リンク申請
2:1日2000アクセス　+　アドセンスで1パーセント
61:自動リンクツールを外に公開した方が早い
37:etimated searchtime by googleapi
36:searchtimes
35:Kei of keywordset
108:ターゲットキーワード
2:pyramidseoのコンテンツ量、質上昇の因果が期待される。
期待されるということは効果測定で因果抽出するべき。
4:
3:@wait urlトリガーが実行される
4:師にふさわしいか。
どうすれば
3:あなた今の会社で一生働きますか？ 
あなたは資産が10億円あっても、今の仕事を続けますか？ 
10年後も今の会社に在籍していますか？ 
5年後あなたは、やりたい仕事ができているでしょうか？ 
あなたは死んだら、どんな人だったと思われたいですか？ 
今あなたが職を失い、あなたが今その資産を失っても、もう一度チャレンジする勇気と気力がありますか？ 
セミリタイアがしたいというけれども、リタイアした生活を10年続けられますか？ 
20年後も、その問題はまだ問題ですか？ 
もし余命が一年と宣告されたら、あなたは今の仕事を続けますか？ 

2:[[データ構造]]の一つ。
先に入ったものが先からでる。列。
お店とかの待ち行列をイメージするといい。
メッセージングに近い。例：メール。
メールサーバの処理順序を参照するといいかも。

5:queue
5:queue
8:list造る
2:[[データ構造]]の一つ。
先に入ったものが先からでる。列。
お店とかの待ち行列をイメージするといい。
メッセージングに近い。例：メール。
メールサーバの処理順序を参照するといいかも。

6:hibernate pojo generation
5:uml2 
4:osx access
3:quicker_storyteller
6:@wait 印刷
14:@home 封筒に入れて送る
4:print
13:@Home 捺印
12:@home 会員証とセキュリティカード、ストラップ
3:@Air pdf埋める #Air !1 =2min
11:@pknk print
10:@wait http://www.printing.ne.jp/
9:@wait pdf
8:@wait プリンター
7:@wait netprint
4:costs
3:webapp
2:railsapp
25:better
24:read later
23:#550000 Evernote clearly
22:continuous reading
19:searchlater
8:clipper
7:instapaper to todos
16:read
6:#550000 instapaper
15:pad
5:offline cashe + sync
14:capture
4:readability text
13:* RUNTIME
37:COMPARISON
3:special enhancement
36:auto close for clipping 
35:remove from task
34:direct to workflow
33:workflow
32:non-web-contents
29:using special app
30:#550000 Readability
28:feel enhanced 
7:@done printing the paper
10:@done case for the cycles
6:@done parent and left and right children
4:@done position rows
3:positions
2:data entried
1:realize
39:@done xls 
37:@done meet the deads ,by monday morning.
29:@wait the case of id duplication(a person introduced moret than twice ) 
41:@done modification
34:@wait is it ok there is users without introduction info in the access.
26:@done buildingkana
40:@done backup
19:@done inactivatedの日付が正しく入らない？
25:@done ifとか調べて
18:cycleもaccess to myするquery
24:@done 既婚
17:@wait 紹介者のアクセスの情報からシステムのmyにinseert selectするquery
31:positions of users
23:@done address kana
16:@done 作った前のquery生かす
30:@wait ask katayama san
22:@done update文追記
15:@done users
21:@done pref
14:@done 最新DB入れる
20:@done 入ってるものは手で入れる？
13:@done insert introductions
9:@done user name and position ids
12:@done 直紹介者IDをリストに
8:@done assigning position ids to the paper
1:reboot
3:
2:torigai
2:レシピ
1:recipi
7:#Voice 
3:record
1:relative_priority
4:remember
3:chunking
4:remember
3:chunking
7:思い出す
5:タイミング
4:reminder
3:remind
4:http://toukubo.backpackit.com/reminders
3:reminder
10:reminder inbox
44:keep it on a good interface
79:howt to assign easily project.
43:point
78:sort
42:order by roi
41:registering project
76:environment day tasks are maybe routine..
40:cycle marking
75:project
74:routines
73:methods
72:organize
71:ideas
29:there is subroutines ( that is triggered at the same time 0) 
70:capturing ideas
28:there is types ( routine,project,custom
27:in what UI do i post?
26:triggering things in right timing
25:routine
24:@mece there is also tumblr and evernotes
how can i read it again.
59:set date 
58:@mece lift has this features
22:routinize
57:make, organize, sort , choose 7
21:put it on project if it is not
56:use lift?
20:習慣化
55:exec in the right timing
54:how to follow the rules of 7 days reading 
53:connect to project ( nodepad ) 
88:set date on wp
52:RUNTIME:leaning
87:eatag
51:delete
86:tag
50:read learnings
85:capture to evernote
82:1. read throug
2. mark
3. pick undone only
3. sort
4. choose 100
4. capture
81:how 
38:noding
37:capturing cycles
69:cycles inbox
33:some are actionable 
and some are event drigen
67:nodepad 2 list
30:RUNTIME
65:projects
63:routinize
62:BUILDTIME
60:reading ideas
16:ideas, project,word,hint,backnumbers
15:routinize
14:customize
49:execute
90:
13:follow roi
3:reminder
48:1. daily
2. weekly
3. on demand ( event base )
47:different triggering timings
30:RUNTIME
69:cycles inbox
67:nodepad 2 list
65:projects
16:ideas, project,word,hint,backnumbers
63:routinize
15:routinize
62:BUILDTIME
14:customize
13:follow roi
60:reading ideas
10:reminder inbox
49:execute
48:1. daily
2. weekly
3. on demand ( event base )
47:different triggering timings
94:can mark it once
93:do not want to do registration and management daily 
44:keep it on a good interface
43:point
90:
42:order by roi
41:registering project
40:cycle marking
79:howt to assign easily project.
78:sort
29:there is subroutines ( that is triggered at the same time 0) 
76:environment day tasks are maybe routine..
28:there is types ( routine,project,custom
75:project
27:in what UI do i post?
74:routines
26:triggering things in right timing
73:methods
25:routine
72:organize
24:@mece there is also tumblr and evernotes
how can i read it again.
71:ideas
70:capturing ideas
22:routinize
21:put it on project if it is not
20:習慣化
59:set date 
58:@mece lift has this features
57:make, organize, sort , choose 7
56:use lift?
55:exec in the right timing
54:how to follow the rules of 7 days reading 
53:connect to project ( nodepad ) 
52:RUNTIME:leaning
51:delete
50:read learnings
88:set date on wp
87:eatag
38:noding
86:tag
37:capturing cycles
85:capture to evernote
82:1. read throug
2. mark
3. pick undone only
3. sort
4. choose 100
4. capture
33:some are actionable 
and some are event drigen
3:reminder
81:how 
2:pick up from Bookmark
what about napeidai one or sakuragaoka one
4:依頼
3:request
3:RequestTest
6:センテンスを登録し、
http://storytellermachine.net:8080/storyteller/UpdateTestFrom.do?id=${j2eeStory.id}　自動書き出し
4:request
3:requirement
33:横断的効率化
32:秘書化
49:やや広告
31:Buffer
48:インパクト付ける。
30:適材適所
46:さくらでも来てもらう
45:一通ずつメール＋テンプレート
44:[[目的検索]]
43:内容をタギング
42:highrise
41:彼らの目的を満たす
40:彼らの目的はターゲットとなるような人の集客
51:・@toukubo（東窪です。）
・慶応大学SFC03年卒業
・UNUの写真（国際連合大学）
・mediastudioのweb（メディアコンサルタント）
・ロゴ（株式会社Storytellers代表として、業務アプリケーション開発を、）
・nodepadのにょきにょき動く部位をとった動画
　（人工知能を内蔵したjava、mda駆動の独自フレームワークを運用しシステム開発の業務を行ったり）
・（名言系投入）電子出版、哲学、カルチャー、
　メタプログラミングテクノロジー、音楽制作技法、
　社会批評、美術評論、webの未来等について書き散らかしている
　tumblrアカウントでアルファブロガー・アワードにノミネートされたり、
　データを作ったりしていたら
・　（STUDIO VOICE誌という４０年の日本最高の伝説的カルチャー雑誌の、
　　電子、紙版の次世代計画のプロデユーサーの大役を仰せつかっております。）
・（本日のセミナーの前半は、電子出版元年の世界戦線の最前線から、エンジニアにして
　総合プロデューサーである人間が電子出版をプロデュースをしたらどのようなものになるのか、）
・（その場合の具体的な技術課題のレイヤーで中から、スマートフォンと電子出版の関係を、
　語っていきたいと思います）
・（後半は、iPhoneやスマートフォン、iPadというポストPCハードウェアと、そのアプリケーション開発行為が）
・（システム開発、言い換えれば自動化（automation）の中で、どのような経済性を持つか、
・（キャリアとしてどのような意義があるのかということを、お話します。
　電子出版等とそのかかわりがどのような影響を与えていくのかということについてもお話します）
9:口調
50:3%広告。
20%僕らがやっていることの内実の提供による広告
8:発火
18:実績を示す。営業してくれた人にどういうメリットがあるか
7:show it with charts
17:何が与えられるか。とその実績。
6:Simple as google
16:高橋
5:物語のゴールまで導いた後に必ず用意してほしいのが、“導入スケジュール”です
15:でかい
4:イメージをきちんと用意する
14:[[kamoneメソッド]]
3:リンクはフルーツ
13:数字と記号
2:プレゼン
12:相手に直接的な利益、売上などをもたらす
楽しい。モチベートできる。
創造的。
1:resocia
29:オフショア
11:美しい
28:automate
10:@done 資料
24:内容をノードから
23:デザイン・規模・実績・url
39:5回くらい受け持てるように。
22:http://jp.techcrunch.com/archives/20101102365-days-10-million-3-rounds-2-companies-all-with-5-magic-slides/

人（多分whyの前のヒントになる。svの編集長とかとギークとかとディレクターとか
紙の編集者のて誰とか外国人とか英語にひらけてるとか、少数精鋭とかでちょっと一味ちがう
チームだなたしかに。でもビッグネームと付いてる）
ー＞why(哲学的な意義だとかグダグダいう。これ自体でロマンチックに惹きつけれないと
　　多分だめ。分かってもらえなくても、印象づけれたほうがいい。
　　製品デモ（what）で理解が起こればいい。
ー＞how（こういう方法論があります。SEOとかって具体的にはこうやるんだよ。
　ほかでやった例でこういう風に出口とかでるし、wikiとかこういう自動リンクが、
　hatenaも。所得税のへぼサイトもデザインを皆殺しにするくらいの結果をたたき出してるね。
　アイフォンはこうやってつくれちゃうし、人工知能みたいなのまでつくってるよ。
　こういう方法が結集して。。。lang-8とかconyacとかとぶつけるとかさ。）
ー＞what 1 マネーシート。クソ儲かるよ。wikipediaのPV知ってるかよ。
ー＞what 2 （ブランクスライド）＝製品のデモ
  （紙版サンプル、ウェブのメディアサイト、タンブラー、
　　　アーカイブサイト、PDFとSVの過去の雑誌４００冊見せる。
　　　自動リンクしてるサンプル、とか）
ー＞見込客とか受託案件の客とかで十分いけそうな風でしょ。

38:たくさんやったほうが効率いい
21:骨子資料金曜まで
20:negative check
36:50 sheets of papers
35:楽できるとこ探す
7:#keyword [[tags]]
4:resources
=tags
4:restrantplaces.xls
3:restrantplaces
1:return
5:薄利
4:マネタイズ
3:monetize
10:マネタイズ
7:project description and presentation
6:return
3:outsource as entry point
2:投資
1:revenue
17:特技
16:交換の割合？
15:バーター
14:売上利益
13:薄利
12:キャピタルゲイン
9:monetize
11:販売
8:budget as they need to get paid.
5:project

3:#keyword [[reverse]]
14:eclipserootOfLocalStaticData
13:Upload Jsps OfAJ2eeStory
12:Project
11:Jsp
10:Action
6:RuntimeNoding of reversetemplate
4:reviewer
3:review
4:reviewer
3:review
7:log
4:rice
3:米の飯
5:riskはなにかと質問にする。
4:分解
8:ググる。
3:risk
22:@Air 仕様相談が必要。
21:@wait プレーヤーが決まっている
20:VIDEOストリーミングのPHPコードができている。
9:イプシロン接続する
18:ECCUBEのルックアンドフィールが完成している
8:イプシロンの審査が通ってる
17:ホスティングが決まっている
7:課金が可能になっている
5:aptana
14:SCPアカウントがある
4:php programmer
13:SCPが可能になっている。
3:eccube
12:videoがサーバーに上がっている。
36:rkenglish.comにてECCUBEが動いている。
2:is eccube app
11:videoが配信可能になっている
35:インフラエンジニア
1:rkenglish
10:イプシロンの試験可能状態にする
33:@wait 作ってみる
31:@wait eccubeのインスタンス
29:サンプルで入れてみる
30:@Air これみせる
http://www.nero-8.com/blog/archives/2007/12/200712130000.php
28:video埋め込みがあるECCUBE上のエントリーが大量にある。入れてもらう。
94:投資飽和しているものはdoneに。
（衛生要因）
21:roi.xlsのアップデート
85:ランキング１０位以下のものについてはROIを小さくする。
84:roi.buildtime
101:http://localhost/lifehack/roi.xls
91:ビルドかランタイムか
ビルド
イニシャルコスト
98:スケール単位を考える→スケール数を考える→利益単価を考える→イニシャルコストを考える
3:roi
78:複数を因果するようなものは半固有名詞にnaming。
95:着金ノードの結果に高い値を与える
131:@wait FirstCopyCoreJar
91:@Air Runtimeのそれらのデータエントリーする。
90:@done 生活衛生要因とかが低い感じだけど平気？
217:@wait PCくるの待ち
25:因果所要時間に比例して一定係数でROIを引く

216:@home Preperation @Home
24:@done 投資の種類を書く
21:@wait 未来の最大純利益額あるいはROIのノードが現状の自分の時間単価に。
49:@done キャッシュアウトがある場合はACにかかり
時間の場合はSCにかかるのに対応する。
212:@wait CommonTranslations
20:@wait 自分の効率が親なノード(個人スケールなもの）はチームスケール、
巨大スケールな、テラーのビルドタイムを衛生要因的因果する。のを適切に表現したい。
48:@cycle 投資飽和しているものはdoneに。
（衛生要因）
47:@wait 毎回のアップデートで変わるこのスケールの値に従う
6:@done prioritizeの自動化
109:@wait roi
5:put roi to the top of roi.xls and put the values
108:@Noding 2台構成にする
171:@wait offshore
107:server
170:@wait generaltest
197:@wait Nouns
3:



roi.buildtime
106:storyteller
105:roiシステム
67:比率の対象となるようなものを選ぶ
195:@wait Attrs
104:秘書の人たちに入力を任せたい
101:better_sleeping、gasbooknet→着金,CRM,tellerdevと
marketing、
睡眠とかpknkの改善
ACの三つは？
衛生要因というくらいなんだから、AC必須。
ACにかかわるのだから着金が必須。
marketingは、tellerのビルドタイムの9000をやるから、ACとかができてる限りにおいて、priorityは10位くらいと非常に高い。
129:@wait PostSentencesOnStoryteller
63:比率？週間系、たとえば先端KEIとか女子系とか。
191:@wait ValidationRuleAssign
128:@wait StorytellerCodesDownload
190:@wait Sentences
127:@wait mock
126:@wait テスト
125:@keyword [[debug]]
87:@done 着金のROIは？
124:@wait OutOfPatterning == coding
123:@wait 開発機への配備
122:@wait xhtml2jsp
121:配備
120:@wait sql dupmpfile
19:@cycle 全部について週１で更新する
147:@wait screenspecs
18:@wait 動的にする
146:@wait annotations
81:@done 着金と節制は福利に（巨大ROIなノード、テラーとか）に
かかるので、僕の1時間が27万になる。
17:@done autonoding をやる＋それぞれのバリューをデータエントリー
145:@wait page
144:@wait story
15:@done 衛生要因ノードはROIが高いが衛生要因的上限がある。
投資が一定以上できない。
（投資量に対してのROIがゼロになる地点がある。
この投資飽和をdoneとして表現する）
169:@wait mismatchtest
11:@done コスト情報の共有
167:@wait tester
10:@wait ここに書いてあるようなものも行に組み込むべき。
roiという行をいれとけばいい。
38:投資の量が必要であるため、純利益の学が多いが、
機会損失大か、投資不可能ノードがのpriorityがいつまでたってもあがらない。
スケジューリングは？
37:@done リソースタイプごとにコストを入れる＋機会損失の係数を設定する＋機会損失コストを出して、ROI計算に含む。
順位の高い方から残して、他は削ろう。
36:@done よりROIが高いノードがあり、かつ福利的である場合に、節制が大きくなる。
節制はリソースの種類を選ばない。
かつ、AACはAACで高いROIのランタイムノード。ASCも高いROIのランタイムノード。
ARC（avoid resource conjection)も。
164:@wait test
35:@done 時間の場合、コストの単価は現在単価。
32:手動でやる仕組みは作っておく
31:better_prioritize
59:@done 時間がない場合も、着金になる仕事の時間を阻害することになりうる。
119:@wait TestedSystem
118:@wait war
117:@wait SyncToy
52:@done 一回時間入れる
79:@cycle ランキングが一定以下のものについてはやらない、ではだめ？いい。
116:@wait 配備
78:@done 一般機械損失
115:@wait server url
114:@wait ター
76:@done 着金というノードをつくってAACをカバーするものとして高い値を設定する。
これを因果するものは同じく高い値をもつようにする
113:@wait 一日予約
112:SC
74:@wait 上から順に実行していって、
合計するとACになってしまうというケースがある。
それはキャッシュをつかっていってその時点で
ACにすればいい
111:@wait サービスイン。配置  = deploy
73:@done 着金を因果するノードがAACを因果するので上にくるのは当然。
それでもって、来ないやつがしたで、かつしたなやつに、
「一般機械損失コスト」を持たす
110:請求
71:@done 機械損失コストはどういれる？
98:CRM関係とかプロジェクト群も入れる
133:@wait FirstModeling
132:@wait FirstMvn
95:@wait superasbnはDC一回を因果するが、
DCがACを因果するため、
ACをカバーしてないならROIはちょい低い。
これを数字で出したい。
例えば着金とか次第じゃないか？
それはほかのACリスクを持つものと同様の扱い。
ほかのより下がってくる。
217:一般式因果関係伝達率で処理する
181:ゆとり
258:@done 競争？
216:リスクヘッジ
256:キャッシュ
295:@done 他のプロジェクト全体に対する複利になる。
213:複利を式に。
254:流動性
253:xxxxxxxxxxxxxxx
      一般則たち
xxxxxxxxxxxxxxx
329:@wait 抽象リソースボトルネック
293:roi表から改善する
252:xxxxxxxxxxxxxxxxxxxxxxxxxxxx
  一般則を計算式にするためのビルド
xxxxxxxxxxxxxxxxxxxxxxxxxxxx
328:@done 一般則はすべて列にする
369:todoist.prioritizeで自動的にそのプロジェクトのtodoのpriorityを高める
327:@wait newjitのように、
それ自体が転換率の仕組みを上げる方法は伝達率だけでは済まない。どうする？
loaningとかも。
368:current projects
250:@wait project自動作成
326:@done 一般則の末端の継承者は継承率に応じて
roiが稼げる。
これらは列になっているので、
継承率を入れるようにする。
367:ROI順に並べつつ投資可能なものからCURRENTにする
366:@done reminderにしてルーチンにする。
363:@done 換金ボトルネックを解消する
プロジェクトのROIはその解消の伝達率や、
ボトルネックレベル（他資源と比較してのボトルネックとか）
で見えてくるが？
321:@done 転換不可能性==ボトルネック
360:@done が、では100000000/1000で、roiが1000000くらいだったら？
複利後のプロジェクト群との比較になる。
179:自動化
178:********* autopilot ******************
式の結果出てきたものに従って投資飽和するまで
リソース最適化を行なって投資する。
136:パラレラブル、buildcost＝ボトルネックである。
短期解決性
172:スケール部位
249:@done すべてが複利なのか
289:@wait 場＋雑務
207:ルール（因果関係）を書き出す
171:指数部位
248:バッファ
206:******** roi観点から、
自動的によりよいプロジェクトを生成する
170:1.複数を因果するようなnodeを作る
2.小さなnodeを作る。
3. ボトルネックによるショートをなくす。（計算式で）
205:指数、スケール、親からの伝達率
204:一般的に
245:情報
244:@wait パラレルとシリアル
243:損害も指数関数化する場合ある？
317:outsource
399:blueflag
240:メタなビルド
280:@wait 資源転換
356:@done ROI順に並べつつ投資可能なものからCURRENTにする
397:　@.priorityconfirmed @Blueflag @NODEPAD @roi 集中するってことはいまのカレントから一つだけ選ぶと
もっとよくなる？simulation and trial.
314:@done キャッシュ・フロー、
時間フロー、
をしながらレバレッジもして、
僕以外で事が終わる回路を自動的に算出する
312:他のすべてへの投資機会損失を回避する
353:@done すべての世代について、資源ボトルネックと抽象ボトルネック＞リスクバッファ量となるようにする。
リターンによる資源ボトルネック解決をシュミレーションする
394:projectのpriorityに応じてタスクのpriorityを自動的につける
352:@wait 資源ボトルネック総量＞プロジェクトセットの資源ボトルネック総量
393:projectシートのpriorityに応じてTodoist.project.priortyつける
392:タスクから自動的に作る
350:@secretary @done ボトルネックがある状態、ない状態でそれぞれ書く
391:@done ２列作ってみる
390:最初の自己資本
169:projectと併せてnodepadも更新する
168:@wait @secretary projectを完全継承している場合は
archived(inherited)して
小さい方にそのスケールの適切な部位を引き継がせる。
そのプロジェクトのスケールを試算して、
スケール伝達率を入れ、子projectとして登録する
167:@wait scaleについてnodepadの因果関係との一致するようにチェック
166:埋める
124:@done priorityの変更に応じてなにを変える？タスクを変える。。。。
164:ボトルネックの解消
122:@done 全体のnode結合→因果関係伝播に依るscale更新→priorityの自動再設定→？をする
163:project.xlsリストを更新
162:Runtime
161:nodefield=projectでもある？
238:@wait 複利
278:@done roiへの準拠はどうするか。
160:node,item,project,tagとも全部nodeだが。。。
project:
 1.投資が終わって初めて伝達する
 2.複数のprojectなどを因果している 
projectではない。
277:利益率
234:@done 速度→指数増なので、シュミレーションで、
指数と投資転換率と飽和ポイントと
233:機会資源
273:@wait どうすれば、換金ボトルネックとキャッシュボトルネック（cf)は一緒？
232:@wait 評価資源
349:@done リソース種ごとのリソース量
231:@wait 信用資源
271:@wait 私有
389:自己資本
307:信用
270:@done 私有が複利を可能にする。
347:@wait ボトルネックリソースの状況（ステータス）の世代変更（プロジェクト完了）で、
388:売掛
306:投資
346:@done キャシュコスト時間コストのそれぞれを出しておく。
387:@done 指数部分を上昇させる値と式
305:loaning
345:@done buildcost以外に「レバレッジ」が必要で、
buildcost=レバレッジ後の投資ボトルネックを通過する投資量になる。
386:@done プライオリティの自動算出。
304:@done レバレッジ
385:@done シュミレーションを自動でする
あるいは素晴らしいUI
303:換金ボトルネック解消
343:@done 資本転換が自由に効く場合を想定してみる
342:@done projectに対するインプット情報を明示する。
383:@done キャッシュの複利（元金が残る）
と投資（元金が消える）の差があるが
どう式にできる？積み上がった資源が
再度資源に戻る？そうではない。
が他のプロジェクトに対して複利
するという意味ではそう。
341:@done どうすれば、セット状態によってroiが世代によって変化するが、
それを踏まえた、最適なroiが算出できるか。
世代、によるシュミレーション、で最適なものにするには？
ざんじ式とか？
世代って情報持てばいいのかな。
382:@wait 資源間の関係を式にする
381:@done リソース種ごとの数値を維持する。世代（フロー）で。
これに対しての適切なプロジェクトはcf的な形しかない。
159:projectに登録
117:@done (期間/(投資完了＋回収速度))＝指数なのでこれを式に組み込む
157:出来たら自動的に
198:nodepad式
156:結節点ノード
155:思いつく
154:外部からくる
112:レバレッジ
153:nodepadでいろいろやる
111:cfsafe
152:@done そうしたものをすべてprojectにするようにする
229:それに基づいて実行するのみ
151:@done  率で考える。率で考えてみてた。ROIは。
228:@done 投資飽和量と、投資飽和速度がある。
192:客は誰か
227:@done 投資飽和？
191:@wait 費用削減がマーケティングと接続するときに爆発的な複利性が生まれうる
226:出来たらそれらを同じnodeと以って、project、とか言いたい？
すべてのタスクがroiを持ち、つまり全てはprojectではあるが、
集約的で特異的で上記の性質を持つものは大きなroiを持つので、
大体足切りをしているということになる。
267:@done たとえば「ゆとり」とかを
プロジェクト＝行として持つのか列として持つのか。
一見どっちも可能に見える。
225:contextbasexprojectbase
266:でかいスケールのプロジェクト
224:自動的に最適なprojectを生成する
264:ネットワーク効果
263:投資の可視化と直列化
339:roi
221:伝達率を書く
262:資源転換最適化
338:@done 列は数式
337:@done 列は数式
260:@wait アイデア
376:@done ボトルネック削減
375:@done 他のもの
333:レバレッジ可能
374:@secretary @done 列→計算式なので列
373:better_project_check
331:@done 転換不可能性＝＝ボトルネックであることを
どのように式に反映できるか。
408:next
330:@done 単一リソース種のボトルネック
407:top
371:@wait project setを作り複利化する
370:@wait 知識とか知恵とか
404:auto_project
403:project in todoist and project in clouddb should sync
402:better_user interface to put the roi sheet ( project's roi value )
401:毎日一個朝選ぶようにするべきだが。。。
workflowが一回死んでるのヤバイので一回だけ治す。
147:@wait 適用スケール
188:節制
106:小 buildcost 
146:@wait パターンマッチして呼び出すなど呼び出し方法と
187:@done 世代とシュミレーション
105:投資集中
145:@wait roiに関与しない、プロジェクトを良くする横断的nodeをうまく作り引っ掛ける
186:@done 動的な側面。
つまり在るものが完了し、
資源セットが変わったら、
数式に基づいて、10位だったものが
1位になって赤くなることがある。
この動的計算は？
104:投資のリターン所要時間を小さく
143:@wait 一般的にroiを上げる方法とかを組み合わせるのをmanagementとかroiで
やるかというよりは、それは別途ノートパッドでやるべきこと。
一方で投資量の小さいroiパック（project）ほど複利の頻度が上がるとか、
そういうリソースとroiの向上はすべてのプロジェクトに在るべきで、
これはroiに関与する話である。
184:すべてを式に
182:ゆとり（バッファ）の所有を制限に入れる
259:@done 私有する回路
6:時間*時間単価
5:インカム
4:コスト
3:ROI計測
2:費用対効果が１より大きい作業
はやればやるほど良い。
ROI over One Return Of Investment over One
ROI value はノード値でもある？
快感密度とノード値の合計。
17:small lights 
16:balcony
25:meeting to him.
15:lightings
9:glass tables
14:mirrors
23:better interface?
13:kamiyacho's public pace
22:bigger table
12:kamiyacho's my place
6:tomiko gets space
5:tomiko gets bigger moniter and mails
10:make you feel in bigger  place
4:PC at dinning 
+ me purchases the glass table for kamiyacho?
19:
18:many chairs and rocking chairs
17:Display HasaccessableurlSentences
16:snapshots
15:作業の経験
9:スナップショットつける
14:stsc
8:winshotで
13:automate manualization
7:routinize
22:automate
12:jing
21:todolist
11:outsource
10:manualize
4:マニュアル
3:routine
18:manual
8:winshotで
34:using lift
7:routinize
18:manual
17:Display HasaccessableurlSentences
16:snapshots
4:マニュアル
15:作業の経験
30:point
3:routine
14:stsc
13:automate manualization
12:jing
11:outsource
10:manualize
26:point
22:automate
21:todolist
9:スナップショットつける
35:pick
8:automate
7:routines =ルーチン
4:automate
15:idea level reminders
2:todolist
1:routinize
12:add iphone form
9:routine list
11:easiest regist
8:pick 10 and regist on lift
10:regist easy
7:#keyword [[自動リンク]]
10:kami
5:RSSExport verb
4:rss
2:ピラミッド
11:gmail to rss
34:彼らにどうすえればメリットがあるか。
33:自分たちで、メールを登録して
32:こいつに教えてもいいかな、というリストをつくる？
31:タグを作ってもらう。
30:使用中のsnbを投げてもらう。
49:snbアカウント作る。
ブックマークレットを入れる
送るようタグを作る
タグのurlをシステムに登録する。
送り先のメールを登録する。
送る
47:キーボードで
46:見ないで
45:Lessに。
44:速く、
43:アイデアマンや情報強者の仕事は
「オープンでない」「特定の」「人たちに」「最適で」「最高の」「urlを」「メールで送る」

19:post the bookmarklet with tag "test" again
41:複数のmlに教えられる
18:run bookmarklet
40:twitter的に
17:goto http://www.yahoo.com by browser
16:Display Assignments of A BookmarkRssSource
15:Display Assignments of A Mail
14:Post Assignment
13:DisplayBookmarkRssSource
57:Show BookmarkRssSource
11:Post BookmarkRssSource
10:Display Mails
54:かねまつさん
うちぬま君
フミヤくん
こがくん
たーくん
ガスさん
イイノサン
ナツメさん
ニワくん
ユータくん
スゲくん

53:情報強者を探す
52:携帯で
29:どうすればつかってもらえるか。
51:ウェブで
28:有益になりそうな人にシェアして使ってもらう。

9:Post Mail
50:snb既利用者[[探す]]
27:マーケティング、使ってもらう
8:goto http://d.hatenna.ne.jp/test/rss
or corresponding url of similar snb service.
and check if the url bookmarked in perviouse step is appearing propery
7:at the page opend,
tag part,"test" and post this Bookmark to hatena click save.
69:check(commit)
6:click the bookmalklet
24:users gets mail from the system
5:open http://www.google.com with browser
23: System NotifyByMailTo Mail Of Mail Of Assignments Of NonNotifiedBookmarkRssEntry
4:user install bookmarklet
22:Update BookmarkRssEntry
66:create the snapshots + htmls for all the steps.
then again gothrough, go to node in buttom.
それらについてurlとして開いていく。
デスクリプションを入れる。
3:user create hatena bookmark account
21:System CronTrggers UpdateBookmarkRssEntry
65:manual
20:copy the bookmark rss source url 
62:tests
39:教え易い（メーラーあげてURLおくらないでいい）
37:教える作業がすごく簡略化できる
36:タグ付けでもう教えてる。
35:教え会うことができる。
4:retrive text from rss
3:rsstonode
2078:railsインストール
2077:gemインストール
2079:ルビーインストール
1:run_mvn_for_clouddb_project
4:download clouddb from github
44:fscan
49:better_next
46:nts
45:apc et
4:ゴールノード
3:runtime
4:左側にRuntimeNode、右側にBuildtimeNode
8:nodepad
7:RuntimeNode
2:動作している状態での因果関係を記述する思慮言う
26:new
16:システムは部品選択の金額を自動計算する
25:予算の輻輳保障をする
15:設計から、部品選択をして見積もり詳細を作成する。
9:人材の管理
24:ユーザがマスター工程をSimpleCRudする
14:設計をする
8:実行予算を自動導出
13:受注する
7:見積もり
21:ユーザがマスター工程にタスクを追加する
5:予算管理
20:システムがタスクから月額出来高を作る
10:現場ごとの必要な人間の総数が出る。
プロとアルバイトごとの。
アルバイトについては、カレンダーに必要な人数枠を用意する。
ビューがカレンダー。
予算から実行予算を作る。
下請け業者の選定
衛星設備、空調、などの作業に対して、
金額、請負金額、によって下請け業者を決定。
ユーザは下請け管理業者をCRUDする。
安全管理書類を管理業者にAddCrudする。
安全管理書類。
と請負体制表とが自動的に算出される。
安全管理書類はユーザがsimplecrudで作成
実際工事したとして、月間工程管理の中に日報管理がある。
ユーザが週ごとに、在庫情報をsimplecrud。
在庫情報を見て、ユーザは
運送会社に資材運送の発注をする。
材料受領側のユーザが運送終了を作成
材料はユーザが作成。
見積もりは材料の選択で作成する。
材料には個数がある。
部品選択を作成することで見積もりを作成する。
メーター数に対して、継ぎ手
選択可能な部品から、選択不可能部品の選択を作成する。
部品ごとのレートが決まっている。
管材の太さと長さと管材の支持部品間隔を作る。
管財の長さと管財の支持部品間隔と部品の人工レートと、金物の、その管財の継ぎ手と金物と支持部品と人工が個数が決まる。
ユーザは部品のアルバイト比率SimpleCrudで入れる。
ユーザは見積表示部品見積選択のみのエクセル出力、印刷、display表示をする。
ユーザはカテゴリをあらかじめ作る。
ユーザは工事ごとにカテゴリを選択して作る。
ユーザは工事の見積もりを複数作る。
ユーザは工事をSimpleCrudする。
ユーザは工事の見積もりに見積もりを作成する。


4:new
2:期間
18:ユーザがアクチュアルマスター工程表を作る。
月額出来高を作る
会社必要経費予算を作る
現場で発生する増，減額見積もりは現場ごとで作成する。
また情報があれば本部でも作成できる。
作成して、予算額が確定すると自動的に予算を組み込む。
項目は別項目とする。
実行予算の合計残額、各工種の残額が見えるようする
材料の残数が表示されるようにする
工事を受注して予算を組み込むと必要な材料の総数が
表示され、毎月の発注数から引いていく。
発注－入荷確認情報は各現場で手入力する
搬入機器、各検査（消防、建築、施主、住宅性能、
設計、建築）などの工程を工程管理表に表示する。
各工程の一定期間前（たとえば1週間前）に
現場PCにお知らせ表示が出る。（機器発注は製作日数
を逆算する）
受注して予算が確定すると、自動的に各書類（安全
書類、着工前検討会書類、水道申請、下水申請、
消防申請）等の作成フォームが出てくる。
この情報は請負範囲でチェックが入った項目に則る
材料の発注、書類の作成が出来ていない場合は
本部にも警報等表示する。
毎日の現場日報を入力できるフォームを作る。
この日報は、各個人の日報に反映する。
給与計算とリンクする。

79:System SendMailTo Mail of Customers of MessagePack
77:System Readds RSSEntrys OF RSS URL
31:#done User DisplayAll DocumentTasks
76:User CRUD RSS Entry
74:#done InvoicedNonPayedInvoicableChoises
73:#done User Set PayedInvoicableChoises NonPayed
49:#done User Set DocumentTasks arrived
71:#done User Set PayedInvoicableChoises NonPayed
48:#done UseSelectsAndSet DocumentTasks done
70:#done User R PayedInvoicableChoises
47:#done 
User SelectAndSets InvoicableChoises payed

46:User Read Tasks + Documents of Requested Tasks + OnetimeTasks + Messages and Services of a Customer
45:#done UseSelectsAndSet Tasks done
42:System SendMailTo Mail of Customers of DocumentTasks of A DocumentRequest
41:#done User SelectAandCreate DocumentTasks DocumentRequest
18:#done User Read TasksOfACustomer
40:#done System Sets InvoicableChoise Invoicable
Checking if Done of all the Tasks of InvoicableChoises are true
17:#done User SelectAAndThenSelectBAndDoSomething MessageTemplate Customers Message
15:#done User AddingCrud DocumentTaskTemplate EstimationChoise
14:#done User CRUD ArcsServices
13:#done User AddingCRUD TaskTemplate 
12:System Creates InvoicableChoises And Tasks DocumentTasks of the InvoicableChoises Of A Month
From EstimationChioses Of NonAssignedCurrentEstimations
11:#done User DisplayAll Tasks
29:#wait System Sets Current of Estimation
ListeningTo EstimationChoise
51:System SendMailTo Mail of Customers of DocumentTasks of A DocumentArrivedReport
28:#wait System Sets Current of Estimation
From Estiomatins
Cyclly
9:#done User U DoneOfTask
50:#done User SelectAndCreate ArrivedAndNonReportedDocumentTasks  DocumentArrivedReport
27:#done User CRUD ActionPreviledge
26:#done User CRUD Priviledge
25:#done User CRUD SturtsAction
69:#done User SelectAndSets InvoicableChoises invoiced
6:#done User AddingCRUD OneTimeTask Customer
24:#done User CRUD IntraUser
68:#done User R NonArrivedDocumentTasks
5:#wait User U EstimationChoises OF a Estimation
67:#done User R NonRequestedDocumentTasks
4:#done User AddingCRUD Estimation Customer
22:#done User BeaconDetail Customer
66:#wait User Reads NextTask
3:#wait System creates EstimationChoises 
ListeningToFrom Estimation
65:#done User DisplayAll NonDoneTasks
2:#done User CRUD Customer
64:現状の顧客のデータを一回いれて、
それを全部請求済みにする必要がある。
タスクも全部済みにする必要がある。
その後で、請求済みじゃないやつについては
全部請求済みじゃないものとしてセットする必要がある。

62:User Stats
39:#done User get XLS of InvoicableNonInvoicedInvoicableChoises
61:#done User Read TasksAndDocumenTemplateOfTaskTemplatesOfInvoicableChoisesOfEstimationChoiseOfArcsService
+α
38:#done User R InvoicableNonInvoicedInvoicableChoises
37:#done System DisplayAll OneTimeTasks
36:#done User CRUD MessageTemplate
35:#done System Sets Assigned of TheEstimation 
From CurrentEstimationChoises
By checking InvoicableChoises of the CurrentEstimations exists
7:User Moves the Y position of A Node
6:User Creates CRUD SID Of Node
5:User Connect Nodes
4:User Creates CRUD SID Of Node
3:User Create Frequency Of Node
2:System Update SNV of a node from SID and SHD and F of the node
4:System CR Texts of KamiTexts
3:System Watches kamiTexts on the KamiFolder
2:UserCreates KamiTextFiles at kami On ServerFolder
12:System Changes all the time to abosolutetime
9:User Sets MuseigenMailMode
8:User Museigens.
10:System Sends Mail of MuseigenMail to KeitaiAddress Of User
7:System create HtmlStr of texts from str of texts
6:System Creates autoLinkedText of the str of text
32:@wait System UniqCreates effective and cause of CausalRelationcontent of Node
31:@done Update content of Node
19:@done HttpPosts content of Node
18:post selfhappiness and selfinvestment and selfinvestmentdepth of a Node
28:User HttpPosts y of node
15:ノード所要時間と日付と。
27:System Update averagenodevalue of NodeField
from nodevalues of Nodes of NodeField
14:因果計測
26:SetyOfNode
12:User Moves the Y position of A Node
7:@done CRUDs Node
11:CausualRelation of Nodes by automation
37:post
23:User GrepNode content
10:Update selfnodevalue of a node from selfinvestment and  and F of the Node
22:@done Displays Node
34:System Update nodevalue of Nodes of the NodeField
3:1.ノードは
SHD（SelfHappyDepth）と
SID(Self Investment Depth)と
F（Frequency)と、
SH（SelfHappiness)と
SI(Self Investment)
SNV(Self Node Value)
NV(Node Value)
を持つ。
2.SH=F*SHD
3.SI=SIF*SID
5.SNV=SH/SI
7.NV＝SNV + SNV of directly connecteds.
  なににも繋がっていない場合のノードはSNV=NVとなる。
8.ActionNodeは、F=1のノード。
9.FはCycleとなる。
10.MetaNodeはF>2のノード。MetaNodeのSHDとSIDはこのノードのActionなノードのそれと等しい。
12.ノードのyの値はnvによって決まる。
13.ノードのyの値をマウスでノードパッド上で変更すると、これはnvの値に跳ね返るが、SHDとSIDの値は、比率固定？
33:@wait User HttpPosts effective and cause of CausalRelation
31:user read shops list
30:user creates cu girls
29:user updates scores
5:reserver ddd in advance
28:system updates goukei
27:from top of gggg order by goukei
32:user googles shops list
7:User CRUD CashEvents
6:Visit
5:User create TaggingOfEvents
4:User create TaggingOfPlaces
3:User create TaggingOfNode of Pub
2:PublicateTagpage
4:RuntimeNodeOfFujiEstimate
3:RuntimeNodeOfestimate2
8:User Grep Estiomations On estimatecode Of IntraUser
7:User Grep Estiomations On name of customer
6:SetEstiomationsConfirmation4
5:SetEstiomations confirmation3
16:@done Display IntraUser
4:SetEstimations rejected
15:@done Post IntraUser
3:User CU Estimation
14:@done Login
2:User Displayes Estimations
5:icalを登録すると
4:ShowIntraUser WIthDisplayingTasks
3:UpdateTasksFromIcalFIle
3:Login IntraUser
5:GoalNode
4:RuntimeNodeOfgasscheduler
3:gasscheduler
9:Loing IntraUser
8:Transit
7:Display Jobs
10:Post InutraUser
6:CostSumOfJob
37:User CRUDs Site
14:PublicUser Views Shirts
13:PublicUsers View Shirt
34:Choise of Recomendation
9:User does ActualShipping
12:Public Users CRU Choises of order
33:Notification of Shippings t mailofgas of staticdata
8:User SetOrderShipped
11:User XlsExports ChoisesOfOrdersOfToday
32:User CRU PaymentMethod AddingTo Order
7:Notification of Shippings t mail of user of the order
10:IntraUser Printes SendingsheetToSagawa
30:ActualTransfar  of ActualShirts
29:PublicUser CU tags
27:IntraUser CU Artist
26:IntraUser AddingCRUDs Product
25:IntraUsers Uploads PrintingFile of the Products
46:SimpleFileUpload CreaterXlsFile
45:Update Artist
23:Payment to gas from payment componey
44:Login IntraUser
41:シャツの販売にたいしてお金払ってもらう　payment from users
40:お金をもうける
6:#wait webdev
5:storytellerdev
4:Transrater Team translate css to englishcss
3:Transrater Team translate sss to englishsss
14:Tyohyoindex
11:UpdateNonMasterProductFromMasterProductOfAYear
8:update salesprice of products of a month
10:UpdateNonMasterProductFromMasterProductOfAMonth
7:Display MasterProductsOfAMonth
4:Display MasterProducts
19:List SummeryOfManualsOfAMonthAboutSales
3:#done CsvImport Product
18:List SummeryOfProductslOfAMonthAboutSaless
17:PostManualAboutSales
20:Display ComparisonsOfAMonth
15:XlsExportOfMasterProducts
20:更新履歴HTMLを吐き出す
9:User Displays Manuals
8:System RssImport Manual
19:jspのキャッシュをするのがいや
7:User CRUDs User
18:サイズがでっかすぎかも
6:User CRUD StrutsAction
17:acceptance vdpにて差し戻しとかに応じていろいろ
5:User Crud Priviledge
16:メールの文言は？
アラートはRSSとかではだめ？
メールはメールサーバとかの管理的にちょっと面倒くさいかも。
トップページとかにアラートというのは簡単。
15:差分作成
3:#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#

14:../../../../css/base.css
2:new
13:ファイルアップロード
12:日本語ファイル名はどうするか。
11:C:\Documents and Settings\toukubo\デスクトップ\cms概要仕様\sinsei.htm
梅原　實  有賀　敏幸  岩崎　好夫 
複数の1次承認者？グループ？

10:System Creates Job From Manual
25:storyteller
24:RuntimeNodeOfPMCSM
23:User Delete AManual
22:User Displays ManualsOfAPriviege
159:#wait could not initialize proxy - no Session

158:System Creates Modification and CrudRecord
156:adminじゃない人は権限変更できないようにするべきでは。
106:#wait outsourcingと参照マニュアルの概念の了承を貰う
152:#wait 納期評価はどの日付について検索するか。
現在は実績の納品日にかけている。
売上月にかけることもできる。

42:#wait C:\Documents and Settings\toukubo\デスクトップ\sm_200701\SM_plan_2\Web41.html
終了フラグ（PMC）が0のものは、計画書の画面にリンクをはる

59:禁止操作をどこかに表記して欲しい。例えば、DBに登録のsubmitボタンを押した後、ブラウザの
　　戻るボタンは使用しないなど。
151:HBGもしくはMBGのデータ全てをcsvでエクスポート

168:smplanning.jspの全部の項目に修正のあれを入れてイク。
167:進捗詳細にて1970/01/01がはいってしまう。
1970/01/01なら出さないようにする
164:マスタ納期

162:aprのid
9:#done User CRUD Holliday
160:#wait とりあえずこの状態で試す。
(refresh）いれてみたので後でまた。
19:#done User CRUDCSV ProductActualCsv
8:#done User CRUDs StaticData
111:#wait 0じゃなければ出さない？
検索結果は、そのユーザが担当したものだけ？
18:#done User Updates WorkProgresses and ActualProgresses
7:User Creates Product
110:チーフレベルの表示、変更可能にします。担当別にはせずMBG(HBG)全てを表示

17:System Creates Modification and CrudRecord
5:User CRUDs User
15:#done User CRUDs Componey
4:User CRUD StrutsAction
171:User Creates Product
14:User CRUDs Manual
3:User CRUDs ActionPriviledge
170:System Creates AlertsOfAManual
13:User CRUDs ReferencedManual
2:User Crud Priviledge
29:User ExportXLS of Manuals
11:#done User CRUDs Outsourcing
10:#done User Read index
27:Uniqforupdate(SmPlan)
73:#done User Reads ProgressesByManuals
26:#done GrepManualsOnTypenameOfProduct
72:#done System Creates Progresses if not existing
135:#wait User XlsExports OutsoucingsByComponey 
25:#done GrepManualsOnCode
23:#done User Saiban
22:#done User CRUDs PaymentUnit
37:#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#

20:#wait User Imports
36:#wait PSN権限の際のManualsページ
145:#wait 聞く
6:#done @struts config
5:#done @J2eeStory
3:#wait CreateVlidationRulesAssignmentofAttrsOf
7:#wait @CreateValidationRuleChoiseFromAttrsOfAJ2eeStory
5:google how to usde s3
4:hdd hosting
3:s3
7:sales
10:顧客は何を買うのか。
6:品質管理？
5:二階の営業
4:製薬メーカーの問題
3:マルチチャネル
29:・報酬、クーポン、交換、ギフト、ポイント交換などのシステム
（systems for awarding, redeeming, trading, gifting, and otherwise exchanging points）

28:ゲーミフィケーション
35:分散
27:制作会社
34:・ユーザー間の課題（challenges between users）

26:ジェネリックが増えていく
19:はったり（間違いない。絶対だとかいう）
33:・アクティビティの間にミニゲームを挟む（embedding small casual games within other activities.）

25:インド中国のマーケットがでかい
18:ネガティブチェックする
32:・現時点の競争相手の名前とスコアをリアルタイムに掲示するリーダーボード（leader boards）

24:破壊的に？
17:外見
31:・グラフィカルなインターフェイスでタスクの進行具合を伝えるプログレスバー（progress bar）

23:製薬業界の先読み
16:声質とトーンと音量と誌
30:・バーチャルグッズの購入等に使う仮想通貨（virtual currency）

22:
15:モック型営業
21:目の前のしごと
14:新規開拓
20:物語にして売る
13:show with design and wellmanaged design
9:preinterview
12:プレゼン
8:嘘ついてでも売る
11:会計系
199:右揃え*左揃え
159:negative check
179:赤と緑
68:bettter Preperation
198:すごくいい写真
158:実績を示す。営業してくれた人にどういうメリットがあるか
208:タカヤのステンシルへの横線
178:stsc
67:matchingサイト登録
現状の人たちにもモックできる先探す
197:作業に見合った写真
157:何が与えられるか。とその実績。
207:タカヤ
177:
196:big,
tooooooo bigg
6:show with design and wellmanaged design
156:[[kamoneメソッド]]
206:bubble.ai
176:チューブで
195:[[font]]
205:designer
175:光。間接照明。あてて撮影してデザインにするのもあり
194:extremize the elemete
204:iaのwordpress theme
http://themes.wordpress.net/testrun/
174:写真でとって、それを絵の具で
193:本語より外国語のがうつくしい問題とフォントの問題
3:sales
203:
173:http://b.hatena.ne.jp/toukubo/design/
192:ステンシル、
152:marketing_storyteller
202:
172:シンプリファイ
191:cmyk pure colors
201:
171:design
190:イロヌキ
200:何パターンか作って捨てる
170:美しく
220:分割払いにさせる→借金の仕組みで課金しやすい。
99:新規開拓
169:物語のゴールまで導いた後に必ず用意してほしいのが、“導入スケジュール”です
189:margine
168:すごいプレゼン
108:顧客は何を買うのか。
188:えげつないものそのまま
77:preinterview
97:外見
167:美しい
217:分割払いにさせる→借金の仕組みで課金しやすい。
187:死をあげつなく。
76:会計系
96:ネガティブチェックする
166:高橋
186:trak2005
165:でかい
185:サンプルとセットで提示、かつ因果自動提案
164:口調
214:マーケティング
184:時間を圧縮
73:プレゼン
93:はったり（間違いない。絶対だとかいう）
163:発火
103:会議に発火
183:ピンク、黄色のcmyk原色
92:物語にして売る
162:数字と記号
102:声質とトーンと音量と誌
182:画面にとって写真に撮る
71:モック型営業
91:嘘ついてでも売る
161:show it with charts
211:上げてしまう
181:絵の具
160:Simple as google
180:signtoon
21:声質とトーンと音量と誌
10:データとマトリクスくんで、カバーしてないのは、とかやる。人、動画閲覧、ソーシャル、対話、メディア、断片、知る、Web的、テレビアルゴリズム。スマフォ、マルチチャネル。アーカイブ。バイナリ、テクスト。
20:外見
19:モック型営業
7:接触機会
18:新規開拓
17:show with design and wellmanaged design
16:プレゼン
4:ftv_office
15:会計系
3:sales_ftv
14:顧客は何を買うのか。
24:物語にして売る
13:preinterview
23:はったり（間違いない。絶対だとかいう）
12:嘘ついてでも売る
22:ネガティブチェックする
11:sales
5:花屋のとなりの犬を避けながら花屋にいく
9:花屋のとなりの犬を避ける
4:花屋にいく
3:花屋で花買う
2:母親に誕生日に花を渡す
26:悪玉菌のみ繁殖を抑える
25:リセットするとダメだってさ。
24:避ける
23:チーズ、アルコール、ドライフルーツ、発酵食品、きのこ類、酸味の強いフルーツ
22:鶏肉（特にささみ）にしたほうがいい
21:おりごのおかげ
20:砂糖のない乳酸菌
19:ラブレ
9:
18:植物性乳酸菌
8:腸内環境
17:腸
7:黒糖
16:錠剤
6:オリゴ糖
15:チーズ
5:繁殖抑える
14:ヨーグルト
4:砂糖を避ける
13:肌
3:【家の中のカビを退治すること】
12:食物繊維
11:乳酸菌
10:運動
5:j2eeStorysを更新する
15:outsource
4:sc
3:sc金額を得る
12:期限ごとに
http://localhost/templates/sctemplate.xlt
からやる。
8:シリアルとパラレル。
シリアルにしたときのボトルネックを探す
11:
3:sc金額を得る
15:outsource
20:managementsheet
12:期限ごとに
http://localhost/templates/sctemplate.xlt
からやる。
11:
8:シリアルとパラレル。
シリアルにしたときのボトルネックを探す
19:projecthours
24:CF(AC）を確実にする
18:長期計画から決める
23:長期な投資とランタイムとを分ける
5:j2eeStorysを更新する
22:ROIが極めて高いものから。
4:sc
21:20%の設備投資
10:キム
6:ほかの作業する人で合計で５０ほしい
5:mahesh混みで今７０くらい
4:170+185をなんとかする。売上で二人で１２０万はいくはず。kkimura半人月でOK。
3:sc
12:メタ系
11:igに秘書。
29:半固有名詞
32:（特許電子図書館　初心者向け簡易検索（商標））
いって検索
28:ミックス
31:まだできあがってない名詞。
だけでいずれできあがる名詞
27:一石二鳥
30:naming
26:高roiの検索
25:[[目的検索]]
24:目的
22:150万月なら自分でやるべき。
21:バランスだ。
18:sales
20:やること自体がsalesになるな
15:roi
14:AC
46:短納期
9:scand
45:2500円で50時間ずつ3ヶ月。
株ちょっとあげる。
8:
今後追加もあるなら人はいれたほうがいいのではないか
44:4sm
43:200万トル
42:新案件から。
41:teller開発に一月入れるのはどうか？
40:案件は自分で.better_tellerの後にやる。
ほかの件は古。沼でいい。
36:イニシャルコストとかあるよね。
35:
どの量からなら人を入れた方がいいか。
33:pyramid
3:scale
4:SCAMPER Questions（出典：『creativity UNBOUND』　※翻訳は筆者ら） 	チェック
Substitute（代える、代用する） 	S1）代用可能な部分はどれか 	
S2）何を代わりに使うことができるか 	
S3）ほかに誰を含めることができるか 	
S4）ほかにどんなグループを含めることができるか 	
S5）代わりにどんなプロセスを使うことができるか 	
S6）代わりにどんなマテリアル（モノ）を使うことができるか 	
Combine（組み合わせる） 	C1）何を組み合わせることができるか 	
C2）ブレンドする（混ぜ合わせる）ことはできるか 	
C3）どんな種類のアンサンブル（取り合わせ）を使うことできるか、創ることができるか 	
C4）部分同士を、どのように組み合わせることができるか 	
C5）目的同士を、どのように組み合わせることができるか 	
C6）アプリケーション（応用方法）同士を、どのように組み合せることができるか 	
C7）マテリアル（モノ）同士を、どのように組み合せることができるか 	
Adapt（適応させる） 	A1）これは、ほかのどのような考えを思い付かせるか 	
A2）何かほかに、これに似たものはないか 	
A3）過去に似た状況はないか 	
Modify（修正する） 	M1）さらにTwist（ひねり、コトの意外な曲折）を加えることができないか 	
M2）その意味あいを、どのくらい変えることができるか 	
M3）色や外形を、どのくらい変えることができるか 	
M4）サウンド（音、騒音、音声）を、どのくらい変えることができるか 	
M5）何を加えることができるか 	
M6）高さ・高度をどれくらい増やせるか 	
M7）重さをどれくらい増やせるか 	
M8）強度をどれくらい増やせるか 	
M9）頻度をどれくらい増やせるか 	
M10）価値をどれくらい増やせるか 	
M11）何を減らすことができるか 	
M12）何を縮小することができか 	
M13）何を簡素化することができるか 	
M14）控えめに言うことができるのは、どんな部分か 	
M15）サイズをどれくらい小さくできるか 	
M16）重さをどれくらい軽くできるか 	
Put to other uses（ほかの使いみち） 	P1）そのままで、何かほかへ使えないか 	
P2）もし一部を変えたら、新たに生まれるほかの用途は何か 	
P3）ほかにどんなマーケットが受け入れるか 	
Eliminate（省略する、除去する） 	E1）何を、取り除くことができるか、省略することができるか 	
E2）ある部分がない時、どうやって実行するか 	
E3）何を犠牲にできるか 	
E4）あげてしまえるものは、何か 	
Rearrange（再調整する） 	R1）ほかに、どんなパターンが使えるか。 	
R2）ほかに、どんな配置が使えるか 	
R3）ほかに、どんなレイアウトが使えるか 	
R4）何を交換できるか 	
R5）何を置換できるか。言い換えられるか。 	
R6）何を、再結合できるか 	
R7）逆にしたらどうなるか 	
R8）上下逆さまにしたらどうなるか 	
R9）内外を裏返したらどうなるか
3:scamper
4:SCAMPER Questions（出典：『creativity UNBOUND』　※翻訳は筆者ら） 	チェック
Substitute（代える、代用する） 	S1）代用可能な部分はどれか 	
S2）何を代わりに使うことができるか 	
S3）ほかに誰を含めることができるか 	
S4）ほかにどんなグループを含めることができるか 	
S5）代わりにどんなプロセスを使うことができるか 	
S6）代わりにどんなマテリアル（モノ）を使うことができるか 	
Combine（組み合わせる） 	C1）何を組み合わせることができるか 	
C2）ブレンドする（混ぜ合わせる）ことはできるか 	
C3）どんな種類のアンサンブル（取り合わせ）を使うことできるか、創ることができるか 	
C4）部分同士を、どのように組み合わせることができるか 	
C5）目的同士を、どのように組み合わせることができるか 	
C6）アプリケーション（応用方法）同士を、どのように組み合せることができるか 	
C7）マテリアル（モノ）同士を、どのように組み合せることができるか 	
Adapt（適応させる） 	A1）これは、ほかのどのような考えを思い付かせるか 	
A2）何かほかに、これに似たものはないか 	
A3）過去に似た状況はないか 	
Modify（修正する） 	M1）さらにTwist（ひねり、コトの意外な曲折）を加えることができないか 	
M2）その意味あいを、どのくらい変えることができるか 	
M3）色や外形を、どのくらい変えることができるか 	
M4）サウンド（音、騒音、音声）を、どのくらい変えることができるか 	
M5）何を加えることができるか 	
M6）高さ・高度をどれくらい増やせるか 	
M7）重さをどれくらい増やせるか 	
M8）強度をどれくらい増やせるか 	
M9）頻度をどれくらい増やせるか 	
M10）価値をどれくらい増やせるか 	
M11）何を減らすことができるか 	
M12）何を縮小することができか 	
M13）何を簡素化することができるか 	
M14）控えめに言うことができるのは、どんな部分か 	
M15）サイズをどれくらい小さくできるか 	
M16）重さをどれくらい軽くできるか 	
Put to other uses（ほかの使いみち） 	P1）そのままで、何かほかへ使えないか 	
P2）もし一部を変えたら、新たに生まれるほかの用途は何か 	
P3）ほかにどんなマーケットが受け入れるか 	
Eliminate（省略する、除去する） 	E1）何を、取り除くことができるか、省略することができるか 	
E2）ある部分がない時、どうやって実行するか 	
E3）何を犠牲にできるか 	
E4）あげてしまえるものは、何か 	
Rearrange（再調整する） 	R1）ほかに、どんなパターンが使えるか。 	
R2）ほかに、どんな配置が使えるか 	
R3）ほかに、どんなレイアウトが使えるか 	
R4）何を交換できるか 	
R5）何を置換できるか。言い換えられるか。 	
R6）何を、再結合できるか 	
R7）逆にしたらどうなるか 	
R8）上下逆さまにしたらどうなるか 	
R9）内外を裏返したらどうなるか
3:scamper
6:digitalize
5:outsource(secretary)
4:UbiquitousCapture
3:scansnap

7:stsc+video
14:capture self handwritings
13:AutoLinks
12:printable
9:sharable
11:editable
8:text to speech
10:grepable
7:digitalize Text
5:Spaces
4:UbiquitousCapture
3:ScanSnap
16:部屋片付け
17:集中
26:#keyword [[superstoryteller]]
16:#cycle 
15:チェッカー
9:シリアらいぜーションノードを書く 
14:マクロプロジェクトを、ノード値のとおりにくむ
8:マクロプロジェクトリストに合うように時間調整 
13:ノード値の高いほうから順に行えばよいのだが。
7:2－5のやつを、8とかにする 
22:ターミナルズに反映させる
12:1.一日の一つの作業で2-5時間のものを見つけて、8時間程度にしてみる
2.それぞれがマクロプロジェクトのとおりになっているかの確認をする。なっていなければする
3.輻輳があるようならば、マクロプロジェクトのとおりになっていないはず。あるいはマクロプロジェクトの修正をする。そうして2をする。
4.お金が余っているのならば自分でやる必要のないものは人にやってもらおう。
6:一つの作業の連続時間を長くする。 
21:所要時間の記入とボトムアップの時間の見積
11:輻輳制御する期間を決める。
5:輻輳制御する 
20:シリアライズに反映させる
10:時間＝金。金が余っているならば人に作業をしてもらおう。 
6:信用
5:loadning
3:SCかつAC
3:searchlater
15:regist results pages read later
13:email post in
12:service
11:desktop clipar
10:bookmarklet
9:evernote
8:selection + clipping
7:keyword capture
6:inbox
18:@pad readlater
5:RUNTIME
17:system opens open 10
16:outbox
5:BUILDTIME
4:RUNTIME
13:bookmark 2 day-secound list
9:open mise lists
12:opening all the secounds
8:secound list
7:pick
6:bookmark
4:secretary.buildtime
22:AC
3:secretarize.com
15:paper
12:secretary
9:FirstRun
19:tips.secretarize.com
6:秘書利用環境セットアップ.buildtime
18:保科さんにメール　##アウトラインを@Think→電話に吹き込むがおすすめです！
#2@mailで「メールすること」はわかるので、名前だけ書いとくといいです！
94:storyteller
3:[[商品化]]
131:@wait FirstModeling
79:@done 合計すると3000は妥当
130:@wait FirstMvn
119:sss
78:@done 拘束力はどのくらいか。8ヶ月くらいか
118:test
77:@done 会議、ツール教える、紹介してもらうので一人１０万はかかる。

76:@done リテインコスト
116:design
115:@wait offshore
73:@done 獲得コスト
165:すごいプレゼン
72:@done 人コスト
学生さんで７時間くらい。
平均1500くらいか。
永井時間計算９月は20くらい。
164:美しい
163:高橋
111:@wait camp2xhtml
70:@done 実費1700か？平均時間で述べると？
162:でかい
110:テスト
161:口調
149:[[商品]]
146:資料はテクストつきの資料？
一緒にゴーするーするようの資料。
143:@eclipse Preperation
89:商品
129:@wait FirstCopyCoreJar
88:@wait 僕化とその後のランタイムの経験を買う。
僕がそれをツールでやってることを買うと近づけるということを示し、
それに大して買ってもらう。
それを秘書を通じて買ってもらうが
実際には僕化を買う。
127:@wait @Air put CommonTranslation @storyteller ( http://storytellermachine.net:8080/storyteller/J2eeStorys.do
86:@wait 客は何を買うのか
126:@wait PostSentencesOnStoryteller
125:@wait StorytellerCodesDownload
124:generaltest
123:mismatchtest
122:checkingtest
121:tester
69:@done コスト
120:@wait mock
159:数字と記号
108:OutOfPatterning == coding
66:@done タスクからの洗練と分析の提案。
世界最先端の革命的な「自動思考」の補助を借りた、タスクについての作業効率の実施と
158:show it with charts
157:Simple as google
106:@wait xhtml2jsp
156:negative check
155:実績を示す。営業してくれた人にどういうメリットがあるか
104:配備
62:@Noding カバレッジの計測
154:何が与えられるか。とその実績。
103:@wait sql dupmpfile
61:カバレッジが低い
153:[[kamoneメソッド]]
102:TestedSystem
60:信頼性が必要
152:@wait 内容をノードから
151:デザイン・規模・実績・url
100:@home SyncToy
99:配備
150:プレゼン
139:@wait @Air AttrPicking
138:@Air MagicDrawing
96:サービスイン。配置  = deploy
29:ゴーするーする。
顔合わせする。
28:人
27:場所
38:タグ、キーボードショートカット、コンテクストリスト）、優先順位、進捗情報
26:agenda
37:永井君と共有してくれ
49:セクレタリーkickoff
25:日程
36:remember the milk(rtm)の使い方とか
48:セクレタリーの雇用
35:場所きめといてください。
47:セクレタリーの照会
23:ゴーするー会議
59:秘書利用環境セットアップ
58:作業効率のモニター
69:総合Runtime
57:支払い
32:[[secretary.buildtime]]
68:secretarize.com on backpack
http://toukubo.backpackit.com/pages/1598430
20:secretaryKickoff
56:実施
31:@secretary 東窪の日程がグーグルカレンダーにあるので、
永井君に連絡して、日程調整して会議設定してください。
67:secretarize.com
55:ゴースルー
30:永井
村上
とうくぼ
54:客
77:面接
53:売り先の営業
64:okamoto.secretary.runtime
76:紹介
52:[[リード]]の発見
75:採用
51:給与支払い
50:@cycle 秘書作業の実施
85:reminder
72:
82:manual
81:checklist
80:secretary
17:offshore
4:gothrough
3:secretaryKickoff
15:@Air schedule:gcal
14:[[議事録]]にする
13:@Meeting
11:agenda:
remmeber the milk
message+
if there is "@hogehoge" in the message

10:meeting + tasktemplate
1:seedsfunding
5:middlefunding
4:microfunding
3:microfunding
149:センシングなので予想が先だつとは限らない。
予想に先だって、以上検出を。
160:各リファラからの。
検索語からのゴール到達率
145:粒度
144:mrtg
141:OC
129:リピートユーザーの検索語
128:各ページの平均滞在時間

127:顧客傾向
85:各ページでのsidとレフログ
126:解像度の割合
カラービット数割合
OS割合
訪問時間分布->顧客分布
は基本的にはツールをつかう

125:各種普及率系
83:ユーザの挙動
82:どの当たりのアーティストがどのくらいのアクセスを呼んでいるのか。
チャレチャのトップにはなるが、CDにはギリ無理くらいのアーティスト

123:ボトムアップで現象を作る。
異常と再現性の閾値設定でそれに説明をつける
81:1.チャレンジチャートアーティストの挙動。誰かの挙動。例えばこうこうせいの挙動。
炸裂音のアーティストの・・。とか
122:統計や相関とくっつけていく。
80:かな、という推測はたっているが、そっから先にはいっていない。
121:外部と内部に差を作る仕組みでもある
174:[[sensing2]]
108:期間、ページで、DL数。

172:http://anglers-net.com/anlog/
107:さかのぼった計算
171:http://www.lovpop.net/apricot/apricot.php?u=berrydb
アプリコットのphpをカスタマイズして、
ビューを基本的にはcsvレベルで書き出すようにして
そえをwgetして2次解析する。

106:滞在時間
170:http://www.lovpop.net/apricot/
159:分離と悪化
効果測定
105:外と、ゴールの比較
158:医者の診断
104:自社アクセス除外
157:イベントと説明付け
103:経路情報。（場所でもそうだけど、道じゃん！）場所より先に満ちがあって、だから角地、がありえる。
156:ktaxの解析ツール
102:Form Abandonment Tracking
155:icjMOPフルサイトの解析ツール
101:サイトに入ったビジター数が多いページ。
154:icjmopサイトの解析
100:売上、会員との連動率の出力
153:汎用のノード
99:グラフィックに
98:ショッピングカート分析
151:国連の解析ツール。
97:シナリオ分析
150:各地点からのゴール検索を数にする。
138:平均の定義
95:ゴールページにいたったユーザーの行動を獲得
137:閾値の設定
94:[[icj_mrtg]]
136:イベント自動検出と告知
93:*自動化
1.wget
2.アプリの起動

135:リアルタイム取得が必要なく、
ツールでとれるやつは、ルーチンを使う。
133:リピートユーザおｎ県錯誤内のサイト固有名詞の含有率
79:どういう情報がとれるか自体を研究しないといけない。
もっと眺めないといけないし、眺めや少ないといけない
119:javaでグラフ。
130:リピートユーザへの再連想語彙
116:周期。
あるスパンでの平均値とそれに対する比較。閾値の設定。
サンプル数。（30件の平均値以上とか）
毎日のユニークからするとつき始めはハズレ値として検出される。
がつき始めというデータは別に検出することができる。

169:http://www.php-stats.com/index.php?lang=eng
114:2.2次データ項目作成
168:http://64.233.167.104/search?q=cache:ByNoUxvFeUMJ:ponk.jp/php_access/index.php+%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E8%A7%A3%E6%9E%90%E3%80%80php&hl=ja
113:1.一次データリスト
2.スパン
3.上昇、下降、ハズレ値、散らばり、相関、をとっていく。
4.2次データ広告作成。可能なら計算
166:● ゴールデン・クロス（上昇のきざし）
　　　黒線（７日移動平均）が、赤線（２８日移動平均）を下から上に抜けた後、
　　　日々のデータは、上昇していく可能性がございます。

● デッド・クロス（下降のきざし）
　　　黒線（７日移動平均）が、赤線（２８日移動平均）を上から下に抜けた後、
　　　日々のデータは、下降していく可能性がございます。

164:ウェブ解析系ツール
GMOの。
かクリックトラッカーの。
163:相関
162:なるべくすべて自動化する
16:ゴールをツリーの頂点として、
ノードパッドかする。
ツリー構造化するためには
枝の量の操作が必要。
15:脱落の検地
9:各地点からのゴール到達率
14:リファラー割合
8:リアルタイム取得が必要/不要
導出が必要/不要
カスタムで可能/ツールで可能
13:リピータ数、リピータの割合

7:リアルタイム取得は必要ないデータはツール系でとる
12:経路に脱落が関連する。

6:1次データの作成
11:ページに経路が関連する
5:アプリコットのcsv書き出しとか。
10:高到達率のページ
4:javaでグラフする方法。
コンポーネント
javaのアプレットで自力コンポーネント

3:mrtg
2:コールハース
1:データビジュアライゼーション
18:リピートユーザの検索後の特有名詞の含有率
4:Sentence
3:sentence
17:ER modeling
11:PostSentencesOnStoryteller
3:Sentences
14:story
4:pyramid
3:seo
4:charene
3:
SEPR
7:HighKeywordWorkset

4:server_hadrware
3:202
39:着金
7:一石二鳥
6:高roiの検索
52:
5:[[目的検索]]
3:目的(案件増幅,

50:見積もりを出してもらう
49:木村さんPG
48:適材適所
29:スケールさせる
47:レス
46:Sentences
27:team
45:page
26:日本テスター
44:PM/storyteller
25:チーム
43:annotation
42:シリアル速度
レスチーム
レス秘書で効率
ページベース
アノテーション
23:品質と速度、
41:早期納品
40:早期着金
6:nodepad2basecamptemplate
5:sharable
4:[basecamptemplate
8:ブーストできる
7:チーム化できる
30:gotomypc
17:iweb/dw/site
29:basecamp
28:gw
27:sambe to docroot
14:web
 + FileUpload pattern
13:share
39:jungledisk
24:cvs
7:samba
10:decide with who
36:basecamp？
5:message
35:ノードパッド？
21:usb key
34:最高のインターフェイス
20:subversion
3:share
share image
share text 
share files
33:パブリックであるものの指摘
2:http://www.flickr.com/photos/organize/
1:share_photo
17:フィルターリスト
16:他のも足切する。
15:語の共有だとモノすごい
計算量。
13:
9:実際のところどのようにして計算するのか。
12:現実的な計算量？
11:ユーザー間の共有発見は、つながりがなく、ホップが遠くとも、算出できちゃう。
それを計算する。
7:どうすれば、外部のユーザー同士は計算に入れないで、
sharingの行数が計算できる？
10:共有的なアクションの
6:全部のuserから二つ取る組み合わせ？
5:仮説
4:どうすれば、sharing raw sizeが得られうか。
28:tweets
3:sharing_raw_size
27:users added
26:api call, friends of friends
25:Users in DB
24:Runtim
23:user を取る ( 10,000 ) 
その後にユーザーの友達とその友達を取る。 ( 全ユーザー）
作成の時点ではidで存在チェックする？
22:fbから計算済みで取得できるか、
21:どうやってmutual friendsを取るか
20:足切りに使うのと、
足切られた後に使うのと。
18:mutual friends
99:分解
98:checklist
122:利益率
97:manual
121:progress managemnet
96:reminder
120:費用
95:making the list
94:firsttask
93:orientation template
92:direct responsible
91:cloudsourcing
90:job posting
47:screen specs docs
46:source access
45:on the source code
44:baseurl
9:@mece 画面遷移図
43:体裁統一
8:要件定義書
42:task type
40:画面設計書
69:適材適所化
68:秘書プラン
67:KPI設定する
66:個人にロールを設定する
65:習慣。KPIを自己設定してもらう。
64:チームの習慣
119:資金繰り
63:recruitment
リクルート
雇用
118:プレゼン
62:教育制度
117:crowd
61:情報や知識が社内で共有化されている
116:雇用
60:非属人的
115:コスト減らす
114:文字列一致検索
89:rate range
113:@done 掃除
88:コスト
112:MECEな軸
87:AC
111:署名
14:capture or not
86:deals
110:購入
85:利益率
84:progress managemnet
83:費用
10:test specs
82:資金繰り
81:プレゼン
80:crowd
39:editor
38:url
37:check
36:transition itself
34:design specs?
33:screenshot from the app? 
32:material?
59:[[投資]]原理（[[メトカーフ]]）
58:投資
57:enterable
56:teaming
55:
109:購入
108:探
107:find the goods and buy
52:find one in facebook
106:progress managemnet
51:editor
105:費用
50:learning
104:資金繰り
79:教育制度
103:プレゼン
78:オフ会主催
102:crowd
77:市場に出ないのを避ける
101:雇用
76:ナンパ
100:me more voice
75: [[fof]]
74:ブランディングと広告
73:user_interface
72:context base
71:secretary
70:aaa
6:php4で表示
5:phpで表示
8:bm君
7: php 
38:倉庫管理に必要な値
70:あ
37:バリデーション
42:displaytagのヘッダ
3:very simple shop.
the story of the shop is based on the gasweb app
15:メニュー構成
67:きや
66:http://toukubo.backpackit.com/
4:依頼
3:shouldbedelegated
39:cf
19:blood flow
9:massage
59:震度さん使う方法
68:low pull
38:do i plus it?
78:on the break.
58:一個ずつ
28:massager
67:Shoulder training with pet bottles.
37:by doing handy pknk it is getting better.
77:habitation
7:pknk
57:全部の関連筋肉を move one by one
27:message
76:when i pknk, do it.
6:dddd
56:長く
65:capture from evernote
75:@gym tao http://bit.ly/1yzNO8F movements on the plate
45:move 後背筋
55:たくさん
64:on the break?
44:resolve bottleneck
14:massager
54:強度小さく
63:stretch
73:@wait 僧帽筋下部線維
23:move shoulder
62:less time
32:http://www.youtube.com/watch?v=nt5ERNh0Qko
72:@wait 僧帽筋上部線維
12:sleeping?
22:両手で服の肩部分をかるくつまみましょう。
右手は右肩、左は左肩を親指と人差し指でつまみま
そして、そのまま腕を大きく回しましょう。
前に1分、後ろに1分。
71:@wait 僧帽筋中部線維
1:shoulder
70:@wait 僧帽筋上部線維
7:move
10:far from belanda and near
4:internet
9:compare
8:how can i know the speed of the internet
1:shuwa
1:sick
4:風邪
19:resources for wireflaming
18:#done sketches
17:wireflames
16:Out of patterning
15:Programmerworkable
14:#wait #done #wait StoryOfsimpleandhonest
9:#wait testes
13:#wait manual
8:tested system 
12:#wait test cretesd lonngest test  from manual
7:data entry
11:#wait lonngest test
23:sipmleandhonest is a storyteller project
6:deploy to runtime server 
10:#done tester
5:service
21:#wait copy from other storys
4:charene
20:working http://www.simpleandhonest.com
5:charene
4:more auto thinking
3:simplenode
13:#wait あとはHttppost CausualRelation?
12:fn csvにしてのませる？
9:#wait #keyword [[Httppost]]
11:retrieve from server
8:#wait Httppost CausalRelation
10:input to server
6:
5:
4:小さなマーケットプレイス
3:singapore
27:server hardware
13:new
36:dataentry
12:mockup of info
11:information
34:xhtml coding
10:teaser 
33:xhtml2jsp
29:ask later
16:design
28:vital hosting
1:Sites
6:Texts
5:Rss
4:Posts
5:紙とペンとヒント
4:#keyword [[スケッチ]]
3:sketch
4:ゆとり
3:slack
4:ゆとり
3:slackware
4:sleeping
3:sleep
4:sleep early so much
3:sleepat10
216:夜のアフォードと
quit earlier
222:昼寝
196:better_sleeping?
195:sleeping
213:[[eat]] early
192:better_sleeping
219:食事かも？
225:早めていく？おそめていく？
213:[[eat]] early
222:昼寝
233:7時間維持
232:咀嚼
219:食事かも？
196:better_sleeping?
229:食欲
195:sleeping
216:夜のアフォードと
quit earlier
228:能力
192:better_sleeping
6:sleep at stoyteller base
4:work untill bed
2:sleep outside don't stay athome
10:readings,
mece nodings
5:things able to be done when sleepy
15:http://zxc.cz/e2h/p.html?query=tag:@micro
21:stay out
18:work lying
1:sleepy
11:sleep 10min
21:素敵な問いの画面
9:アーリー・メディア的人員の選定
8:他人の評価
19:マイクロファンディング
7:良いresolver
6:最初の良いresolver
17:良い問い
5:良いresolver
4:良いソリューション
15:マイクロファンディング
3:素材
14:マーケティング（売れることがわかってる）
2:よいfilter
13:小売
1:smilepark
12:小売にとっての魅力
11:製造元は固定できるの？
10:製造元
28:
24:企業
23:営業
22:ディレクター
4:@iPhone
3:sms
5:winshot?

4:manual
3:snapshot
39:みんなで決めてそう
19:とり方を決めてもらう
9:声掛け業界
29:digg性？
38:同じカメラで全然違う
18:シャッターを押す
8:fashion snapの問題
28:ftv
37:ファッションブロガーが可能であること
（ソーシャルだれでもとれちゃう性）
17:その人にとってもらう
36:less costs
16:目立ち
26:ask photographer
35:声掛けの技
45:snapperに
15:素人業界で、友達が5000人居る人が、
公式パスもらってスナップとっています。
like数はfの5倍程度。
5:fcamera
25:lights maybe
34:snap撮ることになってるが？
14:casting
(選択）
撮る人の質？
 
 
4:better lendes and 
24:better photos
33:style vs brandsの緊張感を見せる？
同列に扱う？
43:声をかける人と
写真を撮る人
23:better photos
32:aokiさん的な人？
42:digging for snappers
12:メディア的威圧感
22:撮影する
31:decorations
41:アオキさんもチームにしていた問題
11:fマーク（fcameraみたいに）
21:カメラを装飾する
30:ファッションブロガーがやっていること？
40:誰が意思決定してる？
10:fashionsnap系
（fruitsなどの、ソーシャルスケール系）
1:social_network
6:touch nice
5:familiar with the target
4:get_familiar with others
7:touch
1:some_shiny_beautiful_handheld_internet__device
48:phone
38:Personal branding
51:prada smart phone
18:computing
internet device
4:highrise
3:someone
1:soniccare
4:eliminate time
1:sourcetree
4:s
6:tag
5:tv
4:tv_space
3:space_context_schedule
3:space_context_schedule
15:##### build
14:calendar
13:https://todoist.com/app?v=94#agenda/7__days,__overdue
12:自動的に.runをつけよう。
11:https://todoist.com/app?v=94#agenda/@kit.run
10:https://todoist.com/app?v=94#agenda/@auction.run
9:https://todoist.com/app?v=94#agenda/@workflow.run
8:*.runなものまとめてみるフィルター？
7:todoist:@parall
https://todoist.com/app?v=94#agenda/@parallelize
6:todoist:.run
18:tv
4:today_nodepad
21:top_nodepad
1:speaker
5:選択しましょう。
4:誰か話をしてください。
3:紹介してください
2:候補作成を自動化
4:速さ
3:speed
5324:画像のアップロードはいいとしてapiとかでアップできるようにする。
5350:enを軽くする
5321:キーボードショートカット
5349:hosting
5320:speeddialをウェブアプ化
5325:ブックマークレット
4:grepコマンドの提出、
grep一覧提出
置換
diff
承認
コミット
3:sqlconversion
6:copy jar
5:mvn
4:java最新でjar
3:sql
7:
6:@wait replace to ssd
5:replce
4:backup
3:ssd
7:@HOME_FINDINGS find the driver
2:make users if not 
1:ssh_access
7:what you saw instead
what you expected to see
steps to repeat

10:Run the mock on eclipse
6:what you saw instead
5:what you expected to see
4:steps to repeat
14:http://www.enclosing.net/test_way/test_way.html
3:sss
6:wordpress
9:storyteller
3:st4wp
1:stack
3:優先順位付け
2:時間
1:stackをなくす
45:@done print
44:@done address 
31:@wait バインダー
43:@done ship 
30:@scheduled ピックして遅れるようにする
42:@done arrived and paid
41:@done for now
40:@Air more google on the places. 3 more.
18:@done get the price for the stamps. 
26:@secretary 他は送っちまう http://stampcorrect.com
39:@done a little more comparisons + for now go for the rest
7:@done 問い合わせ
36:@secretary 郵送
5:@done 高く売る
35:@secretary 箱に入れてもらう
21:@home 記帳なものだけはピックして金額見積もってみる
47:@done pack
46:@done pick
33:@wait まとめる作業をして余った奴に入れる。
1:starbuck_chan
4:get familiar
17:催促は延期する。
16:CFのリスクなくなるまで待ってからやる？
催促にどう耐える？
15:
14:CFのリスク
8:motivate
13:やらない
7:一日予約
12:やる
6:sc
11:
5:サービスイン。配置  = deploy
4:請求
3:storyteller
2:iphone開発
1:starchildapp
18:会社には入ろう。
173:offshoreに
プロジェクト名
開発機url
を伝えて、
マニュアルを教えて、
テストをしてくれと伝える
172:generaltest
171:mismatchtest
36:checkingtest
170:tester
149:Outsource
148:UpdateAtOnce
147:Post
146:比較と絶対値
145:つなぐ
144:modeling if some part is lacking
140:開発機
158:@wait sql dupmpfile
157:@wait war
156:SyncToy
155:@wait server url
112:ユーザー登録（3種で共通の構造） 
layout 
ユーザーのpost系（登録もそうだが修正も） 
ユーザー３種の表示系（publicUserにて保持している情報を表示するかもしれないが基本にたような表示をするっぽい）
画像表示（ShowImage
人系のprofile画像とかの表示部位のタイル 
マークの仕組み
コメントの登録系、表示系、削除系
メッセージ？
ショートプロフィールもユーザー３種で共通。タイル。
レビュワーとコレクターでマークしているユーザーの表示ブロック 
所属コミュニティもレビュワーとコレクターで共通のブロックを使う
作品の小さい表示のブロック 
アーティスト系（フォルダー表示、作品詳細、作品一覧、履歴）でのメイン以外のペーンは共通 
画像に対するpreviewの作成
19:xhtml2jsp
153:PM
152:waiting
151:one person
150:assigning
15:@wait #wait sql dupmpfile
14:TestedSystem
13:@wait #wait war
169:mock
168:sss
11:#wait server url
125:@keyword [[納品]]
167:全工程
10:@wait ター
7:@wait サービスイン。
配置  = deploy
166:testdata
6:検収
4:storyteller開発
163:requirement and sample
3:startbahn
162:run it
161:pages
160:difference
139:[[バージョンコントロール]]からUPDATするスクリプト
24:test
138:mock
65:xhtml
23:テスト
22:debug
20:開発機への配備
61:offshore
60:camp2xhtml
132:データ投入
13:exit
12:startuproles
9:参加
11:投資循環
8:投資
10:着手のゴールの可視化 x　参加の可視化 x 速度の可視化 x 問題（ゴール）と
5:スタートアップ
23:
4:[[fund]]ing
19:KPI
20:ゴールの可視化
1:startup
16:解決しようとしている問題を３つ
5:amplifier
2:創業者
領域横断者
カメラマン
プログラマー
CTO
ビデオシューター
ハスラー
デザイナー
インターンオーガナイザーとインターン
PR
翻訳
アイデアの人
CEO
場所
ディレクター
編集者
スターインターン
ライター
会計士
キュレーター
スーパーコネクター
コンサルティング
営業
ヴィデオシューター
美女
the speicialist in the business domain of the target.
12:amplifier_
8:is it possible to have the people for all those projects?
i think yes. and 20% burter.
1:startuproles
11:startup
1:stay_out
4:gmap
1:stay_up
4:stay_out
1:stomach
4:胃
4:随意
1:stopper
7:FirstModeling
3:story
4:※利益率について
すべての固定、変動費用を引いた利益率を算出しています。

【　第一フェーズ：粒の作成と洗練のフェーズ　】
人数スケール：1
年間売上金額スケール：１０００万
時期：2006年5月から2007年三月
顧客へのメリット：対相場売上七割で受注
　　　　　　　　　（納期、安定性などほかの条件は
　　　　　　　　　　据え置きで価格のみ安価化）
利益率：65%
リピート率：非常に高い
広告：説明や資料なしに関係者が驚異的だと騒ぐレベル
　　　投資なし。
　
【　第二フェーズ：スケーラビリティ確認のフェーズ　】
人数スケール：2
年間売上金額スケール：２０００万
時期：2007年3月から2007年11月
顧客へのメリット：対相場売上七割で受注
利益率：60%
リピート率：高い
広告：説明や資料なしに関係者が驚異的だと騒ぐレベル
 
 　　
【　第三フェーズ：外部主体への発注フェーズ　】
人数スケール：4
年間売上金額スケール：2500万
時期：2007年11月から2008年10月
顧客へのメリット：対相場売上六割で受注
利益率：50%
リピート率：高い
広告：説明や資料なしに関係者が驚異的だと騒ぐレベル
利益率低下の理由：
　１．オフショアプランへの投資とその失敗。
　　ストーリーテラープランの「技術者代替性」の実証を保ちつつさらなる
　　効率化を示すために、インドオフショア会社のマネージャーを兼務しましたが、
　　一般的なインドオフショアの難易度と、ROIの低さ、難易度程度の失敗を引きづりました。
　２．新規性の高いチーミングプランへの投資（「秘書・queue型のテスターチーム組織」）
　特にオフショアプランは大きな赤字のプランでしたが、
　これをあまりあるほどテラープランは利益を出しました。
詳細説明：
1.テラープランのエクスパンジョンとして、
　新規に二名のPM・PGに外注。日本人技術者、PMによるストーリーテラー利用での
　開発では、利益率、対相場優位性、対相場顧客満足度のいずれも、非常に高いレベルで
　実現できており、リピート率は100%です。
2.オフショアプラン、テスターおよびオンライン秘書プランといった新規性の強いプランへの投資。
　前者は大きな赤字をしました。
　ストーリーテラーズ主導によるプランではなく、独立したものですが、
　これにより利益率の低下がありましたが、いつでも分離は可能なものです。
　一方で、条件を決めれば、ROIの高いオフショアプランもありうることの実績を積み、
　この場合の利益率を１０％ほどあげた形で、一〇億円スケール程度まではこのスコアを維持できる
　道筋を得ました。
3.外部営業主体との交渉
　開発効率を価格に転嫁すること、および納期速度、特に受注直後の爆発的な開発速度を営業代替に添加する
　といったことが、営業行為（コスト）の代替となるといった販売計画を外部主体と協調的に開発し、
　直接顧客以外からの案件を受託し、現在も販路拡大傾向にあります。
　

人数は仕入対象となるPM、PGの人数。
【　第四フェーズ：法人化のフェーズ　】
人数スケール：15
年間売上金額スケール：30000万
時期：2009年3月から2010年3月
顧客へのメリット：対相場売上7割で受注
目標営業利益率：40%
リピート率：高い
純資産配当率下限：3％
配当性向下限：40%
目標配当率：売上の8%
詳細説明：
１．資金調達
２．法人格化
３．経営陣のリクルート
４．ツールと販売者の分離
５．ツール開発者（東窪）の顧客案件からの撤退と洗練への専念
６．販路開拓。
７．ブランディング
　 
【　第五フェーズ：IPOのフェーズ　】
人数スケール：500
年間売上金額スケール：100億
時期：2009年3月から2010年3月
顧客へのメリット：対相場売上７割で受注
利益率：30%
リピート率：高い
詳細説明：
１．資金調達
２．法人格化
３．経営陣のリクルート
４．ツールと販売者の分離
５．ツール開発者（東窪）の顧客案件からの撤退と洗練への専念
６．販路開拓。
3:storytellers.milestones
7:http://www.stockboard.jp/flash/ranking.html
3:
The Final goal(output) in Runtime of gasweb project is, to get ActualPayment from PublicUsers. to get paid from public users who make orders on gasweb site.
最終的なgaswebプロジェクトのアウトプット（ゴール）は、実際の支払いをパブリックユーザから受けることだ。支払いを受けるためには、ガスウェブのサイトにおいてオーダーをしてもらう必要がある。

This could be done when we finish a deriveration(public user get the ActualProduct). The deriveration itself is done by a derivery componey we have contract, and so the final step which our process care for is to do ActualShipping, and after that, we regist Shipping Information. to this system.
これ（支払い）は、われわれが配送を終了した（客の手元に商品が届いた）時に起こる。しかしながら配送自体は配送会社によって行われる。そのため、われわれの販売プロセスの最後のステップは、発送作業を行うことである。そのあとにわれわれは発送情報をシステムに登録

IntraUsers Post Shipping. for doing this, they need to know which Order doen't have Shipping data. so need to Display OrderWithoutShippingOfADate. IntraUsers sometimes need to Display OrdersOfADate and to Display OrdersOfADateSpan. and OrdersOfAMonth. and need to Display Shippings. 
イントラユーザーは発送情報を登録する。このためには、われわれは、どのオーダーがまだ発送情報を持っていないかを知る必要がある。発送情報をもっていないものが発送をしていないものである。そのためには、われわれはシッピングデータを持たないものののうち、ある日付のオーダー（OrdersWithoutShippingOfADate)を表示する必要がある。
また、内部ユーザーは時々、OrdersOfAData=ある日付の、発送記録有無に限らずの表示をする必要もある。また内部ユーザは日付範囲内のオーダーを出す必要もあるし、全部の発送記録を出す必要もある。



IntraUser Printes SendingsheetToSagawa. however, this is not supported by the system. the system displays orders information as we described anove, and we this has address of the user of the order, so they use this . and we need to ExportXlsOf OrdersOfADate.
イントラユーザーはサガワへの発送伝票を印刷する。しかしながらこれは本システムではサポートされない。このシステムは上に述べたとおり、発送情報やオーダーの情報を出し、これらは住所氏名電話番号などの伝票に必要な情報を含んでいる。われわれはいずれにしろ、ある日についてのオーダー一覧のエクセル書き出しもし、伝票などにつかう。これはなおイメージマジックというシャツ作成代行会社が行う。


Also IntraUsers Displays Orders, simply to know how much orders are we get , and when we want to get more information, IntraUsers need to request the system to Show Cart.
イントラユーザーは、オーダーを全件表示させもする。これは端的にどのくらいのオーダーを受けてきたのかなどの統計のためでもある。われわれがより詳細な情報が望むならば、閉じたカートの記録や詳細を見ることができる。


the Order is ofcause made by the public users, so, PublicUsers Post Order. and for that, we need to request PublicUsers Post PublicUser itself. information about public user himself. this includes address, phone,name, password and check box showing if he wants to regist to the gasweb system. etc. after postingVP called and processed successfully, we Show Thankyou, 
and we SendMail NotificationOfOrder and we show bankinginfomraion if the PaymentMethod of the Order is bankingtransfar. show contentofmails depending on the paymentmethods. accessable by ${staticData.Bankinginfomarion),
 when the code of PaymentMethod is banking, we send , this is stored in the form of html , accessable by ${staticData.Bankinginfomarion),
オーダーはもちろんパブリックユーザーによってつくらる。つまり、PublicUsers PostOrderである。そしてこのために、われわれはPublicUsers Post PublicUser itselfが必要である。ユーザーにパブリックユーザー自身の情報をポストしてもらう必要がある。これは住所、電話番号、氏名、もしも彼がシステムにメンバ登録したいという意思があるチェックボックスに氏名をいれるならパスワードなど、が含まれる。



For doing this , we need to request our PublicUsers to PostACartAboutPaymentMethod. and depending on the choise of paymentmethod, navigate to these patterns.
when he chose banktransfar, we need to send Bankinginfomarion to our user Listening to  PostOrder,but this time, the publis user will be navigated to the PostOrder page. 
when he chose creditcard, we need to ask our public users to Post CreditCard. and at VP of this pattern we just check this card is valid after calling a speciall native apis which is given from credit card componeys.
when he chose payatarrival, public users need to do nothing. so he is navigated to PostOrderDetail
when he chose npfuturepayment,we navigate users to PostORderDetail directly(after saving the payment method adding to order in the session).
We CheckPaymentMethodIsValid for the choise of payment and if it is valid with our public user.
オーダーをためには、われわれはユーザーに、支払い方法をまず選択してもらう必要がある。その後で、支払い方法ごとに、その支払い方法の詳細情報をポストしてもらう必要がある。
について、カート情報をポストしてもらう必要がある。われわれはユーザが選択した支払い方法がこのユーザについて有効であるかのチェックをする必要がある。


For doing this ,IntraUsers Post PaymentMethod at the start time of the sysmem we often use this feature, so we maybe don't prepare an interface for PaymentMethod, and just put data using phpmyadmin or odbc(access).We also Display PaymentMethods to see what method is registered.
このためには、あらかじめ内部ユーザーが支払い方法（の選択肢たち）をマスタとしてスタート前に登録しておく必要がある。これはしかしながらそれほど頻繁に使う機能ではないので、インターフェイスは用意用意しない。phpomyadminなどでデータは入れる。

And to let our public users go to Posting Orders ,we need to Show Cart with Choises of Products.
また、われわれのパブリックユーザにオーダーをさせるには、われわれは現状のカートにいれている商品（選択している商品）を見せる必要がある。

PublicUsers Display ProductReviews of the Product at ShowProduct page.
パブリックユーザーはプロダクトページにて、商品レビューのリストをすることができる。

at least one Choise should be Posted. before they make order. PublicUsers Post ChoiseAddingToCarts. for this , we need to have many ways to display our products, so that our public users can reach what they want easily and they can click it and make choise,and order. we Display Products simply as all the products, and also let PublicUsers Grep Artist By name. 
also , We Displays Artists and Show Artist in detail. with his Products. 
最低ひとつ、選択がなされている必要がある。オーダーする前に。パブリックユーザーはカートに商品の選択という情報をポストする。wれわれはこのために、パブリックユーザーがほしい商品に簡単に近づけるようにしてやる必要がある。われわれはこのためん、商品の全一覧を出すし、また、パブリックユーザに、アーティスト名で検索させたり、製品の各情報についてgrepさせたりする。
また、われわれはアーティストの一覧表示をするし、アーテイストを一人ずつ詳細表示もさせる。ここにはそのアーティストの商品も出る。

Throught this surfine, users can see the Choises of Cart of the PublicUser. it is stored in the session. not in the db. 
このサーフィンをつうじてずっと、パブリックユーザーはそのパブリックユーザのカートについて選択されたプロダクトの一覧をみることができます。これはセッションに保持されていて、dbには保持されません。

Plus, the PublicUser can Display ProductViewHistotrys of the user. we store this data to session not in the database. at ShowProduct page.and For this, system creates ProductUserHisotry(story to the session when the ShowProduct.do is called).
加えて、パブリックユーザは、ユーザーの製品閲覧履歴を製品ページでにて見ることができます。これらはセッションに保存されます。データベースにではなくです。このためには、システムは、そのユーザの製品閲覧履歴を、ShowProductが呼ばれるたびに作成する必要があります。


He can see the tags of ArtistTaggings of a Artist Displayed at Artist page(when we Show AArtist).and also tags of ProductTaggins of a Product at Product page.
パブリックユーザはアーティストの、アーティストタギングのタグ群がアーティスト詳細ページにて表示されるのを見ることができ、またプロダクトについても同様です。

when he is already logged in, he can Post ProductTagging adding to product. and he can Post ArtistTagging adding to artist.All the PublicUsers can Post ArtistTagging and Post ProductTagging even if he is not logged in yet, but they will be notified after he click "submit" button that we need to logged in or if he is not a member he need to regist.
彼がログインしている場合は、彼はプロダクトについてのプロダクトタギングをポストできます。アーティストについてのアーティストタギングもできます。パブリックユーザーはログインしてないときにもフォームを表示させることはできますが、サブミットボタンを押したときに、ログインしているかあるいはかつ、メンバー登録をする必要があることが知らされます。


PublicUser can Post Wish of a product. and Wishs (wishlist) is Displayed at all the pages in the side bar.
パブリックユーザはWishを製品についてポストすることがでいます。そしてまたウィッシュリストを全部のページのサイドバーに表示されているのをみることができます。

and these products data and Artist data are displayed only when they are public.(public flag is set). this flag can be modified (swithced) done when IntraUsers Post Artist and IntraUsers Post Product pages. 
そして、これらの商品、アーティスト、のデータは、すべて、パブリックであるときにのみ表示されます（パブリックフラグがたっているときにのみ表示されます）。これはイントラユーザーが、アーティストをポストするとき、またイントラユーザーがプロダクトをポストするときにスイッチすることができます。

IntraUsers can reuqest this system to Display Artists and Display Products and Display PublicUsers and Display IntraUsers. 
イントラユーザーはシステムにてアーティストの一覧を表示させることができます。また製品の一覧を表示させることもできます。

IntraUsers can MultipleFileFormUpload WebImageFiles addingto Product, and can SimpleFileFormUpload A PrintFile addingto A Product and IntraUser can SimpleFileFormUpload ArtistImageFile addingtoArtist.
イントラユーザーはプロダクトのウェブ画像（複数枚）をアップロードすることができます。また、製品にシャツ印刷用データをアップロードすることができます。またアーティストに、アーティストイメージファイルをアップロードすることができます。

IntraUser can Post IntraUser.
イントラユーザーはイントラユーザーを作成することがでいます。また一覧することもできます。


IntraUser can Post Site. so that we can post product adding to the site.
イントラユーザーはサイトをポストすることができます。これによってプロダクトをサイトに登録することができるのです。
3:The goal of simpleandhonst is to get paid for the sold products.
this is done whe nwe ship. when we finish shipping
so we should be able to confirm a shipping information link , when we have this system Display Orders and for this we need t o PostShipping..
we Display Orders, Display OrdersOfADate,DisplayOrdersOfADateSpan.
PublicUsers Post Order and for this PublicUsers PostToSession Order About SHippingRelatedAttrs and for make an order, they PostToSession AnOrder About PaymentMethod. and for this, they Show CHoisesOfTheOrderOfTheUserInSession.
this choises are made if they PostCHoise.
to have our PublicUsers post choise, we must Show Product, and 
for this , we Display Products and have them Grep ProductsOnName and GrepProductsByDescription, DisplayBrands,Show Brand(with its products),
and we need to DisplayProductsOfTheSubcategorysOfACategory.
and Display Products Of ASubcategory.
these data like product,brand,category,subcategory, we have admin interface.
IntraUsers PostAProduct,IntraUsers DisplayProducts internally,
IntraUser s Post Category and Display Categorys Display SubCategorys, Post Category, PostSubcategory,PostBrand,Display Brands.
for doing this, we Show AdminIndex
IntraUsers PostAProduct
simpleandhonestのゴールは、プロダクトをうってお金を得ることです。
このために、われわれは発送を終了させる必要があります。
ですのでわれわれは、ShippingInformationのリンクがオーダーのリストに表示されているのを確認できる必要があります。
このためにわれわれはDisplay Orders（オーダーを一覧）します。
われわれはまた、PostShipping（発送情報を登録）します。
われわれは、過去の全Orderを一覧し、OrdersOfADateを一覧し、OrdersOfADataSpanの一覧（日付範囲内にあった全注文の一覧）をします。
オーダーはパブリックユーザーがポストします。
彼らはその前に、セッションに配送関係の属性について注文をポスト（PostToSession Order About SHippingRelatedAttrs）し、また支払いについての情報をセッションにポスト（PostToSession AnOrder About PaymentMethod）します。これを永続化するようなかたちでOrderをPostします。（Post Order）
ユーザーは、Show CHoisesOfTheOrderOfTheUserInSession.としてカーとの中身を表示します。
ユーザーは製品画面などから、Post Choiseします。
このためには、システムはShow Product（プロダクト詳細の表示）をする必要があり、またDisplay Product(プロダクト一覧）をする必要があり、製品名について製品を検索(GrepProductsOnName)させます。
また、ShowBrand(ブランドの詳細ページ）させ、ここにそのブランドのProductsも一覧されます。
また、Display ProductsOFSubCategoryさせ、DisplayProductsOfSubCategorysOfCategoryさせます。

これらのデータを登録する管理画面がないと上記のデータは動きません。ので
内部ユーザーは管理画面にて、
Post Product(製品を登録）し、Post Subcategory、Post Category、Post Brandし、また
Display Products,Display Subcategory,Display Categorys,Display Brandsなどします。


562:UpdateNounsAndAttrsAboutJapanese
127:ブラウザと同じルールでやっているみたいだ・・・。
560:wireflaming from scrach
219:handwriting / with html2jsp functoin, use html
652:ブラウザから入れることでリンクしているような。quoteで。
126:分析する
218:wireflame

651:ガスなら作業手順所がマニュアルべースになっていた。
手順という項目はどこにもある。
"quote"に近しい。
125:wysiwygがやってることをやる
217:wireflaming from mock
650:xlsで、とか資料形式とかも。
xlsではリバーステンプレートできるようにする。
xlsとかファイルをアップするとそっから
Update SalesSemiCodeTemplateする。
124:Of節のマッピング
308:見積提出
214:name of story
305:バリデーションルールの配置
put validation rules on each post
212:請求
302:挿入点発見自動化する。
デバグしやすいように、ウェブ上での
開発機urlという属性を
もっておく。ストラツコンフィグの全内容も吸い出す。
バグを登録するフォームがある。
バグを登録するフォームからバグを登録するフォームにデータを取り出す。

198:モック型営業
197:評判の提示
379:相互評価
378:メリットの分配
194:=======================
RuntimeNodOfstorytellering
=======================

286:マニュアルと画面仕様の
自動書き出し
375:@wait 防御の雇用
559:FirstDeploy
191:indexを構成
web.xmlをコピペ。
フィルターのfilter.*を他からコピペ
(prototypeな）
index.jspとf.jspとh.jspをコピペ
createschemaとdropschemaとdb作成とdbユーザ作成
283:get Codes From eclipseroot/WEB-INF/src/net.projectname.web.*.java

374:片山君でどうしてまわんなかった？
558:Nouns
373:@wait reminder
557:UpdateTestsWithSentences
281:ステンシル
556:PostJ2eeStoryAboutEstimation
648:http://lab.nulab.co.jp/archives/64
スペルチェック
554:css/first request
646:テンプレートあたりのルックス
553:Post CommonTranslation
119:すごいチーミング
552:名詞抽出
118:ギーク
551:andromda app
209:cursornum
642:PMC案件
641:大手案件
207:linenum
114:あたま良い人のいるとこで[[ナンパ]]
205:filelocation
99:パターンマッチング
111:ブロックと、名詞節のマッピング
203:InsertionPoint + inserted codes
110:クラス図からof説を構築するインタフェイス。
202:Preperationの実行
189:DisplayTagging + XlsExport
369:RestrictionPattern
185:camp2xhtml
277:sales
営業活動

368:挿入パターン
184:MagicDrawing
367:挿入点
366:削除志向
549:create struts helpers in eclipse
181:ProgrammerKickoff
548:create java project in eclipse
546:MagicDrawか紙かnodepad
638:速度
729:ロギングを出す。
545:RuntimeNodeOf
637:月間売上額
360:@done @wait 監視
452:案件額を最大化するというコンフィグ
544:@out Find GoalNode
636:1末までに、普通のPMがやる作業を僕でやって
洗練できるところを洗練し、所定の作業についてはマニュアルにして、
彼らにやってもらう
543:[[Choise]] From Verb
635:@wait ちょっとずつで払ってくれる人いるか
726:各資料を消しこみ可能にしつつ保存可能にする。
109:吐き出したコードの使い方のコーチング
542:nodepad
634:削減される工程
ケース名
想定発生数（月次）
時間単価
月次想定削減コスト
年次想定削減コスト
所要時間(H）
ｚ月次作業頻度
月次作業時間(h)
作業者単価（作業者の販売管理費含む）円
月次費用削減額
541:@out RuntimeNoding
107:rating pattern
540:RuntimeNoding
632:プロジェクトの終わりにそういうのを掠め取る作業
815:motivate
631:営業資料として「[[毎回]]」提出するものを指摘
リバーステンプレートできるようにする。
【ガスのケースなら】
見積もり資料を。
「見積もり選択」とかは？
金額調整した？
ROIの資料出した。
723:xls2crud
630:どうすれば、営業獲得効率で、まわすたびにうまくいくようになるか。
812:紹介
103:制限について、早く記述できるようにする。
720:グローバルプライオリティをみんなにつける。
811:教育サイト
102:of 節をもっと利用できるようにする
810:教育
101:パターンピッカー
88:@wait でかいpyramid
100:パターンマイニング
799:バッファ
798:反応速度
797:月間売り上げ額を3:7に保つ
82:評判
81:実績
795:Innovationから取る
794:NoWorkを避ける
177:変化が重要なところにそれにふさわしいインターフェイス
793:IncomeSheetにあわせて雇用可能な数を雇用？
792:AC
358:勇気あるいは勇気ある人
357:UpdateCommonTranslationsFromAttrs
790:月間作業可能顧客案件売り上げ以下、案件を動かす
264:designer
デザイナーの選定など。
447:名言＋communication
263:network phpmyadmin

354:@wait エリートプログラマー向けの用語を探す。＋ピラミッド
538:FirstModeling
262:ai
629:まわすたびにうまくいくようになるもの
261:dw
444:中をmotivate
536:投函
628:営業獲得効率
351:コミット通知
627:自分でやる
626:最低限のデザインテンプレートを。
809:4sm
441:広告もなくす
717:.netとphp対応
808:@wait Patternize
532:属性追加時のコーディングまでの時間を減らす
807:auto update posting sentences from modeling data?
621:@wait 1月末日
713:specsとマニュアルの自動作成？
804:sc
620:@wait 30万/人月を払えるように
803:一日予約
800:理想月間作業可能売り上げ額に月間売り上げ額を近づける
79:コネ
78:bettersales
77:慶応の人で工学的な人、で探す。
699:Task自動割当と進捗確認洗練
76:他いないか。
75:ター
786:売れてないギークをDigg
71:現状不足している人、みたいな人を。
693:魅力的なインターフェイスパターンの追加
785:顧客案件へのSC
70:人員比率保持StorytellerRatio

692:Validationのインテリジェントな選択
784:CRM
691:Validationのインテリジェントな挿入とノンホットデプロイ
783:meta sentenceの増大
349:@wait 類似
165:applicatin-resourceのstruts-configの設定を追加。
appklication-resouceファイルをandromdaからコピー
application-resourcesを日本語にpropertyエディタで編集。
appklication-resouce
348:コードテスト
256:manual(procedures)
347:選別
438:案件単価を大きくする
162:cvsへのコミット
437:資本金と実績売上額
253:storytellinginterview

436:収益率
252:natural text from client
343:@wait 予算
435:相場との差分の巨大化
527:push to teller
619:@wait pm0.5人月のテラー
342:@wait ターゲットキーワードとテクスト量
618:@wait 300万/monthの売り上げを僕以外で
341:scalable
433:注意の自動獲得
709:共有cpuとかで。。
708:一人当たりのcpu量？
431:@wait 先端なしステム用語でピラミッド
707:eclipseとかmagicdrawでの処理がちょっととまり勝ちな件。
eclipseで処理するとその内容がとまる。
430:@wait システム開発でピラミッド
612:@wait 100万/人月を払えるように
611:@wait pm二人月テラー
610:@wait 1000万/montnの売り上げ
68:研究室に出入りする
67:友達誘う。後輩誘う。
689:SVNとかのインテリジェンス
779:preinterview
64:慶応とかの人？リクルート
687:bugtrackerと修正
686:Air対応。
685:インテリジェントな挿入。
776:Updateと書いたところっぽい。
でも「どれとどの属性をかきかえるとどうなる」
というのとセットだから。。。
684:VPを編集しないようにさせるか、
VPの変更時間をみる。
かsetAttrsのところだけ書き換える。
775:再利用。頻度。回転頻度を増す。。。
パッケージ販売。
ビジネスロジックで、「モデル以外に変わるところ」を考える。
作業をしたところ全体だよね。
774:http://www.enclosing.net/jpg/W0821.jpg
テストの再現手順を型にする。
Runtime{
ツール画面でテストを書く
->画面を開く
->マーク（するとテスト文字列が自動で補われる）
->データ間の依存関係として登録される
}
248:通知
770:@wait offshore X 1010100
afp search.
keyboard shortcuts
tools{gds,kbdacc,qwd,}}
eclipse template
245:printout + auto print out with printed tag infos
428:@wait それより、自動リンクによるそれ
427:@wait pyramidで、そのキーワードについて１位を取れるような額
242:形容詞
333:formtagへのバリデーションの以降
422:プロジェクト内のform,link要素の解析と管理？
600:オフショアコーダーだと納品までが遅い？
普通と比べりゃ遅くないんじゃないか。
100万円を結局2週間かかっているのは
pmが時間がないからで、
ター君がそれに寄りかかっているだけ。
本当はテラー使っても2週間かけるような
人に100万は払えない。
499:RequestTests
498:tested bugs
58:資本集中
589:ネックの指摘
588:スケーらブルに
56:リクルート
495:notify to Mails of MembersOf Projects
587:モックまでの効率の改善
586:モック型営業を可能にする
769:24モニター
afpサーチ
bugtracker
quick window
keyacc
clipdiary
videoでシェアー
肉
水
コーヒー
パラレル化（作業分担する）
template
amateras
firefox以外
493:deploy to dev
677:CommonTranslation投入？
768:効率化候補リストアップ＋ROIに。
676:DesktopFileUploadパターン
767:彼らを効率化
766:分割作業とかも時間になる。これはテストも一緒か。
490:FirstMvn
765:specsを分割するプロセスを入れる？

50:デザイン = design
148:http://galaxy.andromda.org/docs/andromda-bpm4struts-cartridge/howto10.html
581:better storyteller
673:Set##modelclass####Attr##で
そのAttrを探してきて吐き出すようにする。
Grep##modelclass##On##Hoge##も。
672:XlsImportパターン
671:セキュリティ的にoffで
classのロード時にはoffだけど、
高速に実現できるようにしておく。
762:顧客満足
145:案件（金額）の最適な量を書く。
670:ビューとして、チェックボックスとかで、いれないやつを削除して。
329:seo
761:経過時間を短縮
（1人で10日でなく3人で4日に）
760:パラレル化
418:http://localhost:8090/st/VerbDetail.do?id=20
234:ReverseTemplate
417:Preperation.java
233:CsvImportPattern?
140:マーケティングリサーチ
415:ajax post
231:add attr to class
412:#keyword [[記憶法]]
411:画面仕様も記憶法で覚える
501:general bug test
397:ajaxのcrudパターン。
489:StorytellerCodesDownload
48:coding modification
579:コモントランスレーション増大
47:サービスイン。配置  = deploy
578:パターン数増大
669:全部についてcrudいれてから消すやつを消す。
45:xhtml2jsp
484:AttrPicking
668:パターン認識
44:TestedSystem
575:http://screencast.com/t/NlmAYu4XAii
667:自動的にやるところ探す
390:jsp templateのエクリプスからの起動
574:charene
666:自動的に
481:manualize
755:AttrPicking
draw er chart
add attr to class
post japanese of attrs and nouns
manualize
データベースとデータベースユーザを特権で作成する
camp2xhtml
MagicDrawing
ProgrammerKickoff
デザイン = design
発注（受注）と契約
検収
CheckTesting
extract out of pattern sentences
「パターン」どおりでない機能を抜き出す。
PostSentencesOnStoryteller
handwriting / with html2jsp functoin, use html
wireflame

mock
wireflaming from mock
name of story
請求
sales
営業活動

coding modification
CodingTimeDbMismatchSoloving
サービスイン。配置  = deploy
CodingTimeMvn
xhtml2jsp
CrudToModelInCodingTime
TestedSystem
general bug test
PostMismatchTestWithBookmarklet
PostTestsForSummery
見積もり項目金額設定。
GeneralBugTest
UpdateNounsAndAttrsAboutJapanese
見積提出
wireflaming from scrach
storyteller
バリデーションルールの配置
put validation rules on each post
Preperationの実行
designer
デザイナーの選定など。
network phpmyadmin

ai
MismatchTests
dw
ManualFromScratch
FirstDeploy
Nouns
UpdateTestsWithSentences
PostJ2eeStoryAboutEstimation
css/first request
Post CommonTranslation
名詞抽出
andromda app
manual2RequestTests
manual(procedures)
storytellinginterview

natural text from client
create struts helpers in eclipse
create java project in eclipse
MagicDrawか紙かnodepad
RuntimeNodeOf
@out Find GoalNode
[[Choise]] From Verb
nodepad
@out RuntimeNoding
RuntimeNoding
通知
FirstModeling
投函
RequestTests
tested bugs
notify to Mails of MembersOf Projects
deploy to dev
FirstMvn
add attr to class
push to teller
StorytellerCodesDownload

663:一人当たりの計算機資源量
137:セリングをなくす
229:draw er chart
add attr to class
136:フリーテクストで。チェックリストで。など。
コミュニケーションはどうか。きんがくは気にしたか。
ルックスは気にしたか。ルックスは気に入ったか。
気に入ったとしてあったほうがよかったか。
また今後開発があったら一緒にやりたいと思っているか。
答えにくいか？アンケートについてどう思うか。
228:post japanese of attrs and nouns
661:hotdeploy
752:MismatchTests
135:聞いてみる。改善点をもらう。
227:データベースとデータベースユーザを特権で作成する
134:顧客満足までをテストシートに
318:発注（受注）と契約
750:ManualFromScratch
317:検収
316:CheckTesting
315:extract out of pattern sentences
「パターン」どおりでない機能を抜き出す。
314:PostSentencesOnStoryteller
312:mock
400:storyteller
387:swt(desktopの自動吐き出しも）
477:cui
569:CodingTimeDbMismatchSoloving
384:開発、とかそういうことも予算比率にしといたほうがいい？
ノードパッドで優先されるべきでは。
568:CodingTimeMvn
291:素人っぽい人でもバリデーションできるようにする
567:CrudToModelInCodingTime
659:tomcat待ち時間改善
474:IncrementalGrep
566:PostMismatchTestWithBookmarklet
749:manual2RequestTests
565:PostTestsForSummery
564:見積もり項目金額設定。
656:nullポとか出るよね。
画面ごとに出るよね。
563:GeneralBugTest
65:支払い額決定
64:支払われる
63:支払いサイト決定
78:テラーマシーンとテラー経営とで利潤を分ける。

61:盛り込み先が誰かにとって有利にはならないようにする
60:一般的コストの盛り込み先の合意。
75:コスト全額
74:コスト以外の支払い額
73:コスト額の支払い額
19:労働は、相場と比較で計量。
この分は「コスト」とする
（プログラミング、テスト、事務、XHMTL、JSPコーディング、使用策定、モデリングとか）
18:相場との比較で図れないもの
（結果として儲かり具合がわかるもの）
は、内部的なアイデア群で比較
17:比較
70:コストの支払いサイトの決定
16:貢献の計量
13:投機（リスクを買ったっぷり）
9:#wait みんな、WINWINしてるー？と聞く？
81:テラーマシーンを貢献に追加
経営に貢献を設定
それぞれについて点数を設定
経営についての人を追加する
27:実際の支払い
（利益分分配を支払い済みに更新にする）
11:「MOZILLAは会社をでっかKうする人ではなく
でっかくなった会社に入りたいやつらばっかに
なってから程なくつぶれた」
を避ける
80:点数をつける
26:印象でスコア
10:着金あり案件への関与も当然報酬がある
7:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
                                 R U N T I M E
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
25:頭数抑える
5:着金無し案件への関与も報酬を
4:全貢献に貢献
36:案件のProfitを更新
3:みんなwinwin
35:分配貢献の分配割合合意（合意済みにする）
34:分配貢献の点を計算
33:分配貢献の全体貢献に対する割合計算
32:分配貢献を登録、更新、削除、一覧
31:案件のコストを登録
30:案件の登録。
案件の収入額なども。
45:案件のコストを支払い
59:支払いのタイミングを後にすることも貢献として評価する？
42:案件（顧客があり、着金がある）において
テラー改良がある場合
57:顧客からの支払いサイトを案件にセットする
41:案件の利益分分配
56:1.毎月に分配
2.清算するようにする？
40:人
66:支払いサイトを決定する
21:1.kable
20:8,gggg 

9:40時間 per month
8:家に帰る気がする＋コード各期がする
7:20h/month
6:dcを避ける（kいつでもできる）
17:邪魔されずに食べる
5:発火した時間が一日１じかｎ
16:米の飯とか
34:ddddを控える 8/Month
4:肉を食う
3:storytellerbase
13:music
31:http://www.realtokyoestate.co.jp/estate.php?n=4801
http://www.realtokyoestate.co.jp/estate.php?n=4915
http://www.realtokyoestate.co.jp/estate.php?n=2167

12:sing
28:11.cheaper hotel
27:10低血糖直す
26:,7,DC,
25: 6.NC
24: 5.better sleeping,
23: 4.watchable-> pair programmable
22:chaper dddd
4:storytellertools
3:storytellerbase
2:places
5:xxxxxxxx
storyteller
xxxxxxxx
storyteller
superstoryteller
storytelleaccount
scheduler

designpattern/webpattern
restrictionpattern
beaconpattern
xmlpattrens
of pattern
adjectives

bugtracker
translator

runtimenodeSentencesBridge

xxxxxxxxxxxxxxxx
autonoding
basecampbridge
contextbase
nodepad
textflow
rssmailer
storytellerinstallpad
xxxxxxxxxxxxxxxx
blog
en

estimate
gasweb
gasbooknet
komono
mazdaestimate
motherhouse
pmcsgml
pmcxml
simpleandhonest
simpleblog
sm
startbahn
tkm
4:storytellerchanking
3:projectをリストする
11:CommonTranslations
5:mock
8:ValidationRuleAssign
3:StorytellerCodesDownload
17:@wait OutOfPatterning == coding
20:@wait test
56:@wait 修正
55: GoalNode ==  = jsp
14:配備
13:@wait sql dupmpfile
12:@wait TestedSystem
11:@wait war
10:SyncToy
47:@wait modeling
46:@home @magicdraw 
39:@eclipse MagicDrawing
38:@wait FirstModeling
37:@wait FirstMvn
40:@wait AttrPicking
36:@wait FirstCopyCoreJar
35:@wait put CommonTranslation @storyteller ( http://storytellermachine.net:8080/storyteller/J2eeStorys.do
34:@wait PostSentencesOnStoryteller
9:配備
33:@wait StorytellerCodesDownload
8:@wait server url
7:@wait ター
6:@Air @secretary サービスイン。配置  = deploy
5:請求
4:storyteller
3:storytellerdesigner
19:@wait テスト
22:@wait mock
3:andromda
maven
jdk
set environment
eclipse
amaterases

ftp://ftp.magicdraw.com/pub/MagicDraw/community_edition/9.5_sp1/ 
     http://galaxy.andromda.org/index.php?option=com_content&task=view&id=105&Itemid=89 
     http://galaxy.andromda.org/index.php?option=com_content&task=view&id=114&Itemid=42 
tomcat
templates
6:have list in ctrl+l able
4:ProgrammerKickoff
3:StorytellerKickoff
27:better communication
76:夜は人いないので独り暮らし的に使える
26:CRM
75:夜合計8万＋昼合計30万。
74:一組夜間4-8万かつ
49:storytellerbase
72:東窪があと2万払う（10万になる）かつあと8万。
稼いでる人一人かな。
22:10000/h
71:あと10万
69:丹羽と東窪と岡本で20万。
20:thestoryteller coding 20h / M ,200000/M
18:hotel代　50000/m
65:夜間だけうちの彼女が使うっていうのはどうか。
これで6万出す。
6:avoid dddd輻輳 50000/m
64:金額38000を埋める
5:having dddd
63:意志決定力
62:美しい
3:storytellernest
84:fukide
59:room
31:no interupt in daytme
29:be up in daytime 200000/m
78:女性？
77:昼30万
2:メタテスト
サーバはすでにありますか？
ホスティングでしょうか。
契約がすでにありますか？
回線は既にありますか？
グローバルipありますか？
支払方法はなにをとりますか？
それぞれについてサービスきまってますか？
参考URLありますか。
画面仕様ありますか。
各画面についての画面仕様について、他のサイトのURLの参考資料とかでもいいのでありますか。
ツギハギでもかまいません。
ログインという概念があるサイトですか。
データ投入は管理画面が必要ですか。
物流との絡みがありますか。
発送作業が必要ですか。
javaでいいですか。
自社サーバとかですか。
予算額が先にきまってますか。
売り上げ額とスパンのセットが先にきまっていますか。
サービスインの日取り
デザイン担当。
デザインから出てくる資料は。
xhtmlコーディングは誰がやりますか。
スケジュール管理は誰がやりますか。
イタレーションでいいですか。
コーダーきまってますか。
運用は誰がやりますか。


14:コード書き出し（手動）
13:自動導出の定義を書く
9:Of記法によるNoding
8:nodeから名詞と動詞と形容詞を導出
7:is関係とof関係とof関係の数を記述
6:因果と重力での配置（ノードパッドの該当図に似せて配置）
5:因果導出Listenterと自動導出を書く
4:導出書く
3:パターン選択
18:デバッグ
17:テスト
16:デバッグ
15:eclipse補正
5:storytellers_CF.xlsを修正
8:
3:storytellers.CF
12:金額などでアラート
11:今回も再発しようにする
10:テラーに利益がない状況を発生させないようにする。
6:サステイナブル
　かつ
スケーラブル
5:相場より多い額
4:PMにモチベーション
15:告知を
3:storytellers.contract.with.outsourcings
14:preinterview
13:（責任のリスクを利益のチャンスを）委譲するか、
テラーが持つかを都度契約する
884:創造的な考え
883:modelを開く
882:つなぐ
881:品質管理者キックオフ
880:品質管理ランタイム
769:eat_at_home
768:アペタイト
767:調理
766:better_食事
765:secretary
764:secretary.buildtime
763:pknk
179:まね。大企業による敵対
762:移動少ない
178:リスクの確認
761:departure
49:非公開株で、配当金を年利で5パーくらいに設定する。
リスクとメリットはキャピタルゲイン
何のメリットもないんじゃないかと。
先物買いか。
177:人事
760:channelbase
174:IP用かアセットセールか選択する
173:ゴールの設定
649:数字と記号
172:charene
648:相手に直接的な利益、売上などをもたらす
楽しい。モチベートできる。
創造的。
171:IPO
647:美しい
646:口調
41:別の会社やれるようにすればいい
645:発火
40:他の人の意見が入るのを防ぐ
644:show it with charts
643:Simple as google
879:オフ会主催
642:今回のご提案は、私ども○○社が一丸となってお手伝いさせていただくものです。社長の○○も、必ずご期待にそえるよう最大限の努力を惜しまないと申しております。メリットを感じていただけたのであれば、ぜひとも私どもにお手伝いさせてください
878:市場に出ないのを避ける
641:イメージをきちんと用意する
877:ナンパ
640:リンクはフルーツ
876: [[fof]]
875:ブランディングと広告
874:自動化
873:遵守(reminderメッセージに従う）
872:1010100
871:@cycle
870:一回にひとつの習慣をやるようにする
286:物語のゴールまで導いた後に必ず用意してほしいのが、“導入スケジュール”です
759:風邪予防
758:120000円/年
757:meeting
756:ask
755:what you saw instead
what you expected to see
steps to repeat

754:Run the mock on eclipse
753:steps to repeat
752:what you expected to see
751:http://www.enclosing.net/test_way/test_way.html
39:非公開株
750:what you saw instead
166:一人月間3プロジェクトかつ300万までの規約。
165:SC
164:プロジェクトごとアサインではなく、
GTDのコンテクストベースに類似した形態で、アプリケーションごとで
エクリプス、ブラウザ、ジング、CVS、ディックドロー・アンド・ドロメーターとプロジェクトスタートの４コンテキストごと。

639:プレゼン
638:人事
635:売上
869:自分犬扱い
632:better teaming for storytellers
868:http://www.flickr.com/photos/organize/
631:motivate pknk
867:風邪
866:スケジューリング
865:better_考える
864:忘却
863:nodepadでの一元化
862:節制
861:motivate
860:それが起こす結果（親ノード）を考える。
それはどんな悪いことと良いことを引き起こす？
749:関係モデリング
748:Preperation @Home
747:coder outsorcing 
746:offshore outsourcing
745:file to modify ftm
744:翻訳
743:仕様理解改善
742:share
158:storytellers.   [[人事]]
741:notify
29:WinWin
157:marketing_storyteller
740:assignment
155:ナプキンテスト
26:収益高速化
154:居場所を確かめ、再設定する
25:資本受け入れ
24:サイズ
152:利益率
628:投資をしたい人に集める
23:広告・ブランド（信頼）
151:AC
627:利率でいい。
150:勢い
626:offshore
386:でかい
625:4sm
20:marketing_storyteller

859:目的
622: = Noun
858:解決
621:sss化
857:treadmill
620:名詞抽出とモデリング
856:ビタミン剤
ビタミン的なさぷりを取る
855:血流
854:デザインパターン
853:同じ語を使う。
852:ドメイン駆動
851:reminder
850:比較と絶対値
739:モニター、マウスとかキーボードとかのコンピュータオペレーションの迅速化
738:下級PGでもかける仕組み
737:難易度に応じたアサイン
736:上場するときに時価総額がいくらになっているのか？
260:システム開発ドットコムなどを買収する
735:必要資金調達額
734:IPO時の発行済株式総数
733:TestedSystem
732:@wait sql dupmpfile
731:@wait war
730:SyncToy
619:シナリオ　*　名詞抽出　*　関係化
618:画面仕様　*画面遷移
141:マイルストーンノード
617:modeling
140:数値的マイルストーン
849:storytellinginterview
612:体を使ってコントロール
848:数えてみる
847:ui specs and detailes for difficult things
610:それぞれの重み。
XLSかmmかndで、点入れてく
846:Sentences
845:探
844:薄い時がある。
843:なにか機材に固めてしまう？
842:どうして？
841:なにを？
257:見込み客フォロー
840:どこで？
256:見込み客に特別アカウントを作ってサイトを閲覧させる。
255:価格戦略
254:1)「販促」への投資・・・マーケティングを動かすための宣伝広告への投資です
2)「採用｣への投資・・・よい人材を得て会社を組織化するための人材採用への投資です
3)「教育」への投資・・・優秀な人材をさらに伸ばすための教育への投資です
4)「環境整備」への投資・・・優秀な人が集まり、プライドを持って働けるようになるための職場環境作りへの投資です
5)「システム」への投資・・・競争優位を決定づけるためのシステム導入への投資です
729:@wait server url
728:ター
727:シリアルとパラレル。
シリアルにしたときのボトルネックを探す
251:事業計画
726:sc金額を得る
725:期限ごとに
http://localhost/templates/sctemplate.xlt
からやる。
724:DifficultyPointOnSentences
484:storyteller
139:現在地
723:分解
722:preinterview
137:@wait マップを書く
721:
リスク表
481:広告
136:投資家に対しての適切な目標でありかつ、
モチベーションのため、マップを描くためのもの。
720:チェックリストに通す
■チェックリストで自己チェック
漏れやすい機能要件 

セットアップ・インストールプログラム 
データ変換ユーティリティ 
サードパーティ、オープンソースを使うためのラッパ 
ヘルプシステム 
配置モード（リリースモード） 
外部システムインターフェース 
忘れがちな非機能要件 

正確性 
相互運用性 
更新性：ごめん、よくわからないで書いている。 
性能 
移植性 
応答性 
再利用性 
拡張性 
セキュリティ 
生存性（？）：ごめん、よくわからないで書いている。 
利便性（ユーザビリティ） 
これをどのように工数に反映させるのか。
私は定型の手法を持っていない。すまない。
計測できるものならするが、非機能要件などは計測は難しいのだ。
テキトーに実装工数を何倍かしている（1.1倍、とか）。

作業の時間粒度を10時間以内にする。
480:中心の移動
134:目標を設定する
609:noding for both (or all ) of the nodes
608:比較
131:資金調達
366:営業の仕組み
365:営業
364:仕組み
363:仕組み作り
839:目的探す
602:封筒
838:パターンマッチ
601:請求書印刷
599:請求書
837:因果関係の目的ノードから。
600:投函
598:見積りしたものから
360:4sm
836:時間割り
597:一日予約
835:FirstModeling
596:sc
834:テスト
595:サービスイン。配置  = deploy
833:@keyword [[debug]]
594:請求
832:OutOfPatterning == coding
831:開発機への配備
592:ほげほげほげ
830:xhtml2jsp
590:あああ
243:1.何に投資したいのか？（投資項目をまとめる）
719:幻想ファクターなくす。悲観的に。最悪のケースは8倍くらいにはなる
479:バッファー、自動化、分解、現状、網羅、逆、
718:@fired
478:目的、選択肢要素、選択肢セット
717:avoid getting [[cold]] AGC
477:runtimeの順序替えしてみる
716:share_photo
476:質問の仕方を変える
715:適材適所化
475:現状、をかく
714:秘書プラン
713:レス
473:ノード自動変換されそうな単語にする。
一般的な名詞化をする
128:storytellers.contract.with.outsourcings
712:KPI設定する
472:分解的に数える。
人間なら手が二つ。
指が5個。
->modeling
711:習慣。KPIを自己設定してもらう。
710:個人にロールを設定する
359:会社
122:http://j-net21.smrj.go.jp/srch/shikinsearch.do;jsessionid=1E3459E7AF117C872EFEAC2BC44923E2
http://www.minato-ala.net/guide/kaigyo/kaigyo05.html
http://www.ipa.go.jp/jinzai/mitou/2008_2/hontai/koubo.html
358:URL

355:事業計画
354:資金調達スクリプト
829:outsource
828:decide with who
589:
827:jungledisk
588:
826:share
share image
share text 
share files
825:web
 + FileUpload pattern
586:
824:iweb/dw/site
823:subversion
584:
822:usb key
583:
821:cvs
582:病気にならない
820:sambe to docroot
581:食事を定期的にとる
236:ストックオプションも含めてかな16パーに押さえる。
580:死なない
235:投資を16パーに抑える
709:チームの習慣
232:資本政策
708:recruitment
リクルート
雇用
707:メタレベルの人のタスクもテストで。
eg:品質管理者なら
[steps to repeat]ユーザー企業の実ユーザーと、経営者様、技術担当者様をが仕様を見る->開発機のURLに行く->全工程を見る
[what expeceted]まったく同様であり、品質に問題がないと思える。

706:教育制度
705:情報や知識が社内で共有化されている
98:必要な機能と比率と購入
704:非属人的
703:考
702:runtime/builttime分離
699:mock
701:purchase
698:story
700:annotations
697:履歴
115:Runtimeをstorytellers.runtimeとして作る
696:パターンマッチング
695:提案すべき最適なタイミングの検出
694:提案アルゴリズムの提出
693:network?
692:keitai
691:どうすれば
690:砂糖の多い、量の少ないコーヒー
819:gotomypc
818:gw
579:storyteller
817:basecamp
816:パブリックであるものの指摘
815:better
814:flow
813:マニュアル
574:花束をプレゼントする
229:人事責任者の登用
812:RuntimeNoding
228:福利厚生、
811:CFを修正する。CashEventsを修正
572:出会う
227:従業員用ハンドブック作成
810:@wait アカウント画面をアップデートする
http://localhost:8090/en/CashEvents.do
→現在の値、入金の値などを事実にそろえる
571:sex
226:じゅう
225:マーケティング責任者の雇用
224:資金調達チーム作成
109:デザイン
総務
ストーリーテラー
プログラマー
テスター
マーケター
エンジニアの審査
エンジニアさん自体
パッケージャー
販路
パッケージ選定
エンジニアの獲得


85:開発、広告ともに発注
689:肉
84:社員はブランディング重視かつ少数雇用。
都度相談。
ジムはsecretarize.comで処理かける。
688:日常的に[[栄養]]を
83:常に６ヶ月耐える。

687:運動
686:美しく
685:手リソースを用いない方法
80:株式の購入の上限を500万とする
684:高岡君の質問反映
683:チェック
15分で読めるか第三者チェック
書くべき比重を正確に。量を。
内容が専門的すぎないか。
プレゼンテーションとの役割分担を
682:資金繰り。原始的な点では
すでに体験済み。
また、そうしたシステムの構築の経験もあり、
業務としては（もしかすると会計士さんとか
その道のプロよりも）
低いレイヤーで理解している分だけ、
詳しいかもしれません。
681:、複数の視点でチェック
680:事業計画書
809:コスト減らす
808:収入増やす
807:places
568:複数主体に
806:カナルカフェ
567:リスク
805:クラスカ
566:担保
804:ポンスポンスタ
565:割合が利益を超えない、
かつ
利子分が純利益の30パーを超えないことをバリデートする
803:ナプキンテスト.storyteller
219:キーパーソンの選定
802:StorytellerCodesDownload
218:キーパーソンの引き入れ
801:食事
799:@air 
217:CEO経験者登用
800:message = email / phone / skype / goto / see
798:スケール
797:速度とROI
215:公式サイトの開設
796:assign
214:戦略的パートナーシップの雇用
795:長期的な内容？
213:営業責任者の雇用
794:外出
212:売買契約書の作成
793:億万長者と人脈
211:著名経営陣雇用
792:情報
210:社内会計士雇用
791:応援してくれる人が多い
446:mismatchtest
790:すごいROI
679:販路獲得計画
74:客を持っているSIerに売る。
678:事業プラン名
73:労働力
677:市場環境
676:リスク、ネガティブチェックと解決策
675:競合優位性
674:経営プラン
673:事業スタッフプロフィール
672:未踏に提出したやつ簡易化する
671:権利対策
670:人材の戦力化速度
8:巨大化一般的成功
209:販路
208:財政管理システム構築
789:長期計画
207:広告会社・マーケティング会社と契約
5:☆ROI無限大
テラーは20パーセント以上の利益率の投資先でこれを福利化
788:複利
206:2nd事業計画
787:感情
786:効率
204:企業ナビゲーター
785:motivation
203:開発は外注でもらってから支払契約で問題ない。
必要に応じて支払い先に分割を依頼する。
784:健康
202:一貫性
783:StorytellerRole
201:プレスリリースの発表
782:@magicdraw
200:人づての熱意伝達と複利的勢い
781:AttrPicking
436:一回する
197:ストックオプションは後半までつけない
780:再現指摘
435:JingedCheckList
434:モデリング
433:ランタイムをモデリング
194:シード投資
1000万を1000株で。
10倍で、60株で600万
432:仕組みで何があがる
669:どんな価格帯の商品を扱うかは、経営者として一番の悩み所だと思います。では、いくら位が「高額な商品」だと思いますか？買う立場で考えると、うっかり「100万円！」と言ってしまいそうですが、実はビジネスとしては、100万円は安い部類に入ります。さらに言えば、100～200万円の商品でリピート性がないものが、ビジネスでは「一番儲からない商品」といえますから、注意してくださいね。リピート性が低いなら、最低でも500万、できれば3000万円位の商品を扱ってください。
431:仕組み化
668:display
667:search
666:axisフォントでいられからpんmg書き出ししてディレクトリからキーボードでパワポ貼り付けする
665:オフラインの作業
664:アドレス長
663:紹介してもらう人を探す
662:通知自体が[[通電]]
661:sales
660:品質管理？
895:design  a 
891:寝る
890:ほげほげほげほげ
779:GoalNode
778:test
777:コアコンピタンス認識
776:＋外だし
775:budget
774:team
773:cycle
189:予算
772:栄養
188:CEO雇用
771:栄養素
187:小さい会社。
経営5人、社員10名、アウトソース五〇名の会社
770:レシピ
185:30秒テスト
56:特許申請
184:熱意ある人材を人目にふれさせる
183:値引きと分割支払い
659:designer
182:アウトソースする
658:designmethod
181:天才2割
657:design
180:速度とまねできないイノベーション
655:negative check
654:実績を示す。営業してくれた人にどういうメリットがあるか
653:すごいプレゼン
889:page
652:何が与えられるか。とその実績。
888:PM/storyteller
651:高橋
887:purchace
650:[[kamoneメソッド]]
886:どのコンテクスト？
885:類似は？
6:storytellers開発時間輻輳
5:作業輻輳する
4:常に６ヶ月耐える
3:資金繰り
49:ユータ打診
19:@done SGMLかつ投資
9:winwin
29:たーの利己的許さない
38:@Air そう伝える
48:teaming
28:チームを壊させない
37:テラー適正は
見積もり出してもらう-> 承認のruntime
47:out source
17:@done 会議に僕も行く
7:どこかでストックオプション
27:利己的許さない
16:@Noding インパクト
26:経営権
45:Smallteam
15:速度
5:彼らにモチベーション
34:バランスとれた遅めに経営権
44:外部に体育会計をもらう。
14:対相場割引
4:nirが[[適正]]に兼ねを持つ
24:[[営業率規定]]作成
43:体育会計が必要かも
13:顧客メリット
3:nirが金を持つ
23:@wait 継続案件の営業率に遵守
32:3次開発分も
42:のり.
31:チームに入れない
41:@wait 依頼する。
11:AC
21:利益率
30:説得する
40:@done SGMLはコード書く＋速度出す
10:適正＋5%
20:投資受ける
3:人（東窪）について
1.大企業のスタートアップの一人だった血は感じている。
 こんなものはまやかしであることもわかる。
  いくつか気になる点はある。特には能力分布。
　数の運用能力で天才といわれてきた点。
   2.息子の方は、原始的経営をはじめたにすぎないが、それにしても、
     天才的な経営者とよぶべき経営のセンスがあること
    （経営者が考えているようなことが、
     まるで経験をしていないのにもかかわらず、驚くべき容易さで理解できた。）
2.苦労をした。
　僕の"big why"、なぜ社会に貢献することを通じて金儲けをしたいのか、は
　母に誇らしい気持ち、を感じさせてやりたいこと、そしてある程度の豊かさ
　を感じさせてやりたいこと、父を死ぬまでは生きさせてやりたいこと、
　重度の障害者である父は死に際して多額の医療費がかかる可能性が
　一般的な人間の何百倍も高い可能性があり、これを僕一人で負担する必要がある。
　自分は天才に生まれたけれども、才能にスポイルされなかったのは、性格も
　生まれながらに善であったと思うが、母の幸福がけがされていることに対する
　怒りと、自分に風貌もにているところのある父が精神知能障害を追っていて
、
　生と死や、上のような怒りを客観視することができたからであると考えています。
　一方で、天才に与えるともっとも成功する要因である「苦労」を得ることになったのは
　ある意味では幸運だったかもしれないと考えています。
4.天才性について
　企業をするくらいの人間には天才というべき人間はたくさんいると思います。
　自分の特徴は領域横断性です。通常は、一つの人間が才能を発揮しにくい
　二つの領域で、天才と呼ばれる成果をあげたり、あるいはプロセスに人にそう評価
　させるようなものをもってきました。
　たとえばプログラミングと、サッカー。ファッションと数学。
　小説などの文芸と科学への知識。
　普通はこうしたものの二つで天才と呼ばれていると、それで、
　本当に天才、といった評価がされるようですが、
　僕は独立して、サッカー、音楽（メロディーメイキング）、プログラミング、
　数学、国語（小説執筆や詩作）、英語、デザインや芸術制作で、
　天才といわれてきました。それぞれについてファンや熱烈な支持者がいますが
　彼らは、まさか僕がほかの領域でそれと同様の評価を得ているとはつゆも
　おもわないくらい、専門的な実力と才能がある、と表されています。
　自分以外にこういう才能がある人間を、著名人や歴史上の人物をみても、
　ほとんど知りません。そのうちの五個ほどをみたことのある友人は
　かれも天才と呼ばれている、比較的有名な人ですが、
　歴史に名を残すかもしれないほどの天才にで出会えたことは
　幸運なことだ、などとしみじみいわれたことがあります。
5.人、人脈、友人について
　欠点、長所、あるいは特徴は、極度にお人好しであることです。
　理性的で、分析的である点では一万人に一人ほどのものはありますので
　ビジネス的WinWinの前に、私は悪になることはできません。
　一般的な（ビジネス的）成功者の人格にあげられる人脈についてですが
　スティーブジョブス的というか、天才型です。
　才能が外から見た特徴であり、才能は人を畏敬させますので、
　相手が同様に、才人であるか、才能に対してオープンな人間でないと
　つきあいにくいかもしれません。
　温厚、ユーモラス、礼儀正しい、優しい、といった基本的な徳のもとに
　動いているとは思いますが、課題ではあります。
　コネクターといったタイプではないかもしれません
6.自分にはハートがあったり、人を愛する力があったのは、上に書いたような
　天才が備わっていたことよりも幸福であったと思います。　
　母のために生きてきましたし、愛されてきましたし、愛してきました。
　こうした思いの中で生きてくることができて、
　いずれ死ぬ生をいきるなかで、重要なことだったと思います。
　そういった要素のない仕事はしたくありません。
7.人を率いた経験
7-1.すでに五年ほどはミドルチームでの実務、該当領域でのボス。
　たかだかこの10倍でIPO
7-2.サッカー部のキャプテンで部員百名。
7-3.アートプロジェクト等で20-50名。

6:storytellers.資料作成
4:どうすれば沼に内容をどうにか共有
3:@done storytellers.資料作成
6:全部の画面について名前が必要
5:テスターさんに仕様から作ってもらう？
3:StorytellerStyleSpecs
2:SpecsFromCustomer
5:契約人数確認
4:売り上げ金額を確認
3:storytellers開発時間輻輳
5:storytellertools
2:1.mitsumi keyboard
2.nice moniter
3.nodepad data
4.window's eclipse
5.network
6.faceclean
14:ask for vital to buy
13:ask vital if  you have
9:windows + mac
12:xp official disk
8:windows eclipse
10:pararells
159:User Selects
158:actual Code
157:Post
148:ピックアップ
156:attr
3:User SelecAttrsOfNodeAndCuPostAndAttach
147:補完
155:PostUseOfAttr
2:User Assignes Rule To AttrsOfAPost
146:eclipse上で
154:J2eeStory
145:良いインターフェイスでやりたい。
162:System Update StrutsConfigFileOfAJ2eeStory
161:System CU StrutsconfigsnippetOfPost From NameOfPost
152:error messages 
160:System Creates FormBeanActualFileOfFormBeanOfPostsStrutsActionsOfSentencesOfAJ2eeStory
151:Rules 
5:=modeling * RuntimeNode + BuildtimeNode
3:storytelling
16:メタテスト仕様書
4:サーバはすでにありますか？
ホスティングでしょうか。
契約がすでにありますか？
回線は既にありますか？
グローバルipありますか？
支払方法はなにをとりますか？→銀ふり
それぞれについてサービスきまってますか？→口座くれ
参考URLありますか。→看護婦ナビの逆
画面仕様ありますか。→ない
各画面についての画面仕様について、他のサイトのURLの参考資料とかでもいいのでありますか。
ツギハギでもかまいません。
ログインという概念があるサイトですか。→保険師と企業がログイン。管理画面は。
データ投入は管理画面が必要ですか。→はい。内部ユーザーの管理。
物流との絡みがありますか。→ない
発送作業が必要ですか。→ない
javaでいいですか。→いいです
自社サーバとかですか。→さくら
予算額が先にきまってますか。→５０万。システム３０以下か
売り上げ額とスパンのセットが先にきまっていますか。→
サービスインの日取り→１０月中旬。９月中。１２月１日
デザイン担当→１０万の人がいる。４０万。システムと関連のない紹介頁が１０頁必要。→
デザインから出てくる資料は。→aiかpsdか。xhtmlやhtmlではない。
xhtmlコーディングは誰がやりますか。afzal
スケジュール管理は誰がやりますか。→木村さん
イタレーションでいいですか。→いい
コーダーきまってますか。
運用は誰がやりますか。→清水さんが責任持つ。マニュアル必要。
動作時のゴールってなんですか？→ウェブ画面に、保険師一覧。
動作時の収益が決定するのはどこですか？→
ドキュメント納品物が必要か
ユーザー教育は
開発場所は。拘束は。
ツールに縛りがあるか。
支払方法
ajaxは？
javascript(dynamic 性は？)
performanceは？
画面の表示秒は6秒以上10秒以内で問題ないか？
特急性は？
=power(n,2/3)） より速いか？例：3人月なら2ヶ月、5人月なら3ヶ月、10人月なら4.6ヶ月、20人月なら7
50人月なら13ヶ月。
開発中にどれくらい、変更に許容する必要があるか。
3:storytellinginterview
7:システム開発基本情報インタビュー
13:受注までできればいい。
予算額が先にきまってますか。
トランザクション。ぶちあげてるだけなのでない。
サービスインの日取りは2月14日近辺。
デザインから出てくる資料は。
2月14日に運用マニュアルいる？
運用する人は未定。
動作時のゴールってなんですか？日本人が見れる。かえる。受注まで。
佐川さんとの連携もなし。連絡先の提示くらいまｄ。え
1:stream
5:twitter,facebook,basecamp
2:通知
1:stretch
5:gym
4:do it at home
235:stscが英語を活用することが出来る
201:digitalize
232:メールをnodeに移す
200:text2nd
231:スケジュール管理
230:議事録
109:decide with who
108:share
share image
share text 
share files
107:web
 + FileUpload pattern
138:支持出す
28:============================= 
         Bulidtime
=============================
106:iweb/dw/site
137:勉強してもらう
27:デザイン系とかにいく
169:#wait 録音
199:外出中の情報環境強化
89:会社とかの名刺に
167:#done mailとか電話でサッチャンに伝えておけという（のをノードパッドで連結しておく）
198:x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x

134:ヒューマンインターフェイス
166:#wait ター
102:sambe to docroot
56:どうすれあプライバシーのあるものを区別できるか
197:digitalize
133:text2ndを利用してnd化
23:月額20万
165:#wait nodepad最新をコミット
101:gotomypc
55:シェアすべきもののポインティング？
196:text2nd
86:受信
22:stsc
164:#done アプリ開いて一戸ッツ実行してjing
100:gw
195:
163:#wait toukubo
194:使い方覚えさす
193:commit nodepad
83:photo（撮影）
161:manual
192:#wait get card
81:#wait digitalize
190:#wait ターに
80:#wait 書記＋digitalize
227:会議に参加、書記
226:秘書業務
225:数値化してベストなものはどれか
224:stscにとって何が楽しいか
222:#google 日時を決める
221:#keyword [[会議]]
220:stscが英語の仕事が手伝える
19:automate
18:[[afford]]
159:#wait 作業の経験
16:stscにpyramidテクスト書いてもらう
5:designを、トウクボとかがもってるメソッドをとってやってみてもらう
158:#wait snapshots
79:#wait ビデオで会議を移すとかして
15:mail / phone / skype / goto / see / basecamp / generate rss * readers

4:design
14:nodepadによる思考展開
3:xhtml？
123:#wait どうすれば書記*digitalizeできますか
12:mail / phone / skype / goto / see / basecamp / generate rss * readers
154:#wait ショートカットと効果をmanualize
122:どうすればヒューマンインターフェイス
153:#wait ノードパッドの使い方伝達
74:電話番号公開してもらうか、
携帯買ってもらって？
184:#wait share
41:ノードをシェア
183:#wait smbかjungledisk
40:どうすれば今どういうノードがアクション可能かわかるか
182:#wait どっかでノードサーバ
71:ノードパッドのシェアーをしてクリックしてもらう
70:外出中の情報環境強化
219:英語学校へ通う
218:英語を習得
217:安く
216:違法コピーしない
215:ヴァイタルが買ってライセンスを渡す
214:#wait stscが買う
213:ソフトを手に入れる
212:storytellerのJSP前のXHTMLが出来る
211:stscの手に職がつく

210:xhtmlとデザイン
118:mail / phone / skype / goto / see / basecamp / generate rss * readers
39:今どういう仕事があるか、の伝達？
148:#wait おきてるたいみんぐをあわせる
68:外部へのmessage
146:#done ペアプログラミング
67:ヒューマンインターフェイス
145:#wait stsc
99:basecamp
113:広告
176:mp3会議配布自動化
112:#wait ター http://emobile.jp/charge/plan.html
143:#done message = email / phone / skype / goto / see
97:share
175:どうすればemobile？
142:#done ask 一番安い新規購入、契約をお願いします。機材費で。
96:いつでもアベイラブルにしてもらう
174:ipodかemobile
110:ファイル操作で
141:xhtmlを最高に彼女なりに速く入門してもらう
95:共有
173:ラップトップとemobile
140:自分でしてみて
94:#wait 一回レクチャ
172:ビデオ会議
171:#wait stscに、会議の予定をみて、(mtgとｊか）
直前に録音か、参加可能かをつついてもらう
92:#wait messageタグとかを見つけて自分で
170:#wait ノー意識
91:#wait 発信
209:hnsc78@gmail.com

208:hnsc
205:gw
204:stsc
5:SC
4:
3:stuckless
554:キューピッツ
161:@secretary kickstarter
500:レベニュー方式でデジタライズ動いてもらう？
553:より断片化
552:動的な注意
551:発火のコントロール（RT）
550:投資の概念の援用（閾値）
403:投資？
305:記事量
358:ツイッター担当？
357:関与感覚
749:作業量による
356:ゲリラシステム
746:25人
743:押印の前までの資料を工程通りに
649:工程管理とか
741:書類？手数多い？
647:作業そのもの
699:@wait 予算5万でそういうのやる
645:投資家が参加の可視化で物語に参加してる感じを当たる
698:@wait 海外ニュースサイトに販売できるかどうかの検討
643:僕がどうやって広告を
とってくるか
696:紙を投資的にやってくれるところ
549:RTによる投資という形式
695:@wait 予算
548:ソーシャルビルド
694:予算ちょっと
547:情報公開
693:登録機能のバグ治す
599:トランスくライブしてもらう
544:キーワードリンクに入る処理
598:翻訳してもらう
543:アーカイブ
595:@voice コンテクストを吹き込み
591:管理
349:iPhoneの閲覧数？
442:@wait SFCか、遠方（田舎）な人たち
441:@wait オンラインでエバーノートとかやる人を探す
494:@wait 広瀬くんの友達以外？プログラマー？十分？
493:@wait more 20hours / w
346:ツイッター対談
492:@wait 大島くんとかに後輩とか？
738:Noel
491:@wait piqnさん
737:コンセプトの明文化と部数の明示
490:@wait 誰か紹介してくれ系
736:媒体資料
735:@wait 会議設定
789:
734:PR
788:オーナー向け
787:紙版
786:WIRED
638:PM
688:開発者
781:CF
687:自動リンクする仕組み
633:Tumblr Integration
686:自動リンクと言葉での出合わせ＋ナウネスフィルター
632:Amplifier
145:記事あたりのPV
684:コンテンツ
144:記事あたりの利益
630:人
683:キーワード量
682:@wait 指示
142:ゲリラ連絡網に連絡
589:archive_digitalize
681:@wait してもらう
141:ゲリラ発動
588:権利処理
680:@wait コンテンツのソート
587:記事
586:archive
489:@wait 西久保さん
580:横展開
484:@wait てつじい？
483:@wait SFCの学生で候補つくっとく感じかな
729:紙の会社
728:広告主で
481:レベニュー参加してもらう人探す。
727:二本立てにするか
725:add on 一つ
778:amplifier
722:利用するモックアップ
776:candidates
236:株式公開
721:amplifier的にデザイナーを
628:hacked.studiovoice.jp
235:投資
627:データAPI
773:サーバー代バーター
679:どっから？
625:紙に一回今までのウェブのヤツを出す
678:NEW
677:NEWに
770:
676:TKPでSV制作ゲリラ会議
529:投資原理利用
622:許諾をもらう。１０万くらいか。
675:人
528:レベニュー資料
621:odesk
674:参加と可視化
620:コーディングとWP化
673:出会い
672:参加の体験を参加を誇りにする人。と出会い
525:@wait あと一人くらい？
579:最初の成果
671:@wait PM
670:@wait 進行管理
577:融資実績
429:プロジェクトプロセスの公開？
428:人集めを形にして人を集める？
574:定率外注
572:費用
478:@wait 遠方でオンラインの人。
571:アタックする
477:@wait あと週３０時間くらい（一日0.6人くらい）いたほうがいい。
平日かな？
570:投資家
325:コアメンバーが会議こなくてよくなってる現象
717:編集費用を高くする
714:どうすれば権利処理しないで出せてしまうコンテンツから出す。
768:どっち。媒体資料か、
イノベーション事業か。
両方だ。
713:流通
767:@wait New会社設立7月15日
374:広告営業
712:@wait 沼
619:デザイナー
372:こちらの説明資料
618:紙と携帯
371:連絡
617:マルチチャネル
370:タンブラーアテンション
616:@wait 記事辺りの費用
669:フォロワー
762:android
668:新しさ
667:加藤さんに聞く
127:reblog
760:加藤さん分の未払いを計算する。
666:参加者
126:質
665:拡散
611:投資家用資料を英語にする
122:利益率
569:説明資料と実績
568:資金調達
567:enterables
660:費用
566:NEW
510:@wait 大島くんに他にいないか聞く
562:@wait 原稿料
561:@wait 加藤さん
560:キーワードページのiphoneビュー
319:ソーシャルビルド
709:割安にするので受託くれ
708:アンプ広告
369:メディアパートナーズ
707:人事広告
314:英語と中国語のチャネル
706:参加の可視化
705:アンプしてくれる人
759:役員報酬の年額を裁く。
704:署名に入れる
758:広告費
703:10万の予算
702:オフショアでできる広告営業
756:貸付の除外をする。
363:オープンプロセス
609:tkp2
608:cupidz
700:融資
607:autlinked text
753:紙の制作費の名目
606:予算ちょっとだけ
752:役員報酬の設定
605:ask kaniz for this
659:売上
604:投資でやる人探す
658:PV単価
117:被リンク
750:9/10
603:翻訳
509:@wait OSに他にもいないか聞く
116:記事あたりのROI
508:@wait 他にもいないか聞く
507:福岡在住とか、京大の大学性とか、
600:どこが費用になってる？
506:聞いてみる。
505:人間関係の中から遠目の人をさがせる？
112:PV＝量
559:導線を正しくしたいのであって、
自動リンクだけでいい。
111:広告
557:紙版
501:@wait 遠方とかでオンラインとかでバイト探してる人みたいなので？
117:被リンク
647:作業そのもの
116:記事あたりのROI
699:@wait 予算5万でそういうのやる
698:@wait 海外ニュースサイトに販売できるかどうかの検討
645:投資家が参加の可視化で物語に参加してる感じを当たる
696:紙を投資的にやってくれるところ
643:僕がどうやって広告を
とってくるか
112:PV＝量
695:@wait 予算
111:広告
694:予算ちょっと
693:登録機能のバグ治す
358:ツイッター担当？
305:記事量
357:関与感覚
356:ゲリラシステム
161:@secretary kickstarter
549:RTによる投資という形式
548:ソーシャルビルド
547:情報公開
599:トランスくライブしてもらう
598:翻訳してもらう
544:キーワードリンクに入る処理
738:Noel
543:アーカイブ
737:コンセプトの明文化と部数の明示
595:@voice コンテクストを吹き込み
736:媒体資料
735:@wait 会議設定
788:オーナー向け
734:PR
787:紙版
786:WIRED
591:管理
781:CF
638:PM
442:@wait SFCか、遠方（田舎）な人たち
494:@wait 広瀬くんの友達以外？プログラマー？十分？
441:@wait オンラインでエバーノートとかやる人を探す
688:開発者
493:@wait more 20hours / w
687:自動リンクする仕組み
492:@wait 大島くんとかに後輩とか？
686:自動リンクと言葉での出合わせ＋ナウネスフィルター
491:@wait piqnさん
633:Tumblr Integration
490:@wait 誰か紹介してくれ系
632:Amplifier
684:コンテンツ
349:iPhoneの閲覧数？
683:キーワード量
630:人
682:@wait 指示
681:@wait してもらう
346:ツイッター対談
680:@wait コンテンツのソート
589:archive_digitalize
588:権利処理
729:紙の会社
587:記事
728:広告主で
586:archive
727:二本立てにするか
725:add on 一つ
778:amplifier
776:candidates
722:利用するモックアップ
580:横展開
721:amplifier的にデザイナーを
773:サーバー代バーター
489:@wait 西久保さん
770:
628:hacked.studiovoice.jp
627:データAPI
679:どっから？
484:@wait てつじい？
678:NEW
483:@wait SFCの学生で候補つくっとく感じかな
625:紙に一回今までのウェブのヤツを出す
677:NEWに
676:TKPでSV制作ゲリラ会議
481:レベニュー参加してもらう人探す。
675:人
145:記事あたりのPV
622:許諾をもらう。１０万くらいか。
674:参加と可視化
144:記事あたりの利益
621:odesk
673:出会い
620:コーディングとWP化
672:参加の体験を参加を誇りにする人。と出会い
142:ゲリラ連絡網に連絡
671:@wait PM
141:ゲリラ発動
670:@wait 進行管理
529:投資原理利用
528:レベニュー資料
579:最初の成果
525:@wait あと一人くらい？
577:融資実績
717:編集費用を高くする
574:定率外注
768:どっち。媒体資料か、
イノベーション事業か。
両方だ。
714:どうすれば権利処理しないで出せてしまうコンテンツから出す。
767:@wait New会社設立7月15日
572:費用
713:流通
571:アタックする
236:株式公開
712:@wait 沼
570:投資家
235:投資
429:プロジェクトプロセスの公開？
428:人集めを形にして人を集める？
762:android
478:@wait 遠方でオンラインの人。
760:加藤さん分の未払いを計算する。
477:@wait あと週３０時間くらい（一日0.6人くらい）いたほうがいい。
平日かな？
619:デザイナー
618:紙と携帯
617:マルチチャネル
669:フォロワー
616:@wait 記事辺りの費用
668:新しさ
667:加藤さんに聞く
666:参加者
665:拡散
611:投資家用資料を英語にする
325:コアメンバーが会議こなくてよくなってる現象
660:費用
569:説明資料と実績
374:広告営業
568:資金調達
709:割安にするので受託くれ
567:enterables
372:こちらの説明資料
708:アンプ広告
566:NEW
371:連絡
707:人事広告
370:タンブラーアテンション
706:参加の可視化
759:役員報酬の年額を裁く。
705:アンプしてくれる人
510:@wait 大島くんに他にいないか聞く
758:広告費
704:署名に入れる
562:@wait 原稿料
703:10万の予算
756:貸付の除外をする。
561:@wait 加藤さん
702:オフショアでできる広告営業
560:キーワードページのiphoneビュー
700:融資
753:紙の制作費の名目
752:役員報酬の設定
750:9/10
609:tkp2
608:cupidz
607:autlinked text
606:予算ちょっとだけ
659:売上
605:ask kaniz for this
658:PV単価
127:reblog
604:投資でやる人探す
126:質
603:翻訳
319:ソーシャルビルド
600:どこが費用になってる？
122:利益率
369:メディアパートナーズ
509:@wait OSに他にもいないか聞く
314:英語と中国語のチャネル
508:@wait 他にもいないか聞く
507:福岡在住とか、京大の大学性とか、
506:聞いてみる。
559:導線を正しくしたいのであって、
自動リンクだけでいい。
505:人間関係の中から遠目の人をさがせる？
363:オープンプロセス
557:紙版
749:作業量による
554:キューピッツ
501:@wait 遠方とかでオンラインとかでバイト探してる人みたいなので？
553:より断片化
500:レベニュー方式でデジタライズ動いてもらう？
552:動的な注意
746:25人
551:発火のコントロール（RT）
550:投資の概念の援用（閾値）
743:押印の前までの資料を工程通りに
741:書類？手数多い？
403:投資？
649:工程管理とか
383:動かす
305:記事量
343:automate = 自動化
382:赤い
304:@wait どっちかというと切れること。
342:Patternize
381:凄いcss、をもらおう。
303:better_os
341:PatternMatching
302:@wait OS雇用へのプレゼン
340:Pattern
238:テキスト量
276:内容吹きこみ
275:message
236:株式公開
235:投資
234:循環
127:reblog
166:外注
126:質
125:量
124:SV広告収益
163:@wait 外部からの自動リンクのところとかの開発を南紀くんにお願いする。
123:借りる
162:営業
122:利益率
161:kickstarter
121:AC
379:[[目的検索]]
339:速さ
378:目的
338:早さ
377:解決
336:速度
374:広告営業
334:オフショア
373:英語の需要
333:template
372:こちらの説明資料
332:リマインダ設定
371:連絡
331:広告と編集のキャッシュインとキャッシュアウトと
370:タンブラーアテンション
229:@wait 売上として発注書にはしてもらう。エヴァ
330:別会社にするか
266:@wait 発注依頼
224:紙やデザイン
223:PV単価
199:Buffer
198:適材適所
221:i18n
260:communications
220:効率
196:automate
117:被リンク
156:@wait xhtmlcss英語
195:集中投資
116:記事あたりのROI
155:@wait TODOテンプレートにする
194:効率と費用節制
193:金
153:売上作る
112:量
111:広告
110:受託案件
369:メディアパートナーズ
329:融資チャネル
368:外国人にツイッター対談やってもらう
328:ノード繋ぎまくる
367:ツイッター対談
366:僕がやってることを明文化してトレーニング
（一回やってみてもらう）
326:土日もOS
365:RSS
DataApi
ストリーム販売営業
ツイッターつぶやき
タンブラー自動リブログ
325:コアメンバーが会議こなくてよくなってる現象
364:HOSTINGをTKPでやらせてもらうのどうか。
324:速度改善。僕の
363:オープンプロセス
362:マネタイズ
322: 翻訳
298:@wait os雇用
259:仕組み化
321:アイフォンのアーカイブビュー？
297:PDF販売
320:ツイッターに自動リンク
296:@wait 質の試験。かれにメールで贈る
218:バッファ
295:@wait マルチチャネルのスキームとか判断
テラー
SVと共有のところ
広告＝営業＝１０％くらい
255:網羅
215:os
291:@wait 美味しい回路に専念
252:多目的化
290:受託外注
211:@wait 雇用
146:pyramidseo
145:記事あたりのPV
144:記事あたりの利益
143:記事あたりの費用。
142:ゲリラ連絡網に連絡
141:ゲリラ発動
140:[[ゲリラ]]たち
359:ROI？
319:ソーシャルビルド
358:ツイッター担当？
318:別冊
357:関与感覚
317:ACとSC
356:ゲリラシステム
395:
316:定期のプロジェクトのリスト
394:
315:経営管理
393:彼女に毎週花束をプレゼントする
314:英語と中国語のチャネル
353:大口権利者リスト
392:
289:ML作る。コフレとかみたいに。アドレスとっていいという人は。
352:@wait 大口権利者にアタックする
391:であったりする
351:@wait アテンション
390:いろんなこと
350:@wait あちらから連絡もらう。
208:@wait コスト減らす
247:速さ>早さ
285:@wait gengo
284:@wait どういう動機できたか。
245:プログラミング5パー高速化で一ヶ月200万か1億
205:CF
204:福利
281:@wait ララさんのモデリング
203:楽できるとこ探す
242:すごい質問
202:scaleを計算する
241:やってることをクールに説命するページ
201:横断的効率化
240:@wait 著作者連絡先
134:フォロワー増大
173:@secretary @wait 権利処理費用。１記事あたり。を出す。
133:@wait 桜
132:他アカウントでのリブログ
389:一日3色ご飯を食べる
349:iPhoneの閲覧数？
388:死を回避
309:みんなの署名にいれてもらう
387:セックス
347:IR
386:でかい
308:網の構築
346:ツイッター対談
385:更新頻度を保つ
345:@cycle Highriseタグ付け
384:フォントのでっかい文字列
21:automate
1:stwp
17:for some reasons we are still
coding on that...
20:in struts case, the 
controller xml codes,
16:code generation
15:follow WP conventions
13:more functionalities ?
12:less codes
11:out of patterns
10:php codes 
for list,post,show?
29:custom fields.... so that's storyteller base.
9:mustache?
33:keep the normal code 
28:teller code download
32:customfield
retrievals
27:put the codes into the themes and html dirs.
7:wp template code?
31:test data creation?
26:schedule.
6:in meta languages
30:custom field dammy data creations....
25:risks and disadvantage
5:the scope to be adopeted
24:json codes,
json samples ( for the testings ) 
the possible mustache variables code
4:@done benefits listings 
23:basecamp todos,
basecamp todolist informations,
19:of course for the php
22:the code for t
18:even for WP part,
5:edges and interfaces
4:payment process
1:subprocess
9:movie data? maintenance?
11:how to handle the special types of meta informations like lisenses? 
cos the music information or authorinformation is 
have to be processed with it. 
and JOIN operation needed
8:the 
10:lisense meta data management? 
7:accounting
6:payment reporting
7:versioning
10:share
6:eclipse subclipse
5:dreamhost
4:toitoise svn
3:subversion
8:backup
7:suggested * suggestee
10:lifeevent
6:タイミング
3:提案 = suggestion
9:イベント
8:list of words and suggested
11:[[suggestion]]
lifeevent

3:提案 = suggestion
14:pattern_matching
9:イベント
8:list of words and suggested
11:[[suggestion]]
lifeevent

7:suggested * suggestee
10:lifeevent
6:タイミング
5:イベント
4:タイミング
3:suggestion_in_nodepad = [[suggestion]] in nodepad
9:after space or start of content of node
11:suggested * suggestee
8:word
10:list of words for suggested
7:wordstartの検出
6:on word start
130:スタッフを紹介してくれるひと？
赤塚さん、朝子、あさちゃん、石山さんはメール、板沢君、奥田さん、川上くん、のぞき
たかしまさやか、とねがわ、ちえちゃん、まりきん、ひさまつくん、マリオさん、みっちー、やつくん、やまださん、
78:内装演出布など。
前の方はすわってくれ。
バレッツみたく。
77:ヤーフミに約束できるか。
車のドウセン上にあるか。
→車がきまってから。
8月15日に。
76:針とタンテ、
自前でDJ卓、カートリッジ、テーブル2代、必要ならCDJが必要です。
75:電源タップ、音像か賞コミュ
105:デザイン案提出（誰か）

74:さっちゃんどうよ時給300円でな
104:媒体名刺サイズ。
財布に入れるもの。
デザイン的視点でありなもの。
モノとして渡してインパクトのあるもの

73:もうちょい具体的に、
中にはいってもらってもいいと想うで
72:#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
w
71:スタッフ募集
70:かねを誰が払うか。
基本的にはイベントってのは絶対赤字になる。

49:四角テーブルを教室から取り出しもろもろに使用。
48:かもいけもふくめるとエントランスがあいまいに
47:タップ足りねっす。

46:電圧などの詳細は音像がしっていた。
45:やっさんどうかね。9月4日。
44:車さん予約。
43:車で移動。
42:氷はコンビニ？買出し.
41:酒ひやせない.
19:企画書
40:ライトアップ
18:出演者
候補リスト
候補数２０

14:[[sunday94_ストーリーテリング]]
98:バス次第。
出演者関係以外決めとく
13:アイデンティティグラフィック

96:永井君が来週中になんとかする
126:8月くらいに
125:きざいはグーぐるすると2万しないで
借りれる。
7:線表管理
94:デザイナ
124:機材借りる。
橋場君？
6:スケジュール

123:かけた電話よりかかった電話の数が少ないと報われていないと悩みこむナイーブな日曜式の平日を毎夜毎夜すごす
5:フライヤ

92:基金
4:音像
121:水着＋志村の白鳥っぽい鴨のオブジェ、という仕様の女性が
鴨池の水辺できゃぴきゃぴしているのを、爆音のラウンジから
眺めてすごすチルアウトの日曜日、というのをイメージしています。

69:[[sunday94_下見MTG＠ｓｆｃ]]
3:機材借りる

68:8月になったら。
2:ラウンジ借りる

66:[[sunday_20050707mtg]]
65:デザイン
64:前売りモノチケ。
63:ウェブ作る

60:[[sunday_買出し帖]]
39:ステージ（台などであげると大変）
38:電圧のなんちゃら
173:うちぬま他に。
172:バンドです
171:音源できてから2ヶ月後に企画
149:
毎週訪れる平凡な日曜日に怯えておいでの皆様方。サンデーバンドです。

突然ですが、たぶん朗報です。
このたび、9月4日、やはり日曜日に、どこか遠くの方で楽しそうなイベン
トをやることになりました。


どこか遠くの方、それは、実は企画者たちの母校でもある慶應大学はSFC
キャンパスであります。
牛飼いから電脳、果ては鴨狩りまで可能な噂の不思議キャンパスの片隅に、
スピーカーをどすんと並べて、モノオトたててみようと思います。

今回のイベント名称「鴨狩り」は、キャンパス名物の「鴨池」にちなんでおります。
偏差値上昇に躍起になって難関を越え、志を胸に勇んでキャンパスに訪れた
18歳だかのうら若いピチピチのエリートさんたちを、
そのミナモのユラギで完全にキョトンとさせ続けてきた伝説の
鴨池のユラギを、この度は爆音と、面白出演者を沿えてなんと500円でご奉仕！
遠いからチケ代は500円にしといたよ。


完全な夏の終わりをご希望の方も、日曜日の一人相撲に飽きた方も、
二酸化炭素に感染していない完全なる日光を浴びたくなった方も、
どうぞこぞっておいでください。

「あらやだ、でも、出演者は盛りだくさんみたい。カモガリだなんていっ
て、逆に狩られないようにしないとネ！」


35:交渉名刺
170:たかやにもペンディングの話をする
147:おきゃくさんようの
絵をかいたギター。
32:かなたつつく
音無つつく
ヌマつつく
145:ステージ大はむりなので
前の方は腰の高さになるようにして
いろいろ制限（目線とか）
布ひいて座れないようにするとか。
31:交渉
144:ござ、不思議オブジェクト、
一品持ってくる感じ
143:人募集しましょう。
142:内装
141:おおともさんの電話番号をリコール。
118:鴨女。
水着。腰に志村の白鳥のような鴨のおぶじぇ。
かもいけの水辺ではしゃいでいる。
鴨池グラフィック方のヌーブラがちちに二つ。

87:イベント名など
117:たかやには鴨の絵
86:広告
85:前ウリ予約
114:newe need kawaikotyan w
83:mtg判定待ち。
超えかけ東窪
113:scheduling
82:どこかりる。
借りた場所をエクセルに反映
81:予約
80:教室借りよう
110:ハンズいってみてみよう
59:[[sunday94_onzo_queue]]機材レンタルについてメール送信
58:皆に聞いてみよう
57:車もう一台車
56:#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#


169:音像には断って、たかやには一応ペンディングと,別のサイトの。
音ができしだいやる。
55:現地調査
168:音像にやるといってしまっている
54:線表管理と更新
167:広告しないイベント
53:タイムテーブル作成と更新
166:2ヶ月のスパンが必要です
52:当日スタッフかわいこスタッフ

165:広告が必要
29:出演者リスティングのつつき
50:ラウンジの丸いテーブルなどを教室に隠しといた。
163:音がかんせいしていなくてはいけない
162:ライブがしたい
25:出演者をリスティング
137:[[sunday_94_イベント基金]]
23:出演者
22:出演者決め
21:ラウンジ写真
134:プリフライヤーなどでチャームできないと
スタッフ募集なども動かない。
mp3が渡せないと。
20:日付、場所（ラウンジ）、時間、出演者
企画者の素性（ｓｆｃ卒業生であることの明記）
お酒とケータリング（ご飯）もやりますの明記。
エントランスフィーは５００円の予定。
集客規模（１００－）予定

133:鴨ガールズは無表情
132:mp3が渡せないといｋえないかも。
15:aaaaaaaaaaaaaaaaaaa
186:凄い肉
184:@done コップとか買う？
153:@wait warehouseから移動する
122:どうすれば外食を控える
183:@home 箱に入れる
121:@done どうすれば酒品揃え
182:@wait 車輪試す
181:@wait 箱改良
150:essential
180:ルンバ導入
214:@sun ルンバ時間指定
169:@wait TKPのもの持ってくる
138:roiやる
211:@wait 空気を飛ばすのやってみる
199:@wait トレーシングペーパー試す
168:おにぎり
210:@home / @warehoud 倉庫調べる
167:おかず
136:僕の食事
166:米
135:@done それは買いましょうよ
134:@done どうすればビールの品揃え
133:どうすれば盛り付ける
163:@wait 定置を
193:@wait 床を空ける
162:@wait 探す
131:@done どうすればつまみを用意する
161:@wait 片付け
160:@done 床掃除
149:DVD借りてきて返してる
148:映画見てる
178:いい食材をたまに
147:呑んでる
177:料理を上手くなる
146:寝てる
176:@wait 赤帽かな
145:食ってる
175:@wait 輸送の人？
144:* RUNTIME ***
143:@wait 掃除
142:@wait どうすれば、被志向に対抗する
172:@wait レイアウトとかする
209:@wait 調味料を持っていく
171:@wait 縁から買う
208:@scheduled / @warehous もうちょい光もっていく
207:@scheduled タクシーで移動
204:@wait 洗濯
159:@wait 賑わい？
202:@wait タオル+洗濯
189:@done 収納を作ってそこを隠す
201:@wait トイレ
188:@wait 布垂らす
157:@wait 漆喰
126:@wait どうすれば壁と窓の桟かも
187:@wait 良い収納
125:どうすれば光の位置かも
3:super
6:make the [[element]] super
12:物理的に
11:目標設定と[[ポイントカード]]で目標達成できる
8:better_sleeping
7:gggg
6:channels
5:kill shyness
16:衛生、時間
4:less dc
3:superasbn
13:引き換えのあれを探す。
作業とめれて練れたら、一日ごとに4000円上げる。
27:follow "stepstorepeat of a bug"
26:System NotifyByMail ABugToMailsOfIntraUsers
25:http://www.eclipse.org/articles/article.php?file=Article-API-Use/index.html
22:@OP
system update Pages of AStory
From Actions of StrutsActionFiles.
from eclipseroot of the j2eeproject.
21:Testers Does test based on manual
19:@OP
User triggers bugreport bookmarklet when testing
18:Post Pages About Title
8:post eclipseroot of the project and of a user
17:Post Bugs 
7:localeclipseroot of the user
16:system update Targetfilepath from Fianallyopendpage Of ABugs
6:Show TargetFile Of DisplayedPage FilePath
5:DisplayInEclipse NonDoneBugs 
14:programmers modifies the file and commits 
4:SetBugDebugged in eclipse
13:programmers open actual target file by clicking targetfilepath of page
3:@OP DisplayInEclipse CheckedBugs
11:System SetBugDebugged of A Bug in basecamp
35:@OP DisplayInEclipse DebuggedBugs
34:Display CheckedBugs
33:DisplayPages
32:Post Pages
31:User CRUDs StrutsActions at strutseditor
28:Testers SetBugChecked
17:本の選定
16:読む
15:cmsに入れる
29:録音端末
14:法的にOKなレベルに校正して
抜粋箇所引用から、引用する。
28:書き起こしの人を
13:録音
27:そもそも読んである本をベースにしたほうがいいのかも。
12:文字起こし
26:SOCIAL BUILD?
39:要約引用と要約引用の間には「順序」関係（前後関係）がある。
11:RUNTIME
25:ざっと再読
38:データソースへの引用をおく
10:関連抜粋
24:「関係性」の読みおこし
37:prepare glues
23:読み上げ
36:glue
22:直前に再読
35:（あるいはその要約のようなものがコンテンツとして書かれる）ことになる。スタートアップ自身がこのメディアの読者になる。投資家も（投資家はスタートアップへの参加者）。また、投資的参加者も（メンバーはすべて投資家である）
21:要約抜粋箇所マーク
34:物語をたどるように理解されていく
20:読んである本
33:本を読んだことがある人を募集して、
やってもらう？
9:* 読書時間の圧縮
32:参加者多いほど速い。
５人いたら3倍とか10人いたら6倍とか
みんなで要約する
8:全メンバーが全部の本を読むのは効率的でない。
31:本の読書順序自体が物阿賀たりにならない？
7:毛細管現象
30:キーとなる本は圧縮することは難しく、補助的な本は大丈夫ではないかと。
キーとなる本の例：資本論。クリエイティブ都市論。スーパーフラット（村上隆と東浩紀）
キーとはならない本：クリエイティブ資本論（内容はキーとなるが、無駄話おおくてかなりダイジェストできそう）、評価経済入門（すげえはしょれる）、社会関係資本（すでに一般化してる知識だが、その骨子以上に重要なことがいくらか書かれている）
44:外注
6:ナトリウムポンプ
5:重力（池→川→海＝2000 -> 0 )
4:flow
41:関係性陳述と関係性引用の間をつなぐ
40:関係性陳述はCMSに入れる
1:superflat-book-build-flow
19:知ってる本
18:調査
90:superflat-book-build-flow
29:どうすれば事業計画
28:どうすれば人物だそう
78:コールハースを参照している事自体を語る
27:@done どうすれば資途
77:コールハースを参照している
26:どうすれば人を扱う力について
76:統計 x データビジュアライゼーション == looks
25:どうすれば投資家は現場を見る
75:一回ヤッてみる
24:どうすれば投資家にとってのメリット
74:読んどく
23:どうすれば買収時の金額などについての契約
73:関連抜粋
22:@done どうすれば覚悟を見せる
72:要約抜粋
21:どうすれば稟議（nホップ）に対応
71:関連性を語る
20:上場するときに時価総額がいくらになっているのか？
70:文字起こしする
58:安東くんを起動する
57:古典研究をちゃんとやる
56:例を出す
55:キャラクター？謎？出来事？
54:伏線
53:引用と、関連性。
52:flat・グローバリゼーションとの関連を技術する
51:物語にする
50:池上資本論を
89:輪読
37:どうすれば資金
36:どうすれば資金調達スクリプト
35:事業
86:** "点をつないでいる"
34:どうすれば営業力の説明
85:** メディアとしてブルーオーシャン
33:閾値
84:専門家
32:どうすればstorytellers.CF
31:既存投資と投資の速度の可視化
82:古典を読んでいる人を連れてくる
30:@wait どうすればシーズアタックリスト
VC系
http://cpijapan3.blog40.fc2.com/#entry1
http://www.cskvc.co.jp/gyoumu/gyoumu1.html
http://www.innovation-engine.co.jp/strategy_2.htm


円JAL
http://cpijapan3.blog40.fc2.com/blog-category-7.html

金融公庫
http://www.chusho.meti.go.jp/faq/faq/faq19_kinyu.htm


http://www.k.jfc.go.jp/sinkikaigyou/loanj_c.html


http://www.dreamgate.gr.jp/
81:適切なバックグラウンドを持つ人の選定
19:必要資金調達額
80:本の選定
69:録音する
18:IPO時の発行済株式総数
68:皆さんにこのフローをお願いする
17:事業計画
67:出資資料
16:資本政策
66:PV
65:集客
64:RUNTIME
63:人選
62:安東先生にお任せしましょう
10:KPI
60:文字起こし外注
8:exit
46:キュレーションの革命
場の革命
45:壁？
4:事業計画書
8:メディアに出来る？
19:類似から
7:滞る？
18:人
17:@wait 調査、プレ絵全テーション資料、チーミングで150万。
100万 売上30か50万くらいを目指します。
31:レバレッジ
15:@wait 会社なら中程度報酬を設定するべきか。
30:チーム
3:superflat-book
14:@wait 金？
13:ダイジェスト？
29:人
12:そこまで時間とったり本を読む必要ある？
28:
11:内田さん?
27:グローバリゼーション
10:スピード感？
23:@wait apcで良いか。
経費として経費を回収する。
22:@wait 会計や費用どうするの。
9:選定基準？
1:sv
4:studiovoice
7:svreadability
6:kato@sv shutout
5:contents preperation
4:lecture
9:svreadabilty
8:transition
1:sv2
14:wikipedia
13:2.5M PV
12:kato 2014
9:renewal
11:sales
8:che / sv
10:archive
7:esaka san
6:how to keep the 
5:infas pub should contains 
4:not closing
1:sv2014
4:task difinition
3:hiring php developer
10:svar
5:加工
4:@wait @secretary archive
3:インターン
9:SVのインタビューの内容はあるかも。
8:１０月１３日
7:文字起こし
6:excelに反映
5:作業可能な記事一覧
4:文字起こし
3:svarchive文字起こし
8:WPにアップロード
50:project_description
61:footerとか回復する
60:書き換えできないようにする
19:それが、WPに寄生しているか、
LINUXに寄生しているか、
外部からまだ侵入可能なのか、分からないこと。
17:randomly named file are there. in
/opt/lampp/htdocs/wordpress

169b171bbdffdf3759850fef45515c67
16:@wait 書き換えコードがバージョンアップに関係しないことの確認
15:@wait 今できない
14:更新コード
29:@done テスト版が動いているのか。
13:@wait 徹底を。
28:@wait 土日
12:@wait 404と777のスイッチング
9:che
27:@wait タイミング合わせる
11:svmaintenance
8:@wait rootになってhistoryを確認するとか
10:sv
7:@wait 777はそうか確認する
25:@done コンテンツの書き換えをしたくない
39:@done WP移管
6:@wait いじられたく
24:@done バージョンアップを今のものからやりつつ、
バージョンアップをしたときに、プラグインが全て動くか確認
38:@done SVWEB＿っていうやつのアップデートの前は、
現行のサイトと同じだったでいいか。
23:@done バージョンを上げて問題がプラグインとかに起こらないかは、確認できてる？
22:平気になる
35:
20:@done バージョンが上げる。
34:人の雇用
49:divigin tasks
48:decide hiring manager
32:@done cssがずれている問題は？
47:hiring
31:
30:@done もれなく機能をチェックする
44:stop ftp
59:原因
58:archiveが書き換えられている
55:@wait 一回all404にする
54:workflowの維持
53:在庫を持たない
52:orientation
51:competition
37:検索に出す
79:@Air マニュアル＋インド @wp-edit
78:データのクリアランス
77:WPのapiがある。
xmlrpc
75:アーカイブ処理
74:長期的に見て有用なところだけ
73:カスタムフィールド追加
30:@basecamp ask tim for submission again
72:@done 文言の修正らしい
71:問題
70:ツール治す
49:データを直していく
89:PCとiphoneそれぞれあるくさいこと
46:メディアに応じて使う画像を変え、表示幅を自動で変えるコード
88:別ページになってること
45:facelessは検索に入れないと？
87:画像
44:画像を4つモテるように？
86:記事について複数previewがあるケースについてなにすればいいかは
どうすればわかる？
43:記事としてはひとつ、という粒度に合わせる
85:一個の記事についてやるコード書いていって、量産していく。
41:一覧に出す集合をフィルターするコードを書く？
40:@wait とりあえず、でどうする？
82:@done 機械的にできないならマニュアルにならないはずだが。。。
エラーを避けて大体自動化はできそう。
18:sviphoneやweb
81:@done jwordpressでいける？
17:previews
80:コンテンツ
58:cf
57:@wait ipadは早く公開したほうがいい
98:glue実装する
97:レイアウト違う？
96:mores的なこと？
95:hire 一人javaっ子
94:jwordpressでやる
52:そういう人雇用できる？
93:著者情報
51:加藤さんの手数減らしても
しょうがない。
92:画像たちの自動化？
91:analog
90:@done 他のカテゴリーたちは？
例えば広告系とか？
別にひっかかっても大丈夫。
記事重複が問題
69:複数メディアのせいによるiphoneとかの重複
3:svipad
68:bugつつく
66:previewに限らないみたいだ。
moresとかも出てる。
65:@wait どこから？
64:previewを除外するか
20:data_api
61:リンク文字列
60:artspaceもだ
9:iphoneapp
8:ライセンス共有
7:iphoneの開発者ライセンスでサブミット
79:dreamhost
78:eclipse subclipse
59:関係モデリング
77:subversion
4:iphonedev
39:mismatchtest
58:@keyword [[関係modeling]]
19:サービスイン。配置  = deploy
3:svからの開発ライセンス
38:generaltest
57:画面仕様　*画面遷移
18:請求
2:sv
37:修正
56:@magicdraw
74:repository
17:storyteller
1:sviphone
36:automate = 自動化
55:AttrPicking
16:開発
35:Patternize
54:再現指摘
72:詳細画面
15:ウェブ側
34:test
53:GoalNode
14:iphone側一覧
33:テスト
52:ER modeling
70:規約
13:取得する
32:@keyword [[debug]]
51:PostSentencesOnStoryteller
12:oauth_appklication_id
31:OutOfPatterning == coding
50:Sentences
11:oauth
30:開発機への配備
10:twitter連携
69:weburl決めたい
68:キーワードのラベル画像
49:ValidationRuleAssign
29:xhtml2jsp
48:CommonTranslations
28:TestedSystem
47:StorytellerCodesDownload
65:画像をトリムする
27:@wait sql dupmpfile
46:FirstModeling
64:ウェブアプリケーション
83:sub
26:@wait war
45:annotations
82:versioning
25:SyncToy
44:mock
62:画像抜け対どうする？
81:share
24:@wait server url
43:story
61:@magicdraw 
80:toitoise svn
23:ター
42:edit
60:CommonTranslationsを入れる@air
22:一日予約
41:修正ファイル指摘
21:motivate
40:変数ピック
20:sc
21:コンテンツを正規化する
10:@wait 識別してテンプレをかえる
8:@wait CMS外
18:@wait CMS内
17:・今後も、WPだけではできないだろうというビューを得たいケースは沢山ありそう
・PCオンリーなどの場合はcustom fieldをフラグ的に使って対応
・ひとつのWP内でやる
・ユーザーエージェントベースで切り替えやる
・アートスペース等サムネイルも独自実装する（PC版作る）
5:@wait テンプレート修正
16:@wait 5万くらい。
15:@wait デザイン上がって着てから早急に対応する。xhtmlcssやる。3時間。
3:@wait iPhoneと共有
25:archiveとの結合
14:xhtml css
2:@wait コンテンツをアップする
13:@wait ETBコンテンツを活かす
1:svweb
23:レイアウトの問題
12:@wait 移管
22:画像のサイズのインパクトの問題
11:@wait 移管
7:ほかの編集して最低限の売上をもらう
6:編集者で協力してくれる人を探す？
5:競争？
4:加藤さん費用
3:SV費用
8:@wait できないか聞いてみる
10:dropbox api
5:ID
4:差分検出
3:sync
9:dropbox
8:multi device
1:tac
3:@wait #Light 次回コンサルの日
2:定期資料作成
3:tag is a node which appears so often
131:iPhoneの使い道
94:@done automatically to evernote
93:@wait tag search
29:@wait shoot images on iphone
90:@done inbox system to evernote
26:urls in evernote
25:urls from tumblr
24:auto-open url
23:Runtime
21:@done tagging on photos
20:GTD
46:sharing
7:- get the related contents in all the services and data 
- with the best fit visualization mece
- 
6:@wait tag
109:@Air tag.sh
108:@done pnu
42:fullsize image
69:sync toy
3:tag is a node which appears so often
41:flickr
68:unison
105:@done tagging on evernote
40:evernote or flickr
67:@done dropbox automator
104:tag.bat
66:@done C:\Dropbox\Workflow\photo
103:java app to open the urls
102:@done open tag.bat with nodepad tag
129:iphoneとipadも
同時に開くようにする？
rtmのタグと。
63:@done eyefi
100:tag.bat?
62:@done sync to flickr
61:@done aperture
89:@Air try java evernote api what can be done
126:@wait sc
60:@done shooting by 1d
88:basecamp textdocs
87:how to reach to the structued files.
including nodepad and mindnode.
124:evernote + tag + rtm ( email )
123:better task capture
84:関連で動くファイルたちは操作できないみたい
121:task tag
83:@done upload to the folder
120:what is other contents for organizing 
19:@Air dropbox 2 evernote once. 4hours
82:tumblr to evernote?  or not.
18:nodepad
images
urls
ai files
ppt
docs=format and text
list
backpack
basecamp project
clear list
google spread sheet
code
cycle
node
hint
backnumber
81:evernote/dropbox/flickr. photo repository....
17:list filetypes mece
80:@done fix eye fi issue
15:@done evernote
14:@done taggable,and multiplatform,synchbase tool
13:@done synced
12:@done both local and shared
140:tag.bat
39:@done photos on flickr
10:seeing things at once
37:@done tagged photos
36:@wait photo
33:@done handwriting node
handwriting chart
handwriting
30:@wait handwritings
58:@done dropbox 2 flickr
57:@done dropbox
56:@done dropbox auto upload
119:show only when it contains the results on search
118:list up the candidates to cover with tagviewer
117:@Air_Search open mindnode with command
51:@wait tagging
114:とりあえず
76:@done pc images
113:cycleとかをfindに入れる。
112:should show the db model
139:tag
74:@done pc screenshot
72:trigger tag finding
136:AirにおけるiPhoneらのつかいみち
99:ai
135:space tag（windows setを定義できるようにする） ->tv
70:移動
98:ppt
97:binary
96:relation
132:読み専用
95:
7:flickr
6:bookmark
5:evernote
4:browsers
3:tagging
8:iphoto
7:flickr
6:bookmark
5:evernote
4:browsers
3:tagging
8:iphoto
11:tag
6:tagging
9:tag
10:target
3:tags

7:outlined
6:outlining
5:編集半自動
4:tag
3:tagsearch
9:編集
8:storytelling
6:
5:あの子に紹介したい人
4:tool
1:tao
4:http://en.wikipedia.org/wiki/Try_Anything_Once
1:task
4:task
124:projectbase
185:@mece pomodoro
152:execution
151:next terminal
219:dependencies.
181:meta?
248:link
279:terminals
247:automate
278:capture tasks 
216:tag @micro
246:@mece less time
277:turn into runtimes
215:@done roi.run
245:cycleなタスクを確実に実行
214:@done daily oraganize runtime
244:less calendar tasks postponings
275:a terminalt repository
213:make a project on it
243:calendar
274:not using scheduling
212:less load cost
242:task_visualization
273:automatically suggest and set
211:time context
241:less daily organize time
272:buffer ( do 7 days per time ) 
210:time context
240:set todo priority automatically
using project information
309:use micro time?
271:schedule hard context terminals
308:follow project
270:less task management time
307:project base has time to happen
306:pick 2 projects of the day?
305:follow deadlines
304:compare
303:use nodepad + projects sheet, not evernote?
302:find 
1. current project's
2. current context's 
terminal
todos
17:contextbase
300:better UI
175:less notification
174:@mece exponents
140:@mece workflow
239:standardization of tasks
269:@mece quicker execution time
207:projects
299:logically...
206:capture
298:evernote linkings
267:rough milestones model
205:* BETTERS
266:nodepad
204:daily_organize
234:"essential" method
265:dependencies
203:routine tasks should be done
while in pomodoro breaks
295:set relative priority higher
233:"dual parents" node auto detection
264:"overwriting by relative priority
of the tasks"
202:micro projects
294:communication things needs quicker response
263:do not use schedule
of the task to execute in the priority
201:blueflag
293:set "terminal" 
231:quicker choise from pomodoro tagged terminal tasks
200:@mece concentrate
292:@mece more for execution
230:follow roi
261:set durations properly
260:estimated durations
290:nodepad
138:capture
137:motivation
136:@mece forget
135:GTD
196:capture project in evernote
195:selected projects
133:next
164:project roi runtime
194:critical pathes
193:update nodepad
162:* RUNTIMEs
192:capture to evernote?
191:General Noding on project
229:follow roi
190:crirical path terminals
259:better daily scheduling
228:everdoro
258:auto subcontexting
289:tag hard context todos
288:nodepad
256:set right attributes right.
287:single relation version
286:text version
254:cal doro
285:really a nodepad iphone version
253:find terminals only
284:nodepad iphone version
252:all the calendars                      -> 
283:multi client
251:trigger context at context
282:evernote
250:gather project.todos.execution.tasks.
281:pomodoro
280:select terminals
316:node entry easier from other tools
313:organize
312:transition planning
311:map hard context todos
310:@done follow roi
86:howize
189:capture 
non-hard-context todos 
in evernote
83:@done どうすれば このtask やっていて平気かという感覚
188:management.run ( organize )
14:keep the day tasks less than day's work
13:can fill the estimated time for the typical tasks automatically
12:時間を見える化
9:Timing base
11:タイムログを取る
8:task_management
10:exponents
7:know the 
6:colorful
5:obstacle
4:purposes
1:task_visualization
4:ViewCoding
EstimatinChoise
Estimation
ModelValidabling
MavenRunner
Check
camp2xhtml
wireflaming(GUI patternpicking)
DeployNotificationToTheClient
GeneralBugTest
Coding
DB/model matching
Deploy
Sales
ProjectStart(FirstMvn,Preperation,andromdaapp creation,SecoundPreperation)
modeling/jp2english
Storytelling/RuntimeNoding
RequestTestsScripting
Modeling/AttrPicking
CrudToModels

3:TaskTemplates
7:assign mum maybe
6:manual data entry 30
4:divide the accout
19:import
18:export
17:mine
16:mom
15:export
21:regist all 
13:do not want to pay 3000/m
20:anbun thing
12:direct, or net bankings
9:auto data entry
11:SETUP
8:anbun thing 15
1:tax2014
6:fukushiki boki
5:me
4:tomiko
26:team
25:teaming
24:スケールさせる
4:人リストから。
6:recruitment
リクルート
雇用
17:タスクの見える化
32:enterable
5:個人にロールを設定する
16:1010100をチームでも。
4:KPI設定する
15:チームの習慣
3:teaming
14:習慣。KPIを自己設定してもらう。
29:投資 x 可視化
12:秘書プラン
28:投資
11:適材適所化
27:[[投資]]原理（[[メトカーフ]]）
24:非属人的
23:情報や知識が社内で共有化されている
21:教育制度
37:aaa
36:
35:aaa
71:@wait param
70:@wait config
8:can access to the each of the lines ( show ) if we do show.
6:@done cloudwebapp.
29:db design
28:POJO generator
119:newjit
26:POJO class
118:meta
117:ampx
24:gdrive list
47:@wait  detecting name conventions.
116:js_json
23:* Runtime ***
46:@wait a data retrieval filter
115:controller class 
and method generation
45:more beautiful naming convention
114:run maven and get it run on tomcat
21:struts2 + x?
44:@wait enable this ( 
ShowPublicUserAction{
   public String execute(PublicUser publicUser ){
      

   }
}
or 
   public String execute(){
       PublicUser publicUser = (PublicUser)getModel();
       
   }
}
113:method mapping?
43:@wait auto retrieval of the data
42:@done rest ( alike ) urls
87:@wait PublicUser.show() should 
mapped to ShowPublicUser
41:@wait mosts should be automated ( corned )
63:@done execute methods
132:sample test cases?
40:deploy
131:sample project
85:patterns with clouddb
61:clouddb dao
130:divide the work to test cases
84:no duplication
60:@wait switching interface
in the config file? 
and also parameter
83:@secretary @wait methods for web accessable 
classes should be auto generated
81:so conventional
80:mvn
17:really-easy-deploy
16:able to use clouddb contents
39:compile
38:copy core jar
37:code on local
36:codes on server
105:Try db 2 pojo thing #air #google #eclipse shell sample db?
59:@wait switching dao with configs
128:@Air try ecipse uml
12:each data of lines accessable
35:sentences
58:@done should be able to use those crud templates
127:andromda with eclipse uml
34:Nouns on the server
57:@wait dividing dao from current templates
126:@wait daily backup + dropbox sync
10:conventions of mvc mapping
79:@wait auto code download
102:@wait semi automatic db contents migration
56:json, js, and html generation
125:@wait essentials
78:@wait code download
32:running 
101:regist it as verb
55:@wait assign, "changing part" for coding, or better gui.
themes and coding part.
124:generate CloudDao
77:@wait automation
31:core jar
100:test patterns
76:@wait daemonize
99:@secretary sample test cases
75:@wait auto copy core jar running
98:@delegated test code generation
52:@done no patterns for cloud db things
121:hire normal java developer for this?
74:@wait mysql table generation
 from list classes
97:@wait db contents
120:someone good developer for this. for 15more.
73:@wait pojo class generation 
96:courseware
72:@wait data source?
currently?
95:show pattern
14:* RUNTIME ***
13:@wait wpのcustomefieldに併せて記事について
12:いっかいそれつくる
9:for customfield = 
11:authorとか本来wpが持たないものの拡張をした後に
それに対してもjsonを出す。
またその時のcustomfield？
7:json template accessable
6:run teller json template
5:setup wp from template
18:断片サイト？
21:
20:ユーザーポストがないマスターが複数あるなら
prefixだけ変えたwpを同じdbに作ればいいんじゃ？
15:templateに入れる
2:Pattern
1:template
6:nodepad
15:eclipse
5:basecamp
12:snippet
2:Pattern
11:snippet
10:automate
1:template
8:list
7:todoist
16:gist
2:ten2ten 100000
3:storyteller J2eeProject
1:terminal
4:critical_path
29:tax
28:@wait パブロフと快
27:@wait 類似

26:@wait 印象の強い初回*毎日1度*7回＋3ヶ月に一度
25:@wait 連想曲線
24:@wait 原文読む
23:@wait 連想する
22:検索
19:掃除
21:キーワード
18:署名
20:文字列一致検索
17:MECEな軸
16:探
15:探す
14:odbc経由でのdbmsへのデータアップ
13:csvの編集
9:http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1318523923
12:キーワード
8:収入と売上のデータの準備
11:前のエクセルを見つける。
7:青色申告書の記入

10:前のエクセルを利用する
6:@wait PDF
5:@wait 印刷
4:税金支払
3:teruo確定申告23
5:sss
4:mock
3:test
15:testdata
14:全工程
9:mismatchtest
11:tester
8:generaltest
10:checkingtest
120:中心の移動
32:右揃え*左揃え
31:すごくいい写真
30:作業に見合った写真
169:AC
168:料理
167:レシピシステム
79:それが起こす結果（親ノード）を考える。
それはどんな悪いことと良いことを引き起こす？
166:http://toukubo.backpackit.com/pages/1895041
78:砂糖の多い、量の少ないコーヒー
165:affordable
77:肉
164:風邪
76:日常的に[[栄養]]を
163:塩
75:運動
162:におい
74:CRM
161:5min [[treadmill]]
73:notification
160:口にする気がしていない状態でアペタイト
72:探
71:Pattern
70:new connection
119:runtimeの順序替えしてみる
118:目的、選択肢要素、選択肢セット
117:創造的な考え
29:big,
tooooooo bigg
116:roi
28:[[font]]
115:パック
27:extremize the elemete
114:camp
26:本語より外国語のがうつくしい問題とフォントの問題
113:@fired
25:ステンシル、
112:avoid getting [[cold]] AGC
24:cmyk pure colors
111:モテ
23:イロヌキ
110:sales
22:margine
21:えげつないものそのまま
20:死をあげつなく。
159:酸
158:treadmill 100k
157:辛
69:automate
156:外食
68:月額20万
155:栄養
67:http://toukubo.backpackit.com/pages/1896576
154:栄養素
66:オフラインの作業
153:レシピ
65:アドレス長
152:eat_at_home
64:紹介してもらう人を探す
151:調理
63:通知自体が[[通電]]
150:better_食事
62:性的緊張
61:発火
60:モチベ
109:自信
108:尾根
19:trak2005
107:黒目大きく
18:サンプルとセットで提示、かつ因果自動提案
106:色
17:時間を圧縮
105:毛穴パック
16:ピンク、黄色のcmyk原色
104:服を月4万
15:画面にとって写真に撮る
103:洗顔
14:絵の具
102:顔の筋肉
13:signtoon
101:髪
12:赤と緑
100:丈
11:stsc
10:原色そのまま。

149:スクワット
148:保温
147:automate = 自動化
59:PCなノードがすすまないかも
146:Patternize
58:歩いて、もどってくる
145:
57:コンビニに行く用
144:message
56:外出しながらも作業できるようにする？
ノードを進められるようにする
143:ExportRss + rssmailer
55:洗顔と髪
142:message+
54:履歴
141:treadmill
53:パターンマッチング
140:ビタミン剤
ビタミン的なさぷりを取る
52:提案すべき最適なタイミングの検出
51:提案アルゴリズムの提出
50:自動化
9:チューブで
8:光。間接照明。あてて撮影してデザインにするのもあり
99:facewash
7:写真でとって、それを絵の具で
98:香
6:http://b.hatena.ne.jp/toukubo/design/
97:まゆ
5:シンプリファイ
96:[[目的検索]]
4:designer
95:脳
3:designmethod
94:習慣
2:design
93:モデリング　+ RuntimeNodeing作成
1:test_demo
92:量産
91:ストーリーテリング
90:パターンマッチ
139:血流
138:食事
137:アペタイト
49:外出
136:カロリー
135:動物性タンパク質
134:pknked
46:近い人にやることでkernelpanic
133:ハム
45:商材リスト
132:肉のレシピ
44:商流形態
131:肉の調理
43:商流
130:abcステーキ？
42:http://storytellers.highrisehq.com/tags/142234-designer
41:[[new]] designer
40:タカヤのステンシルへの横線
89:因果関係の目的ノードから。
88:時間割り
87:日常的に毛穴を洗う
86:後ろ髪重要
85:ジェル
84:耳出す
83:looks
82:pknk
81:wash
80:泡洗顔
129:薄い時がある。
128:なにか機材に固めてしまう？
127:ノード自動変換されそうな単語にする。
一般的な名詞化をする
39:タカヤ
126:分解的に数える。
人間なら手が二つ。
指が5個。
->modeling
38:bubble.ai
125:どのコンテクスト？
37:iaのwordpress theme
http://themes.wordpress.net/testrun/
124:類似は？
36:余白

123:質問の仕方を変える
35:本から取る

122:現状、をかく
34:レイアウト

121:バッファー、自動化、分解、現状、網羅、逆、
33:何パターンか作って捨てる
8:#wait シナリオから名詞抽出とER図（クラス図）化
19:new
7:#wait シナリオ書く
18:久松君！Yo!
6:#wait [[データベース]]モデリングをする
17:プログラマー探す
5:システム開発をする
16:#wait プログラマー:se:テスター:デザイナー:ｘｈｔｍｌコーダー
=1:1:0.5:0.2:0.2
4:#keyword [[ワオン]]
15:#wait 比率構成＋たりないとこ探す
3:アイウエオをするにはかきくけこ
14:#wait 人員配備。
2:あいうえお
13:モデリング以外にやれること探す
12:今ここやる=================================================================
11:#wait メール待ち
10:#wait アポ採る
21:new
20:new
9:#wait 顧客にインタビュー
5:他プロジェ句tおから
4:FIllModel
3:testdata
7:テスト
10:@keyword [[debug]]
6:xhtml2jsp
5:開発機への配備
4:OutOfPatterning == coding
3:TestedSystem
5:offshore
8:assignment
3:tester
2:new
16:アウトソース
18:[[text2nd]]のアウトソース
4:RuntimeNodeOftextflow
3:textflog
65:スタートアップ
31:スタートアップ
64:amplifierの可視化
30:@done 解決しようとしている問題を３つ
63:領域横断。それを可能にするレベニュー
人間の形式
62:スタートアップを成功させる形式
95:余剰がある人を募る
94:二枚舌外交
93:ifttt口説く
90:
18:startuproles
49:スタートアップの資金調達
コネクティングザドッツ
クリエイティブ資源とのマッチング

46:@done クリエイティブであるという成約。
かならず、直接歴な領域からの人を二人紹介するのを受け入れる。
審査はしてくれていい
45:契約書的なドキュメントにする。サービスの。
44:成功させるということをどうすればできるか
77:解決しようとしている問題を３つ
43:人のマッチングに？
76:startup
42:brandにするっぽい
41:@done 長期的にみた投資からのエグジット
40:@done 僕らが何を得るのかを解決する。
73:創業者
領域横断者
カメラマン
プログラマー
CTO
ビデオシューター
ハスラー
デザイナー
インターンオーガナイザーとインターン
PR
翻訳
アイデアの人
CEO
場所
ディレクター
編集者
スターインターン
ライター
会計士
キュレーター
スーパーコネクター
コンサルティング
営業
ヴィデオシューター
美女
the speicialist in the business domain of the target.
72:TKP
70:映像を取ってくる人
29:ゴールの可視化
28:KPI
27:exit
26:[[fund]]ing
58:アンプシステムは、AMPLIFIERが、レベニュー参加する限りにおいて、スタートアップに紹介する。
57:AMPLIFIER感の関係。それぞれについていいことってあるのか。というようなことい。
23:バーター
56:場所とメディア
89:プレゼンテーション
22:amplifier
55:CHEがキャンプに通ってるプロジェクトについていたら相場の２割くらい安く、
さらに投資家から通っていたら２割暗い安くやる。
人を入れてもいい。
88:startupが増える
54:クリエイティブコネクティングザドッツの成約条文。審査はしてくれていいこと
AMPLIFIerから紹介された場合は、そのエンジニアにレベニューの投資があった場合、その２０％を投資にするということ。
二人を受け入れる余力などのために、アンプリファイアーから紹介する場合は、これらがセットになってしまうこと。
コアとなる人を。
87:websiteができている
53:紹介に責任を負わねばならないかも。
86:えいこむ
85:@secretary amplificationの可視化
84:amp紹介する
50:特技
83:キュレーションする
82:ウェブサイト
81:メタ
80:砕く
38:スタートアップの資金調達
37:@done コネクティングザドッツ
4:microfunding
36:@done クリエイティブ資源とのマッチング
69:マイクロファンディングのプレゼンテーション
35:@wait 成約になるが、同時に、そこを通じて紹介されてくると、他のもついてくるということにする？
68:パーティー
2:startupを増やす
34:@wait 課金ゼロで、ここで紹介されたらその紹介によって生まれるレベニュー投資分の２０％を無議決投資にする。
1:theamplifier
33:広告する？
2:startupを増やす
80:砕く
31:スタートアップ
1:theamplifier
30:@done 解決しようとしている問題を３つ
69:マイクロファンディングのプレゼンテーション
68:パーティー
18:startuproles
65:スタートアップ
64:amplifierの可視化
63:領域横断。それを可能にするレベニュー
人間の形式
62:スタートアップを成功させる形式
99:在庫
98:影響力の武器
49:
95:余剰がある人を募る
94:二枚舌外交
46:@done クリエイティブであるという成約。
かならず、直接歴な領域からの人を二人紹介するのを受け入れる。
審査はしてくれていい
93:ifttt口説く
45:契約書的なドキュメントにする。サービスの。
44:成功させるということをどうすればできるか
43:人のマッチングに？
90:
42:brandにするっぽい
41:@done 長期的にみた投資からのエグジット
40:@done 僕らが何を得るのかを解決する。
77:解決しようとしている問題を３つ
29:ゴールの可視化
76:startup
28:KPI
27:exit
26:[[fund]]ing
73:創業者
領域横断者
カメラマン
プログラマー
CTO
ビデオシューター
ハスラー
デザイナー
インターンオーガナイザーとインターン
PR
翻訳
アイデアの人
CEO
場所
ディレクター
編集者
スターインターン
ライター
会計士
キュレーター
スーパーコネクター
コンサルティング
営業
ヴィデオシューター
美女
the speicialist in the business domain of the target.
100:先に株を与えてしまう
72:TKP
23:バーター
70:映像を取ってくる人
22:amplifier
58:アンプシステムは、AMPLIFIERが、レベニュー参加する限りにおいて、スタートアップに紹介する。
57:AMPLIFIER感の関係。それぞれについていいことってあるのか。というようなことい。
56:場所とメディア
55:CHEがキャンプに通ってるプロジェクトについていたら相場の２割くらい安く、
さらに投資家から通っていたら２割暗い安くやる。
人を入れてもいい。
54:クリエイティブコネクティングザドッツの成約条文。審査はしてくれていいこと
AMPLIFIerから紹介された場合は、そのエンジニアにレベニューの投資があった場合、その２０％を投資にするということ。
二人を受け入れる余力などのために、アンプリファイアーから紹介する場合は、これらがセットになってしまうこと。
コアとなる人を。
53:紹介に責任を負わねばならないかも。
50:特技
89:プレゼンテーション
88:startupが増える
87:websiteができている
38:スタートアップの資金調達
86:えいこむ
37:@done コネクティングザドッツ
85:@secretary amplificationの可視化
36:@done クリエイティブ資源とのマッチング
84:amp紹介する
35:@wait 成約になるが、同時に、そこを通じて紹介されてくると、他のもついてくるということにする？
83:キュレーションする
34:@wait 課金ゼロで、ここで紹介されたらその紹介によって生まれるレベニュー投資分の２０％を無議決投資にする。
4:microfunding
82:ウェブサイト
33:広告する？
81:メタ
17:協賛？
16:パーティーもそろっている。
15:インフラがそろっている。
network、
デザインがある空間

9:十分な異文化性
共通項はクリエイティブ。
14:ものづくり。
8:Never Eat Alone的人脈
23:生産に必須なもの
トイレ、光、水平、爆音、雨よけ、ネットワーク、でっかいモニター、防寒、食事、フロ、衛生、
クリエイティビティに必要なもの
パーティー、人の紹介、異文化性、外人、集中（開発合宿的な）、実装、金の流れ、アイデア、協賛
13:投資家呼ぶ
7:案件、金も動く場所。
22:投資家
アイデア
実装
投資家
美女

12:runtime
6:「デザイン事務所の美、クリエイティビティによる刺激」
　これは必須。セデンティズムに基づくものでも、
　フジやsputnikみたいなノマディズム的非日常感を基調にしたものでも、
　イメージソース、クリエイティビティを掻き立てられなければ人は寄ってこない。

　でクリエイティブ拠点ということであればある程度の初期投資は必要になるだろうが、
　主役をネットワークということにすれば、
　ミニマルかつ最も汎用性のある機材を揃えればそれでいい。それは大きな利点。
　肝心のビジネスユースのネットワーク環境を整える方法に関しては門外漢ではあるんだが、
　先日の打ち合わせでは何とかなりそうな感じもした。それよりアウトライン。
　合宿開発というか、イメージとしては旅先にあるホステルで仕事をする感じ。
　
　クリエイターズホステル？？
　情報やfunを共有するラウンジとかキッチンなどなどがあり、
　各自のパーソナル＆restスペースがある程度確保でき、
　なおかつ全く関係性のないフィールドの人々が集まれるだけの場所であること。
　週or 月極めとかでもいいね。　

　あとは採算性ということを考えると、ありものをいかに有効活用するか？これけっこう重要。
　リサイクル、リユースもので作れるだけ作るってのはアリ。
　エッジな人を集めるときに、CSRを意識させることは重要かもしれない。
　いわゆるひとつのsustainability。
　ソーラーパワーで全ての電力を捻出してみるとか……採算性と矛盾するか。
　しかしそういう「地球に優しいですぜ、げへへ」的試みは有効かと思うが。
　
　要請に応じて資料や機材などのdigger、スタイリスト的なことをやってもいいのでは？
　代行手配（全部立替）ということにするか、気に入ったら買い取りか。
　どちらにせよ手数料や必要経費、スタイリング代はもらうべしだが。
　参加メンバーの人脈を利用するにせよ、最初からおんぶに抱っことかではなくて
　資料集めの際、それぞれのフィールドの達人達に
「こんなんないっすか」と訊いてみるくらいなら全然アリだと思う。
　興味を持ってくれる糸口にはなるだろうが、それはあくまで別の話として。
　
　もしくはスポンサー引っ張ってくるか。
　それはしかし劇薬みたいなもんだな。
　インディペンデント感は欲しい。
　
　と、ここまでは拠点の話。

　パーティー

都市型の場合
　某セレクトショップをジャックしてみようか。
　何店舗かでやってるんで巡ってください、みたいな。
　もしくは屋上レイブ巡り。
　話によってはスポンサーも引っ張って来られそうな感じ。
　告知方法が命。歩行者天国を自転車でジャックして告知、とかだと初期費用が莫大になりそう。

　自然型
　猿島
　御岳山
　御宿の浜
　船橋三番瀬海浜公園（前夜中に行ったらゲリラでレイブやってた。工場地帯なんで夜は静か。ただ車必須）
　
　シャトル的タクシーかマイクロバスをチャーターする？

　とりあえず今夜はこんな感じでアウト。
　ちょっと東京脱出して頭をひねってきます。
11:みんなにメリットがあると説明できるようにする。
主催者も
10:社長呼ぶ。
3:
ubiquitous captureとaction methodがマイブームなのでログもがっつりとります。

昨晩キャプチャーしたものも跡ではっときます。

富士の樹海でレイブ。sfcで夜中抜き打ちレイブ。規模もまちまち。１０人ものから１００人もの。sfcの土日にチルアウトイベント。後輩。fantasitc voyage。

百式さんやモダンプログラマー。ユビキタスワークプレース。キネティックエリート。

これはまだ１パーセントしかみたない。必要性が感じられない？
主なメリットは、気分転換的、箱詰め的。誘惑（情報環境）のコントロール。情報ではなく情報環境のコントロール。

ケ・ハレと、日常の中間？

パーティは
新しい人間交流と新しい情報交換がある。
開始から時間が過ぎると沈殿してだまになる。
非日常的である。
ローンチ的（スタートアップ的、プロジェクト的）である。
日常的業務に必要な生産ツールがそこにはない。

開発合宿は
日常は、ルーチン的な定型の情報交換がある。
アイデアの交換は初日などにある。
最終日などにはパーティー的なものもあろう。
開発ツールを持参するためそれもある。
宿を借りる場合は基本的な生活必需品はある。
ある程度非日常的。
案件がない。金がない。プログラマーはもともとある程度ポータブル、ユビキタスワークプレイスにのっているが、もっと異文化と交流するとすごいことできそう。

そこにいくと、アイデアだけではなくて案件もうごいていて、仕事もできる、的な移動式の場所がいいかも。ある程度の日数でその場所事態が動く。用意されている規定されたインフラは固定される。主には「とてもすばらしいネットワークとIT系の機材」か。
アル程度のスパンで人が入れ替わり、アル程度のスパンで人ものが、、、、

宿題。
カンがえたことのロギング
場所は美しい
パンクでありたい。
ただのケ／ハレでないものにする。
はてなとかの開発合宿を再評価。高い生産性。数億円の価値を生んだシステムが５日、２０人日。
淀川長治のモデリング。かこってる。
パーティーの再評価。つながり、交流、新しい交流。
アイデア（コラボ）ではなく、案件なり金も動く場所。
開発合宿を自発的にフリーランスかスモールチームがやっている。
ここに、案件もあるようだと、案件があるというパブロフ的呼び水がきく。
逆にアイデアと金があるひとたちが、一流（市場に出ない）であるが故に自由なワークスタイルを持っている人たちのみそろうこの場にいき
案件を最高に実装してくれる場となる。
この関係はitベンチャーキャピタルXギークプログラマーという組み合わせ以外の、あらゆる関係にも適用できる。
またこの組み合わせの最新のもの自体の創出もできれば。
ネットワーク資源が（都内のオフィスと同質に）あれば、多くに仕事は形になる。
コスト額が移動も込みで一日平均３０００円（生活費より安い）程度であるといいのでは。
パーティーには美、ファッションなども入っているとよい。
ファッションロックス。アイスランド、難局、グリーンランドの広大さ。
猿島。
人脈。面白くて実力のある人々に声をかけることはできる。彼らが動けば時代が動くかもというものがある。
が動いてくださいとお願いして回るのは最後の最後。動きたくなるようにするべき。
スプートニク、フジロック、ダーティースカイロックフェス（三角形）、定点観測、tdb、移動広告、パーティー、人間に、立体眼鏡をかけると読み取れる広告を待ちにばらまくー＞眼鏡をかけた人たちがかけてない人たちの注意を得る（広告になる）。
一流シェフがワタミの料理を作る。ワタミの食材で。
朝霧、光、rawlife、エレグラ、関西での多発音楽祭。
ポータブルなツタヤ（カフェミーツabcクオリティのブック提案なスペースをポータブルに）
アカデミーヒルズの１万円さ（６０００円から１万円にあげて中のクオリティを保った）。無線まではある。
モダーンワークスペースの最低限要素を抜き出し、それを非常に高いクオリティで達成。残るものはないがしろにしてコストが落ちるなら。
（トイレはフジロックでいいかもみたいな。）

青山墓地でのノイズイベント。ゲリラ。

フジロック、ケハレ、爆音、自助と、浪費、疲労の魅力、diyの魅力、助け合いと出会いの魅力、服装、軍隊的整備
開発合宿、淀川的効率、ネットワークとモニターとマシーンというポータブルな環境があれば仕事ができる。ちょっとケハレ
移動式カフェ（エスクワイヤカフェや待ちのカフェ）、ケバブ屋、屋台、
祭の感じとアイデアの創出、でも案件は創出されない（金動いてない）感じ
コンサルたちの祭り。箱がりどまり
スプートニクのビーチハウスのケハレと距離感
クーピーさんの開発部が鎌倉にある件
スプートニクのバス
スーパーデラックスのイベントの質と客の質とロケーション
六本木界隈のあきや。品川の長屋。品川のイデーの倉庫とデザイン用の場所
co-lab.jpなどの十分な機材感
東京ずまいひとがsfcにいったときの、機材があり、箱詰めがあり、ぎりぎり眠るところがあり、戦ってかえってくる感じがある。というのに「出会いがある」とか「案件まである」あるいは「そこにいけばこそ案件とアイデアと美がある」というのを表現したい。

かつなんか固定したロケーションでない法がいい。フジロックの「３日間だけある夢の国」という感じを再現したい。

上に書いたようなもののいいとこどり をできないかと考えた。

個人的には「デザイン事務所の美、クリエイティビティによる刺激」や
「開発合宿での生産性の可能性はまだ追求されてきってないよねはてなさん」や
「男女だって出会いたいし、あの無理矢理な共同感」は得たいけど
『実際に身のはいった仕事にはフジロックではならないよね」とうのを超えた
「カフェも、ケバブも、料理も出るし、トイレも、光も、水平なもの」もあるけど
「バンカートとかよりにぎわってい」て、「金額的には東京のカフェより安く」て、みたいなものを友達の編集者と考えはじめた。

移動式、
出会いがあり、アイデアでなく案件が動く場所。
仕事をするに十分な機材を最も圧縮選定する。軍隊的。

というのをゴールにし、パーティーもあるけど、ある程度のスパンでいどうして、案件が動くので、疲労するだけでは終わらず、必要に応じて生産性があり、東京などから一定の距離遠かったり近かったりする？というようなものを考えている。

海外からのクリエイティブなプログラマーたちが東京に旅をしながら過ごす場所として考えるのもいいなーと思った。

もちろん「採算性がある」というところもきっちりおさえる。そろそろできそうな気がするんだよな。sfcにいったらインフラがある

日記とログ。これだって次につなげちゃうもんね。

この上の話にのってみたいひとも募集しています。

なんだろうなあ。有料サービスと無料サービスとわけて

「コーヒーはセルフ」とかあるいはセルフじゃないなら優良とか？オシャパブ（おしゃれキャバクラ）みたいに可愛い子が設定してくれるワークスペースとか？仕事にならんかね。

外付けモニターをsfcに捨ててあるやつ（リサイクルとの融合はちょっと面白そう）したりしてとか？ネットワークの速度が完璧だったらやっぱり問題なさそう。ケーブルを巻きでおいといて工具おいといてとか。
19:タークンに聞いてみよう。
18:回線の準備はどうすれば可能？
21:RuntimeNodeOfPyramidSeo完成
20:Crud Text 
5:自分が日常的に書いているようなもの近辺でやる。
19:RuntimeNodeOfPyramidSeo
3:かきやすい
1:things_able_to_be_done_when_sleepy
4:micro tasks
4:関係をカットしてでも安くしたい。
失うもの＝評判くらい。
3:エビデンス渡す
12:custom
11:stsc?
10:Buffer = buffer
9:kit
8:afford_drinking
7:
16:moisture
4:drink
3:thirthty
13:target(objective Noun)
1:ticket2jobposting
1:time_context
7:50000
6:インタフェイスPCを高速化
5:外付けHDD
4:プリンターサーバー
3:timecapsule
8:space
7:50000
6:インタフェイスPCを高速化
5:外付けHDD
4:プリンターサーバー
3:timecapsule
8:space
6:インタビューする。
「今日やったことは」
5:tipsでの教育→タスクリストにいれていく
4:tips自体
3:保科さんにメール　-> #アウトラインを@Think→電話に吹き込むがおすすめです！
保科さんにメール -> # @Mailで「メールすること」はわかるので、名前だけ書いとくといいです！
#これ秘書！@予定出しといてくれます。
#remember the milkのiphone app。プロの購入をお進めします。
     購入するなら
       1.@secretaryプロアカウント購入 
       2.@iphone appインストール -> http://phobos.apple.com/WebObjects/MZStore.woa/wa/viewSoftware?id=293561396&mt=8
# ルーチン外のタスクが大事です！ルーチンのタスクは覚えてしまえばいいです！

6:clipdiary
15:bigger moniter
5:eclipse template
14:ldrize
4:文字列検索ベースでの修正ファイル(alt+a,f,p)
3:tipsforgeek
11:google desktop
10:キーボードショートカットの死守
9:flashpaste
8:safari mdibrowser
7:kbdacc
7:睡眠
6:水
5:食事
4:つかれをとる
3:tired
9:コーヒー
8:横になる
94:UMLや類似の高等言語自動翻訳
38:梅がプラムになる。
93:単語翻訳は自動化効率が高い
36:人/モノ/コト/カネ/バショ/
誰かがどこかでなにかをどうにかする。

91:☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆
☆ノードパッドのノードの英語自動翻訳☆
☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆
90:欲求構造。
ノード構造の理解が可能
34:svcなどの文法が違う
61:UML->code吐き出し。codeからUML戻し。
33:英語ー>日本語はまだまし。
しかし根本的に弱そう。
60:OCR。
30:海外SEの数を調査
179:TRACEROOTやテストのダウンロードなどで測定可能なインターネットの距離。
飛行機などでの物理移動は、所要時間。
178:インターネット的には近く、
物理的には遠い地点の検出
149:関連情報の翻訳
177:遠いところの発見。
148:発見の可能性
176:理解可能性
175:図
119:リンク検索結果から面白いものを抜き出すアルゴリズムを観察する
リンク検索の中身。
146:情報量。
174:イメージ認識は読みやすい？
118:link検索をインクリメンタルに行う

117:link検索が面白い。
144:＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
143:まとめた論文を書きましょう。


動物と人間が理解しあえるのは、動物が、あるバショに寝ていて、熱いから
厚さが一定をこしたから、そこを移動する、といった快感処理のアルゴが
人間と同じだから。
　
計算機科学のシステム開発には、特殊言語化と、アルゴリズムの記述、
という二つのステップが必要である。
オフショア開発の場合は、特殊言語化と、アルゴリズム差異の翻訳、アルゴリズムの記述、
表示言語などのローカリゼーション、が必要とされる。
オフショア開発チームと日本人開発チームで、日本において開発をするとき、
アルゴリズムの開発速度、特殊言語化、において海外技術者は高い効率を持つ、
というメリットと、日本独自のアルゴリズムを翻訳する。というデメリット
とのトレードオフになる。


171:http://www2.edu.dhc.co.jp/kouza/ej04.html
115:ノード分解と単語翻訳とコンテクストの類似による単語の調査と結合
170:http://www.eigotown.com/eigocollege/exam/exam3_1.shtml
114:自然文のノード分解の自動化
113:メカ杉田玄白
112:アルテックさん

88:単語の自動翻訳
＋独自形式をもつ機械言語
87:プログラマは会話が難しくても、
コードをみればメッセージはある程度読み取れる
110:投げ込み
59:自動翻訳アルゴリズムの調査
86:コンテキスト
85:図で理解？
29:日本には数学の基礎ができる人
（たしざんとか）は多い
57:英語聞き取れる人の調査
28:日本には理系が少ない？
56:英語かける人の調査
83:ユニバーサルに理解が可能
55:英語読める人の調査
9:要求定義をする。
自動化をする。
ルーチンを作る。
アルゴリズムを書く。

54:英語話せる人数調査
25:プログラミング言語などが英語だから？
53:単語などまでは一緒
80:オフショア開発可能
6:海外/日本
ストーリーテリング

23:英語に近い
5:恣意的決定。
linkの数。
関連による意味の決定。
linkによる差。
需要の発言

22:海外の技術力の違い

3:類似現象そのものがそうかも。
20:関心空間
（似たものがリンク。それが巨視的に見ると意味を作っている）
1.分節の作成（発見）と
2.個人の主観におけるネガティブ差異などによる配置。
3.類似や関連の発生
4.翻訳体験における、類似での単語カンのツナガリなど
5.それぞれの翻訳言語体系における類似
2:ブリッジエンジニアリング。
rse+nodepad
video(international)
igy(just selection.not write the component)
make a good define on the "just selection"
日本語と英語の"関連"
ソシュール
自動翻訳のいろいろ。
海外ウェブ翻訳＋リファインのアドイン（人力かも）。
課金モデル。類似紹介。通達する。
アトラス使う。
連想の系によってウェブはソシュの意味そのものになった。
検索マドは意識になった。
169:http://www2.edu.dhc.co.jp/kouza/ej04.html
167:英語で検索すると
google.
クロスカルチャー
ビジネス英語。（即応の言語）
オンライン英語学習。
スカイプで学習という起業も。
alc.co.jp。スタッフによる例文。現代の例文。
グーグルで、この例文の使用例がありえるか検索する方法。
悪いことをしてみよう。
留学なんちゃら。
トフル。トフルスコア。
英会話学校。
どこかで投資。金作れるか、モチベーション作れるか。
英文履歴書添削サービス
時事英語読み。（学習のため）
英語で映画
ローカライズ。
産業翻訳。


http://www.tratool.com/tsu-hon/shientoolpop.html

訳支援ツールには、おもに二つの種類がある。
　 一つ（Aタイプ）は、原文と訳文の対訳データベース
（翻訳メモリ：TranslationMemory)を参照しながら翻訳するツールで、
類似の文章が多いドキュメント、たとえばバージョンアップしたマニュアルや
容量の大きなジョブの翻訳に向いている。
　もう一つ（Bタイプ）は、翻訳ソフトと対訳データベースを組み合わせたソフト。
対訳データベースを活用できる部分は、翻訳メモリを生かして翻訳し、
参照できない新しい文章は翻訳ソフトに訳させて、
翻訳者はでてきた訳文を編集しつつ翻訳を進める。
　“TraTool”は前者のタイプの翻訳支援ツール。 

http://www.glova.co.jp/translation/point.html
翻訳の精度
訳文の自然さ
専門用語の正確さ
校正
入稿形式
納期
連続性・ボリューム
図表・DTP・印刷
図表やレイアウト等は必要なければ省くことによって安くなります。
必要な場合は、それぞれを別の業者に依頼するよりも、弊社に一括して
お任せいただく方が一貫して作業を行えるので、クオリティ、
コストともに有利です。 
☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆ここが自動化できる。HTMLで。☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆
http://www.glova.co.jp/webinterpret/index.html

http://www.glova.co.jp/zintern/index2.html
https://www.g-career.jp/job/search2.php
http://www.glova.co.jp/translation/it.html
http://www.tratool.com/freelance/index.html
165:需要が大きい
109:テクストの
ノードパッドへの翻訳
135:英語でのウェブサイトの記述量
107:活字なら読み取れる
162:目的と手段での検索。
106:販売をして、
文言だけ翻訳する仕組み。
161:＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
ノードパッドと自然翻訳と、海外の発見の目的手段的経路による検索
１．英語の仕組みは、英語でノードを書いていく。
２．それらの因果連結は保存していく。
３．日本語のノードもかいていく
４．検索語で検索すると、それを実装しているノードと、それが実現しているノードを検索し、
さらに英語でのそれを検索する。
105:形式固定をして英語翻訳をするとよい。
132:早さが必要
160:良いノードは多目的的だったりするので、目的と手段のセットというよりは
あるノードが多目的を、という感じだ。
104:ブリッジング
131:処理速度
103:オフショア
79:開発可能
102:英語圏エンジニアは日本エンジニアより安く優秀
78:理解可能
101:ITは英語でできている
100:マクロメディアサーバ
49:世界企業の売り方の分析
48:世界企業の販売政策
47:ネットワーク転送容量もまだ距離に比例している
英語圏の外国との物質のやり取りには
情報技術が補佐できるところが多いはず
46:スカイプ
73:熱エネルギーから電気エネルギーへの変換。

45:英会話教育。
72:光合成から再利用なものへの変換

16:カリエよりノードであるほうが
他社による理解が可能。
44:ウェブのありがたみは距離に反比例する
71:海外に日本から製品を売ろうと思うと
持続的にあるパーセンテージの翻訳作業が必要になる。
最初だけじゃない。

日本語では一切コミュニケーションしなくてよい仕組み、
ならばよろしい。
アマゾンは販売の仕組みさえ日本語化されていれば
展開が可能であった。大概は。
43:物理的な遠いところへの情報の翻訳
14:オフショアを乗り越えてこれる
＝ユニバーサルな価値があることの認定。
理解可能なはず。
＝開発可能なはず。
よってビジネスとして価値があるようなもの
基本開発可能であるべきだろう。

42:百式さん。
41:質の高い翻訳のセット（メカ杉田玄白）
40:自動翻訳ににちょっと足して
11:外資の参入
スターバックスは日本で成功しました。
159:（ややこしい言葉と簡単な言葉）
158:犬とのコミュニケーション。
157:オトコと女の会話？
156:類似と、同一の論理はまるで違うかもしれない。
128:コミュニケーションツールを
作るときの作り手の気持ちは
ソシュが、パロールとラングが違うといったときの気持ちににている
あるいはライフゲームなり、複雑系をつくるときの気持ちにも似ている。
あるいはオブジェクト指向でプログラムをつくっているときの
気持ちにもにている。
あるルール、基礎が、他との連携で全体をつくるだろうことを見越した作り方。
127:IPAから出ている検索エンジン
154:海外の目的と手段のセット。
126:シソーラス
181:物理的距離が遠いほど、情報料が多い必要がある。
例えば海外から商品を購入するのに、スチル写真一枚と金額と4行の文章より
ビデオで10分の説明のが良い。これは近くにいる人には冗長である。
意識の問題。
125:型指定ができている。
124:エクリプス
151:まず英語でシャベル、書く、考える、から。そっから聞く、読むとやる。
123:インクリメンタル
122:グーグル、ミクシ、href、アンカー、関心空間。意識、客観、検索窓、俯瞰図
121:その英語サイトの自動翻訳も表示し、
手作業寸前のリストにしておく。
97:1度肌に触れるために1000の言葉を無駄にする
120:それをノードパッドないに一覧的に提示する
96:東京本部ってのなしなはずなのに
67:あってMTGしたくなる
95:ことばは違えど欲求は理解できる
17:越境のタイプ。
16:カリエよりノードであるほうが
他社による理解が可能。
14:オフショアを乗り越えてこれる
＝ユニバーサルな価値があることの認定。
理解可能なはず。
＝開発可能なはず。
よってビジネスとして価値があるようなもの
基本開発可能であるべきだろう。

128:コミュニケーションツールを
作るときの作り手の気持ちは
ソシュが、パロールとラングが違うといったときの気持ちににている
あるいはライフゲームなり、複雑系をつくるときの気持ちにも似ている。
あるいはオブジェクト指向でプログラムをつくっているときの
気持ちにもにている。
あるルール、基礎が、他との連携で全体をつくるだろうことを見越した作り方。
49:世界企業の売り方の分析
127:IPAから出ている検索エンジン
48:世界企業の販売政策
126:シソーラス
11:外資の参入
スターバックスは日本で成功しました。
47:ネットワーク転送容量もまだ距離に比例している
英語圏の外国との物質のやり取りには
情報技術が補佐できるところが多いはず
125:型指定ができている。
46:スカイプ
124:エクリプス
159:（ややこしい言葉と簡単な言葉）
45:英会話教育。
123:インクリメンタル
158:犬とのコミュニケーション。
44:ウェブのありがたみは距離に反比例する
122:グーグル、ミクシ、href、アンカー、関心空間。意識、客観、検索窓、俯瞰図
79:開発可能
157:オトコと女の会話？
43:物理的距離
121:その英語サイトの自動翻訳も表示し、
手作業寸前のリストにしておく。
78:理解可能
156:類似と、同一の論理はまるで違うかもしれない。
42:百式さん。
120:それをノードパッドないに一覧的に提示する
41:質の高い翻訳のセット（メカ杉田玄白）
76:扱い安さ
154:海外のアプリケーション
海外の目的と手段を。
40:自動翻訳ににちょっと足して
75:扱いやすい？
73:熱エネルギーから電気エネルギーへの変換。

151:まず英語でシャベル、書く、考える、から。そっから聞く、読むとやる。
72:光合成から再利用なものへの変換

71:海外に日本から製品を売ろうと思うと
持続的にあるパーセンテージの翻訳作業が必要になる。
最初だけじゃない。

日本語では一切コミュニケーションしなくてよい仕組み、
ならばよろしい。
アマゾンは販売の仕組みさえ日本語化されていれば
展開が可能であった。大概は。
9:要求定義をする。
自動化をする。
ルーチンを作る。
アルゴリズムを書く。

119:リンク検索結果から面白いものを抜き出すアルゴリズムを観察する
リンク検索の中身。
118:link検索をインクリメンタルに行う

6:海外/日本
ストーリーテリング

39:自動翻訳
117:link検索が面白い。
5:恣意的決定。
linkの数。
関連による意味の決定。
linkによる差。
需要の発言

38:梅がプラムになる。
4:発信しましょう。
全研究室のウェブを英語化します。
デザインなどもアスペクト的に差し込んでいきましょう。
37:バラエティのコンテンツなんかを
海外に露出させるのは大変。
日本の芸術媒体を世界に発信するのは
まだ需要がない？
ネット時代なのでキットあるよね。

115:ノード分解と単語翻訳とコンテクストの類似による単語の調査と結合
3:類似現象そのものがそうかも。
36:人/モノ/コト/カネ/バショ/
誰かがどこかでなにかをどうにかする。

114:自然文のノード分解の自動化
2:ブリッジエンジニアリング。
rse+nodepad
video(international)
igy(just selection.not write the component)
make a good define on the "just selection"
日本語と英語の"関連"
ソシュール
自動翻訳のいろいろ。
海外ウェブ翻訳＋リファインのアドイン（人力かも）。
課金モデル。類似紹介。通達する。
アトラス使う。
連想の系によってウェブはソシュの意味そのものになった。
検索マドは意識になった。
149:関連情報の翻訳
35:ブリッジエンジニアリング。
113:メカ杉田玄白
148:発見の可能性
34:svcなどの文法が違う
112:アルタなんとかさん

69:ユニバーサルな
147:モノや現象、
快感の輸送のために補助となる。
33:英語ー>日本語はまだまし。
しかし根本的に弱そう。
68:電子回路の会話製みたいなものと
146:情報量。
110:投げ込み
67:あってMTGしましょうよ。
145:形式言語＋翻訳
144:＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
30:海外SEの数を調査
143:まとめた論文を書きましょう。


動物と人間が理解しあえるのは、動物が、あるバショに寝ていて、熱いから
厚さが一定をこしたから、そこを移動する、といった快感処理のアルゴが
人間と同じだから。
　
計算機科学のシステム開発には、特殊言語化と、アルゴリズムの記述、
という二つのステップが必要である。
オフショア開発の場合は、特殊言語化と、アルゴリズム差異の翻訳、アルゴリズムの記述、
表示言語などのローカリゼーション、が必要とされる。
オフショア開発チームと日本人開発チームで、日本において開発をするとき、
アルゴリズムの開発速度、特殊言語化、において海外技術者は高い効率を持つ、
というメリットと、日本独自のアルゴリズムを翻訳する。というデメリット
とのトレードオフになる。


64:日本人による翻訳と同時にアメリカ人によるネイティブチェック
61:UML->code吐き出し。codeからUML戻し。
97:1度肌に触れるために1000の言葉を無駄にする
60:OCR。
96:東京本部ってのなしなはずなのに
95:ことばは違えど欲求は理解できる
94:ノードパッドに限らずウェブ翻訳ではなくて
UMLであるとかのなかんいはいっている
文章（構文のないもの）のみ
翻訳する
93:単語翻訳は自動化効率が高い
91:☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆
☆ノードパッドのノードの英語自動翻訳☆
☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆
90:欲求構造。
ノード構造の理解が可能
109:テクストの
ノードパッドへの翻訳
29:日本には数学の基礎ができる人
（たしざんとか）は多い
107:活字なら読み取れる
28:日本には理系が少ない？
106:販売をして、
文言だけ翻訳する仕組み。
105:形式固定をして英語翻訳をするとよい。
26:英語による発見の記述が日本の発見の記述より多い
104:ブリッジング
25:プログラミング言語などが英語だから？
103:オフショア
102:英語圏エンジニアは日本エンジニアより安く優秀
137:ノードパッドのように、あるいはUMLのように
あるいはプログラミングソースのように、
英語であっても、
形式は日英共通であるようなものならば、
翻訳は自動翻訳などの自然言語処理の系でいけるはず。


23:英語に近い
101:ITは英語でできている
59:自動翻訳アルゴリズムの調査
22:海外の技術力の違い

100:マクロメディアサーバ
135:英語でのウェブサイトの記述量
21:海外のアプリケーションの翻訳。
海外の技能の翻訳。
ブリッジング
57:英語聞き取れる人の調査
134:記述された発見の獲得
20:関心空間
（似たものがリンク。それが巨視的に見ると意味を作っている）

56:英語かける人の調査
133:発見の獲得
55:英語読める人の調査
132:早さが必要
54:英語話せる人数調査
131:処理速度
167:英語で検索すると
google.
クロスカルチャー
ビジネス英語。（即応の言語）
オンライン英語学習。
スカイプで学習という起業も。
alc.co.jp。スタッフによる例文。現代の例文。
グーグルで、この例文の使用例がありえるか検索する方法。
悪いことをしてみよう。
留学なんちゃら。
トフル。トフルスコア。
英会話学校。
どこかで投資。金作れるか、モチベーション作れるか。
英文履歴書添削サービス
時事英語読み。（学習のため）
英語で映画
ローカライズ。
産業翻訳。


http://www.tratool.com/tsu-hon/shientoolpop.html

訳支援ツールには、おもに二つの種類がある。
　 一つ（Aタイプ）は、原文と訳文の対訳データベース
（翻訳メモリ：TranslationMemory)を参照しながら翻訳するツールで、
類似の文章が多いドキュメント、たとえばバージョンアップしたマニュアルや
容量の大きなジョブの翻訳に向いている。
　もう一つ（Bタイプ）は、翻訳ソフトと対訳データベースを組み合わせたソフト。
対訳データベースを活用できる部分は、翻訳メモリを生かして翻訳し、
参照できない新しい文章は翻訳ソフトに訳させて、
翻訳者はでてきた訳文を編集しつつ翻訳を進める。
　“TraTool”は前者のタイプの翻訳支援ツール。 

http://www.glova.co.jp/translation/point.html
翻訳の精度
訳文の自然さ
専門用語の正確さ
校正
入稿形式
納期
連続性・ボリューム
図表・DTP・印刷
図表やレイアウト等は必要なければ省くことによって安くなります。
必要な場合は、それぞれを別の業者に依頼するよりも、弊社に一括して
お任せいただく方が一貫して作業を行えるので、クオリティ、
コストともに有利です。 
☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆ここが自動化できる。HTMLで。☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆
http://www.glova.co.jp/webinterpret/index.html

http://www.glova.co.jp/zintern/index2.html
https://www.g-career.jp/job/search2.php
http://www.glova.co.jp/translation/it.html
http://www.tratool.com/freelance/index.html
53:単語などまでは一緒
88:単語のマッチング
＋文法の系
87:プログラマは会話が難しくても、
コードをみればメッセージはある程度読み取れる
165:需要が大きい
86:コンテキスト
164:海までの距離
水までの距離
工場までの距離
作るところまでの距離
消費するところまでの距離
人が価値の消費店
50:欲求の大方が一緒。
ローカリゼーション。
85:図で理解？
163:会う為のコスト
162:目的と手段での検索。
83:ユニバーサルに理解が可能
161:１．英語の仕組みは、英語でノードを書いていく。
２．それらの因果連結は保存していく。
３．日本語のノードもかいていく
４．検索語で検索すると、それを実装しているノードと、それが実現しているノードを検索し、
さらに英語でのそれを検索する。
160:良いノードは多目的的だったりするので、目的と手段のセットというよりは
あるノードが多目的を、という感じだ。
80:オフショア開発可能
7:@done #wait how to ...
6:@done #wait attrs
4:@done #wait storytelleing + modeling
3:tkm
49:管理画面sqlの共有
48:進捗を知りたい?知ってどうする？
47:全画面できてるのかわからん。
46:もう少し具体的な作業
38:@wait offshore
44:ある程度動いてからになるか？
37:@wait xhtml2jsp
29:@wait 
formのいろいろ
43:画面仕様を出し切る必要がある
36:@wait 
camp2xhtml
28:@net magic drawe でxmiをひらけという。
42:ask to make sure not design
35:金じゃなくてもインセンティブでもいい。
27:@net displayタグの参照を表示してしまっている部位を探して回って
name/titleなどの属性で置き換える指示

41:@wait ask to make camp
34:
追仕、追課金するかの判定
26:@net ロードしてもらう
40:@wait camp
33:こちらが儲かる状況を考える
25:@wait offshore

32:マニュアルある？
31:
全行程テストをする
22:storyteller
15:@done storytellerをcvsに
13:@time #time 20070905
12:@wait #wait 鈴木設定
8:@done #wait if the wireflames are ok, just make it, or if not, wait for him to imple it.
11:@wait #wait 開発機
1:tkp
3:a
130:翻訳
247:ガチャピン敵なやつ
246:チャネルと美女のついた通知
169:パーティーシェア
245:制作に参加さす
244:
167:@wait SVチームと美女たちの凄い可視化
243:@Pad ウェブのFBでやってブクマ
166:@wait 最初の種
43:美しい
240:どうすればメール欠ける？
163:いくら？10,10,20
162:お金払うモノ払う
161:関係の復帰
209:着金が多少
208:僕らで70万。
206:日の丸
129:ゴール決定する。
届けならモノの送付とかいったコミュニティとかへの参加。
204:0ベースさん
203:ありがとうございます。
パーティーの参加のお金だけでもいいのではないかというやつだな。
オープンニングパーティーにご招待！
5000円
126:theamplifierに場所amplifierとして参加するようにする
202:美女たちと追体験写真をきちんと。
125:出会い
201:グラウンドゼロのこと
200:どうすれば森ビル向け企画書になるか？
123:アキバさんとか
199:企画書の性質？
122:video
198:企画書
197:どうすれば、誰に送ればいいか決まる？
堀内さんとかかな。
196:一回みんなにそう書く。
　
1.お支払いいただく金額のうち、半分をマイクロファンディング、
　つまり30万はそっち経由でみなさんに払っていただきく
　お願いをしている。
2.初期費用で200万程かかる。
3.100万は、CHE、NEW、SV、東窪で払う。
4.60万程集めたい。
5.40万はマイクロファンディングで集める。
6.森ビルが場所貸ししてくれたら還元する。
　集まれば集まるほど可能性が高くなるので、
　最初はお金払うつもりで集まる人ベースで
　集める必要がある。
7.この子らが常駐する
8.この人たちが常駐してくれる。
あとはここに書いてある通り。
ほぼ決まった。あと数名募っている。
多分マイクロファンディングなどかけると
それであっというまに決まってしまうが、
あっというま感とか凄まじい集まり方感とかが重要。
したがってまだまってくれ。
　
195:@wait ファンキーさん
194:誰にメリットがある？
73:通知
193:ターゲット決める
72:stream
192:メール書いてみる
71:ウェブ
191:そういう話をしてみる
70:ストリーム
190:@wait CHE,MOS,SV
39:show it with charts
235:物件
36:[[イメージ]]をきちんと用意する
34:microfunding
231:ファッションのかっこいいとこどっか探す。
よしださん、ガス、スタイリストの人たち、いくつかありそう
154:プログラマー
33:middlefunding
153:すごい人
32:nanofunding
152:内装のデザインを変える
31:seedsfunding
30:投資の直列化
150:@wait 建築
ギーク
女子
デザイナー
編集者

117:@Pad facebook.com
116:[[new]] designer
115:@wait designer
4:プレゼン
268:
69:メッセージ
3:投資
267:THEPANICを音にする
113:design
68:参加と可視化
2:@wait 投資だ
266:西尾くんに頼む
112:美しく
1:TKP2
265:バンドで取る
188:あと3組くらいパーティーシェア誘う
66:着手のゴールの可視化
 x　参加の可視化
 x 速度の可視化
 x 素晴らしい着眼による問題（ゴール）と解決のセットの可視化。
参加インターフェイス。
264:BGM
187:アンプのグラフィック使う
65:@wait メディアモデル
263:どっちかはどうすれば分かる？
64:ビジュアライズドメトカーフ
262:アンプリファイアーモデルで。
261:まとめてやるとやりやすい？
260:オフショア？
183:ShowWireのヤツやってもらう
181:資料とか
180:森ビルネゴる
228:wwwwwh
29:@wait 投資循環
227:ネタ
149:@wait 領域横断
148:fladdictさん口説く
27:参加
224:runtime
145:プログラマブルにする
222:ネタ部隊
144:@wait 10万ノマド
143:@wait 20万party
99:webapp
220:party
142:@wait プログラマブル
マッチング
パーティー
スタートアップ
ネットワーキング

98:web
97:content
96:contact info
95:mail / phone / skype / goto / see / basecamp / generate rss * readers
94:@iPhone teleblah
93:message
109:ビデオ
92:ExportRss + rssmailer
91:message+
90:notification
106:フォロー関係
105:motivate
104:一日予約
257:動画おーさりんぐ
103:sc
59:TKP2を手伝ってくれるamplifierを探す。
256:撮影
102:サービスイン。配置  = deploy
179:200万円
255:アイデア会議
101:請求
57:英語
100:storyteller
56:buzz
176:マイクロファンディングで半分出してくれという。
252:言葉の一つ一つに併せていろんなギミックが乗った人の顔が次々とあらわれて口パクかしゃべる。
その一言ずつはある程度別の人に書いてもらってもいい。
　
パニック。東京カーネルパニックは、東京のシェアのエラー担当のなに恥じたりしません。
ただしさを名乗ることに、ならわかりますが、
エラーを名乗るにプライドと勇気といるなんて、知っていましたか？
僕は知りませんでした。ヤルまでは。
うぞうむぞうを引き連れながら、モダン・コワーキングが出来上がる3年前から
コワーキング的なあり方や、おかしな共有を実験してきましたが、
僕達は最近、全く新しいとっても重要な、エラーのあり方を、発見しました。
それは、スタートアップ。
スタートアップムーブメント、が起ころうとしてます。
つまりスタートアップはこの新しさの時代に、
胸を張って、傷を追って、勇気をもって、時に引きこもって、
期待にそって、ときどき意図的に裏切って、虎視眈々と世界を変える、
世界に対するエラーだったのです。
そのほとんどはゴミ箱に捨てられ、全然格好もつかないような、
しかしトライの末に生まれるエラーだったのです。
東京カーネルパニックが定義するスタートアップは世界を変えることです。
東京の二文字には世界戦を戦うという意志が込められています。（後付けです）。
パニックの文字にはエラーを恐れるなという希望が込められています。（これは本当のような感じです）。
カーネルという文字は遊びです（カーネルサンダースの着ぐるみをキタ女子）
東京カーネルパニックは世界を変えるスタートアップを支援する全く新しい仕組みを提供します。
震災支援の時に目覚しい効果を発揮したマイクロファンディングの進化系、メディアテクノロジー、
東京が培ってきたあらゆる領域の成熟した才能やプロダクト、生活の仕組みを、
スタートアップに集結させる、最後のワンステップが見つかりました。
世界を変えるパーティーに参加しませんか？

BGMは THE Smiths のPanic。お前らスミスもしらねーのかよ！（と美女が）
54:kickstarter
251:頂上とストリーム
53:campfire
250:GZ、編集者、ファッション、女子好き、パーティー好き
173:他に誰が入れば来る？
172:参加の可視化で参加してもらう
18:@wait 前評判
216:漆喰を鼻に塗っている美女の写真
215:イベント
214:漆喰
136:@wait 10万シェア
213:トランポリン
135:@wait 15万
スタジオ
14:amplifierとして参加する状態にする。
どうすれば余剰でやれるようになるか
212:内装
134:@wait 25万を
99:leave
57:3month
97:leave early
129:tipness
128:
95:sengan
127:do not want to recognized "coming so many times"
94:morning
126:do not want to go tipness too much?
51:hardcontext todos
88:pknked
87:go 2 hours out is OK
124:go home
86:motivation
119:@mece zxc
123:pknked
118:bothered
122:go home and change clothes
117:organize
121:cold
116:daily_organize
120:@home
109:air context
108:how can i go home nad work?
111:no interruption
110:battery
105:arrange into the schedule
104:@done pomodoros
103:timings
91:go and get pknked and back and work and eat and go out and 
88:pknked
87:go 2 hours out is OK
86:motivation
57:3month
85:so t
84:yes
83:do i have materials,
82:cook
81:@done @iPhone @Air @time eat at home
51:hardcontext todos
112:amaten and payment -> 4 hours
80:cf
111:get  paid
109:no caffine
110:hair wash
108:d
105:arrange into the schedule
104:pomodoros
99:leave
103:timings
97:leave early
96:tipness
95:sengan
94:morning
63:body
115:@done leave to gym first
114:@done go to gym at 18
122:@mece hard context
113:@done leave_early
105:@done arrange into the schedule
112:@done gymg
104:pomodoros
120:morningkit
111:@done gggg
103:timings
88:@done pknked
86:motivation
94:@mece morning
82:cook
57:3month
81:eat at home
80:cf
51:hardcontext todos
149:@done avoid getting [[cold]] AGC
147:@secretary back at night
139:@done do minimum
138:@done conflict
154:@secretary go there and back to gym at 18
145:@done watched
137:@done comparison
153:@fired
144:ウォームアップ
136:@done conflict
119:@wait 生活衛生要因を確認
118:@done leave
117:@mece 朝
140:@done pride
116:@done face wash
108:@done starbucks
140:less sleep a day
88:pknked
87:go 2 hours out is OK
105:arrange into the schedule
104:pomodoros
85:so t
103:timings
84:yes
119:dddd
83:do i have materials,
118:conflict
82:cook
99:@mece leave
81:eat at home
116:sleepy
80:cf
97:leave early
96:@mece tipness
95:@mece facewash
113:@mece watched
94:morning
112:@mece motivation
129:エクセルに
128:@done merit
127:@done demerits both what happends
126:@done make two node
57:@done 3month
125:@done それぞれの重み。
XLSかmmかndで、点入れてく
124:@done compare
123:@done noding for both (or all ) of the nodes
122:@done 比較
121:@done comparison
139:better_sleeping
120:@done conflict
137:diyk + point
136:3 hours at least.
135:estimation on that
134:have to do cf work....
133:sleep and then go
63:body
132:purpose nodes and thread
131:点数付け
130:セット作成。
109:stomach
141:sleep 30 mins
108:emok
80:cf
109:stomach
57:@done 3month
108:emok
99:leave
97:leave early
105:arrange into the schedule
96:tipness
104:pomodoros
95:facewash
103:timings
94:morning
88:pknked
87:go 2 hours out is OK
116:too tired?
85:so t
84:yes
63:body
83:do i have materials,
113:watched
82:cook
112:motivation
81:eat at home
87:go 2 hours out is OK
97:@mece leave_early
63:@done body
96:@scheduled gym
85:so t
84:yes
94:morning
83:do i have materials,
82:cook
109:@mece stomach
81:eat at home
108:@mece emok
118:行き先
80:cf
117:ながら作業
149:@done eat more and more
105:arrange into the schedule
148:some at hows
104:pomodoros
125:gmap
103:timings
113:watched
124:go and back
135:@mece agc
112:motivation
123:性的緊張
134:@mece 洗顔
133:hairset
143:mask
121:pknk_early
132:pknk
153:@done go and back gym
131:ウォームアップ
152:@scheduled shokupan
140:@mece looks
57:@done 3month
99:leave
88:pknked
80:cf
131:ウォームアップ
144:@done tebukuro hokkairo
143:@done mask
142:@done cycle_kit
141:@done hokkairo
154:get familiar with other staffs
153:someone else
152:starbuck chan
165:try library
164:bicycle
163:try not to use places out
162:eliminate.place
161:go and back
109:@done stomach
57:@done 3month
108:@done emok
119:@done warm
105:arrange into the schedule
118:行き先
104:pomodoros
117:ながら作業
103:timings
63:@done body
113:@mece watched
112:@mece motivation
125:gmap
88:@mece pknked
123:性的緊張
99:@mece leave
85:so t
149:eat more and more
121:@mece pknk_early
84:yes
97:@done leave_early
148:some at hows
83:do i have materials,
82:cook
81:eat at home
132:pknk
131:ウォームアップ
113:@done watched
112:@mece motivation
88:@mece pknked
87:go 2 hours out is OK
85:so t
84:yes
83:do i have materials,
82:cook
63:@done body
81:eat at home
80:cf
189:try 3000 thing?
188:remaining cost, and live cost.
169:@done just point
187:how to check if this is OK or not
168:stay up
149:eat more and more
167:@mece better sleeping
148:@done some at hows
166:water
184:stay_out
165:down the conversion rate 
183:@done cf0411
164:conversion not done
182:conflict
163:pc battery
109:stomach
181:cf
144:@done tebukuro hokkairo
108:emok
180:conflict
143:@done mask
161:what is missing?
125:gmap
142:@done cycle_kit
160:amatening
124:go and back
141:@done hokkairo
105:arrange into the schedule
123:性的緊張
140:@done looks
104:pomodoros
103:timings
121:pknk_early
99:@done leave
97:leave_early
96:gym
94:morning
57:@done 3month
179:emok
178:go astamuse
159:yeah just go
158:bicycle
176:https://mapsengine.google.com/map/u/0/edit?authuser=0&authuser=0&hl=ja&hl=ja&mid=zclHUy5QUwAk.kZe2bn4Oh6rA
157:sleepy
175:work lying
138:@done ゴム
156:no do not care
155:otya
173:sleep 10min
119:@done warm
172:things able to be done when sleepy
118:行き先
135:@done agc
171:do cheap dddd
117:@done ながら作業
134:@done 洗顔
152:eliminate.place
170:@done dddd
133:@done hairset
132:@mece pknk
185:transit planner
184:work lying
183:stay out
132:pknk
182:sleep 10min
131:ウォームアップ
181:things able to be done when sleepy
118:行き先
117:ながら作業
168:2shock
167:胃薬
166:胃
113:watched
164:hibiya
112:motivation
163:keio library
162:library
161:bicycle
160:nomad cheap
149:eat more
57:@done 3month
148:some at hows
198:@done かも
202:see evernote @micro
197:@done 食欲？
201:micro tasks
196:@done 2shock.不足を埋めるには？
200:g / cost
195:@done do not eat one day
194:@done 2shock.18時までに二食、2000kcal食べる
193:https://mapsengine.google.com/map/u/0/edit?authuser=0&authuser=0&hl=ja&hl=ja&mid=zclHUy5QUwAk.kZe2bn4Oh6rA
140:looks
88:pknked
179:sleepy
87:go 2 hours out is OK
178:point
85:so t
125:gmap
84:yes
124:go and back
83:do i have materials,
123:性的緊張
82:cook
81:eat at home
121:pknk_early
80:cf
109:stomach
159:mac
108:emok
158:eat_cheaper
157:chew
156:dddd
105:arrange into the schedule
63:@mece body
155:conflict
104:pomodoros
103:timings
152:eliminate.place
99:leave
97:leave_early
189:
96:gym
121:pknk_early
169:keio library
168:library
167:https://mapsengine.google.com/map/u/0/edit?authuser=0&authuser=0&hl=ja&hl=ja&mid=zclHUy5QUwAk.kZe2bn4Oh6rA
88:pknked
166:nomad cheap
87:go 2 hours out is OK
165:conflict
164:do it at home
85:so t
163:外出
109:stomach
84:yes
162:stretch
57:@done 3month
135:agc
108:emok
83:do i have materials,
161:go out and back
134:洗顔
82:cook
160:飯
133:hairset
81:eat at home
132:pknk
105:arrange into the schedule
80:cf
131:ウォームアップ
104:pomodoros
103:timings
99:leave
149:eat more and more
97:leave_early
148:some at hows
96:gym
119:warm
118:行き先
144:tebukuro hokkairo
117:ながら作業
170:hibiya
143:mask
142:cycle_kit
63:@done body
141:hokkairo
140:looks
113:@mece watched
112:@mece motivation
159:avoid getting [[cold]] AGC
156:@mece dried foods in APC elimination
155:eliminate.eat
152:eliminate.place
125:gmap
124:go and back
123:性的緊張
131:ウォームアップ
149:eat more and more
148:some at hows
146:コンテクストベースルーチン
145:削っても復活するように栄養
109:stomach
144:tebukuro hokkairo
108:emok
143:mask
88:pknked
142:cycle_kit
87:go 2 hours out is OK
141:hokkairo
105:arrange into the schedule
140:looks
85:so t
104:pomodoros
84:yes
103:timings
83:do i have materials,
156:@mece dried foods in APC elimination
82:cook
119:warm
155:eliminate.eat
81:eat at home
99:leave
118:行き先
80:cf
117:ながら作業
97:leave_early
152:eliminate.place
96:gym
94:morning
113:watched
112:motivation
57:@done 3month
125:gmap
124:go and back
123:性的緊張
121:pknk_early
138:ゴム
63:@done body
136:wash
135:agc
134:洗顔
133:hairset
132:pknk
1:todayhome
12:* bath.
11:* facewash.
27:have some a little and facewash
9:* better environment.
26:soap
8:* better bed.
19:* stay out
24:additional payment
6:← avoiding meeting mom
18:stay Shuwa.
and make some envs
and then gymming
pick facewash brash?
23: No payment. 
17:* home
21:← need to pay back and decide the policy.
65:addlabel
21:@wait todoist access
43:separting with spaces ( keitaiso ) 
64:where to insert… which node's children
20:data
86:pad howの時にはpad_howとpadとをつける？ padを付けない方がいいかも。。。
バッファーが溜まったらつけるのが正しい。
42:suggest tag with the texts. by seperating with spaces.
63:content not existing in nodepad
85:Pad outlining みたいに、サブコンテクストがあると、バッファによる忘却にならない。消すベキか。
62:next action in todoist item
61:next node
83:automation buffer count
60:nodepad auto complition
82:blueflag
109:@wait just update items by taking from clouddb
9:basecamp
81:addhow
108:@wait csv2todoist
8:nodepad
80:@wait tiny web app with 
annotation
107:sret item.Priority
7:GTD
106:add label
105:Runtime
5:template
104:nodefield label and todoist automation
103:blueflag autocount
3:todoist
100:clouddb
19:clouddb for items
18:filter x batch update webapp app
17:batch update
16:api
59:complition
14:automate
58:same string
13:snippet
35:client,cf,roi
57:terminal nodes
12:list
56:terminal node to todoist item
11:Pattern
77:tag viewで
33:wording
10:snippet
76:tag.shを改造
54:inserting into nodepad
75:tag viewに含める
97:ndxtdxtv
53:items
96:tagging webapp
52:content
51:word
94:breakdownが死んでる
50:parent nodes
71:batch update commands
93:better_next
70:tag
91:nodepad
90:basecamp todoist sync?
112:blueflagにもとづいてtodoで許可を取る
111:@Air test account
110:@wait Todoist.syncFromCloudDB
28:today organizer
27:better_reminder
26:reminder
48:child nodes
69:subcontext labeling
47:continng node
68:match
24: iphone app better tagging
46:contains
67:applications
89:Chart subcontext auto code.
45:nodefile
66:tag
88:BufferedSubContextたちは、
バッファーが一定数になったらにする。
44:words
4:list
3:todolist
40:投資家
209:クリエイティブ
9:流れやすい形態
207:タイムシェアリング
229:fsq+twitter APIで。
8:商流
228:ポートフォリオ
249:ポートフォリオをクリップしてタグをつける。
205:音楽の会
227:チェックインしてるのを見る
248:ログを鳥まくる
204:シーツ
226:チェックインを促す
148:treadmill移動かな。
247:良いコンテンツとして編集しきる
203:マットレス
225:野嶋さんに
246:プッシュする
224:ライト
245:タンブラーアカウントつくってクリップしたり、
ツイッターつぶやいたり、
あとは動かしたりする。
201:録音機材
244:写真と文章とタンブラー。
189:UST機材
222:羨ましがられないといけない
188:ちょっとちゃんとした機材
221:粉砕する
242:グラフのずれた中心を
187:オフィス利用
220:お金払ってやればいいかも。
240:色鍋の色をもう一弾上げある。5色で
183:想起
18:衛生
17:生活感かつ衛生
39:女性
16:生活感
15:寝れるはコンテンツ。
36:メニュー。金額。サービス。
57:セックス
34:パニックなバランス
56:創造性
11:商材
53:広さ
219:内装40万
218:プロジェクターを三つ
239:食事をもうちょっとだけかっこ良くする
217:プログラマブルな内装と近くを
238:酒を常備する
216:SV揃える
237:配置をする
215:顔を出す
236:デカ目の音
214:カフェ
235:書きまくる
234:写真をカッコよく編集しまくる
179:ダブルオーガナイズ
212:家利用
233:マルチチャネル。紙まで。名言を。
178:漆喰塗る会
211:寝具
199:いいカメラ
232:TKPのメディア
177:漆喰
198:プロジェクター
176:粗大ゴミ捨て
230:やると後でみんなに知ることができるということの告知
175:間口を広く（ぶち抜き）
251:ライティングと撮影とお化粧。写真共有する。
174:ポートフォリオ補助
195:オフラインが必要なこと
250:オフィスメニュー、
パーティーホスティング
お酒のルールなどをデザインする。
コップに巻けばいいかな。
173:女性オーガナイザーを
194:色
172:女性的な内装と女性的な会
171:女の子
48:これにするサービス
24:ニュース
23:人の流入
22:人の流入
5:windows
4:jdk
3:tomcat
5:用意してみてからか？
4:いっかいかえる？
3:服？
9:装飾？
11:朝ごはん後に変える
8:くつ
10:model person in theater
7:ジーンズ
6:黒いの
30:tonersaver引き継ぎ
38:変更しない
37:仕様変更を取扱
46:分担
45:コードを取得する
35:エンドのユーザーで仕様も変わる
44:コードも書いていただく
34:品質下げない
42:火を噴くと変わると
31:やっぱり資料読んでいただく
31:やっぱり資料読んでいただく
38:変更しない
30:tonersaver引き継ぎ
37:仕様変更を取扱
42:火を噴くと変わると
35:エンドのユーザーで仕様も変わる
34:品質下げない
38:仕様で止めたい
37:仕様変更を取扱
49:現状見積もりにふさわしい仕様に

35:エンドのユーザーで仕様も変わる
59:開発の仕様
34:品質下げない
46:分担
58:スケジュール
45:コードを取得する
57:9月12日完全納品
44:コードも書いていただく
56:どこかで金田さん
31:やっぱり資料読んでいただく
67:工程を持っておく
79:@wait gotomeetingの使い方会議
55:スケジュール管理
30:tonersaver引き継ぎ
66:東窪
42:火を噴くと変わると
78:@done オンライン会議
54:線引き
65:鈴木さん
77:製造
53:含みませんのパターン
64:バッファ
76:@done 分担
52:含みませんのリスト

63:窓口の。
75:仕様策定
51:前倒し
62:ソースコードを
74:@done 仕様と見積もりの承諾

50:・値チェックのルール
・ajaxではないことなど。
・
61:窓口は金田さん
73:@done VS/SNI間の契約
60:
窓口は一つ
72:@done データベース変更項目洗い出し
71:@done db周りのコード作る

82:多言語対応製造
38:仕様で止めたい
37:仕様変更を取扱
49:現状見積もりにふさわしい仕様に

35:エンドのユーザーで仕様も変わる
59:開発の仕様
34:品質下げない
46:分担
58:スケジュール
45:コードを取得する
57:9月12日完全納品
44:コードも書いていただく
56:どこかで金田さん
31:やっぱり資料読んでいただく
67:工程を持っておく
79:@wait gotomeetingの使い方会議
55:スケジュール管理
30:tonersaver引き継ぎ
66:東窪
42:火を噴くと変わると
78:@done オンライン会議
54:線引き
65:鈴木さん
77:製造
53:含みませんのパターン
64:バッファ
76:@done 分担
52:含みませんのリスト

63:窓口の。
75:仕様策定
51:前倒し
62:ソースコードを
74:@done 仕様と見積もりの承諾

50:・値チェックのルール
・ajaxではないことなど。
・
61:窓口は金田さん
73:@done VS/SNI間の契約
60:
窓口は一つ
72:@done データベース変更項目洗い出し
71:@done db周りのコード作る

82:多言語対応製造
5:高roiの検索
4:比較して提案する。目的検索
3:どうすればtonersaver.DMBSが完成するか
18:自動インストール
スケール（多くのユーザーで問題なくはいる）
ポートの指定はできる
速度
開発容易性（スプライン・テラー両方）

76:@done 分担
75:@done 仕様策定/8月3日月曜夜などに提出
74:@done 仕様と見積もりの承諾 8月5日
49:現状見積もりにふさわしい仕様に

73:@done VS/SNI間の契約
72:@done データベース変更項目洗い出し
71:@done db周りのコード作る

46:分担
45:コードを取得する
44:コードも書いていただく
42:火を噴くと変わると
89:[[タスク洗い出し]]
87:スケジューリング
127:how to buffer and quicken
59:開発の仕様
124:@kaneda san調査
58:スケジュール
82:多言語対応製造
57:9月12日完全納品
122:@Noding 今日明日で分担分について仕様を策定する。
56:どこかで金田さん
55:スケジュール管理
54:線引き
53:含みませんのパターン
52:含みませんのリスト

51:前倒し
50:・値チェックのルール
・ajaxではないことなど。
・
139:decide the workload
137:advisary
93:マニュアル
134:3 days
92:数えてみる
133:code review?
91:分解
66:東窪
65:佐藤さん
64:バッファ
130:PM(Communiocation)
105:manual
63:窓口の。
38:仕様で止めたい
37:仕様変更を取扱
61:窓口は金田さん
102:作業の経験
60:
窓口は一つ
35:エンドのユーザーで仕様も変わる
34:品質下げない
100:automate manualization
31:やっぱり資料読んでいただく
30:@secretary tonersaver引き継ぎ
78:@done オンライン会議
77:製造
144:f
143:@wait ftv.contract
6:* 3month ---
140:archive.UI
62:apc.contract
171:
155:前日準備
121:kato
136:ftvweb3
168:now
118:superflat-book
165:mbfwss.para
164:fscan.para
130:tamorizer
51:CF201310
161:mbfwss
9:archive_text_amp
113:@wait superflat
145:fscan
160:f.app
16395:小さく初められる。
16394:入り口を見つける
16389:cf
16388:cf
16391:meta
16387:座組をパターンにする
16390:レバレッジ
16386:長距離な戦略、
成長戦略と直近を
16345:協力を。
16344:塙さんに株
16379:大規模案件だと利益率が高い
16383:粒度を分ける
16342:@wait crowdworks
2 newjit
16382:カスタマイズ開発のスケールとプロダクトのスケールのそれぞれ。
開発→プロダクト→開発の循環
16341:@wait 集約性
16381:product →利益率
16376:量→利益率を？
量を？
スケールを？
赤字ですら良い?
16327:@wait meta
16372:@wait マッチングの良い商流度受託の
利益率と
確実な納品
16325:@wait イニシャル必要額
16359:@wait 仕事のうち何割が、"成立する"か
16362:@wait 人間の情報
16321:@wait storyteller
16361:@wait 条件候補を出す
16320:@wait wpst
16360:@wait どのような条件だと成立するか
16397:newとsvの比率
16356:@wait どうすれば、予算配分がキマるか。
15968:fruitspace
16098:@wait ampxprotoくん
16259:人
16258:第一次粗大ごみ
15943:ampxsvxprxburter
15726:marriage
16257:more.auctions
15609:kenschool.courseware
15942:ampxsv
16058:sv_data_clearance
16238:ftv.conditions
16292:@secretary findjob
16174:kuさんとか
なんか凄い人
14950:sv 2 sales
14616:socialbuildなど
16173:share filter
16235:web3
16171:archive
16072:hiring phper for sv_data
16117:ampxtaqumi
16252:@scheduled ゴミ出し.run
16035:data_api
16170:mediaware
16034:@delegated 予定設定
16250:@sun auction.cosme
15322:better_sunriver
16311:top
16112:ampx mediaware ui
15978:warehouse
15995:加藤外し
15975:fundraising_operations
15956:ftvstreaming_payment
15775:meeting up with better guys
16287:salesチーム
16268:cf05
16169:売上
16168:合う
14548:monogawa
16087:mediaware_ui
15970:ampx
16185:ampx100
15672:sales_ftv
15933:* loaning ***
16166:meet sv guys
16049:制作物UI
16067:glue
14627:elimination
16148:portfolio
16165:meet us guys
16183:ampxsharefilter
16128:他
16308:native json
15714:ampxsvで普通の投資も得る
14580:@wait @secretary meeting_people_is_easy
16164:投資
16145:予定
15415:払う
16107:SVVSのプレゼン
16305:精算
16125:simple glue
16224:thanks and sorry to ishibashi san 
+ honishi san
16205:gym. payment
16204:portofolio
16123:generaldb
16060:js_json
16302:カビ
16005:archive_essential
16103:@delegated シバくんに。。。
16022:management.run
16121:トランジット x 森ビル
16120:新しい場やれる人
16000:ampxsvx
15987:eva_sales
4:google
3:topic
5:aiueo
3:aaaa
2:wpapp
1:torigai
2:torigai
1:torikai
5:カフェイン少なめ
だし3回
余裕あるならasbn
食えなくても早く食う
歩けるだけ歩く
powernap一回
入眠剤飲むか、酒を飲む。
依る寝てから3時間で起きてまた2時間ごとにpowernap
目覚ましをいっぱいかける。
4:藤川
3:totalout
4:疎通
16:ipod touch
3:touch
15:windows toch devices
14:android
13:ipad
12:iphone
9:1bit
8:less time
1:touch_nice
4:nice
7:用意しやすい。
5:男性が興味を持つ。
スーツでグッチ？
4:結果画面が良い
3:brandと絵の決定
9:人決める
8:カメラの充電
4:1010100
3:training
109:ftp
108:scp
107:httpclientfileupload
113:SVN
106:curl
112:cvs
105:transfar
111:gw
110:samba
1:transit_planner
10:mygengo
6:invite people on [[basecamp]]
5:assigning task templat e on basecamp
9:transcription
2:添削SNS
1:translation
7:ホテル
10:カメラ、ブラシ、ヘッドバンド、アコーディングバック、胃薬、風邪薬、コンタクト、ばんそうこ、細 いペン、ラップトップ、下着、長半ズボン、マックのケーブル、iPhoneのケーブル

6:チケット
5:日付
4:場所
3:travel
1:travel_chance
9:better_charging
4:travel_chance.path
8:task_management
7:
17:iphone submission
16:reply and set the meeting
4:travel_chance.path
15:web api
14:translation
13:serve as dns
12:change the ip
18:web api guy
14:challenge_histories
13:action
12:viewing_history
9:ranking
10:winners
6:where is progress bar
5:gauge
4:regist user
19:winners
18:travels
17:points
16:point_histories
15:pictures
1:travel_chance_server
12:dropbox?
10:use apc
9:not pinging
8:no extra payment
7:sv 
6:new server 
5:xampp
4:want to use offshore
13:in sv it is pointing other part. aliases.
1:travelchance
6:dev + perfoaming server
4:config
7:svn deploy
4: @bedroom
3:treadmill
1:trifund
3:三者で組む。資料ずつとって。
2:
5:reminder
4:notification
3:trigger
13:phisical staffs
9:message
8:ExportRss + rssmailer
10:ifttt
7:message+
6:http://toukubo.backpackit.com/reminders
1:ts_termsummery
5:クライアント数の計算を止めている状態と止めていない状態で全社で集計比較等する。
4:アプリケーションの足し上げに時間が掛かっているよね。と。
3:全社のみのsqlとかを比較したい。
2:summeryの期間でのsqlの時間がわかる
17:renewal shugei navi
16:why they decided the duration anyway?
15:downloadable duration
9:shugei navi
14:transparent pictures
8:micro
13:my page?
7:sharing the purpose nad 
invesetment model
12:claims
6:author
11:値付け増額して売上半分
5:koshi
10:downloadable
4:hand made town
1:tsukuru
19:69000 x 1xxxxx and WP
18:happy coocking
14:手を開けられる
13:シャッフル機能で[[無制限VoiceBox]]
12:.5倍速再生
10:自分の作業のメモをもって外出。（お散歩モードとの組み合わせ）

7:ユビキタスキャプチャー
6:秘書にアウトソース（3h/m) 3 * 48
5:網羅性。要求をもらうする。
4:録音
19:noding
3:tunetalk
18:アクションキャプチャー
17:自分の作業のメモをもって外出。（お散歩モードとの組み合わせ）
15:モチベーションあげるために会議を聞く
4:tag
3:tv
7:space tag（windows setを定義できるようにする） ->tv
4:tv
3:tv_space
3:http://twitter.com
2:oauth
1:twitter連携
3:ubiquitas capturing

15:ubiquitouscapture
12:by degitalized should any be resources someone><- mail to @nodepad page, or access to this page with mob. and get it.
9:keitai or pc
11:actions includes noding
8:buy or secretary diy
10:actions capturing
7:capturing from paper
18:prioritize
1:ui
4:user_interface
7:context base
329:オープンソースへの国連の統合を応援する
433:プランをちょっと
327:ミラー
431:来週水曜
325:グローバルキャスター的なものでタンバーグのアウトを疲労
430:umlする
324:リアルタイムコミュニケーション媒体
＋自動録音
＋ネットワーカブル
＋倍速再生
602:afp/scp/ftp/http file upload from/
601:http://compudoc.princeton.edu/compudocwiki/images/3/34/MacOSX_Go_ConnectToServer.jpg
589:#waits
321:クローラー
588:僕のラップトップかも。
320:町
98:proce55ing
94:利用率を高める
92:モニタを使いまわす。
369:raidに直に保存＋それを観察して検索可能なブラウザを。
90:グーグルデスクトップ
368:対象を決める
367:mp3＋タグ
193:導出の系。型変換の系については自動化とエージェント化をしてはどうか。
366:サーバ上にあるファイルとか
ブックマークしてあるものを探しにいく。
負担はかけない。
539:みつもり
538:時間かかる
364:stats on OSS tools numbers of the stats
537:webオブジェクト読み
363:インターン系
257:でっかいモニターでの会議
361:more ユーザアクセスto the server
256:3月終わりまでにひとつのURLをオープンする。
4月終わりまでになにかしらイントラについての方法を提供しよう
360:number
429:設定、機材、アカウントについてウェブかする
255:配置する
531:server hardwarez
426:機材提案
530:wiki,kt2
425:機材検索までの速度。
40:80番計
318:http://sfee.jp/
ソースフォージエンタプライズのようなもの？
317:SourceForge
312:録音をしてその全部をオープンにするかというとできない。
陰口に大事な情報もあるのか。
89:スポットライト
310:オープンソースアプリケーションの国籍についてのレポート
576:外から
203:ギガビット
575:afpでマックからアウセステスト
84:オーディオ？
83:ビデオ？
571:ヘッダーフッター項目
570:項目
81:ブレンダンいない
290:ハード
359:escribe the situation by numbers 
80:家から持ってくる？
358:stats
357:SEO
356:数に反応する面白いプロセシング的なインタフェイス
354:テステイィングフレームワークオブオープンソースサイト
353:国籍の項目？作っている人の制作当時の所在地などもDBにもつ？
524:pachyderm on mac

350:URLにする
522:pachyderm
521:待ち
32:リアルタイムコミュニケーション
520:dvi-iケーブル
415:リポート
414:安心と確約
134:input
413:afpと、セキュリティチェッカー
308:アーティクル。もうちょいテクストの質を広告的にしたほうがいいのではないか

133:無制限ボックス
412:コネクションスピード上昇とセキュリティとシェア速度上昇
307:部屋の写真をもっと詳細に。

411:コンテンツアップロードとネットワーカブルにする
305:費用対効果とは。
397:マーキング
304:アウトプットする
396:ケーブリング
289:windows？
288:リナックスがんばる
77:購入
285:ローカルブックマークレット
564:#w 改装
75:タンバーグやichatからのアウトをミキサーにいれてそのアウトプットを入れておいて、コンピュータから録音する
かつ検索ポータルから見れるようにする
284:ブックマークサムネイリング
179:ブラウズ履歴
458:#cycle 14 report log
283:サムネイリング
73:すぐにあべいらぶるになるログを摂る
457:cycle plan
177:外（日本国外とか）でもファイルをインクリメンタルサーチ
72:ステレオミニからピンのものの準備
456:セキュリティチェックのスパンを1週間にする。
176:ブラウザ＋ブックマークレットー>タギング＋パブリケイト＋＋＋
280:英語の数の測定をして、それに基づいて教育の方針が変わるかも。
70:ハウリング
348:racking
170:パブリケイトにはキーボ－ドで。
343:せきゅりティ
341:学習と経営の差と教育リソースメネジメントとコンテツメネジメントとの差。
ワードプレスを使いたいと感じている教育機関は・・。
620:test from inside of mediastuio
340:スタッツやセンシングを。
409:ちょっと調査
513:別の録画マシンがあるといいかも。

129:ESP
512:切り替えのたびに落ちてしまう
511:viode
406:ゲートウェイマシン＋ftpとafpとIPの記録
498:knowledge tree
405:自前デリシャス＋時間
497:dev server reset up(check if the problem is 
404:デリシャス
403:ブックマーク履歴
69:タンバーグ
278:ネットワークの価値は関与者数によって、ある程度、決まる。英語はネットワークのようなものである
277:ヘテムル
276:全部のアプリケーションをスタンバイにして、アクセス
できるようにする。かブラウザとカメラがあれば誰でも
というふうにする
274:グーグルはオープンソースソフトウェアである。
169:タグをつけると機能につく。
273:情報収集の方法。そのものがオープンになるべき。
情報はオープンになり、情報収集の方法についての情報もオープンになる。
ベクターのようなフリーアプリケーションもある。
63:有料の
272:候補
62:フリー
446:コピー？
271:アウトプットできそうなものについて候補を出してみる
166:コネクションの数を増やしてみる
61:マクロメディア　fcs
619:new
445:体裁
618:new
338:リメンバーザミルクのようなものに？
617:new
443:チェックシートにする
337:cssとか
163:人間の目視はサムネイル＊文字列ではインクリメンタルサーチ。
616:new
442:#cycle
336:統一的なデザインを提供する。
統一的なデザインであることを伝える
615:new
441:make it cyclic
335:それなりのデザインを入れる
614:new
440:カクチ
334:自分たちがossを使っていることをパブリケイトする
333:OSSにブランディングする
612:for windows users.
1.ftp access
2.scp access
3.browser upload form.

for osx users
1.afp access
2.ftp access
3.smb access
4.browser upload form.

1.afp is 
http://compudoc.princeton.edu/compudocwiki/images/3/34/MacOSX_Go_ConnectToServer.jpg
this function. Apple File Protocol.

2.for any access methods, the setting are basically same.
host:202.209.187.156
username:unu
password:aiueo
the timing these three information are asked depends on the application and methods.

3.security.
don't put critical files here.and when we must do so,please don't leave it.
for this network place,I an going to have stronger check.
basically for virus affected files / suspicious files / suspicios access.
and when there is any possibilities of security problem.this place could be seperated without annouce.

4.url
if we put files ,this is mapped to a url.
they cannbe accessed to http://202.209.187.156/Filename.


5.browser upload form.
access to http://202.209.187.156/list.php
there is a file upload form,and file list on the network place.
we can download/upload via this simple interface.


6.file size
for afp/scp/ftp,there is no limit to upload.
but maybe files bigger than 2GB cound not be uploaded.

With file upload form,up to 10MB, I could upload.but more than this, I cannot say 
claerly.it depends on the environment.


331:オープンソースの国籍の調査
610:afp（finderのconnect to server）
504:#w untill  next time the server is down
330:テスティングフレームワークオブオープンソース
596:リスナーを想定。その人たちの知識に基づく。
502:Set up pachyderm on Linux server 
595:一応FTPのこと。
594:スペック
501:fix linux04 hardware problem. w
488:ヘッダーフッターネーム、
593:アナウンスメール
592:いろいろクーロナーとして利用/サーバのとこにおこう
591:oshigeさんに直でいいか？
590:アナウンス
378:ソースフォージのミラーサーバに登録する？
549:古いpcのリサイクルは試してみましょう
375:計測する
374:自動でパブリケイト
373:自動でパブリケイト
372:The introduction of OSSes to international organization
370:日本語とか？
439:センシング
438:スタッツ
542:afp+rsync
437:色わけ？
436:美しいケーブル？
540:２－５時間
435:隠す？
17:MDA/webapp
16:It takes time untill mu english reach the elve where I can do some key tasks.s
9:I need to make more important opinion with more powerful actions.
8:Important Ideas
13:Fieldtrip with SEO
7:FieldTrip
12:集中投資
6:Access Num
21:just work but not paid.
for normal tasks, I am not paid but this person paid.
11:Seo
5:Evidence
20:compensation
4:Service or something
3:Greate Achievement
2:SuperHappy of B san
18:I have done nothing for them but got paid 16
4:Brendan san
 
security report desu.
I did a check with eyes on the server logs.
check point was 
1.check if there is no suspicios login.
2.check if there is no required services.
3.free test.

there was no suspicios login.
there was some trial for mail relay.
and dictionary attack 3times untill now. and it was not successed.
and mailman service, which is mailing list service was reporting some illigal relay trial.
it failed. but I think it is not used so far. so I stopped this service.

3:Thu, 27 Apr 2006 04:02:25 +0900 (JST)

      session closed for user mailman: 4 Time(s)
      session opened for user mailman by (uid=0): 4 Time(s)
mailmanが走っている。利用してないので停止。
2:メールをベッキーでひらく。
LogWatch for www.onlinelearning.unu.eduでグレップ(ctrl+h)
チェック。と対応が必要なものを書きだす。
対応をする。
報告をする。メールを送る。

57:tomcat
56:andromda
55:Update
5:highrise tasks
4:http://toukubo.backpackit.com/pages/1941962-201002
3:update_highrise_template
29:data structure and interfaces.
like, for tree,
direcotry tree type.
for list, listing,
for table,
html table or display tag.
etc.etc.
28:aaa
27:folder trees?
26:bookmark list
174:betterstoryteller
25:
go to any applications.
24:how to image of interface

23:#wait image of the interfaces
22:#wait 
interface/httpclient
78:#wait auto recognition of modification?
have date of code generation?
and if the timestamp of the file is not this date, then 
don't generate?

21:#wait html?
77:#wait check mofiy and copy only NonModified Codes
19:name of sentence
20:#wait bean
18:#wait post

8:Upload
17:#wait choises of attrs of post

16:#wait 
post

15:
modeling
14:
automated creation from sentence of posting
13:dry
69:storytellerinstallpad]]
12:post
2:
[[Upload]]　[[Pattern]] [[ファイルアップロード]]
11:easiest way to create attrs?
95:20070522 -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  - 
9:Sentences
3:ValidationRuleAssign
6:記述
5:ヘッダーとフッター用意
4:アイデア出し
6:http://storytellermachine.net/storyteller/Verbs.do
5:パターン
7:RSSBlock      
CRUD      
RSSExport      
RssImport      
GrepRss      
ALL      
MultipleFileFormUpload      
Post      
Display      
Show      
SimpleFilePost      
Login      
NotifyByMailTo      
Delete      
Update      
DisplayOf      
DisplayXmlOf      
MuseigenShow      

2:Verb
1:video
6:被写体
3:アキバさんとか
2:videoな人
12:backpack
11:チェックリスト
10:ppt風。trac風
9:でかい
8:xls
7:display
6:nodepad
5:3pane
4:view
13:scroll
1:view_set
4:viewset
1:viewset
6:ui
5:better ui
9:tag and tv
4:butler container
1:virtualhost
4:DocumentRoot "/opt/lampp/htdocs"
ServerName www.enclosing.net


/opt/lampp/etc/httpd.conf

NameVirtualHost *:80
#for tomcat thing
<VirtualHost  _default_:80>
ServerName enjava.net
ProxyPreserveHost On
ProxyPass /   http://localhost/rssmailer/
ProxyPassReverse / ajp://localhost:8009/rssmailer/
</VirtualHost>


#for normal http virtual hosting

<VirtualHost  _default_:80>
ServerName manganight.com
DocumentRoot "/opt/lampp/htdocs/manga
<Directory "/opt/lampp/htdocs/manga">
allow from all
Options +Indexes
</Directory>
</VirtualHost>


2:httpd_dot_conf
4:図
3:visual
180:#wait キー
189:現場で買う
187:#wait 時間がないので輸送はng
194:#wait 月曜はもってく
186:#wait dimentionの型番で検索すれば
193:#wait 返事
179:#wait マウス

185:#wait 合うやつ
192:聞く
178:#wait かんきょう
191:#wait 購入が発生する？
使ってないマシンでメモリで対応できるかも
183:#wait cvsで
190:#wait 現場って？
168:#wait vital
181:#wait 月曜までにメモリ？
6:@wait 一回当たりバック造る。コップの底に入れる。だな。
5:@wait 一回当たりにする
4:@wait bag決める
3:@wait vitamin_kit
1:vogue_card
5:do not want to keep
4:via web, or non-via-web
76:test
21:@wait sql dupmpfile
130:人
75:StorytellerCodesDownload
20:@wait war
74:mock
73:システム自体のデザイン・インターフェイスが残念な感じ
71:ウェブはまあまあか。
109:画面仕様
70:design

108:Nouns
107:Attrs
106:FirstModeling
105:FirstMvn
159:個別契約
104:FirstCopyCoreJar
158:開発委託基本契約
103:put CommonTranslation @storyteller ( http://storytellermachine.net:8080/storyteller/J2eeStorys.do
157:守秘契約
102:PostSentencesOnStoryteller
156:必要資料の洗い出しからか
101:Sentences
155:日本語の原文

100:ValidationRuleAssign
154:学生バイトの連結？
99:CommonTranslations
153:案件ごとの、
仕様、指示、アノテーション、
タスク、バグ等の翻訳するレベルの英語
98:@magicdraw
152:ビジネス英語
97:AttrPicking
96:再現指摘
150:法律も。。

95:GoalNode
94:modeling
93:modeling
9:請求書
92:modelを開く
19:SyncToy
8:@wait 見積りしたものから
91:annotations
18:@wait server url
7:一日予約
17:ター
6:SC
16:分解
5:サービスイン。配置  = deploy
126:仕様（ユーザーインタフェイスとセット提案）デザインするべき画面自体
消えるべきか
15:@wait preinterview
4:請求
125:関係モデリング
69:@done designer
14:@wait EstimationChoiseで選ぶためのテストを出し切る
＋出し切れない場合、想定仕様未定義分コスト（未定義の場合はありません）、を出す。
仕様をこちらで出している場合は営業情報にそう入れる
3:dc3 is storyteller 
124:Preperation @Home
68:@done design
13:@wait チェックリストに通す
■チェックリストで自己チェック
漏れやすい機能要件 

セットアップ・インストールプログラム 
データ変換ユーティリティ 
サードパーティ、オープンソースを使うためのラッパ 
ヘルプシステム 
配置モード（リリースモード） 
外部システムインターフェース 
忘れがちな非機能要件 

正確性 
相互運用性 
更新性：ごめん、よくわからないで書いている。 
性能 
移植性 
応答性 
再利用性 
拡張性 
セキュリティ 
生存性（？）：ごめん、よくわからないで書いている。 
利便性（ユーザビリティ） 
これをどのように工数に反映させるのか。
私は定型の手法を持っていない。すまない。
計測できるものならするが、非機能要件などは計測は難しいのだ。
テキトーに実装工数を何倍かしている（1.1倍、とか）。

作業の時間粒度を10時間以内にする。
12:@wait 幻想ファクターなくす。悲観的に。最悪のケースは8倍くらいにはなる
122:マジックドロー渡す？
11:@wait きちんとしたインターフェイスを出す。
リスク表
121:@meeting 開発機決める
10:投函
120:@Air basecampでアサイン
149:顧問
148:
ビジネス英語はプロ契約はらむとかの人
147:メール文言？
146:お触れ？

145:@wait 木村さんがなんとかする
144:マヘシュ
89:story
88:棚田さん導入
86:FIllModel
84:generaltest
83:mismatchtest
82:checkingtest
81:tester
118:@eclipse ソース読み

113:oc4jで一回動かす
112:sss化
111:名詞抽出とモデリング
110:mismatchtest
163:契約
162:オフショア
139:translators professionals outsource
29:@done offshore
28:@done camp2xhtml
137:sfc no
27:テスト
136:toudai no anohito
26:@keyword [[debug]]
135:酒井
25:@done OutOfPatterning == coding
134:@wait 英語翻訳する人探す

79:sss
24:開発機への配備
78:全工程
23:@wait xhtml2jsp
77:testdata
22:TestedSystem
149:顧問
148:
ビジネス英語はプロ契約はらむとかの人
147:メール文言？
146:お触れ？

145:@wait 木村さんがなんとかする
144:マヘシュ
29:@done offshore
28:@done camp2xhtml
27:テスト
26:@keyword [[debug]]
25:@done OutOfPatterning == coding
118:@eclipse ソース読み

24:開発機への配備
23:@wait xhtml2jsp
79:sss
22:TestedSystem
115:モデリングについてぐぐってもらう
78:全工程
21:@wait sql dupmpfile
114:モデリングやてみてもらう
77:testdata
20:@wait war
113:oc4jで一回動かす
76:test
112:sss化
75:StorytellerCodesDownload
9:請求書
111:名詞抽出とモデリング
74:mock
8:@wait 見積りしたものから
110:mismatchtest
73:システム自体のデザイン・インターフェイスが残念な感じ
7:一日予約
6:SC
71:ウェブはまあまあか。
5:サービスイン。配置  = deploy
70:design

4:請求
3:dc3 is storyteller 
139:translators professionals outsource
137:sfc no
136:toudai no anohito
135:酒井
99:CommonTranslations
134:@wait 英語翻訳する人探す

98:@magicdraw
97:AttrPicking
96:@wait 再現指摘
95:GoalNode
130:人
19:SyncToy
94:modeling
18:@wait server url
93:modeling
17:ター
92:modelを開く
16:分解
91:annotations
109:画面仕様
15:@wait preinterview
108:Nouns
14:@wait EstimationChoiseで選ぶためのテストを出し切る
＋出し切れない場合、想定仕様未定義分コスト（未定義の場合はありません）、を出す。
仕様をこちらで出している場合は営業情報にそう入れる
107:Attrs
13:@wait チェックリストに通す
■チェックリストで自己チェック
漏れやすい機能要件 

セットアップ・インストールプログラム 
データ変換ユーティリティ 
サードパーティ、オープンソースを使うためのラッパ 
ヘルプシステム 
配置モード（リリースモード） 
外部システムインターフェース 
忘れがちな非機能要件 

正確性 
相互運用性 
更新性：ごめん、よくわからないで書いている。 
性能 
移植性 
応答性 
再利用性 
拡張性 
セキュリティ 
生存性（？）：ごめん、よくわからないで書いている。 
利便性（ユーザビリティ） 
これをどのように工数に反映させるのか。
私は定型の手法を持っていない。すまない。
計測できるものならするが、非機能要件などは計測は難しいのだ。
テキトーに実装工数を何倍かしている（1.1倍、とか）。

作業の時間粒度を10時間以内にする。
106:FirstModeling
69:@done designer
12:@wait 幻想ファクターなくす。悲観的に。最悪のケースは8倍くらいにはなる
105:FirstMvn
68:@done design
11:@wait きちんとしたインターフェイスを出す。
リスク表
104:FirstCopyCoreJar
10:投函
103:put CommonTranslation @storyteller ( http://storytellermachine.net:8080/storyteller/J2eeStorys.do
159:個別契約
102:PostSentencesOnStoryteller
158:開発委託基本契約
101:Sentences
157:守秘契約
100:ValidationRuleAssign
156:必要資料の洗い出しからか
155:日本語の原文

154:学生バイトの連結？
153:案件ごとの、
仕様、指示、アノテーション、
タスク、バグ等の翻訳するレベルの英語
152:ビジネス英語
150:法律も。。

129:彼にやってもらう？
126:仕様（ユーザーインタフェイスとセット提案）デザインするべき画面自体
消えるべきか
89:story
125:関係モデリング
88:棚田さん導入
124:Preperation @Home
86:FIllModel
122:@secretary @wait マジックドロー渡す？
121:@meeting 開発機決める
84:generaltest
120:@Air basecampでアサイン
83:mismatchtest
82:checkingtest
81:tester
23:@wait xhtml2jsp
22:TestedSystem
21:@wait sql dupmpfile
20:@wait war
176:better matching of people
149:顧問
175:team
148:
ビジネス英語はプロ契約はらむとかの人
174:requirement of person
147:メール文言？
173:history
146:お触れ？

172:candidates
79:sss
145:@wait 木村さんがなんとかする
171:voice = meru
78:全工程
144:マヘシュ
170:CRM
118:@eclipse ソース読み

77:testdata
76:test
75:StorytellerCodesDownload
74:mock
73:システム自体のデザイン・インターフェイスが残念な感じ
113:oc4jで一回動かす
112:sss化
71:ウェブはまあまあか。
19:SyncToy
111:名詞抽出とモデリング
70:design

18:@wait server url
110:mismatchtest
17:ター
16:分解
15:@wait preinterview
14:@wait EstimationChoiseで選ぶためのテストを出し切る
＋出し切れない場合、想定仕様未定義分コスト（未定義の場合はありません）、を出す。
仕様をこちらで出している場合は営業情報にそう入れる
13:@wait チェックリストに通す
■チェックリストで自己チェック
漏れやすい機能要件 

セットアップ・インストールプログラム 
データ変換ユーティリティ 
サードパーティ、オープンソースを使うためのラッパ 
ヘルプシステム 
配置モード（リリースモード） 
外部システムインターフェース 
忘れがちな非機能要件 

正確性 
相互運用性 
更新性：ごめん、よくわからないで書いている。 
性能 
移植性 
応答性 
再利用性 
拡張性 
セキュリティ 
生存性（？）：ごめん、よくわからないで書いている。 
利便性（ユーザビリティ） 
これをどのように工数に反映させるのか。
私は定型の手法を持っていない。すまない。
計測できるものならするが、非機能要件などは計測は難しいのだ。
テキトーに実装工数を何倍かしている（1.1倍、とか）。

作業の時間粒度を10時間以内にする。
9:請求書
12:@wait 幻想ファクターなくす。悲観的に。最悪のケースは8倍くらいにはなる
8:@wait 見積りしたものから
11:@wait きちんとしたインターフェイスを出す。
リスク表
7:一日予約
10:投函
6:SC
5:サービスイン。配置  = deploy
4:請求
3:dc3 is storyteller 
169:https://storytellers.highrisehq.com/login
168:紹介
167:CRM。アドレス帳、gmail,
highrise
139:translators professionals outsource
99:CommonTranslations
165:探
98:@magicdraw
164:specification
137:sfc no
97:AttrPicking
163:契約
96:再現指摘
162:オフショア
69:@done designer
135:酒井
95:GoalNode
109:画面仕様
68:@done design
134:英語翻訳する人探す

94:modeling
108:Nouns
93:modeling
107:Attrs
92:modelを開く
106:FirstModeling
91:annotations
105:FirstMvn
130:人
104:FirstCopyCoreJar
103:put CommonTranslation @storyteller ( http://storytellermachine.net:8080/storyteller/J2eeStorys.do
102:PostSentencesOnStoryteller
101:Sentences
100:ValidationRuleAssign
159:個別契約
158:開発委託基本契約
157:守秘契約
156:必要資料の洗い出しからか
89:story
155:日本語の原文

88:棚田さん導入
154:学生バイトの連結？
153:案件ごとの、
仕様、指示、アノテーション、
タスク、バグ等の翻訳するレベルの英語
86:FIllModel
152:ビジネス英語
126:仕様（ユーザーインタフェイスとセット提案）デザインするべき画面自体
消えるべきか
125:関係モデリング
84:generaltest
150:法律も。。

124:Preperation @Home
83:mismatchtest
82:checkingtest
122:マジックドロー渡す？
81:tester
29:@done offshore
121:@meeting 開発機決める
28:@done camp2xhtml
120:@Air basecampでアサイン
27:テスト
26:@keyword [[debug]]
25:@done OutOfPatterning == coding
24:開発機への配備
2:pknk
1:walk
44:一回バッファ？
43:幅をコンパクトに
59:カップ麺
42:essential
58:auctionできるなら写真を用意する
41:roi
57:機材に
40:お金かかんない順に、
一部屋に行けたら終わり
55:HDD
54:売るもんを上に
52:赤帽さん
63:上にもってく
62:どうすれば、粗大ゴミとして出すものから、除外できるか。
19:上のゴミ出し＋上に機材移動
61:まずオークション
次に普通ゴミ順番
次に移動
次に粗大ごみ
次に維持
18:ゴミなのかどうかの確認
60:* 判定 RUNTIME ***
17:一度に捨てられる量が限られているのでそれにあわせる？
16:なにが普通に捨てられる？
8:移動する
13:ダンボールの中身を確認する系
5:廃品
29:CF
4:ゴミ
27:ゴミは出せるだけ出しとく
26:一回で持ってってもらったほうがいい
25:分別
24:袋にして、どっかに配備して、その後、捨てる
39:使いたいものをsunに
38:圧縮袋かも
22:電気系だしとく
37:お金
21:化粧品たち出しとく
36:auction
20:ダンボールで移動するものを外煮だしておく
34:一個に収まりきるギリギリで良い
33:支出を小さくする効果（倉庫代）を維持する
49:* RUNTIME ***
48:後の日にゴミ出しを
31:効果が出る最低限
47:5階に運ぶ
30:小さく
46:ゴミ袋に入れる
17:キーボードとcube持ってくる
24:寝部屋を整理
16:@warehouse 倉庫から上に
6:写真を撮る＋梱包する＋出品する、を一度にやる
21:ゴミ出しをゆっくり
20:寝室片付ける
13:cf0405
198:掃除専用の人ももありかと。
197:やはり、使ってた人たちを集めて処理が良いのかなあと思いますが、
179:@wait ゴミ袋にしてもってく
193:あと10時間
102:warehouse.auction
178:choose some from node
192:時間かかってもいいので人を見つける？
177:essential
49:* RUNTIME ***
184:裁断候補はそれはそれで袋に入れる
176:@done ゴミ少なそうなものは箱を変えて突っ込む
169:オークション袋
175:@wait どうすれば、ゴミ多そうなものを裁断して捨てれる？2時間かかるが
174:上のいるものをケースに写す
167:@wait ワークフロー的に順番をつける
181:@wait 下
173:上捨て切る
166:袋
180:@wait ゴミ袋
164:分別して袋に
170:@wait オークション袋
163:裁断候補のキューに
162:裁断する
161:5個になったら持ってく
160:運び出す
139:@wait ながら選ぶ
153:@done 同じ日に
138:@wait 裁断する。
152:@done 圧縮した頭からやっていっていい方法
142:@wait スペースを作る
141:ゴミにしたものを出すのにいい方法
140:@delegated あいつくる
1:warm
11:cycle_kit
5:hokkairo
8:mask
7:tebukuro hokkairo
6:[[ホッカイロ]]5個靴下に
5:電気毛布で足くるむ
9:inner pants
3:warm_foot
5:hanshin yoku
4:[[fooding]]
3:gooutしないといかん
9:AFFORD
2:外出中に、トイレとかでテクマクマヤコン
8:EVENT
1:体が重要。体を中からあっためる
16:@wait #wait 買う
25:@keyword [[better_wash]]
15:@wait #wait 化粧水そのものの用意
9:@wait buyパーフェクトクリーム
14:@wait #wait 化粧水
32:パック
13:@wait 軽く、リンパにむけてというやつ
7:@wait #wait モイスチャー
22:wash
12:@wait @purchase Buffer ブラシ
6:@wait クレンジング
5:@wait アクティベイト
10:@wait パーフェクトホイップ
2:camp
29:roi
19:@cycle Buffer
28:looks
1:watched
4:leave
6:cyclicly
9:afford drinking
3:water
4:nodepad
3:wbs
5:web
4:storyteller
3:webapp
6:zxcから移転する
5:設定ファイル
4:web3.migration
8:
3:migration
236:jqeury base
235:json
234:more connectable
36:@done サーバーにする
233:perfectly modulable
86:@wait bitcasa contentsをlinuxに落として利用する方法
35:@done 金を撮る
230:
32:@wait desktop access to config?
82:@wait hdd2bitcasa
31:@wait vnc
81:@done dropbox 2 bitcasa
168:@done メニューを渡す
166:@done 機能強化サーバに「共有」
164:@done upload huge binary quickly
209:WPの最新化たち
163:@done access huge binary quickly
162:@wait choose some from node
207:VIRUSES…..
161:@wait essential
206:もっかい突く
204:アウトライン
254:lazyload + permalink pages
203:数字
253:survey on some tools to do 
lazy imag eloadnings
252:for contents modules,
should be able to load lazy and
includable., by jquery.
8:@wait サーバーアプリケーションも同期する
251:separate contents module and 
navigation modules
250:easy to module
189:イラレにする（手書きのを）
136:@sun imacで
3:@done 変更権限とマップできるようなファイル構成
184:清末さんアタック
229:
228:
182:上から言う
227:what 
180:忙し過ぎるの問題
224:ftv.conditions
24:@done 同期サービス
221:話をしてからだな
22:@done 高速ローカル開発
220:@wait ssd入れてホームサーバーとしてftvに提供するのは？
21:@done 自動デプロイ
159:@done ローカルサーバー開発
20:@done 開発ファイルのバージョン管理
158:@done WPローカル開発
157:@done 機械での機能強化が劇的に容易に
156:@done バージョン管理に入れる
105:@home -> sun home server サンリバーに
155:**** BUILDTIME 
249:less code
248:less information once
101:web3.ftv
247:lazy load
100:ftv.contract
246:json and js?
245:expandable
98:@done 設定ファイルhttpd.confなどetc
開発アプリ（WPなど）
開発アプリ（java）
サーバーアプリ（lampp,tomcat）
ユーザーポストデータ
ログとDBデータ
47:@wait 同期サービスに上げる→シンク解除する→削除するで消えないこと確認
244:css level (layout level)
div level(view architecrture level)
js level?
model level?
wordpress php level?
97:@wait 一度試す
243:modulations
96:@wait キャッシュ速度を試す。キャッシュ増やす＋減らす＋httpアクセスする
44:@done bitcasa
43:@done one very very good server
42:@wait cvsは？
129:@delegated 開発してみてもらう
41:@wait javaアプリたちの配置は？
176:mightyのcore2duo(4gb)くらい＋gate serverで月2万＋0.1円@pv
管理費用は台数とかネットワークコストに応じる
175:@wait ローカルサーバーセットアップを半自動で
173:販路開拓
121:藤川にプレゼン
69:* RUNTIME ***
18:@done パブリッシュアカウント
171:月20000円+0.1円@PV
68:@done 共有をしたフォルダとURLのマッピング
17:@done "パブリッシュアカウントへの権限付与"がパブリッシュになる
16:@done a cloud app server + cloud data server?
214:@wait ssdにして5000円で売る？windows入れるの？
15:@wait @secretary @done no battery cost
less hardware maintenance cost
213:@secretary @wait enclosingのマシンどうするの？
65:@wait gitを同期として用いてもいい。
どちらがでもいいがそれでアップデートする。
14:@done less cost
64:@done 同期＋権限管理
13:@done access huge binary quickly
12:@done keep huge binary
62:@done fit publish priv per company
11:@done gateserver
61:準備てきたらプレゼンする
199:何が与えられるか。とその実績。
194:相手に直接的な利益、売上などをもたらす
とにかく早い。
すぐに人に依頼できる。
すぐに公開できる。
トライ→修正の
239:glue
238:handling of images
237:levels
21:レイアウトってか、
画面って概念。
その中。これもパス？
10:作っているところから
編集画面までが速い
20:html、local html、action、の別が分かる
9:書くと良い事がある？
8:記法がある？
19:パスからクラスが想定できる。
7:一個ッツの粒度が適切。多分140行
6:file to modifyにする
5:url schemeからファイルを操作する
16:ローカルパスが共有できる
4:パス操作でほとんどのことができる状態
15:だれでも修正出来る
3:作るパスと作られるパスのスイッチ
14:newjit
13:低粒度のぶん業
12:凄い分業
22:どうすれば、
画面概念と、
アクションとが、
扱える？

11:5%の開発速度の削減
9:web
8:storyteller
7:webapp
1:webmin
3:http://www.webmin.com/download.html
2:hostname mismatch問題
2:webpattern
5:パターンピッカー
5:3はいままでどおりたくさんの人のなにやらを見れる。
4:3は、もっとリッチ。
2:web3.0は、もっとリッチクアイアントになる。
140:archive.UI
113:@wait superflat
130:tamorizer
165:mbfwss.para
6:* 3month ---
145:fscan
118:superflat-book
62:apc.contract
144:f
161:mbfwss
11733:http://storytellers.backpackit.com/pages/1870208-noding
11719:set tasks not grayed out
11726:set nodes done when the node is enough with the current child nodes
11732:put app level context
11718:tasks_mece_listup
11717:weekly_organize
11724:assign contexts(tags)
11723:connect nodes
11730:assign estimated time and deadlines
11721:top right to left down, 
11739:@scheduled try once
11736:@mece 1. set the places to go in the morning
2. 食事プラン . calendar 
3. 服の準備
4. schduling ( task plan ) 
11729:check the context of the tasks if it is actable in the conext ,if not,move it to node
11728:assign Noding tag to others
11727:capture tasks to rtm
1:weekly_preperation
5:@scheduled do it once.
4:meal schedule
slothes
kit
4:http://storytellers.highrisehq.com/
3:whom
5:@sun install disk and cable and reader
4:fusion
3:windows
9:xp english version x fusion x multi language kit
11:android
8:review
10:fujikawa's pc
7:logging
6:会計ソフト
5:automate the apps opening.
4:each context and operations ( of workflow ) has good 
set of windows and apps and tag,notebook,query.
3:windowsset
3:1. hiring project view
2. that project view
3. common document for hiring for the project. specs and project description view.
4. ia writer or something
5:movie
4:#keyword [[プレゼン]]
3:wink
2:capture
10:ペルソナ
5:handwriting
4:mockingbird
3:wireflame
9:パターン
8:イラストレーター
11:ペーパープロトタイピング
17:============================= 
         Bulidtime
=============================
16:automate generating html version of wirelmaes from story
15:html?
9:sketch to ai
24:stsc
14:stroy to ai direction
8:sketch
31:webpattern
6:.ai
30:modeling
11:html to jsp
20:display. to the shimashima
post to simple that one.
and?
upload? to posting that one.
10:dw
2:
wireflaming

29:model
19:mapping to some directives to html
18:============================= 
         Runtime
=============================
6:screen shots and dump
5:sketch
4:ai
3:wireflaming
17:テスト
221:@done 同期
61:更新する機能の特定
60:マスター更新容易性
15:OutOfPatterning == coding
296:js_json
295:a sample program?
294:getting sample for header + blank content?
12:TestedSystem
11:estimation
292:cloudwp
290:wp_json
164:docrine pattern codes
118:wpdeploy
117:* BUILDTIME technical ****
242:new+wp
161:wp_docrine
116:psd2xhtml
111:mapping of "post" and "customfield" and "category" and human readables.
268:@done document
266:psd2html hiring template
265:HIRING TEMPLATE
3:wordpress
264:newjit
263:new
218:WP_teaming
262:@done template project in dropbox
261:@sun setup a vnc tool
260:@secretary @done local + sync
214:brenda
213:assignment
212:offshore
130:php orm
211:StorytellerCodesDownload
289:js
210:annotations
287:@done the html done
286:task requirement for
psd2html
285:functions.php
79:new!
237:code gen
282:storyteller 
code generation for 
wp_template
77:@wait 削除駆動
155:CFsafe
281:c
280:v
75:@done version controls
107:menu
106:usecases
101:@done plugin installataion
178:@done templatise from the app
258:human readable
177:@wait template project
20:complex evaluation
256:debug
97:assign plugin / java development 
255:patterning
96:*Runtime
209:mock
208:story
252:buying ready made wordpress template
207:see -> choose -> purchase -> thanks 
251:
205:modelを開く
204:generaltest
123:designer
203:mismatchtest
44:naming convensions
122:design
199:sss
202:checkingtest
121:specs
198:全工程
201:tester
279:m
120:psd
197:testdata
200:mock
278:mvc
196:test
277:common codes
276:wp_setup
275:*BUILDTIME 
non technical ***
273:@wait wpst
227:@done WP-DB-Backup
271:find good looking wp template
226:@done mycloud
225:convention for setting
143:WP自体の開発の効率化
224:@done dropbox base
222:@done DB
1:work_lying
1:workflow
4:フロー
1:wp
5:open ssh 
and wget
4:wp_theme
3:wp_contents
2:wpセットアップ
1:wp_contents
3:wp_posts
2:wp_images_linking
4:insersion point for 
data preparation code
3:
1:wp_images_linking
3:wp_images
2:wp_posts
10:feed_template
7:wpst
6:js_json
4:view for wordpress site
3:wp_json
19:author.php&json=trueとかだったらそれを出すようなコード
18:author
category
taxonomy
についてのjson
15:wordpress
22:頼む
14:js things?
21:大島くん
13:cats, and posts
20:hiring?
or do it by me
12:something that does it.
11:cagegory feed?
21:
23:just copy
3:wp_migrator
22:themes and php codes
1:wp_posts
5:csvに整形してもらう。Delegatables
2:csv_upload pluginをdownloadする
10:english project_description
20:director fill template
30:volume information?
9:hire project transcriptor
8:hire japanese director
19:requirement
7:hire english side director
18:ja project_description
27:and ??????
16:form to docs
4:hire double hiring managers
26:one_shot_translation
15:project level template
25:english requirement
14:@done company level template
24:hire others palallelly
12:project size, and hours, and budget
22:one_shot_translation
1:wp_theme
6:wp_template_coding
3:psd2wp
2:psd
8:convension
19:admin user password
7:dbuser and password
18:database on pc
6:adminuser and password set
17:database on mysql
5:installed
16:keeping local copy of spare slot
15:keepign alot always. 2 spares.
14:slot model
13:setup repository
29:server access information
12:
28:wp_migrator
26:in wp-config
25:in db
24:changing dbpassword
23:latest wordpress + wpmigration
22:wordpress installation page accessable
20:admn user set on the web
9:projectid
7:exchanging the 
4:wp_st
3:stwp
59:cookie code
58:privilege filter.php
57:ログイン情報共有
29:common
65:@wait Join必要？
28:c
64:wp_docrine
54:wpjson
27:v
63:storyteller 
patterns for 
docrine
53:json
26:m
17:access to wordpress content with it
62:read about docrine more
52:wordpress
25:data collection design
16:coding with models ( nouns )
61:sharing php headers
51:wpst
24:css layouting
(on browser inspectors
42:basecamp todos
15:finding files
60:session情報を、DBに入れる仕組み
23:checking in the browser
41:pages to co
de mapping
14:debug cycle
22:data sync
13:cycles
31:code generation
21:deploying
12:programming 
30:more funtions.php
6:suggestion
5:sales
4:serach
3:wpst_sales
1:wpセットアップ
3:ssh_access
2:hostname
6:zip -r /opt/lampp/htdocs.zip /opt/lampp/htdocs/
5:mysqldump -p -uroot --all-databases > /opt/all-databases.sql 
4:２種バックアップ
3:WP移管

1:write dependency to clouddb in pom
4:run mvn for clouddb project
1:xcode
4:command alt shift x
6:xhtml
11:vital
10:stsc
7:camp2xhtml
4:xhtml2jsp
3:camp2xhtml
34:generaltest
33:修正
32:テスト
31:@keyword [[debug]]
48:nospace, englishtitle
30:OutOfPatterning == coding
47:@done RuntimeNoding
46:@wait http://storytellermachine.net/storyteller/
45:offshores crud to model
42:run mvn -o at andromda
41:@storyteller
58:NotifiyTo MailOfModeler Xlsfile+projectname+classnameofthesheet
40:PostSentencesOnStoryteller
56:通知
55:offshore ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
54:offshore ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
53:UploadXlsFile
52:classname of sheet
51:schemematching
9:offshores does modeling For CrudValidXlsFiles
19:検収期間設定
8:CrudValidXlsFiles
18:@done サービスイン。
配置  = deploy
17:検収
16:storyteller
5:modelname
4:CRUD of the model
14:modelfile
3:xls2crud
13:SetModeled
29:開発機への配備
11:check xls if valid
28:xhtml2jsp
27:配備
26:@wait sql dupmpfile
25:TestedSystem
24:@wait war
23:配備
22:@wait server url
38:StorytellerCodesDownload
21:@wait ター
20:先方へ連絡
36:mock
35:mismatchtest
5:============================= 
         Runtime
=============================
4:X
3:xls2crud
4:dom4j
3:xml
1:yamikin
5:trial
4:@Air survey
4:
3:Ynインターフェイス
7:concentration
4:発火
3:zone
9:集中
12:motivation
8:秘書
9:zone
10:ウォームアップコーディング
4:zonedriven
3:		【zone driven】客刺激でコード書けた。客刺激大事。 Edit — less than a minute ago

4:eva to be paid
3:zooming
1:あああ
7:some presentation sheets
6:photo base apps that is not
5:scripts
4:outlines
9:
  1. 僕がやったやつ。

8:
  1. 彼らが話をしやすいようにする。
1:いずかしスクリプトといずかし資料にする
1:うめぼしのおかし
3:affordable
2:乾燥
3:おかず
6:レシピ
10:　@ジャー
16:アペタイト
4:ラップと塩
20:うめぼしのおかし
3:おにぎり
13:白子のり亜フォード
19:塩多め
7:食材調達
10:
5:砂糖とか
4:食器と飲み物と食事
3:おもてなし
12:repeat to be there
11:きぶんよし
6:写真とっとく
5:assignable
4:assignable
3:highrise_capturing
2:テンプレートと愛
8:一週間後に。ー＞２週間後に返信とかしてまた変えす。
1:お礼メール
21:米を炊いてもらうネゴ＠home
9:@done 栄養価が高くなる
8:@done 栄養価の隙間が空く
19:あまりもん
7:@done 油糖を防ぐ
18:すごい弁当の作る仕組み
6:@done 油糖のおかずが選べなくなる
5:@done 砂糖をたべなくなる
16:@cycle おにぎり多く作る
15:@done おにぎりの2.5食目の間食
3:@done お米2食
14:昼いっぱい。
13:朝はたべれない問題
11:睡眠の質
10:早く食べる
28:おにぎりより食べやすい状態の米
27:食べやすい米。
26:パンの方が食べやすい。
25:@wait 米を食べる
24:お弁当を作る
23:食べる時間がない問題
22:@cycle アラート
2:@wait 依頼
1:お願い
10:どうすれば試せる？
4:それが起こす結果（親ノード）を考える。
それはどんな悪いことと良いことを引き起こす？
3:かも
7:ためすと何がおこる？
15:どうすれば方にかえてみる
4:@noding noding
3:考
12:ユーモラスなの
22:バッファー、自動化、分解、現状
21:モデリングしてみる
20:仕組み化
17:え
8:frameworks
16:現状、をかく
7:質問の仕方を変える
6:ドーパミンと関連づけで効率に
5:point
4:ポイント
3:ご褒美
2:部屋
1:すげのへや
79:アート・エグジットとリターンは？将来への利益とかヤバさに課金される
78:クリエイティブに余剰を集約させる仕組み
77:エグジットがヤバさとかアートとかの場合に、投資原理は成り立たない？
25:TKP1217
76:バーターと投資のところ
81:特技
75:例のビジュアライズ
19:amp
80:バーター？
23:さよならパーティーだ
22:移転だ
68:教育込みのインスタレーション。ワークショップ
21:TKP2
67:例１：ダイアローグインザダーク
例２：ブルーマン
例３：夢の島
例４：脱出ゲーム。専用の設備、専用の劇場
20:場所
71:プログラマー
ハスラー
デザイナー
インターンオーガナイザーとインターン
PR
翻訳
アイデアの人
CEO
場所
編集者
ライター
会計士
キュレーター
スーパーコネクター
コンサルティング

70:theamplifier
65:試行錯誤が場所とセット
59:exit
64:実寸で行動設計をする
58:[[fund]]ing
63:スタートアップ
57:nanofunding
62:解決しようとしている問題を３つ
61:middlefunding
60:startuproles
54:startup
53:amplifier
2:courage
1:すごいG
4:20秒くらい、声を出して生態にたれをあてて、かつおおっているものをうかして、
さらに表面を洗うようにやる
3:すごいうがい
3:すごいっ
15:@done http://toukubo.backpackit.com/reminders
20:資金調達
14:@done reminder
13:@done タイミング
11:@done remind
10:@done [[忘]]れない
9:通販？
8:@cycle 持ち運ぶ
19:バッファ
18:@wait @done パターンマッチ
17:@done 因果関係
4:Buffer グッズ
16:@done 時間割り
3:すごいコーヒー
7:winwin関係と総合的なROI検査
6:えー？すごくない人を削除
5:すごい少数
4:すごい単価を持つ人のチーム
3:すごい人のみのチーム
2:すごいチーム
8:癖が抜けるかも
19:how to get cheap ones
7:ちょいかね
18:えな さん
6:noding for both 
5:比較
16:どのくらい今日明日明後日のDCの差があるか。
作業にならないか。
金額重視で出す的な。
寝ない。
4:しない
15:明後日の作業
3:する
14:今日の作業
13:明日の作業
12:そのもの
28:tommorows's 
11:DC
27:AC
10:less 罪悪感
26:AC
25:それぞれの重み。
XLSかmmかndで、点入れてく
24:noding for both (or all ) of the nodes
21:考えれてない問題
5:poke
4:delegate
8:依頼
3:つつき
1:つながり
5:パーティーする
4:party
3:party
2:フォロー
5:つながり
4:ウェブ
3:ストリーム
9:
2:メッセージ
8:FBグラフ
1:つながりの可視化
1:つなげ
12:deal
11:繋ぎたい内容をタグで
10:タグ検索
17:matching
16:人
15:tagging
3:人
14:tag
13:tagging
2:でかい
3:高橋
7:backpackのURL
6:テンプレート渡す
4:[[backpack2でかい資料]]
3:でかい資料化
8:バックパックで資料作る
11:ai2パワポ
30:どこで？
29:なにを？
28:どうして？
21:目的探す
35:今は？
34:何が問題になってる？
8:どうすれば
4:howize
3:どうすれば化
7:最新情報をメールで送信？差分だけ？
差分かも。追加があったらかも。
差分検出はする。内容が一緒じゃなければ登録する。
登録があった場合（差分が検出された場合）メール送信も発生。

6:#wait <?php
header("Content-Type: application/xml; charset=utf-8");
$TZD = "+09:00";
$memo_title = "kami";
$rss_discription = "contents in the kamidir";
$dh = opendir(".");
print("<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n");
?>
<rdf:RDF
xmlns:content="http://purl.org/rss/1.0/modules/content/"
xmlns:dcterms="http://purl.org/dc/terms/"
xmlns:dc="http://purl.org/dc/elements/1.1/"
xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
xmlns="http://purl.org/rss/1.0/"
xmlns:rss="http://purl.org/rss/1.0/"
xml:lang="ja">
<channel rdf:about="http://www.enclosing.net/kami/">
<title><?php print($memo_title); ?></title>
<link>http://www.enclosing.net/kami/</link>
<description><?php print($rss_discription); ?></description>
<dc:date><?php print date("Y-m-d\TH:i:s", filemtime(".")).$TZD;?></dc:date>
<items>
<rdf:Seq>
<?php
while (($file = readdir($dh)) !== false) {
  print("<rdf:li rdf:resource=\"".mb_convert_encoding($file,"utf-8","auto")."\"/>");
}
?>
</rdf:Seq>
</items>
</channel>
<?php
$dh =opendir(".");
echo "temp";
while(($file = readdir($dh)) !== false){
  if(is_dir($file)!=true && preg_match( "/.*(\.html|\.txt)$/i", $file ) ){
     print("<item rdf:about=\"http://www.enclosing.net/kami/".mb_convert_encoding($file,"utf-8","auto")."\">\n");
     print("<title>".mb_convert_encoding(str_replace(".txt","",$file),"utf-8","auto")."</title>\n");
     print("<link>http://www.enclosing.net/kami/".mb_convert_encoding($file,"utf-8","auto")."</link>\n");
     print("<dc:date>". date("Y-m-d\TH:i:s", filemtime($file)) .$TZD . "</dc:date>\n");
     print("<content:encoded><![CDATA[");
     $lines = file($file);
     foreach($lines as $line){
       print(mb_convert_encoding(rtrim($line),"utf-8", "JIS, eucjp-win, sjis-win"));
     }
     print("]]></content:encoded>\n</item>\n");
  }
}
?>
</rdf:RDF>

5:テクストをrssにするphpをおく
4:ノードの中身を最新に保つ（kamiなどのtextsourcesを全部採る）
3:なかよしボックスに[[最新情報]]を獲得
2:携帯で自由文閲覧
1:ながら
5:粒度小さくする
8:better_ながら
2:http://www.rememberthemilk.com/home/storytellers/
1:ながら
11:@pad_how から選ぶ
5:粒度小さくする
15:loading nodepad
14:talk to someone great 
2:http://www.rememberthemilk.com/home/storytellers/
1:ながらタスク選ぶ
1:ながらタスク選ぶ
5:@pad_how
2:http://www.rememberthemilk.com/home/storytellers/
4:探す
3:なにか
4:喉
3:のど
4:mask
21:鼻腔を保護
3:のどを保護
9:お茶頻繁に
12:lulu
7:ぬらす
18:すごいうがい
24:moisture
9:お茶頻繁に
29:喉の保湿
28:絨毛運動機能回復
7:ぬらす
18:すごいうがい
27:のどを殺菌
35:頻繁にうがい
33:喉の除菌
3:のどを保護
31:喉の保温
5:のどぬーる
3:のどを殺菌
7:喉の保湿
2:うんこをする
1:ほげほげ
2:ほげほげほげほげ
1:ほげほげほげ
2:寝る
1:ほげほげほげほげ
4:Buffer
3:まとめる
4:Buffer
3:まとめる
5:charene
4:AC
3:まめ納品
4:飯
3:めし
4:輸送
3:もってく
13:[[elisatwiceperweek]]
12:dddd
9:AC
11:DC
8:作業時間
10:出会い
7:やる
6:それぞれの重み。
XLSかmmかndで、点入れてく
5:noding for both (or all ) of the nodes
4:比較
3:やるやらない
16:出会いなのやる
15:@done 作業にならない問題を避ける
1:ゆとり
11:創造性
15:循環
8:利益
2:早さ
2:うおー。アイウエオをするには！
3:一回保存しました！
すると「アイウエオ」という文字列が出ると
勝手にリンクします。
4:＋外だし
3:コアコンピタンス認識
7:移管
2:アウトソース
10:翻訳、品質管理、PM、導入、仕様理解など。
9:storytellers_teaming
8:資料の質
7:完璧なlayers以外はなるべく数減らす。
実装とテスト以外。
5:オフショア気味。品質管理もテストもオフショアで
4:速度とROI
15:スケール
3:アサイン
14:長期的な内容？
13:assign
15:スケール
5:オフショア気味。品質管理もテストもオフショアで
14:長期的な内容？
13:assign
4:速度とROI
3:アサイン
10:翻訳、品質管理、PM、導入、仕様理解など。
9:storytellers_teaming
18:速度
8:資料の質
7:完璧なlayers以外はなるべく数減らす。
実装とテスト以外。
4:アジェンダ
3:agenda
2:アテンション
5:attention
4:annotation
3:アノテーション
4:afford
3:アフォード
10:5min [[treadmill]]
7:塩
5:辛
29:塩
4:酸
28:塩そのものをなめる
3:アペタイト
27:乾燥している塩
26:afford
25:乾燥
24:affordable
23:口にする気がしていない状態でアペタイト
14:外食
13:treadmill 100k
20:におい
2:丹羽郡に相談
1:アメリカの住所
6:仕組みの維持
5:協業
3:アライアンス
2:イメージ
3:CC flickr
5:install inno setup if not yet installed
4:インストーラー　installer
3:check setup.iss
with innno
C:\current\nodepad\workspace\nodepad\binarybackage
check eclipsebase/nodepad/のcvsレポジトリ/setup.iss
12:容易性
9:セックス
11:金
8:死の忘却
10:衣食住
7:PING。接続確認。
6:リブログ関係
5:ネタ
4:TLとかストリーム
3:つながりではなくつながり売る場所
2:場の共有。一緒にいる。つながりの増大。
1:インセンティブ
2:テレコ
3:インタビュー
7:モチベーション
10:検索
4:パーティー
3:インターン
37:windows
29:向いてないな的なこと
36:dropbox
28:広告。
コピーライター講座にかよった。
CMをみて。
マイじゃぱん。
ブログ
35:モテキ
27:クレバ
ミーラズ
kawaii祭り。世界の終わり
ジュディマリ
チェッカーズ
大黒摩季
倖田來未
34:就職活動の。。。
26:シーサイドモーテル
40:・管理票は東窪で作成、infas_sv_archiveドロップボックスに置きます。
19:周りの人が
33:202人
25:三谷幸喜
18:職業
24:ジム／きゃりー
17:映画
31:出版社
23:霧島部活やめる
16:20
30:国際社会学部
22:ポテチ伊坂原作
21:東京プレイボーイクラブ
14:記事
20:エターナル・サンシャイン
13:ナタリー
9:ツタヤ
12:音楽
8:jrock
11:フェス
34:彼らが金を得る
33:目的検索
32:@wait スクリプト作

49:ビルドかランタイムか
ビルド
イニシャルコスト
31:@done 自分が資本関係等がなければ、
ただコストをお支払いした。
つまり、重要な発見（情報）を独り占めするという一人勝ちをして、
winwinとなるようなこの提案をしなかった。
技術者に、マイナスの概念というのがあるということ、
これを徹底的に排除するところは、次のPG売りビジネスの次がある。
ということをスクリプトに入れる。
48:roi.xlsのアップデート
30:知識として売上を渡したほうがいいか。
47:投資飽和しているものはdoneに。
（衛生要因）
46:着金ノードの結果に高い値を与える
45:http://localhost/lifehack/roi.xls
44:ランキング１０位以下のものについてはROIを小さくする。
43:スケール単位を考える→スケール数を考える→利益単価を考える→イニシャルコストを考える
42:売上マイナスという概念について共有する。
41:妥当性を調査する。
40:ミックス
9:帰納
50:複数を因果するようなものは半固有名詞にnaming。
19:目的検索する。[[横断的効率化]]因子か、ROIの高いものを因果するノードか評価する。
8:ロジックツリー
18:引いてみる
17:runtimeの順序替えしてみる
6:前提を疑う
16:質問の仕方を変える
5:分割
15:いらんとこ消す
4:考える
14:frameworks
3:インド分
13:効率化
12:ユーモラスなの
11:どうすれば方にかえてみる
10:現状、をかく
26:@done コストは妥当に払うのがいいか、
それとも妥当じゃなくとももらえるもの、あるいは約束があれば
それをもらう方、どちらが本当においしいと思っているか。
25:仕組み化
24:中心の移動
23:モデリングしてみる
39:目的
22:バッファー、自動化、分解、現状、網羅、逆、
38:一石二鳥
21:SCAMPER Questions（出典：『creativity UNBOUND』　※翻訳は筆者ら） 	チェック
Substitute（代える、代用する） 	S1）代用可能な部分はどれか 	
S2）何を代わりに使うことができるか 	
S3）ほかに誰を含めることができるか 	
S4）ほかにどんなグループを含めることができるか 	
S5）代わりにどんなプロセスを使うことができるか 	
S6）代わりにどんなマテリアル（モノ）を使うことができるか 	
Combine（組み合わせる） 	C1）何を組み合わせることができるか 	
C2）ブレンドする（混ぜ合わせる）ことはできるか 	
C3）どんな種類のアンサンブル（取り合わせ）を使うことできるか、創ることができるか 	
C4）部分同士を、どのように組み合わせることができるか 	
C5）目的同士を、どのように組み合わせることができるか 	
C6）アプリケーション（応用方法）同士を、どのように組み合せることができるか 	
C7）マテリアル（モノ）同士を、どのように組み合せることができるか 	
Adapt（適応させる） 	A1）これは、ほかのどのような考えを思い付かせるか 	
A2）何かほかに、これに似たものはないか 	
A3）過去に似た状況はないか 	
Modify（修正する） 	M1）さらにTwist（ひねり、コトの意外な曲折）を加えることができないか 	
M2）その意味あいを、どのくらい変えることができるか 	
M3）色や外形を、どのくらい変えることができるか 	
M4）サウンド（音、騒音、音声）を、どのくらい変えることができるか 	
M5）何を加えることができるか 	
M6）高さ・高度をどれくらい増やせるか 	
M7）重さをどれくらい増やせるか 	
M8）強度をどれくらい増やせるか 	
M9）頻度をどれくらい増やせるか 	
M10）価値をどれくらい増やせるか 	
M11）何を減らすことができるか 	
M12）何を縮小することができか 	
M13）何を簡素化することができるか 	
M14）控えめに言うことができるのは、どんな部分か 	
M15）サイズをどれくらい小さくできるか 	
M16）重さをどれくらい軽くできるか 	
Put to other uses（ほかの使いみち） 	P1）そのままで、何かほかへ使えないか 	
P2）もし一部を変えたら、新たに生まれるほかの用途は何か 	
P3）ほかにどんなマーケットが受け入れるか 	
Eliminate（省略する、除去する） 	E1）何を、取り除くことができるか、省略することができるか 	
E2）ある部分がない時、どうやって実行するか 	
E3）何を犠牲にできるか 	
E4）あげてしまえるものは、何か 	
Rearrange（再調整する） 	R1）ほかに、どんなパターンが使えるか。 	
R2）ほかに、どんな配置が使えるか 	
R3）ほかに、どんなレイアウトが使えるか 	
R4）何を交換できるか 	
R5）何を置換できるか。言い換えられるか。 	
R6）何を、再結合できるか 	
R7）逆にしたらどうなるか 	
R8）上下逆さまにしたらどうなるか 	
R9）内外を裏返したらどうなるか
37:高roiの検索
20:@noding noding
36:彼らが情報を得る
35:彼らが妥当な金を得る
2:web
1:ウェブ
6:[[csv]]のみ機能＋バリデーションでのmdaへの接続
5:csvの編集
4:odbc経由でのdbmsへのデータアップ
3:エクセル
2:エクセルもいろんな使い方があって、エクセルでアートみたいなことしてる人もいる。
マージャンのゲームだってある。
マクロがは魅力的。

8:new
5:対象＋特徴で書き出したもの。、
で解決するか考えてみる。
4:エスカーション
3:動物を1つ思い浮かべる＋動物の特徴
5:対象＋特徴で書き出したもの。、
で解決するか考えてみる。
4:エスカーション
3:動物を1つ思い浮かべる＋動物の特徴
4:エラーでぐぐる
3:エラー
2:ネゲエントロピが価値を因果するならば
[[ネゲエントロピ]]は
3:書くだけでエントロピ増大になってしまうのですよね。
3:オフショア
6:offshore
3:オフライン秘書
38:翻訳テスター
35:翻訳
29:スモールチーム
28:専門じゃなくとトウクボとかみたく全能なのを
全体的に細くするスタイル。
33:オフラインで雑務。@officeなの。
32:テスター
26:適材適所
25:モチベーション
23:福利
22:網羅
21:バッファ
16:ミックス
20:多目的化
15:一石二鳥
59:優秀そうな人って？
13:美。
58:場所。友達の友達。
63:まきちゃん
62:ゆきちゃんとか、あいつら。
10:横断的効率化
60:あのガスの人できそう。友達いないかと。
9:[[目的検索]]
49:女子性
53:類似
52:雇用
7:目的
51:できる子
6:buildtime
50:優秀な女性秘書
6:RuntimeNode
5:モデリング
4:パターンマッチングのストーリーテリング
3:パターンマッチングを自動化
2:オートメーション　==　自動化
7:履歴
6:パターンマッチング
5:提案すべき最適なタイミングの検出
4:提案アルゴリズムの提出
3:ガスブックネット用社内サーバーの御提案
8:
お世話になっております。



以下に、ガスアズインターフェイス様社内LANへのガスブックネットウェブサーバーと連携する
サーバーセットアップの御提案をまとめさせて頂きました。

宜しくお願い致します。

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

【目的】
バッチアップロード（zipからのアップロード）の際のシステムの負荷分散、
および大容量メディアファイルとウェブサーバ内プレビューの関連づけ
　
【実現手段とスケジュール（提案）】
1.ストレージ等の目的で購入したPCにwindows OSと遠隔操作ツールのインストール（今週火曜／水曜。担当：石田さん。）
2.サーバーにアプリケーションサーバーをインストール。（今週中。担当：東窪）
3.このアプリケーションサーバーにも、ウェブサーバーと同様の開発中のアプリケーションを配備する。（今週中。担当：東窪）
4.ランタイム（実作業）の初回実施（来週火曜、水曜。担当：石田、東窪）
5.ドキュメント（社内LAN管理者様との共有。本ケースでは水口さんへのセットアップログ、本資料の伝達や調整）

これにより、社内アプリケーションサーバーに以下が実現される。
　　1.ZIPファイルの自動解凍展開。
　　2.元データファイルパスの取得とウェブサーバーにて稼働するDBへの登録（予定。）
　　3.サムネイル可能なメディアファイルについてのサムネイルデータの作成
　　4.３で作成された、ウェブサーバーでの稼働に必要なサムネイルファイルのみを、ネットワーク越しにウェブサーバーにDBファイルとしてDBに格納
　　5.データ投入時のユーザーのオペレーションへの影響が、無視できる程度の最小限の負荷となる。
上記はzipファイルをインプットに、一連の作業として実行されるが、個別に呼び出すことが可能。
ユーザーは現行のウェブサーバー上でのオペレーションとほぼ同様の作業をこのアプリケーションサーバーにたいして行う。


【ランタイム】
実作業時にはユーザーは以下の作業を行う。
1.フォルダ構成規約に準拠したコンテンツデータの作成と
2.サーバーへのzipファイルの配備(サーバーへのアクセス権限などは別途検討） 
【リスク／コスト】
1.セキュリティリスク
　セキュリティについて、以下の状況が発生します。
　1-1.ウェブサーバーへの元データファイルの転送がなくなります。インターネット上を物理的に転送されないことになります。
　1-2.ウェブサーバーで稼働するDBへのアクセスが公開されます。
　　パスワードとユーザーによる保護を行うとともに、IPベースで、ガスアズインターフェイス社内からのアクセスでない場合は
　　受け付けないという処理の可能性について検討が必要かと思います。
　　（社内LANからの外部向けのIPが固定であるかの調査と、そうでない場合に半動的にかわるグローバルIPの通知などが可能かの検討）
　1-3.基本的には、この方式により転送されるデータはプレビューのデータであり、パブリックに公開されることが前提とされるデータですので、
　　　パケット監視他で盗聴されたとしても特に危険なデータはありません。
　　　
2.コストについては、
　2-1.アーティスト用のデータを格納する目的などで用意されていた（？要調査）サーバーがハードウェアとして利用されます。
　2-2.システム開発については特に追加開発は発生しないと予想されます。これは現状既に実サーバーに稼働しているものを、
　このLAN内部のサーバーに配備しつつ、データベースのロケーションをウェブサーバー機をさすように設定するだけで本機能が実現できるためです。
　2-3.上述の諸作業の人件費コストがかかります。基本的には通常のOSのインストールであり、内部で動くサーバーですので、
　ほぼセキュリティの考慮が不要であり、windows xp OSの通常インストールと、インストーラーの付属したミドルウェア／サーバー
　（tomcat java container,db=mysql,apache web server,java jdk)のインストールが想定されます。
　

【元ファイルパス情報の取得などについて】
元データとプレビューデータのパスの関連づけについては仕様策定中ですが、
この実装のためにはクライアント側（ガス様社内）にてプログラミングの実行環境が必要であり、
こちらも本作業でインストールされるもので環境としては準備がなされることとなります。


xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
7:つくってもらおう
6:割合も
5:東窪
4:なっとくいかす
3:明細
8:メール書こう
11:@wait 定期宅配待ち？
10:@wait 腐ってる
8:@wait 腐らせないでいるものを頼む
7:宅配受取
6:@wait なんか上手くいっていない？
17:@wait 送ってくれるの待ち
5:@wait もうちょっと日程多い方がいいか？
4:@done 試す
3:カット野菜宅配
13:@sun 振替依頼書調べる
6:esspresso
8:cafelopp
3:カフェイン
11:道でスナップ
4:ユビキタスキャプチャー
8:モテ
3:カメラ
7:
1:カメラマン
3:http://storytellers.highrisehq.com/tags/142236-camera
2:http://storytellers.highrisehq.com/tags/142235-photo
14:キーボードで位置を指定できる？
13:#keyword [[位置で保持]]
12:キーボードで扱えるカレンダーなビュー
9:全体としてスケジューリングコストを下げる
11:ビューとしてキーボードショートカットが使えない
8:相手を幸福にする
7:Aダブルブッキング
6:他の人の予定が見れる
5:カレンダーシェア
4:
次にどの作業をすればいいのかがイメージできるといい。
3:#keyword [[スケジューリング]]
2:
ical+ネットワーク=グーグルカレンダー。
グレッピングできるのはいい。
視覚的にイメージしやすい。
左から右に流れる度合に接続している
1:カロリー
5:良いカロリー[[フルーツ]]
2:風邪
4:kit
3:キット
1:キャッシュフロー
5:AC
2:CF
1:キャッシュフロー
5:AC
2:CF
3:cfchart
5:訓練
4:キーボードショートカット
2:macではikeyなどがある。
あとは文字列を割り当ててテクストにするというのもある。

13:windows:
qwd,kbdacc,gds
12:tools
7:windowsのスタートメニューをwindowsキー＋アルファベット
一文字の何回かで呼ぶのもいい。
10:blindtraining
6:アプリにキーボードショートカットというのもいいし、
5:連想する
4:原文読む
3:キーワード
9:類似

8:印象の強い初回*毎日1度*7回＋3ヶ月に一度
7:連想曲線
10:パブロフと快
6:http://www.comedywaltz.com/search/renso/search.php?query=a
連想キーワード検索
2:keyword
1:キーワードページ
5:crowd
4:cloud
3:クラウド
6:クリティカルパス発見
4:parallel
3:クリティカルパス
6:gantt
5:現状のランタイム書く
4:モデリング
3:クリティカルパス発見
5:ゲリラ発動
4:ゲリラ連絡網に連絡
3:ゲリラ
5:内容吹きこみ
4:ゲリラ連絡網に連絡
3:ゲリラ発動
3:・現時点の競争相手の名前とスコアをリアルタイムに掲示するリーダーボード（leader boards）

1:ゲーミフィケーション
35:TKP5
29:ヴィジュアライゼーション
34:面白い記事選択とその理由
28:集まりをやる。
33:記事
27:イケメンもいる
32:紹介の時に入れる
26:アーカイブ化作業の条件。
アーカイブ化すると共にこういう会をする。
会自体の仕切り。
参加条件。何記事くらいがいいか。20記事。
31:女をナンパする
25:美女
30:男をナンパする
19:広告する
22:TKP的プレゼンテーションをSVネタで。
可愛い女の子とカリスマ審査員。この子らよ。
1位になったら賞金と、
面白い話をしたとなったら、それをコンテンツとして公開するその補助は、ちゃんとカリスマと美女がやってくれると。
17:写経
21:5人可愛い女の子審査員大会
16:大学に行く
20:一席ぶつ
15:雇用するぞ
14:可愛い女の子
12:餌
11:バランスを取る
10:ポートフォリオ
9:CHEのサイトを作ってる
8:・アクティビティの間にミニゲームを挟む（embedding small casual games within other activities.）

7:・ユーザー間の課題（challenges between users）

6:・報酬、クーポン、交換、ギフト、ポイント交換などのシステム（systems for awarding, redeeming, trading, gifting, and otherwise exchanging points）

5:・バーチャルグッズの購入等に使う仮想通貨（virtual currency）

4:・グラフィカルなインターフェイスでタスクの進行具合を伝えるプログレスバー（progress bar）

6:燃えないゴミ
5:生ごみの処理
14:同時に出せる。
4:ゴミを玄関からもってく
13:三つのサイズを揃える
3:テープで縛るなどして取り出しやすくする。
ゴミの袋の3種にする。
2:@secretary 分別
1:ゴミ出し
8:バッファ
17:適材適所
7:燃えるごみ
2:これやってる。という。
4:デザインの質が低ければ誰かになんとかしてもらって。
3:カットオフでいい。
2:コイズミさんがなんとかするタイミングで。
17:a
16:aaaaaaa
6:よりよいリソースに[[変]]える
5:雇用
2:コスト減らす
1:コスト
1:コスト減らす
3:雇用
3:
変熱狂的で変人的だけどどこか才能ありがちな皆さんに朗報。
成功してないけど天才っていう皆さんに朗報。
ジョブスもいうとおりだった。
「ひとつのことしかしなくていい」というのは「ある時期にひとつのことしかしないけどそれでいい」ってことで、
「誰も理解できないけど情熱を傾けて、「誰も知らないまま終えたそれ」が「それをしなくなった10年後に別のあれ」とつながって、
「必然的な偶然」として、「誰も知らない秘密の方法」となってあなたを幸福にするでしょう。
誰にも理解できないしあなたにも説明のつかない10年の秘密、複雑怪奇な理論は「お前は変人だ」という難癖と、
「でも絶対いうとおりになる」という事実とで、みんなをおののかせるけど、それでも真理は事実の中にある。

ストーリーテラーも一つ一つの興奮してバカじゃないかっておもわれるようなことを散々やって磨き上げた秘密の粒が、詰まってる作品です。

僕の物の作り方の変化は、この「コネクティングドット」的な意識でがらっと変わった。
変熱狂的に一つ一つをやってきた。
サッカーだって音楽だって詩だって芸術だって経営だって
プログラミングだって認知科学だって論理学だって哲学だって数学だって英語だって、
たくさんだけど浅くじゃなくて、一つ一つを偏熱狂的にやってきた。
一つ一つをとると過度で誤っているように僕にさえ見えたものが、
その圧力によって何年もの時間に耐える硬度を持つ粒になる。
そうして作ったたくさんの粒のいくつかは、とんでもないくらいの距離をもっている。
たとえば音楽と経営とか、プログラミングとサッカーとか、
注意の哲学としてのSEOと2005枚のパラパラ映像とか、まったくとんでもなく遠くにあるようなものが、
その遠さゆえ、誰にも気づけないような距離感を持つが、
しかし硬度と密度と重量を持つが故に、距離を越えて力学的関係を持ちうる。
だから僕だけがしっていて感じている力学的緊張関係の系は誰にも気づかないように回るのです
。すると僕が死んでも残れるものかもしれない、自転的で自己生産的な系となるでしょう。


SFCにいってよかったよ。天才でよかったよ。苦しかったけどねえ。
6:digitalize
5:outsource(secretary)
4:UbiquitousCapture
3:scansnap

7:stsc+video
383:動かす
305:記事量
343:automate = 自動化
382:赤い
304:@wait どっちかというと切れること。
342:Patternize
381:凄いcss、をもらおう。
303:better_os
341:PatternMatching
302:@wait OS雇用へのプレゼン
340:Pattern
238:テキスト量
276:内容吹きこみ
275:message
236:株式公開
235:投資
234:循環
127:reblog
166:外注
126:質
125:量
124:SV広告収益
163:@wait 外部からの自動リンクのところとかの開発を南紀くんにお願いする。
123:借りる
162:営業
122:利益率
161:kickstarter
121:AC
379:[[目的検索]]
339:速さ
378:目的
338:早さ
377:解決
336:速度
374:広告営業
334:オフショア
373:英語の需要
333:template
372:こちらの説明資料
332:リマインダ設定
371:連絡
331:広告と編集のキャッシュインとキャッシュアウトと
370:タンブラーアテンション
229:@wait 売上として発注書にはしてもらう。エヴァ
330:別会社にするか
266:@wait 発注依頼
224:紙やデザイン
223:PV単価
199:Buffer
198:適材適所
221:i18n
260:communications
220:効率
196:automate
117:被リンク
156:@wait xhtmlcss英語
195:集中投資
116:記事あたりのROI
155:@wait TODOテンプレートにする
194:効率と費用節制
193:金
153:売上作る
112:量
111:広告
110:受託案件
369:メディアパートナーズ
329:融資チャネル
368:外国人にツイッター対談やってもらう
328:ノード繋ぎまくる
367:ツイッター対談
366:僕がやってることを明文化してトレーニング
（一回やってみてもらう）
326:土日もOS
365:RSS
DataApi
ストリーム販売営業
ツイッターつぶやき
タンブラー自動リブログ
325:コアメンバーが会議こなくてよくなってる現象
364:HOSTINGをTKPでやらせてもらうのどうか。
324:速度改善。僕の
363:オープンプロセス
362:マネタイズ
322: 翻訳
298:@wait os雇用
259:仕組み化
321:アイフォンのアーカイブビュー？
297:PDF販売
320:ツイッターに自動リンク
296:@wait 質の試験。かれにメールで贈る
218:バッファ
295:@wait マルチチャネルのスキームとか判断
テラー
SVと共有のところ
広告＝営業＝１０％くらい
255:網羅
215:os
291:@wait 美味しい回路に専念
252:多目的化
290:受託外注
211:@wait 雇用
146:pyramidseo
145:記事あたりのPV
144:記事あたりの利益
143:記事あたりの費用。
142:ゲリラ連絡網に連絡
141:ゲリラ発動
140:[[ゲリラ]]たち
359:ROI？
319:ソーシャルビルド
358:ツイッター担当？
318:別冊
357:関与感覚
317:ACとSC
356:ゲリラシステム
395:
316:定期のプロジェクトのリスト
394:
315:経営管理
393:彼女に毎週花束をプレゼントする
314:英語と中国語のチャネル
353:大口権利者リスト
392:
289:ML作る。コフレとかみたいに。アドレスとっていいという人は。
352:@wait 大口権利者にアタックする
391:であったりする
351:@wait アテンション
390:いろんなこと
350:@wait あちらから連絡もらう。
208:@wait コスト減らす
247:速さ>早さ
285:@wait gengo
284:@wait どういう動機できたか。
245:プログラミング5パー高速化で一ヶ月200万か1億
205:CF
204:福利
281:@wait ララさんのモデリング
203:楽できるとこ探す
242:すごい質問
202:scaleを計算する
241:やってることをクールに説命するページ
201:横断的効率化
240:@wait 著作者連絡先
134:フォロワー増大
173:@secretary @wait 権利処理費用。１記事あたり。を出す。
133:@wait 桜
132:他アカウントでのリブログ
389:一日3色ご飯を食べる
349:iPhoneの閲覧数？
388:死を回避
309:みんなの署名にいれてもらう
387:セックス
347:IR
386:でかい
308:網の構築
346:ツイッター対談
385:更新頻度を保つ
345:@cycle Highriseタグ付け
384:フォントのでっかい文字列
14705:nodepadpad
13554:startup
14909:助力
14937:さばけない問題
14908:通知
14965:archive
14907:ボイス事業のレポート3時間
14906:どうすれば受託の窓口から外れつつ、
かつCFが安全で、かつ品質が担保できるか。
14616:socialbuildなど
14615:nodepad
14933:着手金ありそうなやつで50万の着手金
14962:海外の
14990:eva
14932:hosting as menu
14961:日本の
14903:オフショアで受託するセールス
14931:仕組みにする
13116:studiovoice
14960:競争
14902:SVの広告やらないか
14930:CFのある売上
14640:lifehack
14879:@wait 返済
14589:new_exclamations
13143:どうすればPCなノードがすすまないかも
14849:オフショアで外注な人
14610:メニューにバーターと
14876:@wait che借金
14551:
14580:meeting_people_is_easy
14811:オフショア？
14757:@wait enterable
14756:ボトルネック
13548:TKP2
14754:@Air もっと声かける
14989:資料いる？
14750:@Air 声かける
14988:検索してアプローチする
14987:３０％先払いの日本のWP++か、ウェブアプ
14639:clutter
14986:java
14928:そういうサイト
14609:バーター
13512:theamplifier
14927:java案件商流
14956:まく
14608:評価経済
14955:営業
14665:today
14607:広さ
14983:@wait payment
14954:google seo営業
14664:@wait SV費用
14982:@wait aditya team
14924:@wait 3段階の借り方
14923:テラー
14633:blueflag
14604:定率外注
14950:sv 2 sales
14602:費用
14920:@wait 資本金問題
14869:@wait SVの構造的問題
14600:CF
14868:ほくやくをオフショアにもっと出す
14548:monogawa
14576:king
14575:startbahn
14574:starchildapp
14573:mrbook
14572:africaandleo
14803:@wait 安めのいいやつ今の３倍雇用しまくる
13913:groundzero
14190:ガスに広告主になってもらうこと
14740:bridgepm
14979:提案する。
14949:sales
14978:brenda
14948:外注のテクニカルディレクター
14977:projectbase
14976:craftclip
14918:@wait payment to aditya
14686:資金調達1209
14656:Buffer
14975:casting
14627:@wait 生活費削減
14916:アンプやってもらうには
13709:利益
14973:st4wp
14915:三好さんから。。。
14653:fluits afford at home 
13708:創造性
13706:ゆとり
14622:daily_reporting
14889:@wait 個人に作業をわけてやらせまくる
14599:Sales
13705:スーパーディレクション
14911:@wait 融資調達
14888:@wait 会社に作業をわけてやらせる。
14910:@wait 最後の150万の余剰
14568:rkenglish
14567:creww
14856:cash_flow_bonus
14566:plest
14593:原稿料とかに加えて10万＝インファスにも5万払うからと
14824:ゆとり
14592:ads to new in SV
14823:reviews on works
14591:@wait kaizen
14850:@wait brendaにhiring policyと次のステップ
14769:お仕事の質か
14797:利益率
14767:競争
14128:goodbank
38:password validations 2h
71:pdf
37:@done js 年月チューザーのグレイアウト
1hour
70:xls
36:@done mutliselection
(server side + client side)
40H
87:@wait id対応　5　
86:timer 15h
85:2
84:@purchase 岡本さん
32:@done mysql
83:@done 費用について相談する
31:csv import 4h
49:@done xml
1hour
30:tonersaver
48:pdfshow　4 + 4 = 8h
45:pmcsgml2
44:ajax
3-10
43:サブクラスと店舗追加
42:@wait ap server
6h
41:doubts 5h
59:仕様提案
91:uiだけでつくる
58:集計 10h
90:@wait tera
57:@done 指示
56:@Phone 電話する
55:gasbooknet
54:@done design
53:@wait ふりこんでもらう
52:@done ac
69:10h
51:@done パフォーマンスチューニング
68:これようのセレクトボックスの応用
2h
67:ajaxでセレクトボックスを埋めるところつくる
66:丹羽
3:20070207
65:@wait tera対応（orマッパ対応）
4-10
62:週マスタ対応
61:表示単位
15m
28:djbi
60:表示パターン対応
77:@secretary 30m-2h
76:jan
75:5-10
73:4-6h
72:2-4h
6:digitalize
5:outsource(secretary)
4:UbiquitousCapture
3:scansnap

7:stsc+video
88:でかいpyramid
391:clipdiaryやflashpaseteの自動共有
390:jsp templateのエクリプスからの起動
82:評判
219:handwriting / with html2jsp functoin, use html
81:実績
218:wireflame

217:wireflaming from mock
137:セリングをなくす
136:フリーテクストで。チェックリストで。など。
コミュニケーションはどうか。きんがくは気にしたか。
ルックスは気にしたか。ルックスは気に入ったか。
気に入ったとしてあったほうがよかったか。
また今後開発があったら一緒にやりたいと思っているか。
答えにくいか？アンケートについてどう思うか。
214:name of story
135:聞いてみる。改善点をもらう。
134:顧客満足までをテストシートに
212:請求
709:共有cpuとかで。。
708:一人当たりのcpu量？
629:まわすたびにうまくいくようになるもの
707:eclipseとかmagicdrawでの処理がちょっととまり勝ちな件。
eclipseで処理するとその内容がとまる。
628:営業獲得効率
549:create struts helpers in eclipse
627:自分でやる
548:create java project in eclipse
626:最低限のデザインテンプレートを。
704:phpにする。
625:Buffer
468:better display
546:MagicDrawか紙かnodepad
624:一人当たりの計算機資源
545:RuntimeNodeOf
701:basecampとnodepadと
バックパックとxlsとbugtrackerと
xlsの相互変換
544:@out Find GoalNode
622:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
700:テストの自動翻訳
387:swt(desktopの自動吐き出しも）
543:[[Choise]] From Verb
621:@wait 1月末日
542:nodepad
620:@wait 30万/人月を払えるように
541:@out RuntimeNoding
384:開発、とかそういうことも予算比率にしといたほうがいい？
ノードパッドで優先されるべきでは。
540:RuntimeNoding
79:コネ
78:bettersales
77:慶応の人で工学的な人、で探す。
76:他いないか。
75:ター
799:バッファ
798:反応速度
209:cursornum
797:月間売り上げ額を3:7に保つ
71:現状不足している人、みたいな人を。
70:人員比率保持StorytellerRatio

207:linenum
795:Innovationから取る
794:NoWorkを避ける
127:ブラウザと同じルールでやっているみたいだ・・・。
205:filelocation
793:IncomeSheetにあわせて雇用可能な数を雇用？
126:分析する
792:AC
125:wysiwygがやってることをやる
203:InsertionPoint + inserted codes
124:Of節のマッピング
202:Preperationの実行
790:月間作業可能顧客案件売り上げ以下、案件を動かす
123:my eclipse 勉強？
619:@wait pm0.5人月のテラー
618:@wait 300万/monthの売り上げを僕以外で
538:FirstModeling
536:投函
379:相互評価
378:メリットの分配
612:@wait 100万/人月を払えるように
611:@wait pm二人月テラー
532:属性追加時のコーディングまでの時間を減らす
610:@wait 1000万/montnの売り上げ
375:防御の雇用
374:片山君でどうしてまわんなかった？
452:案件額を最大化するというコンフィグ
373:@wait reminder
69:良いペイ
68:研究室に出入りする
67:友達誘う。後輩誘う。
291:素人っぽい人でもバリデーションできるようにする
290:とびさきの編集。
64:慶応とかの人？リクルート
786:売れてないギークをDigg
119:すごいチーミング
785:顧客案件へのSC
118:ギーク
784:CRM
783:meta sentenceの増大
114:あたま良い人のいるとこで[[ナンパ]]
111:ブロックと、名詞節のマッピング
110:クラス図からof説を構築するインタフェイス。
527:push to teller
369:RestrictionPattern
447:名言＋communication
368:挿入パターン
367:挿入点
601:GASシステムROI.xls
366:削除志向
444:中をmotivate
600:オフショアコーダーだと納品までが遅い？
普通と比べりゃ遅くないんじゃないか。
100万円を結局2週間かかっているのは
pmが時間がないからで、
ター君がそれに寄りかかっているだけ。
本当はテラー使っても2週間かけるような
人に100万は払えない。
286:マニュアルと画面仕様の
自動書き出し
441:広告もなくす
58:資本集中
283:get Codes From eclipseroot/WEB-INF/src/net.projectname.web.*.java

360:@done @wait 監視
56:リクルート
281:ステンシル
779:preinterview
699:Task自動割当と進捗確認洗練
698:Xls書き出ししてXlsをアップする
50:デザイン = design
776:Updateと書いたところっぽい。
でも「どれとどの属性をかきかえるとどうなる」
というのとセットだから。。。
109:吐き出したコードの使い方のコーチング
697:履歴的な比較がいいかも
775:再利用。頻度。回転頻度を増す。。。
パッケージ販売。
ビジネスロジックで、「モデル以外に変わるところ」を考える。
作業をしたところ全体だよね。
774:http://www.enclosing.net/jpg/W0821.jpg
テストの再現手順を型にする。
Runtime{
ツール画面でテストを書く
->画面を開く
->マーク（するとテスト文字列が自動で補われる）
->データ間の依存関係として登録される
}
107:rating pattern
695:ほかの企業のやつを入れていた。
salesのこちらの割引率を提示していた。
694:全部についてなんか定率かけてた。
人日を丸めていた。
693:魅力的なインターフェイスパターンの追加
692:Validationのインテリジェントな選択
770:@wait offshore X 1010100
afp search.
keyboard shortcuts
tools{gds,kbdacc,qwd,}}
eclipse template
103:制限について、早く記述できるようにする。
691:Validationのインテリジェントな挿入とノンホットデプロイ
102:of 節をもっと利用できるようにする
101:パターンピッカー
100:パターンマイニング
438:案件単価を大きくする
437:資本金と実績売上額
358:勇気あるいは勇気ある人
436:収益率
357:UpdateCommonTranslationsFromAttrs
435:相場との差分の巨大化
433:注意の自動獲得
277:sales
営業活動

354:エリートプログラマー向けの用語を探す。＋ピラミッド
198:モック型営業
431:先端なしステム用語でピラミッド
197:評判の提示
48:coding modification
430:システム開発でピラミッド
351:コミット通知
47:サービスイン。配置  = deploy
194:=======================
RuntimeNodOfstorytellering
=======================

45:xhtml2jsp
44:TestedSystem
769:24モニター
足切り
keyboard ショートカット
afpサーチ
bugtracker
quick window
keyacc
clipdiary
videoでシェアー
interface(キーボードとマウス）
耳栓
運動
肉
水
コーヒー
パラレル化（作業分担する）
template
amateras
firefox以外
191:indexを構成
web.xmlをコピペ。
フィルターのfilter.*を他からコピペ
(prototypeな）
index.jspとf.jspとh.jspをコピペ
createschemaとdropschemaとdb作成とdbユーザ作成
768:効率化候補リストアップ＋ROIに。
767:彼らを効率化
689:SVNとかのインテリジェンス
766:分割作業とかも時間になる。これはテストも一緒か。
688:class以外のにする？
765:specsを分割するプロセスを入れる？

687:bugtrackerと修正
686:Air対応。
685:インテリジェントな挿入。
762:顧客満足
684:VPを編集しないようにさせるか、
VPの変更時間をみる。
かsetAttrsのところだけ書き換える。
761:経過時間を短縮
（1人で10日でなく3人で4日に）
683:attrpicking
760:パラレル化
428:それより、自動リンクによるそれ
349:類似
427:pyramidで、そのキーワードについて１位を取れるような額
348:コードテスト
426:#keyword [[RuntimeNodeOfValidationAssigner]]
347:選別
345:予算比率
501:general bug test
189:DisplayTagging + XlsExport
422:プロジェクト内のform,link要素の解析と管理？
343:予算
342:ターゲットキーワードとテクスト量
264:designer
デザイナーの選定など。
341:scalable
185:camp2xhtml
263:network phpmyadmin

184:MagicDrawing
262:ai
261:dw
181:ProgrammerKickoff
679:word
678:揺らぎからの自動登録
755:AttrPicking
draw er chart
add attr to class
post japanese of attrs and nouns
manualize
データベースとデータベースユーザを特権で作成する
camp2xhtml
MagicDrawing
ProgrammerKickoff
デザイン = design
発注（受注）と契約
検収
CheckTesting
extract out of pattern sentences
「パターン」どおりでない機能を抜き出す。
PostSentencesOnStoryteller
handwriting / with html2jsp functoin, use html
wireflame

mock
wireflaming from mock
name of story
請求
sales
営業活動

coding modification
CodingTimeDbMismatchSoloving
サービスイン。配置  = deploy
CodingTimeMvn
xhtml2jsp
CrudToModelInCodingTime
TestedSystem
general bug test
PostMismatchTestWithBookmarklet
PostTestsForSummery
見積もり項目金額設定。
GeneralBugTest
UpdateNounsAndAttrsAboutJapanese
見積提出
wireflaming from scrach
storyteller
バリデーションルールの配置
put validation rules on each post
Preperationの実行
designer
デザイナーの選定など。
network phpmyadmin

ai
MismatchTests
dw
ManualFromScratch
FirstDeploy
Nouns
UpdateTestsWithSentences
PostJ2eeStoryAboutEstimation
css/first request
Post CommonTranslation
名詞抽出
andromda app
manual2RequestTests
manual(procedures)
storytellinginterview

natural text from client
create struts helpers in eclipse
create java project in eclipse
MagicDrawか紙かnodepad
RuntimeNodeOf
@out Find GoalNode
[[Choise]] From Verb
nodepad
@out RuntimeNoding
RuntimeNoding
通知
FirstModeling
投函
RequestTests
tested bugs
notify to Mails of MembersOf Projects
deploy to dev
FirstMvn
add attr to class
push to teller
StorytellerCodesDownload

599:シナリオ　*　名詞抽出　*　関係化
677:CommonTranslation投入？
598:画面仕様　*画面遷移
676:DesktopFileUploadパターン
597:モデリング　+ RuntimeNode作成
675:PM部位
752:MismatchTests
674:僕以外で回る
595:ストーリーテリング
673:Set##modelclass####Attr##で
そのAttrを探してきて吐き出すようにする。
Grep##modelclass##On##Hoge##も。
750:ManualFromScratch
672:XlsImportパターン
593:ドメインドリブン。
自動化のROI資料もの自動化。パターンを作る
671:セキュリティ的にoffで
classのロード時にはoffだけど、
高速に実現できるようにしておく。
592:コンサルの内容も効率化
670:ビューとして、チェックボックスとかで、いれないやつを削除して。
591:コンサルも含みで課金が可能になるか？
418:http://localhost:8090/st/VerbDetail.do?id=20
417:Preperation.java
415:ajax post
412:#keyword [[記憶法]]
256:manual(procedures)
333:formtagへのバリデーションの以降
411:画面仕様も記憶法で覚える
177:変化が重要なところにそれにふさわしいインターフェイス
253:storytellinginterview

252:natural text from client
828:KPI
749:manual2RequestTests
827:『日々の営業活動のなかで、把握できるのは売上情報だけ。』
『売上原価は生産側からの製造原価報告を待たないとわからない。』
『ベースは製品別原価計算となるため、営業部門別、事業別など原価把握のためには配賦処理が必要…。』
826:購買、在庫、生産、販売システム間データ更新がバッチ処理（データをまとめてから一括処理）であるため、現実の在庫とシステム上の在庫に乖離がある
現在の在庫数量はわかるが、他拠点からの受注も含め、どのくらい引き当て可能かわからない
産予定、発注入荷予定を含めた利用可能在庫数量が把握できていない。』
825:自分たちでもメールマガジンツール使おう
669:全部についてcrudいれてから消すやつを消す。
746:@wait 予算
824:CRMをつかって。
668:パターン認識
745:翻訳
823:システム製品については、
売り物があることを告知する。
589:ネックの指摘
667:自動的にやるところ探す
744:各ステップについて機械を設ける。
822:請求、支払からの自動化
588:スケーらブルに
666:自動的に
743:@wait ルナーの人に話しかける
821:資金予測のスピードアップにより効率的な資金繰りを支援

587:モックまでの効率の改善
665:別のインターフェイスで
742:@wait 東欧とかの、
820:誤帰属
586:モック型営業を可能にする
664:Sentence登録を高速化
663:一人当たりの計算機資源量
740:コーダーを作ること自体を
オフショアに。
584:まわすたびにうまくいくようになるもの
662:ローカル実行をいろんなアクションに
661:hotdeploy
660:ミドルウェア変える
581:better storyteller
580:まわるたびにそれだけで
次回の開発効率がよくなる仕組み。
329:seo
248:通知
245:printout + auto print out with printed tag infos
400:storyteller
165:applicatin-resourceのstruts-configの設定を追加。
appklication-resouceファイルをandromdaからコピー
application-resourcesを日本語にpropertyエディタで編集。
appklication-resouce
242:形容詞
819:現場システムと会計システムでの二重入力をなくしたい

818:現場システムと会計システムでの二重入力をなくしたい

162:cvsへのコミット
739:オフショアのPM育てる
817:まず給与計算まで自動化しましょう。
816:つぎはぎしない。いまのシステムでは差がでない。
737:営業さんに全部録音
815:資産効率
659:tomcat待ち時間改善
736:コーダーより、PMオフショア技術者のがうまみがでかいということ。
物価が安いが能力は高いので。だから日本人PMをどんどんこの地位の人が殺していく 
814:カイゼンをつかさどる以上、
すぐにその利益率が出ないといけない。
658:マヘシュ的な人にモニター
735:ギーク（才能ある技術者）で、英語もいける人がおおい傾向を利用する。
言語習得能力とプログラミング能力はそれぞれ一般的能力によって因果されるからか。
こいつが、翻訳だけできる人（結構安い）が上げた訳（海外のＰＭが利用）する。
海外ＰＭと、ギーク、翻訳さんは横断的に複数プロジェクトでチームを組む。 
813:SOX
579:コモントランスレーション増大
657:マヘシュにモニター
734:日本人のお客さん 
営業で全部録音してくる人 
翻訳する人（まあまあできるタイプの文型の翻訳の人） 
オフショアのPM（横断的に複数プロジェクトを） 
オフショアコーダーズ（キッズ） 
横断的なギーク 


812:ブランディングされた資料作成
578:パターン数増大
656:nullポとか出るよね。
画面ごとに出るよね。
811:資料作成
499:RequestTests
655:cvsで？
810:SAPパクル
498:tested bugs
654:lesscoding
575:http://screencast.com/t/NlmAYu4XAii
653:どこでも開発
574:charene
652:ブラウザから入れることでリンクしているような。quoteで。
495:notify to Mails of MembersOf Projects
573:頻度計算
651:ガスなら作業手順所がマニュアルべースになっていた。
手順という項目はどこにもある。
"quote"に近しい。
650:xlsで、とか資料形式とかも。
xlsではリバーステンプレートできるようにする。
xlsとかファイルをアップするとそっから
Update SalesSemiCodeTemplateする。
493:deploy to dev
571:効率的改善
570:改善点の優先順位付け
490:FirstMvn
318:発注（受注）と契約
317:検収
316:CheckTesting
159:データベースとデータベースユーザを特権で作成する
315:extract out of pattern sentences
「パターン」どおりでない機能を抜き出す。
236:関連末端に名前がついている場合のcritlietとか
314:PostSentencesOnStoryteller
234:ReverseTemplate
312:mock
233:CsvImportPattern?
809:意思決定カイゼン
231:add attr to class
808:品質、量、タイミング
729:ロギングを出す。
807:情報可視化
806:信頼感・ラポール
805:@eclipse 2月、3月の短期納品
649:xlsにしてデザインを変えられるようにする？
726:各資料を消しこみ可能にしつつ保存可能にする。
804:高速な納品
648:http://lab.nulab.co.jp/archives/64
スペルチェック
803:人脈
569:CodingTimeDbMismatchSoloving
647:見積効率化。計算式をパターンにする？
ウェブアプのbooleanではないような？コードが変わる？
書き出し。変化する部位を考える
568:CodingTimeMvn
646:テンプレートあたりのルックス
489:StorytellerCodesDownload
567:CrudToModelInCodingTime
723:xls2crud
800:理想月間作業可能売り上げ額に月間売り上げ額を近づける
566:PostMismatchTestWithBookmarklet
644:scale
565:PostTestsForSummery
564:見積もり項目金額設定。
642:PMC案件
720:グローバルプライオリティをみんなにつける。
563:GeneralBugTest
641:大手案件
484:AttrPicking
562:UpdateNounsAndAttrsAboutJapanese
560:wireflaming from scrach
99:パターンマッチング
481:manualize
94:依存関係をどうやって記述するか
308:見積提出
229:draw er chart
add attr to class
228:post japanese of attrs and nouns
227:データベースとデータベースユーザを特権で作成する
305:バリデーションルールの配置
put validation rules on each post
148:http://galaxy.andromda.org/docs/andromda-bpm4struts-cartridge/howto10.html
302:挿入点発見自動化する。
デバグしやすいように、ウェブ上での
開発機urlという属性を
もっておく。ストラツコンフィグの全内容も吸い出す。
バグを登録するフォームがある。
バグを登録するフォームからバグを登録するフォームにデータを取り出す。

145:案件（金額）の最適な量を書く。
140:マーケティングリサーチ
717:.netとphp対応
638:速度
559:FirstDeploy
637:月間売上額
558:Nouns
636:1末までに、普通のPMがやる作業を僕でやって
洗練できるところを洗練し、所定の作業についてはマニュアルにして、
彼らにやってもらう
714:翻訳
557:UpdateTestsWithSentences
635:@wait ちょっとずつで払ってくれる人いるか
713:specsとマニュアルの自動作成？
556:PostJ2eeStoryAboutEstimation
634:削減される工程
ケース名
想定発生数（月次）
時間単価
月次想定削減コスト
年次想定削減コスト
所要時間(H）
ｚ月次作業頻度
月次作業時間(h)
作業者単価（作業者の販売管理費含む）円
月次費用削減額
712:リクエストテストの自動化
477:cui
633:損益分岐地点
554:css/first request
632:プロジェクトの終わりにそういうのを掠め取る作業
397:ajaxのcrudパターン。
553:Post CommonTranslation
631:営業資料として「[[毎回]]」提出するものを指摘
リバーステンプレートできるようにする。
【ガスのケースなら】
見積もり資料を。
「見積もり選択」とかは？
金額調整した？
ROIの資料出した。
474:IncrementalGrep
552:名詞抽出
630:どうすれば、営業獲得効率で、まわすたびにうまくいくようになるか。
551:andromda app
394:型から自動バリデーション

500:レベニュー方式でデジタライズ動いてもらう？
339:速さ
447:@wait もう一人定常的にやとって、みんなにゆとりをインストール。＋急場では増やしてもらう。
338:早さ
446:@wait ゆとり
229:@wait 売上として発注書にはしてもらう。エヴァ
336:速度
334:オフショア
442:@wait SFCか、遠方（田舎）な人たち
117:被リンク
333:template
441:@wait オンラインでエバーノートとかやる人を探す
116:記事あたりのROI
332:リマインダ設定
224:紙やデザイン
440:@wait 外注バリッドじゃない部位については除外する。
331:広告と編集のキャッシュインとキャッシュアウトと
499:とりあえずエバーノートをやる人から
はいってもらって今のOSを変えてもらう。
223:PV単価
330:別会社にするか
221:i18n
112:量
220:効率
111:広告
110:受託案件
494:@wait 広瀬くんの友達以外？プログラマー？十分？
386:@wait でかい
493:@wait more 20hours / w
385:更新頻度を保つ
276:内容吹きこみ
492:@wait 大島くんとかに後輩とか？
384:@wait フォントのでっかい文字列
275:message
491:@wait piqnさん
383:動かす
490:@wait 誰か紹介してくれ系
166:外注
382:@wait 赤い
381:@wait 凄いcss、をもらおう。
163:@wait 外部からの自動リンクのところとかの開発を南紀くんにお願いする。
162:営業
161:kickstarter
439:@wait 外注
438:@wait バッファ
329:融資チャネル
437:@wait 併せて上下してくれない人材は単価が安い。
436:@wait 人入れすぎてもだめ。というか数字で下限を絞る。
218:バッファ
434:下限のピークを避ける
325:コアメンバーが会議こなくてよくなってる現象
433:AC
215:os
322: 翻訳
321:アイフォンのアーカイブビュー？
489:@wait 西久保さん
211:@wait 雇用
379:[[目的検索]]
486:自己評価性？なにやりたい？スケジュール準拠。上司は客。レベニュー
378:目的
485:@wait デザインできない人にはやらせない
377:解決
484:@wait てつじい？
483:@wait SFCの学生で候補つくっとく感じかな
374:広告営業
266:@wait 発注依頼
481:レベニュー参加してもらう人探す。
373:英語の需要
156:@wait xhtmlcss英語
372:こちらの説明資料
155:@wait TODOテンプレートにする
371:連絡
370:タンブラーアテンション
153:売上作る
537:
429:プロジェクトプロセスの公開？
428:人集めを形にして人を集める？
319:ソーシャルビルド
318:別冊
534:サイズ大きくする
426:ガス西野さん
317:ACとSC
533:@wait ちゃんと選ぶ
316:定期のプロジェクトのリスト
532:広告を出しましょう。
208:@wait コスト減らす
424:大口権利所有者
かつ権利処理が用意な人
315:経営管理
314:英語と中国語のチャネル
422:権利許諾の最初の最初の１０％
205:CF
204:福利
479:@wait モニターもってきとく
203:楽できるとこ探す
478:@wait 遠方でオンラインの人。
202:scaleを計算する
477:@wait あと週３０時間くらい（一日0.6人くらい）いたほうがいい。
平日かな？
201:横断的効率化
369:メディアパートナーズ
476:@wait 上限と下限を聞いて、その下限に併せてdealsを埋める。
それに合わせて必要な人を埋める。
ピークと下とをそれに基づいて埋めれるように人を増やす。
475:利益
474:創造性
366:僕がやってることを明文化してトレーニング
（一回やってみてもらう）
365:RSS
DataApi
ストリーム販売営業
ツイッターつぶやき
タンブラー自動リブログ
364:HOSTINGをTKPでやらせてもらうのどうか。
363:オープンプロセス
146:pyramidseo
362:マネタイズ
145:記事あたりのPV
144:記事あたりの利益
143:記事あたりの費用。
142:ゲリラ連絡網に連絡
141:ゲリラ発動
140:[[ゲリラ]]たち
199:Buffer
198:適材適所
529:投資原理利用
196:automate
528:レベニュー資料
419:レベニュー
194:効率と費用節制
418:他の作家。
193:金
309:みんなの署名にいれてもらう
525:@wait あと一人くらい？
417:attention
524:ボトルネック
416:@wait windowsとデュアルとお散歩？
308:網の構築
523:テンプレート
415:機材で賄う？
522:コピー
521:コンピュータの速さ？
305:記事量
520:でっかいPC?
304:@wait どっちかというと切れること。
303:better_os
302:@wait OS雇用へのプレゼン
469:@wait 遠方のが効率がいい風
468:@wait オンラインのが効率がいい風
359:ROI？
467:@wait 大きな見積もり
358:ツイッター担当？
466:スピード
357:関与感覚
356:ゲリラシステム
351:アテンション
134:フォロワー増大
350:あちらから連絡もらう。
133:@wait 桜
241:やってることをクールに説命するページ
132:他アカウントでのリブログ
240:著作者連絡先
298:@wait os雇用
297:PDF販売
296:@wait 質の試験。かれにメールで贈る
295:@wait マルチチャネルのスキームとか判断
テラー
SVと共有のところ
広告＝営業＝１０％くらい
519:パラレル
518:自動
409:得意不得意に合わせる
516:非顧客案件？
291:@wait 美味しい回路に専念
515:中夜分割
290:受託外注
405:highrise
404:人がいない？
403:投資？
510:@wait 大島くんに他にいないか聞く
349:iPhoneの閲覧数？
347:IR
346:ツイッター対談
238:テキスト量
345:@cycle Highriseタグ付け
453:投資家
236:株式公開
452:権利許諾したい人について
原稿、TW対談、UST、などを依頼する。
127:reblog
343:automate = 自動化
235:投資
451:呼び方を決めよう
126:質
342:Patternize
125:量
341:PatternMatching
124:SV広告収益
340:Pattern
123:借りる
122:利益率
121:AC
289:ML作る
396:すごいやつ。西尾くんにそれを。
285:@wait gengo
509:@wait OSに他にもいないか聞く
284:@wait どういう動機できたか。
508:@wait 他にもいないか聞く
507:福岡在住とか、京大の大学性とか、
506:聞いてみる。
281:@wait ララさんのモデリング
173:権利処理費用。１記事あたり。を出す。
505:人間関係の中から遠目の人をさがせる？
504:@wait ２０万/月
503:@wait 早く終わる
502:@wait 早く導入
501:@wait 遠方とかでオンラインとかでバイト探してる人みたいなので？
383:動かす
305:記事量
343:automate = 自動化
382:赤い
304:@wait どっちかというと切れること。
342:Patternize
381:凄いcss、をもらおう。
303:better_os
341:PatternMatching
302:@wait OS雇用へのプレゼン
340:Pattern
238:テキスト量
276:内容吹きこみ
275:message
236:株式公開
235:投資
234:循環
127:reblog
166:外注
126:質
125:量
124:SV広告収益
163:@wait 外部からの自動リンクのところとかの開発を南紀くんにお願いする。
123:借りる
162:営業
122:利益率
161:kickstarter
121:AC
379:[[目的検索]]
339:速さ
378:目的
338:早さ
377:解決
336:速度
374:広告営業
334:オフショア
373:英語の需要
333:template
372:こちらの説明資料
332:リマインダ設定
371:連絡
331:広告と編集のキャッシュインとキャッシュアウトと
370:タンブラーアテンション
229:@wait 売上として発注書にはしてもらう。エヴァ
330:別会社にするか
266:@wait 発注依頼
224:紙やデザイン
223:PV単価
199:Buffer
198:適材適所
221:i18n
260:communications
220:効率
196:automate
117:被リンク
156:@wait xhtmlcss英語
195:集中投資
116:記事あたりのROI
155:@wait TODOテンプレートにする
194:効率と費用節制
193:金
153:売上作る
112:量
111:広告
110:受託案件
369:メディアパートナーズ
329:融資チャネル
368:外国人にツイッター対談やってもらう
328:ノード繋ぎまくる
367:ツイッター対談
366:僕がやってることを明文化してトレーニング
（一回やってみてもらう）
326:土日もOS
365:RSS
DataApi
ストリーム販売営業
ツイッターつぶやき
タンブラー自動リブログ
325:コアメンバーが会議こなくてよくなってる現象
364:HOSTINGをTKPでやらせてもらうのどうか。
324:速度改善。僕の
363:オープンプロセス
362:マネタイズ
322: 翻訳
298:@wait os雇用
259:仕組み化
321:アイフォンのアーカイブビュー？
297:PDF販売
320:ツイッターに自動リンク
296:@wait 質の試験。かれにメールで贈る
218:バッファ
295:@wait マルチチャネルのスキームとか判断
テラー
SVと共有のところ
広告＝営業＝１０％くらい
255:網羅
215:os
291:@wait 美味しい回路に専念
252:多目的化
290:受託外注
211:@wait 雇用
146:pyramidseo
145:記事あたりのPV
144:記事あたりの利益
143:記事あたりの費用。
142:ゲリラ連絡網に連絡
141:ゲリラ発動
140:[[ゲリラ]]たち
359:ROI？
319:ソーシャルビルド
358:ツイッター担当？
318:別冊
357:関与感覚
317:ACとSC
356:ゲリラシステム
395:
316:定期のプロジェクトのリスト
394:
315:経営管理
393:彼女に毎週花束をプレゼントする
314:英語と中国語のチャネル
353:大口権利者リスト
392:
289:ML作る。コフレとかみたいに。アドレスとっていいという人は。
352:@wait 大口権利者にアタックする
391:であったりする
351:@wait アテンション
390:いろんなこと
350:@wait あちらから連絡もらう。
208:@wait コスト減らす
247:速さ>早さ
285:@wait gengo
284:@wait どういう動機できたか。
245:プログラミング5パー高速化で一ヶ月200万か1億
205:CF
204:福利
281:@wait ララさんのモデリング
203:楽できるとこ探す
242:すごい質問
202:scaleを計算する
241:やってることをクールに説命するページ
201:横断的効率化
240:@wait 著作者連絡先
134:フォロワー増大
173:@secretary @wait 権利処理費用。１記事あたり。を出す。
133:@wait 桜
132:他アカウントでのリブログ
389:一日3色ご飯を食べる
349:iPhoneの閲覧数？
388:死を回避
309:みんなの署名にいれてもらう
387:セックス
347:IR
386:でかい
308:網の構築
346:ツイッター対談
385:更新頻度を保つ
345:@cycle Highriseタグ付け
384:フォントのでっかい文字列
12443:自動化
12442:delete = 削除
12441:less
http://itc.conversationsnetwork.org/shows/detail851.html
12440:（特許電子図書館　初心者向け簡易検索（商標））
いって検索
12179:mask
12709:looks
12178:血流
12708:pknk
12177:the week point in between node hole and thread
12707:autonoding
12176:inner pants
12706:iphone + nodepad + nodepad[[book]]
12175:eat
12705:創造
12174:kairo
12704:集中
12173:drink hot
12029:CRM
12703:一元化されたところへの記録
12172:more than normal. set hot, not warm
12702:それが起こす結果（親ノード）を考える。
それはどんな悪いことと良いことを引き起こす？
12171:foot
12701:砂糖の多い、量の少ないコーヒー
12170:drink
12026:@iPhone call tommorow
12589:textile depot
12700:日常的に[[栄養]]を
12025:motivate iino
12588:プリント（インサツ）
12587:布買う
12586:布*接着
12585:http://www.enuno.com/shopping/outlet01.html#0057
12584:http://www.rakuten.co.jp/takatomi/468479/468482/469941/
12020:more systems in cheaper
12583:レコードバック
12439:まだできあがってない名詞。
だけでいずれできあがる名詞
12582:節制
12438:naming
12581:デザインパターン
12437:アクティベイト
12580:motivation
12436: クレンジング
12435:モイスチャー
12434:Display HasaccessableurlSentences
12433:snapshots
12432:作業の経験
12431:automate manualization
12430:jing
12169:nose spray
12168:mask
12167:はなうがい
12166:moisture
12165:http://toukubo.backpackit.com/pages/1895041
11256:@wait ----------------
     sales
---------------
12164:食事決め
12163:レシピ
12019:design in smaller,
12162:ビタミン錠剤
12018:@wait 商流
12161:梅干しのおかし
12017:attachment直す
12160:みかん
12579:効率
12578:buffer
12577:bcか
backpackか
nodepadでdoneか
xlsで
12576:消し込み法
11667:@wait teller
12575:シナリオ　*　名詞抽出　*　関係化
11666:@wait どうすればコンサルに聞いてみる。いい人いないか聞いてみるの
12574:性的緊張
12573:発火
12429:outsource
12572:モチベ
11663:@wait チーミング
12428:一日予約
12571:PCなノードがすすまないかも
12427:sc
12570:歩いて、もどってくる
11661:@wait どうすれば予算で500万
12426:サービスイン。配置  = deploy
11660:@wait SCかつAC
12425:請求
12424:食事
12423:栄養
12422:places
12421:カナルカフェ
12420:クラスカ
12159:オレンジジュース
12158:塩
12157:5min [[treadmill]]
12156:treadmill 100k
12155:酸
12154:外食
12153:辛
12151:噛む
12150:野菜
12569:コンビニに行く用
12568:外出しながらも作業できるようにする？
ノードを進められるようにする
12567:洗顔と髪
11658:@wait 仕様。メタテスト仕様書に書いてあるものや
パターン抜き出ししてあるものをMECEに改善
12566:andromda
11657:@wait 実績
12565:tomcat
12564:商材
11655:@wait 紹介
12563:情報
11654:@wait 飛び込み
12419:ポンスポンスタ
12562:流れやすい形態
12418:num of purchace of buffer
12561:品質管理者キックオフ
11652:@wait 連絡待ち
12417:cycle 買う
12560:品質管理ランタイム
12416:Add to BuefferList
perfect whip
lightbolves
travelingpad paper
brash
nice clothes
emerald mountain

12415:閾値設定
12414:パーフェクトホイップ
ジェル
コンタクト
バンドエイド
靴下
ブラシ
インナーを2ヶ月に1回
ガム
カクセンとるやつ
パンツを2ヶ月に一回
服を一ヶ月に一回4万（2ヶ月なら8万）
みみせん
鼻スプレー
顔ペーパー
カロリーメート
渋谷で靴
コンタクト
リステリン
歯ブラシ
歯磨き粉
ハム
バナナ
ミルク
トイレットペーパーとティッシュペーパー
皿洗いの戦時亜
電球
夏でもカイロとマスク
12413:購入手段 of each buffer
12412:スパン of buffer決める。
12411:secretary
12299:勇気
12410:g
12298:better_point
12297:どうすればポイント機能する？
12296:楽できるとこ探す
12295:scaleを計算する
12294:横断的効率化
12293:秘書化
12149:肉
12292:Buffer
12148:アペタイト
12291:適材適所
12147:米の飯
12290:オフショア
12146:better_食事
12145:涼しさ
12144:ビタミン剤
ビタミン的なさぷりを取る
12143:食事
12142:飯田君
12141:コーヒー
12140:のどを保護
12559:洗顔
12558:洗顔ブラシ
12557:入力変数　*　閾値　*出力変数
12556:ホテル
12555:カメラ、ブラシ、ヘッドバンド、アコーディングバック、胃薬、風邪薬、コンタクト、ばんそうこ、細 いペン、ラップトップ、下着、長半ズボン、マックのケーブル、iPhoneのケーブル

12554:場所
11645:@wait 信用
12553:日付
12409:communications
12552:チケット
12408:モデリング
12551:ヤフオク？
12407:網羅
12550:@secretary
12406:バッファ
12405:多目的化
12404:自動
12403:モチベーション
12402:ユーザビリティ
9468:どうすればestimate estimate
12401:福利
12289:automate
12400:context base
12288:足を100回ずつ
12287:
11908:@wait 勇気
12286:storyteller
12285:http://toukubo.backpackit.com/reminders
12284:manualize
12283:（basecamp)
12139:make JP tea hot (お茶/30min) and drink 500ml
muffler カイロ
the week point in between node hole and thread
eat  much right now
2重ズボン
set mask
鼻うがい
nose spray

12282:rmilk
12138:睡眠
12281:checkpad
12137:保温
12280:複数を因果するようなものは半固有名詞にnaming。
12136:栄養
12135:医者
12699:印刷する
12134:首 カイロ muffler
12698:[[RuntimeNode]]を記述する
12133:鼻腔を保護
12697:可動的将来
12132:風邪
12696:顧客にとっての価値
12695:ベター >> best
12694:6w 1h
12549:AAC
12693:分割
12548:食事
12692:集団のことなら、現場
12547:カイロ
12691:一点突破
12546:腹巻
12690:要素だけでも網羅する
12545:@cycle 背筋？
12544:あつ過ぎるもの、冷たいもの、アイス避ける
12543:薬
12542:コーヒーは緩いやつ。
12541:辛いものはだめ
12540:よさそうなの買う
12279:ビルドかランタイムか
ビルド
イニシャルコスト
12278:roi.xlsのアップデート
12277:投資飽和しているものはdoneに。
（衛生要因）
12276:着金ノードの結果に高い値を与える
12275:http://localhost/lifehack/roi.xls
12274:ランキング１０位以下のものについてはROIを小さくする。
12273:スケール単位を考える→スケール数を考える→利益単価を考える→イニシャルコストを考える
12129:google  him and find the rss
12272:しょっぱめ
12128:target is not on the Web
12271:　@ジャー
12127:mixi him for the rss
12270:ラップと塩
12126:modeling him  and news around him
12125:疎通 females
12689:なぜだ」を５回繰り返せ』
12124:touch female
12688:ブレインストーミング
12123:more girls
12687:問題を引き起こしている要因
12122:motivate takano
12686:目的検索する
12121:menus and what my custoers can buy
12685:合成か間引きだけでなく、合成かつ間引きをその数が半以上であるというクリエ
イティブ・メソッド。

12120:hosting sales
12684:連想する。語で。
12539:牛乳オッケー
12683:mmの内容をndに
12538:ココアあり
12682:@done 分割をnodeでうまく表す
12537:昇華に悪いものは避ける
12681:検索する
12536:storytellerbase
12680:アイデア系としてキーワードにためてるやつをnodepadからdiggって。とかタグからとか反固有名詞系をtumblrあからdiggって。
12535:triggered by the gps,
check the places near
12534:placesなど、[[構造化]]されたものに
入ってるデータは、[[自動リンク]]できたらいいのだが
9036:@wait どうすればscaleを計算する
12533:Places
12532:[[parklife]]
12531:栄養
9033:@wait どうすればBuffer
12530:投函
9032:@wait どうすれば秘書化
9030:@wait どうすればautomate
12269:白子のり亜フォード
12268:meta
12267:食欲
12266:sleeping
12265:@done 作業にならない問題を避ける
12264:@done less shy ness
12263:@done [[elisatwiceperweek]]
12262:dddd
12118:make tasks more clear and contracted
12261:モテ
12117:nest
12260:sales
12679:ありがとう
12114:nest
12678:mece
12677:ブレイクスルー思考法
http://www.osaka-gu.ac.jp/php/nakagawa/TRIZ/jpapers/2003Papers/BallManual0302/BallManual030301.htm
12676:アイデアマラソンのルールのひとつは「アイデアは人に話せ」。

12111:fukide
12675:問題解決とは、最上級の可能的将来（上極来果）をこのままではやがてくる結果（正面来果）に押し下げる「将来への妨げ」を解消し、正面来果を変えて上極来果を実現することにある
12674:移動中にautonodingを
12529:請求書
12673:motivate unmotivative tasks
12528:見積りしたものから
12672:ルーティン化は、面倒なことをやるのに非常に強力な方法なのです。
12527:TestedSystem
9029:@wait どうすればオフショア
12671: ウォームアップ
12526:@wait sql dupmpfile
12670:体を使ってコントロール
12525:@wait war
12524:SyncToy
12523:@wait server url
12522:ター
12521:better matching of people
12520:team
12259:自信
12258:@wait @keyword [[服を月4万]]
12257:動物性タンパク質
12256:pknked
12255:ハム
12254:abcステーキ？
12253:looks
9430:@wait malta
12252:pknk
12108:this value is ok?
12251:facewash
12107:say lte me do it with 1M yen.
and let me do the hostings for 
10k yen per month.
12250:泡洗顔
12106:@Air highrise api
12669:design
12668:priority == [[プライオリティ]]
12103:10000 yen per month for 3 servers
+ software operations. 1year
8935:@wait どうすれば虫歯治す
12667:[[タスク洗い出し]]
12102:ask to get the hosting service
12666:J2eeStorys月間のプロジェクトごとの作業時間
と提供売上時間
出して、引く
12101:hosting thing it is costing much. the network is ok, so?
12665:http://localhost/superstorytellers/Nouns/CashEvents.xls
12100:gasbooknet
12664:edit
12519:requirement of person
12663:修正ファイル指摘
12518:candidates
12662:変数ピック
12517:history
12661:looks
12516:voice = meru
12660:pknk
12515:ドーパミンと関連づけで効率に
12514:量産
12513:manual
12512:winshot?

12511:ER modeling
12510:PostSentencesOnStoryteller
12399:速さ>早さ
12398:最適なUIと自動化
12397:プログラミング5パー高速化で一ヶ月200万か1億
12396:シリアルとパラレル。
シリアルにしたときのボトルネックを探す
12395:sc金額を得る
12394:期限ごとに
http://localhost/templates/sctemplate.xlt
からやる。
12249:後ろ髪重要
12393:meta
12248:ジェル
12392:食欲
12247:耳出す
12391:ご褒美？
12246:purchace
12390:warmup of the courage
12245:CFを修正する。CashEventsを修正
12244:アカウント画面をアップデートする
http://localhost:8090/en/CashEvents.do
→現在の値、入金の値などを事実にそろえる
12243:コスト減らす
12242:収入増やす
12241:スケジューリング
12240:汚れてない
12659:looks
12658:roi
12657:camp
12656:モテ
12655:sales
12654:自信
12509:story
12653:motivation
12508:Hoge
12652:木曜日のデートの予定入れるを日曜にすける
12507: = Noun
12651:夜のアフォードと
quit earlier
12506:DELETE pattern
12650:better_sleeping?
11741:どうすればestimate
12505:削除リスト
12504:量産
12503:ストーリーテリング
12502:パターンマッチ
12501:因果関係の目的ノードから。
12500:時間割り
12389:勇気の出る読み物
12388:風邪引かない
12387:薄い時がある。
12386:なにか機材に固めてしまう？
12385:コーヒーの質？
12384:@wait 胃が痛くないとき
12239:良い服を数着買う
12383:虫歯治す
12238:髪
12382:@wait 食えるとこ開拓
12237:ラフ、スーツミックス
12381:@wait 食材調達
12236:洗顔
12380:調理方法
12235:顔の筋肉
12234:丈
12233:色
12232:looks
12231:avoid getting [[cold]] AGC
12230:食材調達リストチェック＋不足する可能性のあるものを週次で
12649:食事かも？
11883:@wait どうすればうまくいくときもある。
12648:[[eat]] early
11739:どうすればgas
12647:automate
11738:@wait どうすればthe problem of courage
12646:月額20万
11737:@wait mom
12645:Pattern
8912:@eclipse どうすればteller改善やってない。
12644:checkingtest
12643:tester
12642:sss
12641:全工程
11732:@wait どうすればSC
スケジュール
12640:testdata
12379:@wait storyteller
12378:品質管理？
12377:動物性タンパク質
12376:pknked
12375:Update
12374:cui
12229:checklist
12373:modeling
12228:manual
12372:外出
12227:reminder
12371: @bedroom
12226:http://ja.wikipedia.org/wiki/イビチャ・オシム
12370:栄養
12225:http://www.mother-house.jp/ceo/
12224:http://www.alpha-net.ne.jp/users2/mi2yuki/kakugen/yuuki.htm
12223:http://kotoripiyopiyo.com/2007/10/12.html
12222:ジョブススピーチ
12221:http://www.ouchi.com/archives/2006/03/post_49.html
12220:http://www.mbs.jp/jounetsu/2006/07_23.shtml
11310:生活衛生要因
12639:http://blog.livedoor.jp/vtrstart/archives/50540747.html
12638:loadning
12637:同じ語を使う。
12636:ドメイン駆動
11870:@wait どうすればbetter_食事
12635:storytellinginterview
12634:ui specs and detailes for difficult things
12633:高手
12632:1.temomo
2.kaga
3.gsec
4.m super
5.m secound
6.pai
7.channel
8.ike
12631:mismatchtest
12630:generaltest
11720:@wait どうすればloaning
12369:Sentences
12368:bag
12367:比較と絶対値
12366:谷津君に聞く
12365:探
12364:[[目的検索]]
12219:ドーパミンと関連づけで効率に
12363:中心の移動
12218:ポイント
12362:バッファー、自動化、分解、現状、網羅、逆、
12217:point
12361:目的、選択肢要素、選択肢セット
12216:courage
12360:runtimeの順序替えしてみる
12215:CRM
12214:CRM
12213:https://storytellers.highrisehq.com/login
12212:hosingoptions
{
vitalhosting
mitghty
atlink
nodepad
}
12211:hostinginterview
12210:今週中に見積もり
12629:修正
12097:再投資
12628:仕組み
11719:どうすればhave　self investment 300
12096:広告
12627:一回する
12095:売上
12626:JingedCheckList
12094:利益
12625:ランタイムをモデリング
12093:利益率
12624:オフラインの作業
12623:アドレス長
12622:紹介してもらう人を探す
12090:場所代10万だと一日3000円？食事がそれで抑えられるならそうするほうがいいのではないか。
それもでかすぎる気がする。
1500円に抑えましょう。
4万に。
12621:通知自体が[[通電]]
12620:仕組み
9684:@secretary @wait 食材調達できてる？
12359:質問の仕方を変える
12358:現状、をかく
12357:創造的な考え
12356:ノード自動変換されそうな単語にする。
一般的な名詞化をする
12355:分解的に数える。
人間なら手が二つ。
指が5個。
->modeling
12354:仕組み化
12209:storytellernest
12353:考
12208:webapp
12352:どうすれば
12207:ご褒美
12351:runtime/builttime分離
12206:better
12350:ドーパミンと関連づけで効率に
12205:contextを割り振る
12204:@wait 考える
12203:目的探す
12202:情報集める。
12201:現状のハードデータを出してみる
12200:最終形をイメージ
12619:目的検索と合成
12087:nanki
12618:引いてみる
12086:ask for like 3000yen per month an

12617:frameworks
12085:less sayaka
12616:SCAMPER Questions（出典：『creativity UNBOUND』　※翻訳は筆者ら） 	チェック
Substitute（代える、代用する） 	S1）代用可能な部分はどれか 	
S2）何を代わりに使うことができるか 	
S3）ほかに誰を含めることができるか 	
S4）ほかにどんなグループを含めることができるか 	
S5）代わりにどんなプロセスを使うことができるか 	
S6）代わりにどんなマテリアル（モノ）を使うことができるか 	
Combine（組み合わせる） 	C1）何を組み合わせることができるか 	
C2）ブレンドする（混ぜ合わせる）ことはできるか 	
C3）どんな種類のアンサンブル（取り合わせ）を使うことできるか、創ることができるか 	
C4）部分同士を、どのように組み合わせることができるか 	
C5）目的同士を、どのように組み合わせることができるか 	
C6）アプリケーション（応用方法）同士を、どのように組み合せることができるか 	
C7）マテリアル（モノ）同士を、どのように組み合せることができるか 	
Adapt（適応させる） 	A1）これは、ほかのどのような考えを思い付かせるか 	
A2）何かほかに、これに似たものはないか 	
A3）過去に似た状況はないか 	
Modify（修正する） 	M1）さらにTwist（ひねり、コトの意外な曲折）を加えることができないか 	
M2）その意味あいを、どのくらい変えることができるか 	
M3）色や外形を、どのくらい変えることができるか 	
M4）サウンド（音、騒音、音声）を、どのくらい変えることができるか 	
M5）何を加えることができるか 	
M6）高さ・高度をどれくらい増やせるか 	
M7）重さをどれくらい増やせるか 	
M8）強度をどれくらい増やせるか 	
M9）頻度をどれくらい増やせるか 	
M10）価値をどれくらい増やせるか 	
M11）何を減らすことができるか 	
M12）何を縮小することができか 	
M13）何を簡素化することができるか 	
M14）控えめに言うことができるのは、どんな部分か 	
M15）サイズをどれくらい小さくできるか 	
M16）重さをどれくらい軽くできるか 	
Put to other uses（ほかの使いみち） 	P1）そのままで、何かほかへ使えないか 	
P2）もし一部を変えたら、新たに生まれるほかの用途は何か 	
P3）ほかにどんなマーケットが受け入れるか 	
Eliminate（省略する、除去する） 	E1）何を、取り除くことができるか、省略することができるか 	
E2）ある部分がない時、どうやって実行するか 	
E3）何を犠牲にできるか 	
E4）あげてしまえるものは、何か 	
Rearrange（再調整する） 	R1）ほかに、どんなパターンが使えるか。 	
R2）ほかに、どんな配置が使えるか 	
R3）ほかに、どんなレイアウトが使えるか 	
R4）何を交換できるか 	
R5）何を置換できるか。言い換えられるか。 	
R6）何を、再結合できるか 	
R7）逆にしたらどうなるか 	
R8）上下逆さまにしたらどうなるか 	
R9）内外を裏返したらどうなるか
12084:[[motivate]] takaokaさん
12615:いらんとこはどこ？
12083:photo
12614:比較
12613:数えてみる
11704:@wait 資金調達コンサルについて調査する
12612:量産
12611:効率
12499:stscに電話
12610:better_考える
12498:要件@Noding
12497:RuntimeNode
12496:css
12495:DRY
12494:@magicdraw 
12493:CommonTranslationsを入れる@air
12349:web
12492:関係モデリング
12348:no interupt in daytme
12491:@keyword [[関係modeling]]
12347:hotel代　50000/m
12490:画面仕様　*画面遷移
12346:thestoryteller coding 20h / M ,200000/M
12345:having dddd
12344:DifficultyPointOnSentences
12343:分解
11997:kickoff
12342:preinterview
12341:
リスク表
12340:チェックリストに通す
■チェックリストで自己チェック
漏れやすい機能要件 

セットアップ・インストールプログラム 
データ変換ユーティリティ 
サードパーティ、オープンソースを使うためのラッパ 
ヘルプシステム 
配置モード（リリースモード） 
外部システムインターフェース 
忘れがちな非機能要件 

正確性 
相互運用性 
更新性：ごめん、よくわからないで書いている。 
性能 
移植性 
応答性 
再利用性 
拡張性 
セキュリティ 
生存性（？）：ごめん、よくわからないで書いている。 
利便性（ユーザビリティ） 
これをどのように工数に反映させるのか。
私は定型の手法を持っていない。すまない。
計測できるものならするが、非機能要件などは計測は難しいのだ。
テキトーに実装工数を何倍かしている（1.1倍、とか）。

作業の時間粒度を10時間以内にする。
11990:@wait ask to create a website / ci etc for this nest
12609:忘却
12608:nodepadでの一元化
12607:ミックス
12606:目的
12605:一石二鳥
12604:高roiの検索
12603:美。
12602:lse
12601:スケール

12489:purchase
12600:それぞれの重み。
XLSかmmかndで、点入れてく
12488:ストッパー
12487:物語のゴールまで導いた後に必ず用意してほしいのが、“導入スケジュール”です
12486:美しい
12485:すごいプレゼン
12484:高橋
8751:@wait どうすればテラー改善のスケールが現時点スケールでか、
投資を受けた後でのスケールか。
改善による一回の効率と。
改善投資が営業投資、および客案件を阻害する。周囲からの投資は受けれないなら。。。
改善のためのコスト
12483:でかい
12339:幻想ファクターなくす。悲観的に。最悪のケースは8倍くらいにはなる
12482:口調
12338:タカヤのステンシルへの横線
12481:発火
12337:タカヤ
12480:数字と記号
12336:bubble.ai
12335:designer
11989:@wait ask task as a fixing the rule for burter
12334:iaのwordpress theme
http://themes.wordpress.net/testrun/
12333:余白

11987:@wait meeting_people_is_easy
12332:本から取る

12331:レイアウト

12330:何パターンか作って捨てる
11980:@wait 虫歯と親、でMacBook
12063:qrcode
12060:storytellers
12479:show it with charts
12478:Simple as google
12477:negative check
12476:実績を示す。営業してくれた人にどういうメリットがあるか
12475:何が与えられるか。とその実績。
12474:[[kamoneメソッド]]
12473:今回のご提案は、私ども○○社が一丸となってお手伝いさせていただくものです。社長の○○も、必ずご期待にそえるよう最大限の努力を惜しまないと申しております。メリットを感じていただけたのであれば、ぜひとも私どもにお手伝いさせてください
12329:右揃え*左揃え
12472:mock
12328:すごくいい写真
12471:物語にして売る
12327:作業に見合った写真
12470:はったり（間違いない。絶対だとかいう）
12326:big,
tooooooo bigg
12325:[[font]]
11979:@wait ご褒美？
12324:extremize the elemete
11978:@wait 勇気の出る読み物
12323:本語より外国語のがうつくしい問題とフォントの問題
12322:ステンシル、
12321:cmyk pure colors
11975:@wait 備品と、共通利益的なことについて
12320:イロヌキ
12055:client projects?
12730:栄養
12054:deadlines 
9648:@wait 
☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆
どうすればmeta
☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆
12469:ネガティブチェックする
12468:外見
12467:声質とトーンと音量と誌
12466:モック型営業
12465:新規開拓
12464:show with design and wellmanaged design
12463:プレゼン
12319:margine
12462:会計系
12318:えげつないものそのまま
12461:顧客は何を買うのか。
12317:死をあげつなく。
12460:嘘ついてでも売る
12316:trak2005
12315:サンプルとセットで提示、かつ因果自動提案
12314:時間を圧縮
12313:ピンク、黄色のcmyk原色
12312:画面にとって写真に撮る
11966:AC
12311:絵の具
12199:それ、何を引き起こす？
12310:signtoon
12729:洗顔
12198:おかず
12728:モテ
12197:おにぎり
12727:道でスナップ
12196:のり
12726:ユビキタスキャプチャー
12725: = 名詞
12724:入力変数　*　閾値　*出力変数
12723:洗顔
12047:fukide
12722:looks
12721:pknk
12720:looks
12044:pknk
12043:衛生（顔、紙、体）
11698:どうすればnest
12042:NC栄養
12041:服（外見）
12040:SC
スケジュール
12459:購入
12458:購入
12457:疎通
12456:@magicdraw
12455:AttrPicking
12454:再現指摘
12453:GoalNode
12309:赤と緑
12452:kami
12308:stsc
12451:gmail to rss
12307:原色そのまま。

12450:RSSExport verb
12306:チューブで
12305:光。間接照明。あてて撮影してデザインにするのもあり
12304:写真でとって、それを絵の具で
12303:http://b.hatena.ne.jp/toukubo/design/
12302:シンプリファイ
12301:[[RuntimeNode]]を記述する
12300:CRM
12719:pknk
12718:網羅的にmismatchtest作成
12187:暖かいもの飲む
12717:story + 画面仕様
12186:運動
12716:品質管理チェックリストを提出する
12185:スクワット
12715:品質管理ランタイムを一周一緒にgotoでかonsiteで。
12184:足湯
12714:メタレベルの人のタスクもテストで。
eg:品質管理者なら
[steps to repeat]ユーザー企業の実ユーザーと、経営者様、技術担当者様をが仕様を見る->開発機のURLに行く->全工程を見る
[what expeceted]まったく同様であり、品質に問題がないと思える。

12183:足をあつくする
12039:CRM
12713:KPIを自己設定してもらう。
12182:保温
12038:DC
12712:java
12181:ぬらす
12037:SC（睡眠）
12711:windows
12180:lulu
12036:cycle準拠
12599:noding for both (or all ) of the nodes
12710:mda
12035:roiに準拠
12598:ハンズの白い紙
12034:@done 風邪引かない
12597:神と接着
12596:http://www.i-soleil.com/shoptop.html
12595:シルクスクリーン
12594:布
12593:イラスト
12449:network?
12592:@out ハンズ
12448:keitai
12591:キャス
12447:履歴
12590:モールスキン
12446:パターンマッチング
12445:提案すべき最適なタイミングの検出
12444:提案アルゴリズムの提出
4:編集
8:ノードチェーン
3:コンテクスト
7:現在地
4:編集
8:ノードチェーン
3:コンテクスト
7:現在地
5:自動化
4:#keyword [[DRY]]
3:コードジェネレーション
2:alieas cgn
6:なにか機材に固めてしまう？
4:薄い時がある。
8:エスプレッソマシーン買う
3:コーヒー
7:豆の調達？
7:豆の調達？
6:なにか機材に固めてしまう？
4:薄い時がある。
3:コーヒー
8:エスプレッソマシーン買う
11:毛細血管を拡張
17:最初の予算
16:渋谷
15:ロケーションにchancesは比例するかも
14:近い
13:エスフォルタ
9:departure
8:pknk
10:朝の効率化
31:雨にぬれ合いところ、あつくないところ。
5:風邪予防
4:meet
28:http://karatedo.at.webry.info/theme/cda922f9af.html
3:ジム
27:荷物？
26:プールアル
25:シャツださい
24:ユニフォームいらない体洗わないでいい
23:プールある
22:プールない
21:wowd
20:１万くらい？
19:コナミスポーツクラブ
18:初期費用の重みは？
21:wowd
17:最初の予算
20:１万くらい？
16:渋谷
15:ロケーションにchancesは比例するかも
14:近い
13:エスフォルタ
10:朝の効率化
38:つくってしまうとそれで限度額に問題がでる可能性が。
37:つくってみないとわからんかも。
36:調査する
35:カード作成可能性
34:六本木のあれがよさそう。
9:departure
28:http://karatedo.at.webry.info/theme/cda922f9af.html
8:pknk
27:荷物？
31:雨にぬれ合いところ、あつくないところ。
26:プールアル
25:シャツださい
5:風邪予防
24:ユニフォームいらない体洗わないでいい
4:meet
23:プールある
3:ジム
19:コナミスポーツクラブ
22:プールない
18:初期費用の重みは？
59:better ジム
152:@wait tipnessいく
151:@sun 確認
150:@wait 楽天の印鑑
56:荷物多くてOK
149:ロッカーなしにして持ってく？
55:移動少ない
9:departure
8:pknk
146:払いの問題？
52:@keyword [[better_gyming]]
145:@wait 水忘れない
10:朝の効率化
144:@wait CF
5:風邪予防
4:channelbase
3:ジム
141:食事
140:日に当たらない
119:@home 紙袋もってく
118:@done 荷物はバックにいれとく
43:120000円/年
153:@wait 小宮様
2:http://www.wiredatom.com/steve_jobs_stanford_commencement_speech2.tar.gz
http://b.hatena.ne.jp/entry/http://pla-net.org/blog/archives/2005/07/post_87.html
http://qooqle.jp/?q=ジョブススピーチ
3:PART 1 BIRTH

　ありがとう。世界有数の最高学府を卒業される皆さんと、本日こうして晴れの門出に同席でき大変光栄です。
実を言うと私は大学を出たことがないので、これが今までで最も大学卒業に近い経験ということになります。

　本日は皆さんに私自身の人生から得たストーリーを３つ紹介します。それだけです。どうってことないですよね、たった３つです。最初の話は、点と点を繋ぐというお話です。

　私はリード大学を半年で退学しました。が、本当にやめてしまうまで18ヶ月かそこらはまだ大学に居残って授業を聴講していました。
じゃあ、なぜ辞めたんだ？ということになるんですけども、それは私が生まれる前の話に遡ります。
　私の生みの母親は若い未婚の院生で、私のことは生まれたらすぐ養子に出すと決めていました。
育ての親は大卒でなくては、そう彼女は固く思い定めていたので、ある弁護士の夫婦が出産と同時に私を養子として引き取ることで手筈はすべて整っていたんですね。
ところがいざ私がポンと出てしまうと最後のギリギリの土壇場になってやっぱり女の子が欲しいということになってしまった。で、養子縁組待ちのリストに名前が載っていた
今の両親のところに夜も遅い時間に電話が行ったんです。「予定外の男の赤ちゃんが生まれてしまったんですけど、欲しいですか？」。彼らは「もちろん」と答えました。
　しかし、これは生みの母親も後で知ったことなんですが、二人のうち母親の方は大学なんか一度だって出ていないし父親に至っては高校もロクに出ていないわけです。
そうと知った生みの母親は養子縁組の最終書類にサインを拒みました。
そうして何ヶ月かが経って今の親が将来私を大学に行かせると約束したので、さすがの母親も態度を和らげた、といういきさつがありました。

　　　　　　　　　　　　　　　◆◇◆

　PART 2 COLLEGE DROP-OUT

　こうして私の人生はスタートしました。やがて17年後、私は本当に大学に入るわけなんだけど、何も考えずにスタンフォード並みに学費の高いカレッジを選んで
しまったもんだから労働者階級の親の稼ぎはすべて大学の学費に消えていくんですね。そうして6ヶ月も過ぎた頃には、私はもうそこに何の価値も見出せなくなって
いた。自分が人生で何がやりたいのか私には全く分からなかったし、それを見つける手助けをどう大学がしてくれるのかも全く分からない。なのに自分はここにいて、
親が生涯かけて貯めた金を残らず使い果たしている。だから退学を決めた。全てのことはうまく行くと信じてね。
　そりゃ当時はかなり怖かったですよ。ただ、今こうして振り返ってみると、あれは人生最良の決断だったと思えます。だって退学した瞬間から興味のない必修科目は
もう採る必要がないから、そういうのは止めてしまって、その分もっともっと面白そうなクラスを聴講しにいけるんですからね。

　夢物語とは無縁の暮らしでした。寮に自分の持ち部屋がないから夜は友達の部屋の床に寝泊りさせてもらってたし、コーラの瓶を店に返すと5セント玉がもらえるんだけど
、あれを貯めて食費に充てたりね。日曜の夜はいつも７マイル(11.2km)歩いて街を抜けると、ハーレクリシュナ寺院でやっとまともなメシにありつける、これが無茶苦茶旨くてね。
　しかし、こうして自分の興味と直感の赴くまま当時身につけたことの多くは、あとになって値札がつけられないぐらい価値のあるものだって分かってきたんだね。

　ひとつ具体的な話をしてみましょう。

　　　　　　　　　　　　　　　◆◇◆

　PART 3 CONNECTING DOTS

　リード大学は、当時としてはおそらく国内最高水準のカリグラフィ教育を提供する大学でした。キャンパスのそれこそ至るところ、ポスター1枚から戸棚のひとつひとつに
貼るラベルの1枚1枚まで美しい手書きのカリグラフィ(飾り文字）が施されていました。私は退学した身。もう普通のクラスには出なくていい。そこでとりあえずカリグラフ
ィのクラスを採って、どうやったらそれができるのか勉強してみることに決めたんです。
　セリフをやってサンセリフの書体もやって、あとは活字の組み合わせに応じて字間を調整する手法を学んだり、素晴らしいフォントを実現するためには何が必要かを学ん
だり。それは美しく、歴史があり、科学では判別できない微妙なアートの要素を持つ世界で、いざ始めてみると私はすっかり夢中になってしまったんですね。

　こういったことは、どれも生きていく上で何ら実践の役に立ちそうのないものばかりです。だけど、それから10年経って最初のマッキントッシュ・コンピュータを設計する
段になって、この時の経験が丸ごと私の中に蘇ってきたんですね。で、僕たちはその全てをマックの設計に組み込んだ。そうして完成したのは、美しいフォント機能を備えた
世界初のコンピュータでした。
　もし私が大学であのコースひとつ寄り道していなかったら、マックには複数書体も字間調整フォントも入っていなかっただろうし、ウィンドウズはマックの単なるパクりに
過ぎないので、パソコン全体で見回してもそうした機能を備えたパソコンは地上に1台として存在しなかったことになります。

　もし私がドロップアウト(退学)していなかったら、
　あのカリグラフィのクラスにはドロップイン(寄り道)していなかった。
　そして、パソコンには今あるような素晴らしいフォントが搭載されていなかった。

　もちろん大学にいた頃の私には、まだそんな先々のことまで読んで点と点を繋げてみることなんてできませんでしたよ。だけど10年後振り返ってみると、これほどまたハッキ
リクッキリ見えることもないわけで、そこなんだよね。もう一度言います。未来に先回りして点と点を繋げて見ることはできない、君たちにできるのは過去を振り返って繋げる
ことだけなんだ。だからこそバラバラの点であっても将来それが何らかのかたちで必ず繋がっていくと信じなくてはならない。自分の根性、運命、人生、カルマ…何でもいい、
とにかく信じること。点と点が自分の歩んでいく道の途上のどこかで必ずひとつに繋がっていく、そう信じることで君たちは確信を持って己の心の赴くまま生きていくことができる。
結果、人と違う道を行くことになってもそれは同じ。信じることで全てのことは、間違いなく変わるんです。


　　　　　　　　　　　　　　　◆◇◆

　PART 4 FIRED FROM APPLE

　２番目の話は、愛と敗北にまつわるお話です。
　私は幸運でした。自分が何をしたいのか、人生の早い段階で見つけることができた。実家のガレージでウォズとアップルを始めたのは、私が二十歳の時でした。がむしゃらに働いて
10年後、アップルはガレージの我々たった二人の会社から従業員4千人以上の20億ドル企業になりました。そうして自分たちが出しうる最高の作品、マッキントッシュを発表してたった
1年後、30回目の誕生日を迎えたその矢先に私は会社を、クビになったんです。
　自分が始めた会社だろ？どうしたらクビになるんだ？と思われるかもしれませんが、要するにこういうことです。アップルが大きくなったので私の右腕として会社を動かせる非常に
有能な人間を雇った。そして最初の1年かそこらはうまく行った。けど互いの将来ビジョンにやがて亀裂が生じ始め、最後は物別れに終わってしまった。いざ決裂する段階になって取
締役会議が彼に味方したので、齢30にして会社を追い出されたと、そういうことです。しかも私が会社を放逐されたことは当時大分騒がれたので、世の中の誰もが知っていた。
　自分が社会人生命の全てをかけて打ち込んできたものが消えたんですから、私はもうズタズタでした。数ヶ月はどうしたらいいのか本当に分からなかった。自分のせいで前の世代か
ら受け継いだ起業家たちの業績が地に落ちた、自分は自分に渡されたバトンを落としてしまったんだ、そう感じました。このように最悪のかたちで全てを台無しにしてしまったことを
詫びようと、デイヴィッド・パッカードとボブ・ノイスにも会いました。知る人ぞ知る著名な落伍者となったことで一時はシリコンヴァレーを離れることも考えたほどです。 
　ところが、そうこうしているうちに少しずつ私の中で何かが見え始めてきたんです。私はまだ自分のやった仕事が好きでした。アップルでのイザコザはその気持ちをいささかも変え
なかった。振られても、まだ好きなんですね。だからもう一度、一から出直してみることに決めたんです。

　その時は分からなかったのですが、やがてアップルをクビになったことは自分の人生最良の出来事だったのだ、ということが分かってきました。成功者であることの重み、それがビ
ギナーであることの軽さに代わった。そして、あらゆる物事に対して前ほど自信も持てなくなった代わりに、自由になれたことで私はまた一つ、自分の人生で最もクリエイティブな時
代の絶頂期に足を踏み出すことができたんですね。
　それに続く5年のうちに私はNeXTという会社を始め、ピクサーという会社を作り、素晴らしい女性と恋に落ち、彼女は私の妻になりました。
　ピクサーはやがてコンピュータ・アニメーションによる世界初の映画「トイ・ストーリー」を創り、今では世界で最も成功しているアニメーション・スタジオです。

　思いがけない方向に物事が運び、NeXTはアップルが買収し、私はアップルに復帰。NeXTで開発した技術は現在アップルが進める企業再生努力の中心にあります。ロレーヌと私は一緒に
素晴らしい家庭を築いてきました。

　アップルをクビになっていなかったらこうした事は何ひとつ起こらなかった、私にはそう断言できます。そりゃひどい味の薬でしたよ。でも患者にはそれが必要なんだろうね。
人生には時としてレンガで頭をぶん殴られるようなひどいことも起こるものなのです。だけど、信念を放り投げちゃいけない。私が挫けずにやってこれたのはただ一つ、自分のや
っている仕事が好きだという、その気持ちがあったからです。皆さんも自分がやって好きなことを見つけなきゃいけない。それは仕事も恋愛も根本は同じで、君たちもこれから仕
事が人生の大きなパートを占めていくだろうけど自分が本当に心の底から満足を得たいなら進む道はただ一つ、自分が素晴しいと信じる仕事をやる、それしかない。そして素晴ら
しい仕事をしたいと思うなら進むべき道はただ
一つ、好きなことを仕事にすることなんですね。まだ見つかってないなら探し続ければいい。落ち着いてしまっちゃ駄目です。心の問題と一緒でそういうのは見つかるとすぐピン
とくるものだし、素晴らしい恋愛と同じで年を重ねるごとにどんどんどんどん良くなっていく。だから探し続けること。落ち着いてしまってはいけない。

　　　　　　　　　　　　　　　◆◇◆

　PART 5 ABOUT DEATH

　３つ目は、死に関するお話です。
　私は17の時、こんなような言葉をどこかで読みました。確かこうです。
「来る日も来る日もこれが人生最後の日と思って生きるとしよう。そうすればいずれ必ず、間違いなくその通りになる日がくるだろう」。それは私にとって強烈な印象を与える
言葉でした。そしてそれから現在に至るまで33年間、私は毎朝鏡を見て自分にこう問い掛けるのを日課としてきました。「もし今日が自分の人生最後の日だとしたら、今日やる
予定のことを私は本当にやりたいだろうか？」。それに対する答えが“NO”の日が幾日も続くと、そろそろ何かを変える必要があるなと、そう悟るわけです。
　自分が死と隣り合わせにあることを忘れずに思うこと。これは私がこれまで人生を左右する重大な選択を迫られた時には常に、決断を下す最も大きな手掛かりとなってくれま
した。何故なら、ありとあらゆる物事はほとんど全て…外部からの期待の全て、己のプライドの全て、屈辱や挫折に対する恐怖の全て…こういったものは我々が死んだ瞬間に全て、
きれいサッパリ消え去っていく以外ないものだからです。そして後に残されるのは本当に大事なことだけ。自分もいつかは死ぬ。そのことを思い起こせば自分が何か失ってしま
うんじゃないかという思考の落とし穴は回避できるし、これは私の知る限り最善の防御策です。
　君たちはもう素っ裸なんです。自分の心の赴くまま生きてならない理由など、何一つない。

　　　　　　　　　　　　　　　◆◇◆

PART 6 DIAGNOSED WITH CANCER

　今から1年ほど前、私は癌と診断されました。 朝の7時半にスキャンを受けたところ、私のすい臓にクッキリと腫瘍が映っていたんですね。私はその時まで、すい臓が何かも知らなかった。
　医師たちは私に言いました。これは治療不能な癌の種別である、ほぼ断定していいと。生きて3ヶ月から6ヶ月、それ以上の寿命は望めないだろう、と。主治医は家に帰って
仕事を片付けるよう、私に助言しました。これは医師の世界では「死に支度をしろ」という意味のコード（符牒）です。
　それはつまり、子どもたちに今後10年の間に言っておきたいことがあるのなら思いつく限り全て、なんとか今のうちに伝えておけ、ということです。たった数ヶ月でね。そ
れはつまり自分の家族がなるべく楽な気持ちで対処できるよう万事しっかりケリをつけろ、ということです。それはつまり、さよならを告げる、ということです。

　私はその診断結果を丸1日抱えて過ごしました。そしてその日の夕方遅く、バイオプシー（生検）を受け、喉から内視鏡を突っ込んで中を診てもらったんですね。内視鏡は
胃を通って腸内に入り、そこから医師たちはすい臓に針で穴を開け腫瘍の細胞を幾つか採取しました。私は鎮静剤を服用していたのでよく分からなかったんですが、その場
に立ち会った妻から後で聞いた話によると、顕微鏡を覗いた医師が私の細胞を見た途端、急に泣き出したんだそうです。何故ならそれは、すい臓癌としては極めて稀な形状
の腫瘍で、手術で直せる、そう分かったからなんです。こうして私は手術を受け、ありがたいことに今も元気です。

　これは私がこれまで生きてきた中で最も、死に際に近づいた経験ということになります。この先何十年かは、これ以上近い経験はないものと願いたいですけどね。

　以前の私にとって死は、意識すると役に立つことは立つんだけど純粋に頭の中の概念に過ぎませんでした。でも、あれを経験した今だから前より多少は確信を持って君たち
に言えることなんだが、誰も死にたい人なんていないんだよね。天国に行きたいと願う人ですら、まさかそこに行くために死にたいとは思わない。にも関わらず死は我々みんなが
共有する終着点なんだ。かつてそこから逃れられた人は誰一人としていない。そしてそれは、そうあるべきことだから、そういうことになっているんですよ。何故と言うなら、
死はおそらく生が生んだ唯一無比の、最高の発明品だからです。それは生のチェンジエージェント、要するに古きものを一掃して新しきものに道筋を作っていく働きのあるもの
なんです。今この瞬間、新しきものと言ったらそれは他ならぬ君たちのことだ。しかしいつか遠くない将来、その君たちもだんだん古きものになっていって一掃される日が来る。
とてもドラマチックな言い草で済まんけど、でもそれが紛れもない真実なんです。
　君たちの時間は限られている。だから自分以外の他の誰かの人生を生きて無駄にする暇なんかない。ドグマという罠に、絡め取られてはいけない。それは他の人たちの考え方が
生んだ結果とともに生きていくということだからね。その他大勢の意見の雑音に自分の内なる声、心、直感を掻き消されないことです。自分の内なる声、心、直感というのは、
どうしたわけか君が本当になりたいことが何か、もうとっくの昔に知っているんだ。だからそれ以外のことは全て、二の次でいい。

　　　　　　　　　　　　　　　◆◇◆

　PART 7 STAY HUNGRY, STAY FOOLISH

　私が若い頃、"The Whole Earth Catalogue（全地球カタログ）"というとんでもない出版物があって、同世代の間ではバイブルの一つになっていました。
　それはスチュアート・ブランドという男がここからそう遠くないメンローパークで製作したもので、彼の詩的なタッチが誌面を実に生き生きしたものに仕上げていました。
時代は60年代後半。パソコンやデスクトップ印刷がまだ普及する前の話ですから、媒体は全てタイプライターとはさみ、ポラロイドカメラで作っていた。だけど、それはまるで
グーグルが出る35年前の時代に遡って出されたグーグルのペーパーバック版とも言うべきもので、理想に輝き、使えるツールと偉大な概念がそれこそページの端から溢れ返っている、
そんな印刷物でした。
　スチュアートと彼のチームはこの”The Whole Earth Catalogue”の発行を何度か重ね、コースを一通り走り切ってしまうと最終号を出した。それが70年代半ば。私はちょうど
今の君たちと同じ年頃でした。
　最終号の背表紙には、まだ朝早い田舎道の写真が1枚ありました。君が冒険の好きなタイプならヒッチハイクの途上で一度は出会う、そんな田舎道の写真です。写真の下にはこんな
言葉が書かれていました。「Stay hungry, stay foolish.（ハングリーであれ。馬鹿であれ）」。それが断筆する彼らが最後に残した、お別れのメッセージでした。
「Stay hungry, stay foolish.」　それからというもの私は常に自分自身そうありたいと願い続けてきた。そして今、卒業して新たな人生に踏み出す君たちに、それを願って止みません。

Stay hungry, stay foolish.

ご清聴ありがとうございました。

2:=======================================
2006年12月27日
東窪
=======================================

1. プロジェクト期間:1/9～4月末。
3月末に1次リリース。4月末にオプション機能のリリース。
これはユーザの業務等の都合による。

他ベンダへの見積り依頼（提案依頼）と比較などを経て
予算、機能、期間が明確になっている。

規模は4.5人月程度。

2. 機能概要
業務改善系のウェブアプリケーション。
今回の必要要件は特にSE・PMの技能・作業。
状況に応じてプログラミングや開発環境整備などの技術作業も行う。
要件定義、仕様作成、設計、スケジュール管理、予算管理、客先との交渉など。

パイオニアのマニュアルを作成しているパイオニア関連会社での
資料管理アプリケーション。
パイオニアのマニュアル作成工程の進捗管理システム。


3. 言語、環境
php。納品先にperl/phpの技術者がいるため、
こちらとの相性を重視して、php利用が決まっている。
linux。特に現状はFedora Core 6を想定。
postgres,apache,php5の利用。
開発環境のosは問わない。

java,vb/.net系、ruby等の提案は難しい？
->提案を受け入れる姿勢は顕著にあるので、
リーズナブルであれば可能性としてはあるらしい。


4.既存のシステム
いまのところ既存システムというべきものはない。
紙で行っている業務をウェブアプにする。


5. 規模、予算
PG3人月程度、SE1人月程度。4-5人月程度の規模。


6. 場所拘束
・最低2日程度。多いほどのぞましい。
・PGはヴァイタルサービス社内で開発。SEとPGとのコミュニケーションはSEがヴァイタルサービスや
　オンライン、電話などで行うという形になる。


7. 開発手法
・特にいまのところ制限はない。提案可能。
・イタレーションも可能。
（1週間、2週間と期限をきめて、動いているシステムを提出。
　フィードバックを先方からいただきながら進めていく形）


8. フレームワーク、ツールの利用について
・phpでのOSS などのフレームワークの提案も可能ですか？
→基本的にはありえる。


9. 納品物の運用とメンテナンスについて
・運用マニュアルを納品する。
・運用はユーザの開発局などがマニュアルを参考に行う。
・障害発生時や運用に問題がある場合などは都度相談。


10.ハードウェア
・ハード調達はユーザが行う。すでに調達が済んでおり、データセンタか
らのラックレンタルの形態をとっている。
・RAIL0+1をしたマシンを2台。これは上述の大きく分けた二つの業務に対応する。
・アクティブユーザ数などは未定。


11.要求定義について
手書き・テクストベースの、簡単な要求定義的な資料をいただいている。
機能仕様レベルではないよう。


12.ドキュメントの作成
機能仕様等以外に、成果物として必要資料の指定がありますか？
候補としては
1.マニュアル（マニュアル的な機能仕様を作るということもありえます）
2.UMLなどの統一規格ではない技術仕様書
3.UMLでの技術仕様書


昨今、技術ドキュメントは技術者でなければ理解できないし、
技術者ならばコードとデータベース構造と画面仕様程度の方が扱いやすい、
といった点を踏まえて、コード中心で、データ仕様などの仕様レベル以上の
ものは作らない、というケースが増えてきています。


→基本的には不要とのこと。こちらからの提案は可能。
東窪は、技術仕様書（データベーススキーマとER図）があれば、ドキュメントは不要だと考えています。



==================================


5:システム開発基本情報インタビュー
14:odeskインデザイン
13:インデザインできる人シュフティ？
12:インターン？
9:編集
11:それにも画像が必要で画像がない？
8:画像のリストを作る
10:記事のリストを作る？
7:direction
6:@voice コンテクストを吹き込み
5:データ
4:依頼できる状態に
3:シュフティ
4:J2eeStorys月間のプロジェクトごとの作業時間
と提供売上時間
出して、引く
8:[[タスク洗い出し]]
3:スケジューリング
7:priority == [[プライオリティ]]
6:ノーディング　== noding
22:短納期、roi、スケール、タイミング、AC
5:[[タスク洗い出し]]
4:priority == [[プライオリティ]]
3:スケジューリング
2:スケジュール
18:Meta.nd
5:利益率
4:費用削減
3:スケールメリット
2:自動クロール(RSE)にいい。
3:ウェブのスコアリング
5:そのうちやらなくていいこと
4:作業の全部のリストをエバーノートで
3:スコープ
9:ロールのリスト
11:プロジェクトテンプレートに書く
7:線引
10:BCのTODO
6:やること
6:すけ汲む
5:１６か７じ
4:仕事外
3:スタバ
2:startup
1:スタートアップ
4:能動的な方法
3:ストッパー
7:タイマー
15:暖房
4:ストッパー起床
3:食べ物亜フォード
バッファ
チョコ 
コーヒー 
水
栄養ドリンク 
アフォードプラン 
9:五感をなめる
12:栄養
8:光見る
2:stream
4:ストリーム
4:story
3:ストーリー
2:ドメインドリブン
3:storyteller == ストーリーテラー
4:名詞リストとコネクション。因果配置
3:モデリング　+ RuntimeNodeing作成
2:ストーリーテリング
1:スーパーコネクター
4:つながりの可視化
3:名刺の後にいろいろやるようにする
2:FBなどで探す
19:@done pknk
18:リズム刺激
16:ラベンダー
15:トリプトファン食事
14:トリプトファンがほうせん核に入るを補助
26:分子整合医学
13:ブドウ糖
25:@done 咀嚼
12:@done ほうせん核
7:活性化
11:@done ちょっとした時間
23:１日所要量（成人）はトリプトファン　300mg、フェニルアラニン＋チロシン　1,140mg 
6:大量の電気信号
10:セロトニン
5:首を動かす
21:貧乏ゆすり！
4:首回し
20:@done 深呼吸
3:トリプトファン
4:Sentences
3:センテンス
4:sales
3:セールス
5:
アンテナ機能がある。
rss機能がある。
ブログビュー機能がある。
パブリック機能はない。
シェアーされている。（メールが）
メールが誰に対して送られたものも検索可能である。
これはつまりサーチ窓集中性を高めることにもなる。
ダブルクリックエディットと保存
wiki的にかいてける文法
RecentChangesなど。
インクリメンタル検索がないのは痛い。
3:メールのインテグレーションだ。
2:[[ソシオテクスト]]のインテグをするために分析した。

6:RTによる投資という形式
5:投資の概念の援用（閾値）
4:発火のコントロール（RT）
3:動的な注意
9:cupidz
2:より断片化
1:ソーシャルビルド
97:見せるか。
48:@wait 実績もお金払ってもらう
47:仕事斡旋紹介
93:相互評価
109:額縁入れて出したやつを
友達に
108:オフラインなbの共有
45:ネットワークの意味を通知させる
91:TACもLIKEする。
107:コースの共有
44:商流（お仕事）は横もたてものつながりが産みますを言う
106:入会
43:出会いの発生の外部流出
42:出会いの発生
151:URLを付与して通知
104:ナウネスフィルター
41:参加の可視化
68:RTableなどで登場できるようにする
67:小さくする
66:マッチング発生の可視化
19:素晴らしい判定
8:競争力が特にない
129:オフラインスペースフィルタ
65:マッチングがあるところに仕事が流れる
18:runtime
7:抱えている問題
128:マッチングとｓの通知
64:人が要るところに仕事は流れる
17:wwwwwh的なもの
6:出会いで強化
127:外部流出
126:フィルター
62:試験費用
125:流量
124:物語フィルター
60:発表することが重要ですといって。
13:仕事のほとんどは
123:他のひととかポストとかが見えるわけだが、その時にそのひとが
・共通の知人とかだったらフィルタして、出す。
12:現場での出会いの創出
122:可愛い・カッコいいLikeチーム
121:すご目のLikeチーム
120:友達とか含めて1000ライク集まったら会社に紹介する。
87:実務能力者
149:今現場にいる人のとかがモニターに写ってる
86:雇用担当者
148:受付美女
85:広告
147:回転率
84:BEFOREアフターとか

146:Fフィルタ
36:交流会的なもの＋WWWWWH
145:FoFフィルタ
144:ソレ以外のものはストリームでほぼリアルタイムで
81:TACとかと同じフロア（空間的隔たりがない）か、グリーンくらいで区切られている
に作る？
80:ウェブ業界はこういう楽しいところなのだよ感
142:自分に対してのものはキューに入る
32:人材獲得単価
141:URL付きで
31:売上
140:FBでの中での出会いもストリームに通知
30:数
119:LIKEインターフェイスとコメントインターフェイス。
コメントにも
118:ゴールとコースの可視化
55:多目的化
117:友達に応援してもらおう
54:マネタイズ？
116:物語の共有と
投資の共有
53:人材募集ネットワークに通知？
115:目的フィルター
51:@wait オフショア学習コース
113:交流会とセミナーとWWWWWH
50:自社サイトを激安なら学生にやらせて
見てもいいよというところを
探してそれを実際にやってみらもらう。
112:パーティー
139:学習スペース
29:受託
138:Likeを集めて仕事をもらおう状態。
75:拡散
137:参加
74:デザインと額縁に入れる感じで脚色してLIKEしたくなるようにする
27:実績
136:教材や教育やラーニングの自動化
73:友達にLIKEしてもらいましょう。
26:雇用
135:漏れ出させるには？
72:リファラルプログラム。かなり値引き。
134:着手とかを
133:制作物を。
70:人を集めている雇用担当者とか、凄い人とかを集める
132:義務化
131:その先の物語があるのであるという図？
21:素晴らしい雇用
130:卒業生とか社会人とか
20:素晴らしい人材候補
1:ダブルバインド
4:風呂はいるか、飯空過。
3:
2:どっちかに倒す
11:見積もりと時間の入力。rbmに
5:効率化
4:時間の資源の感覚
8:iphoneとか
3:タイマー
6:時間割り
5:因果関係の目的ノードから。
4:パターンマッチ
3:タイミング
6:タギング
5:タグ
2:タグ。カテゴリではなくてタグ。
タグは情報を限定する、絞り込むために基本的には使える。
しかし「特別タグ」「special tag」は、動作にかかることができるようになる。
　
たとえば日記は新しい順に出すかもしれない。
たとえばpublicタグとprivateタグとで、booleanを表現する
Modelに構造としてもっていたものがタグになる。
すると？


4:@wait TaskTemplates
3:タスクテンプレート
5:タスク洗い出し
6:分解
4:touch
3:タッチ
7:肉
6:チーズ
3:タンパク質
12:適量
8:米
11:乳酸菌とタンパク質
15:ヨーグルト
6:チーズ
12:適量
3:タンパク質
11:乳酸菌とタンパク質
19:能率
18:時間
8:米
17:風邪
16:AC
7:肉
6:@done 株で貰えるならそうして、ほかは貰う
4:@done ACさける　＋　僕分はもらう
14:
3:@done ターバッファー
13:@done 株式の配布に現金のやり取りがなくていいのか。
必要そう。
会社設立後に株式化する
8:@done ガスのは僕で請求する
4:chceklist
3:チェックリスト
3:チーム
6:team
5:チーム化
6:ブースト
4:自動化
3:ツール
34:@done keep all the tasks assigned.
33:@done CPM
49:automate and workflow,tool
48:hire many as possible
30:@done breaking
47:task number check.
46:@done hiring more from america
45:@done check
44:@done #aa0000 CP break
43:@done 247days_chain
59:@done good director ratio ( more dirs )
58:@done director ratio
40:@done CP finding
57:@done director availability
56:@done direction response
54:@done serial speed
51:@done CP mark
50:better_direction
8:https://toukubo.backpackit.com/pages/2673924-direction
65:better_visualization
7:pm
64:@done noding
16:@done paralellize
62:@done basecamp2elance
4:direction
15:test
3:ディレクション
14:quality
60:@done understanding, and quality
13:speed
29:@done task visualization
11:@done in time
28:@done hiring document generation
27:@done hire from competition
26:@done fit ness
25:@done hinting
24:direction cost
23:@done earlier
39:@done assign critical path terminals
22:@done cheaper
38:@done CP terminal mark CPT mark
37:loose coupling
36:no too many tasks to one person
35:@done dunassigned tasks
4:director
3:ディレクター
3:デザイン
6:design
3:[[css]]でデザイン底上げ]]
レベルまでいっとくと[[ROI]]があがる。
[[底上]]なもの。
2:4444
3:デストラベル
2:deploy
1:デプロイ
4:demo
3:デモ
4:比較と絶対値
3:データ
4:比較と絶対値
3:データ
7:data
2:あいうえおw
2:queueなどがある。
データ構造とアルゴリズムセットで、
パターンランゲージとして扱うじゃん。
データ構造はドメイン駆動のドメイン部位なんだから、
データ構造に対して可能なパターンをもっとけばいいんだ。
アルゴリズムパターンとデータパターンがあって、
データ構造に対してパターンがありうる。
detail-vp-listパターンというのもあるし
detailパターンというのもあり、vpパターンというのもあり、listパターンというのもあり、
turnflagパターンというのもある。
criteriaテンプレートや、選択パターン。（リストから選択する）とか。
queueなら、メッセージ（よくあるメールパターン）をつかう。

16:重い？
15:電源？
9:数字を入れる
14:外での常時接続
8:NODE作業
13:外でのネット安定
7:CONSとPROS
12:月5000円経費削減
6:比較作業
11:iphone5とmini
5:考える作業
20:時間
10:Numbers icloud
4:なくさない
3:イーモバなくす
19:充電作業軽減
18:すぐに作業や、でかい端末でもできるようになる
3:テスト
6:test
4:storyteller
3:テラー
2:template
1:テンプレート
6:自動化　== [[オートメーション]]
5:業務アプリケーション作成
4:シナリオ陳述
3:ドメインドリブン
2:storyteller == ストーリーテラー
4:trigger
3:トリガー
2:treadmill
1:トレッドミル
3:ハード運用
15:snsで４００万か
2:見積り
14:追加機能。
結構多そう。二百万くらいか。
13:極一般的な機能=二百万
追加機能は随時追う相談。
12:50万程度
11:デザイン
10:ソフト
9:巡回など
7:管理画面？
6:ハード
5:開発
17:オークション。で二百万とかでは・
4:ソフト運用
7:類似した構造を取り出す
10:自由文
6:ノードパッドでコネクトされてるものは
かなりの確立で「よく構造化されている」
のでよく自動化されうる
4:モデリングを自動化しつつ、
自由文のインプットに対して自動化
3:トータルにモデリング
12:ボット
11:インターネット
3:ナプキンテスト.storyteller
6:ナプキンテスト
7:ビジネスモデル
6:さらに、本計画は、現状のものに匹敵する数兆円規模の「市場創出」を可能にし、
このトップシェアをも獲得する可能性がある。
中小企業に対するカスタマイズシステム開発というロングテールな大市場の創出である。
中小は、大企業から差異化されたビジネスプロセスを存在の前提としている。
しかし同時に大企業と匹敵する自動化と効率性を必要としている。
「手作りならば可能な差異化」と「パッケージに近しい安価」の両立を果たす我々の仕組みと
ツールのセットは、これらを現状、少なくとも日本では唯一提供できる。
5:技術者代替性（スケール）と先端技術の両立という奇跡についてわかりやすく
4:システム開発は自動化、つまり劇的な効率化をもたらす。顧客である企業群にもたらす最大の価値は、自動化にあり、効率化にある。
企業が求めるものは二つあり、一つは効率化であるが、それだけでは足りない。
もう一つは、差異化である。
この本来相反する。
システム開発にも、2種がある。パッケージと、手作りでの開発である。
パッケージソフトウェアは、ソフトウェアはコピーが可能であるという点で、非常に安価であり、安価に自動化、すなわち効率化を顧客に提供する。しかし差異化ができない。
手作りでの開発は、パッケージウェアとは比較にならない、膨大な金がかかる。しかし差異化はできる。企業はほかと同じ自動化を買うのでは勝負できないから、膨大な金を払って「差異化しつつ効率化する」ことを実践している。
このことに気づいているシステム開発会社が少なくとも日本には我々以外に存在しない。
気づいただけでなく、上記の「パッケージ」と「手作り」の両立できる技術を作り、企業に、
パッケージウェアを作るに準じる安価な「効率の購入」をご提供し、かつ同時に
「ほかの企業が導入している自動化とは全く違う自動化されたプロセス、すなわち差異化された
自動化を、手作りの1/10といった原価で実現できる仕組みを作った企業は世界で我々だけである。
3:ナプキンテスト.storyteller
9:市場規模：
社団法人 電子情報技術産業協会（JEITA）ソリューションサービス事業委員会（委員長：伊藤大挙・富士通総研）の予測
　　システム開発：5兆3,850億円
　　　　内訳：SI開発（コンサルティング、システムインテグレーション）：2兆4,189億円(前年度比94％)
　　　　　　ソフトウェア（アプリケーションパッケージ、ミドルウェア）は7,689億円(前年度比112％)、
　　　　　　アウトソーシング、その他サービス（ハード・ソフトメンテナンス、その他）は、2兆1,972億円(前年度比107％)

情報・通信分野の市場調査機関、ミック経済研究所による二〇〇七年についての予測が
　　システム開発：前年比5.6％増の7兆4616億円（52.7％）。
　
※上JEITAは調査対象としてJEITA情報システム部会参画会社、
　計11社（一部推定値を含む）
　　セイコーエプソン、沖電気工業、シャープ、東芝、日本IBM、日本電気、
　日本ユニシス、日立製作所、富士通、松下電器産業、三菱電気
をのみから出している数値なので、後者の7兆円5000億に対して3-7%などの増加推移をしている市場だといえます。
この市場が10年間で減少する可能性は非常に少ないものだと予想します。
8:ショートバージョン。
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
システム開発の市場をターゲットとしています。
規模は年間7.5兆円。毎年3-7パーセントの増加推移をしてきて今後も安定が予想される市場です。
この市場を分析しますと、
システム開発が顧客企業にもたらす価値は、自動化、つまり劇的な効率化をもたらします。
しかし企業はこれと「差異化」、という通常は背反する価値を同時に求めます。
市場の7割を示る手作り開発と、3割を占めるパッケージ販売は、はどちらかのみを実現しています。
我々はこの二つを同時に実現する仕組みとツールを開発し、
すでに、実験的に数千万程度の売り上げの実績を作りました。
これは、手作りシステム開発の原価額が1/2～1/5という、
パッケージ販売に遜色ない対相場の優位性を持ち、ここから営業利益率40％といった
システム開発業界の平均の10倍近い値を示すという実績でもあります。
5:技術者代替性（スケール）と先端技術の両立という奇跡についてわかりやすく
4:システム開発は自動化、つまり劇的な効率化をもたらす。顧客である企業群にもたらす最大の価値は、自動化にあり、効率化にある。
企業が求めるものは二つあり、一つは効率化であるが、それだけでは足りない。
もう一つは、差異化である。
この本来相反する。
システム開発にも、2種がある。パッケージと、手作りでの開発である。
パッケージソフトウェアは、ソフトウェアはコピーが可能であるという点で、非常に安価であり、安価に自動化、すなわち効率化を顧客に提供する。しかし差異化ができない。
手作りでの開発は、パッケージウェアとは比較にならない、膨大な金がかかる。しかし差異化はできる。企業はほかと同じ自動化を買うのでは勝負できないから、膨大な金を払って「差異化しつつ効率化する」ことを実践している。
このことに気づいているシステム開発会社が少なくとも日本には我々以外に存在しない。
気づいただけでなく、上記の「パッケージ」と「手作り」の両立できる技術を作り、企業に、
パッケージウェアを作るに準じる安価な「効率の購入」をご提供し、かつ同時に
「ほかの企業が導入している自動化とは全く違う自動化されたプロセス、すなわち差異化された
自動化を、手作りの1/10といった原価で実現できる仕組みを作った企業は世界で我々だけである。
3:ナプキンテスト.storyteller
9:市場規模：
社団法人 電子情報技術産業協会（JEITA）ソリューションサービス事業委員会（委員長：伊藤大挙・富士通総研）の予測
　　システム開発：5兆3,850億円
　　　　内訳：SI開発（コンサルティング、システムインテグレーション）：2兆4,189億円(前年度比94％)
　　　　　　ソフトウェア（アプリケーションパッケージ、ミドルウェア）は7,689億円(前年度比112％)、
　　　　　　アウトソーシング、その他サービス（ハード・ソフトメンテナンス、その他）は、2兆1,972億円(前年度比107％)

情報・通信分野の市場調査機関、ミック経済研究所による二〇〇七年についての予測が
　　システム開発：前年比5.6％増の7兆4616億円（52.7％）。
　
※上JEITAは調査対象としてJEITA情報システム部会参画会社、
　計11社（一部推定値を含む）
　　セイコーエプソン、沖電気工業、シャープ、東芝、日本IBM、日本電気、
　日本ユニシス、日立製作所、富士通、松下電器産業、三菱電気
をのみから出している数値なので、後者の7兆円5000億に対して3-7%などの増加推移をしている市場だといえます。
この市場が10年間で減少する可能性は非常に少ないものだと予想します。
12:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx


事業概要：企業がシステムに求めるのは
　　　「効率＝業務自動化」と「差異化」の二点です。
　　　現状のシステム導入はパッケージ販売導入と独自開発の二種があります。
　　　ソフトウェアはコピーできるため、企業は「安価な効率化」としての
　　　パッケージを購入することが多い（市場の半分はパッケージ購入）です。
　　　しかしパッケージウェアでは、差異化がなくなります。
　　　パッケージウェアは業務を規定してしまい、内部的な業務が同一である
　　　二つの企業が、優位な製品を作り出すことは非常に困難です。
　　　システムを深い理解で取り入れている企業は、内部の業務プロセスと外部への販売や
　　　外部からの仕入れが連結していることも理解しており、
　　　全社のシステム≒業務システムが包括的に効率化されていつつ、
　　　さらに同時にこれが競合企業様と違うものであり、優れていることを求めています。

　　　これまでにこの「独自のプロセスを効率化するシステム」は手作りで提供されてきました。
　　　弊社のコア技術は、独自のシステムの開発を、従来の1/3程度の原価で生産する、
　　　「システムを作るシステム」です。
　　　独自のコードジェネレーション技術を開発し、人工知能的にお客様のご要望を解釈し、
　　　半自動的にシステムを作り上げます。
　　　パッケージ製品は業務を規定してしまいますが、コードジェネレーション技術は
　　　業務は自由に変化させ、その業務（データの流れ）に対して
　　　必要な一般的な機能を自動で作成する、というものです。

　　　コードジェネレーションは、建築のツーバイフォーににています。
　　　領域で急速に主流になった、組立可能な部品を最適な粒度で用意し、
　　　輸送して組み立てるだけ、という方法ににています。
　　　手作りでもなく、もう立ち上がっている家やビルを買うのでもない、
　　　新しい開発手法です。

　　　英語圏では弊社の技術と類似した、原始的なものがシェアを拡大しています。
　　　しかしながら英語圏を席巻しているこの技術は、先端的にすぎ、
　　　使える技術者が少ないため、従来技法や技術者との軋轢もあり、
　　　圧倒的な効率にもかかわらず、市場による採用（投資）の速度にかげりがでています。
　　　弊社で開発した技術は、これに対する重要な変更をしたものです。
　　　
　　　九十九パーセントの技術者が手作りでつくったものと
　　　まったく同じシステムが「おおむね」できあがっているという仕組みです。
　　　納品物（お客様に買っていただくシステム）も、手作りで
　　　作ったものとまったく同様のものであるため、先端技術を使うことによる
　　　圧倒的な開発効率というメリットを享受しつつ、先端技術と旧技術との間に
　　　ありうる軋轢というデメリットを消すことに成功しています。

創業者について：
　　　創業の特徴は領域横断性にあります。上記技術を独力で開発し、
　　　また、一般的なプログラマーとしての技術力は世界トップレベルであると
　　　グーグルや国連等の一戦で活躍する技術者からもいわれており
　　　日本の総務省の「天才プログラマー」認定プロジェクトに
　　　天才プログラマーとして認定されたメンバーがチームにおりますが
　　　彼らから天才といわれる技術力があります。
　　　しかしながらむろ、特徴は万能性であり、技術力も一例といった形になります。
　　　それぞれの領域に非常に深い専門性がありながら、音楽、文学、哲学、
　　　芸術、経営、経済、美術、ファッション、ブランディング、広告、
　　　デザイン、スポーツ、語学、認知科学や脳科学についてあります。
　　　見識があるというレベルではなく、音楽作品はCDになっていて
　　　メジャーに活躍中の友人たちから「もったいないからITもわかるけどそれやめて
　　　音楽作ってくれ」といわれたりもし、ファンも多数います。
　　　
　　　小説作品がブログで一日で千アクセスされたり、露出を意図してもいない
　　　草稿的なブログ記事がアルファブロガーランキングに他薦されていて、
　　　気づけば四百人もの購読者がいることに半年後に気づいたり、
　　　理系の技術者とは一線を画したファッションやデザイン・美の領域の
　　　評価能力と制作実績があり、現代美術などで活躍する友人たちにも
　　　作品自体に評価をいただいていますが、プログラマーであることを知らせると
　　　食いつなぎの間に合わせの仕事だと思われますが、技術領域では
　　　スター技術者として客先にいけば技術顧問へのお誘いなどが高い確率で
　　　きたりといった感じです。
　　　サッカーなどでは幼少期から天才といわれて、中学では百人の部員を
　　　率いて部長をつとめ、高校では1年にしてクラブチームにて都二位を経験しました。
　　　（むしろJリーグなどに入っていく本当のスポーツの天才たちにコテンパンに
　　　された経験こそ一万人に一人しかできないものだと考えています）
　　　語学的には、国際連合大学のメディアスタジオなどに6年非常勤で勤務し
　　　実務レベルの英語を習得しており、現在もインドオフショア技術者の
　　　管理責任者として直接に英語でのやりとりをしています。
　　　特に英語習得に時間を割いていませんでしたが、大学入学の時点で英語が
　　　話せるようになっていました。
　　　また受験期には統一模試などで英語で十三万人中同立1位になるなど
　　　努力をさほどせずに秀才的な能力といいますか勉学で高い点を取れる点では
　　　ほとんどどの領域でも能力を発揮します。
　　　ファッション本も、小説も、プログラミングの技術本も、英語の本も、
　　　ビジネス書も、哲学書も、ワールドカップも、かいつまむような形でなく
　　　自分の領域として読みこなせる点が特徴です。
　　　こうした領域横断性からなにが出るかは、
　　　周囲にはある種独特の期待感を抱かせていることは知っています。
　　　天才というか、神みたいだ。とか、
　　　天才には会ってきたが、歴史に残りそうなのは初めてだ、とか。


　　　人格については、父が大手企業のスタートアップ的な重役になっていた
　　　中、五歳の時に父が交通事故で倒れたことに
　　　由来する一般的なストレスが、自分を強くしたと思います。
　　　なによりも片親として母の手で育てられた中で忍耐や愛、冷静さ、
　　　それと同時に成り立ちうる愛のような、普通の環境ではなかなか
　　　考え及ばないものが自分の中には日常的にあるのだということは
　　　意識するようになりました。
　　　自分を特徴付けるのは天才性だと思いますし周囲からもそういわれて
　　　育ちましたが、環境がうぬぼれることを許しませんでした。
　　　才能を上回るギフトであったとも思っています。
　　　死を生きる生の中で天才であることを引き受けることと、
　　　全体の中で行き過ぎず謙遜しすぎず、最適な位置にいるべきだという
　　　投資論的な客観性を持つようになりました。
　　　この中で、自分は気づける（0から1にもできる）し、
　　　1から10といわず100にもできる（自分と能力分布の似た父がそうしたように）
　　　という感覚から、社会の恒常性を維持しつつも、それに対する定率の
　　　イノベーションという部位に、換金できない投資資源として携わる、つまり
　　　スタートアップの創業や、それに対する投資家という立場は最適なのではないかと考えています。
　　　本件以外にもたくさんのインベンションとイノベーションシーズが自分の中から
　　　出てきたことに、偶然ではないものも感じています。


ハンズオンについての見解：
　　　ドラッカーなどを中心に、経営書やマーケティングについても技術者には
　　　ないくらい読み込んでいると考えておりますが、むしろ彼らの思想にもあるように
　　　経営は技術チーフや創業と一致する必要はなく、そうでない方がうまくいきやすいという
　　　論も多数あり、本件でもそうした方針を持つ可能性が高いです。
　　　当面の間は自身が代表を務めることが最適かと考えていますが、その場合にも
　　　経営の経験と知識をご提供いただく形式が最適であると考えておりました。

　　　しかしながら技術経営は、投資家的な経営洗練からしても、もっとも適合性の
　　　悪い領域であるかとも考えています。

　　　しかし昨今の新技術の経営は投資家的な経営洗練からも、
　　　もっとも扱いにくい領域だという認識もあります。
　　　日本からは情報企業と投資とのセットでの成功はいくつか見られますが
　　　技術によった「情報技術」としてのIT企業の成功例が見つからないのは
　　　この点にも問題があるかもしれません。
　　　日本の投資家が、当時日本で唯一世界レベルの技術力を持っていた
　　　ライブドアの細部を全く関知できなかった世紀の
　　　投資ミスなどの前例をみてきました。
　　　日本にて技術イノベーションを行う難しさの中で
　　　大変失礼な言い方、かつ挑戦的な言い方になってしまうこと承知でいいますと
　　　私の本プランもシリコンバレーの技術スタートアップとおそらく同様に
　　　投資家を選びます。

　　　本案件は大志と熱意ありきというよりはコア技術領域での発見、シーズと
　　　その初期的実用と収益性の確認、売り上げの実績が先に立ち、
　　　創業者として私にどれほどの度胸があるかははっきりとはわかりません。
　　　万能に生まれていながら数年かけて技術の最深部に潜った点は
　　　身投げにも近い度胸と熱意があったのかなとも自己分析しています。

　　　on the same boatという言葉にかかる重みについても考えています。
　　　創業者は自身の技術イノベーションを過大にも過小にも評価したくありません。
　　　適切に使えば大きなイノベーションとなるようだ、と考えています。
　　　逆に、推測の正しさに基づいて進めるたとして、発見はしかるべき効率を
　　　企業に与え、利益をもたらしますが、しかしこれは独占されるべきものではありません。

　　　技術の適用市場スケールにぴったりと収まり、それ以上欲張っては弊害だという
　　　地点まで拡大した時点でコモディティー化させ、
　　　こちらの特許的独占的利益ではなく社会に溶けていくべきだと考えています。
　　　一方で、その地点までは、技術シーズをよく理解し、「自分たち以外は育てられないから」
　　　という意識で、独占的に発見を隠蔽し経営していける必要があると思っております。

　　　そういう道すら視野に入れてらっしゃる投資家様とならば
　　　進んでいけるだろうと考えています。

　　　ボートだと思っている下には地球という宇宙のボートがあって
　　　みなが乗り合わせており、沈没するときは一緒であり、
　　　うまくその彼らに自身が見つけたやリ方を見つけて手渡し、
　　　それに対する感謝分のみを発見者や初期関与者が得るという
　　　発見に関しての新しい資本主義を実践したいと思っています。

big whyについて：
　　　先に述べましたが、Osamuさんと同様に、自身はある意味では投資家に
　　　向いていると思います。特に技術のイノベーションを見定める能力は
　　　投資家になった場合はその中では日本随一のレベルになりえるかもしれません。
　　　適切でマネージされた変化を管理する主体になることが僕が
　　　本案件を成功させて自身に資金を得たい理由です。


8:ショートバージョン。
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
システム開発の市場をターゲットとしています。
規模は年間7.5兆円。毎年3-7パーセントの増加推移をしてきて今後も安定が予想される市場です。
この市場を分析しますと、
システム開発が顧客企業にもたらす価値は、自動化、つまり劇的な効率化をもたらします。
しかし企業はこれと「差異化」、という通常は背反する価値を同時に求めます。
市場の7割を示る手作り開発と、3割を占めるパッケージ販売は、はどちらかのみを実現しています。
我々はこの二つを同時に実現する仕組みとツールを開発し、
すでに、実験的に数千万程度の売り上げの実績を作りました。
これは、手作りシステム開発の原価額が1/2～1/5という、
パッケージ販売に遜色ない対相場の優位性を持ち、ここから営業利益率40％といった
システム開発業界の平均の10倍近い値を示すという実績でもあります。
7:ビジネスモデル
6:さらに、本計画は、現状のものに匹敵する数兆円規模の「市場創出」を可能にし、
このトップシェアをも獲得する可能性がある。
中小企業に対するカスタマイズシステム開発というロングテールな大市場の創出である。
中小は、大企業から差異化されたビジネスプロセスを存在の前提としている。
しかし同時に大企業と匹敵する自動化と効率性を必要としている。
「手作りならば可能な差異化」と「パッケージに近しい安価」の両立を果たす我々の仕組みと
ツールのセットは、これらを現状、少なくとも日本では唯一提供できる。
2:2:8の比率になること。
処理の20パーセント程度が8割の処理を行うこと。
コードのうち20パーセントが80パーセントのループで、実行回数の80パーセントを締める。
ループのうちの20パーセントがほんとに大事な処理となる。


2:a
2:http://ja.wikipedia.org/wiki/Getting_Things_Done
1:ネクストアクション
2:エントロピを小さく保つためのツールかな。
ネゲエントロピは秩序のうちの一つと考えるべきかも。
部屋が汚れているのでそれを片付けるシステムというのが
4:noding
3:ノーディング
4:priority
3:prioritiseを自動化
2:ノードパッド = nodepad
2:ノードパッドサジェスト 06:12
グーグルサジェストとかと同じ発想（はてなにもいいんでしょうね。）

　

ノードパッドは自動リンクがある。

自分で、あとにためるにあるような新しい概念（あるいは半固有名詞）を自作しておいて
（そういうことをしているひとはクリエイティブシンカーの中には多い）、
そいつについてノードパッド的に因果記述をしたり、自然文で類似を書いたりしておく
（！ああー。O_O ！
類似は自然文で書く。
因果はノード連結で書く。これだ。
もうノードパッドは神になるべくすべてを誘引してるかのようだ。
・・・そして類似はパターン。パターンランゲージ）

ほいでそれぞれのキーワードは、新しく作られるノードにおいて、
その語が登場すると児童リンクするんだけど、
（自動リンクはほんとに、めちゃくちゃ面白い。次世代のアプリケーションにはあっというまに流行るとおもう
。誓います。ぼくが始めにいいマシたんで流行ったら・・・よろしく。
でも本当に便利。これはもうほんとクリエイティブプログラマーな人たちはどんどん自作アプリに投入していって、どんどん社会を変えましょう。
これはドライブします。世界をまわしますよ。なんのためにかはしらないがね。）



自動リンクするとして、この自動リンク候補をサジェストするというのはよさそうだ。ちょっとくどいかな。
ブレストモード、のときはいいかも。問題解決とブレストは発想と拡散・・・

4:priority[[自動]]計算
3:ノードパッドに自動で価値計算をさせる
2:ノードパッドに重力を持たせる
5:修正
4:バグを直す
3:バグ
4:debug
3:バグを直す
5:予算
4:budget
3:バジェット
2:リンク先*リンク元*リンク元の質
3:バックリンク
1:バック軽量オーガナイズ
4:clouddb
3:バッチアップデート
3:効率
7:Buffer
2:バッファ
2:データへ、制限を適用するように促すこと。
制限をインがするためのもの。
5:バリデーション
6:github
4:git
3:バージョンコントロール
1:バーター
5:交換の割合？
8:在庫
32:ほかは？
29:女
31:ダッチは？
28:人
30:あの子以外は？
27:@wait シート
26:@wait 場所
25:@wait 購入する？
24:@wait パイ自体
23:@wait 手伝ってもらう
22:@wait パイ用意
49:@wait シャツを何着かもっていく？いらないやつ。
19:@Onthego ハット買う
20:@wait 風呂
18:@wait かみ
46:@purchase 誰かもってるか電話する。
17:@wait 汚れないようにする
45:@wait 集合後にすればいい
5:@wait パイなげ
42:@secretary １００均一で当日高別府
 hand whip
3:パイ先生
41:@wait 持ってるやつ＋
いくつか
37:@wait 蒲田で問題あるか？ないかも。
やろう。
36:@wait 汚物処理
35:@wait 着替え
34:@wait 体
4:Pattern
3:パターン
6:Images And Description Of Verb
5:codegen
3:パターンピッカー？
2:パターンマッチング
6:習慣
4:脳
3:パターンマッチ
2:パターンマッチング==patternmacthing
3:[[パターンピッカー]]
4:#wait #keyword [[ニハチ]]
3:別名　ニハチ
2:パレートの法則。2:8の法則。
別名　ニハチの法則。
状況から来
2:快密度と快頻度。
コスト＝投資と効果（快修正）
2:party
1:パーティー
6:プレゼンする
5:告知する
4:募集する
3:パーティーシェア
2:affordable
1:ハム
6:打鍵数
5:タイピングをとめない
4:
3:ハンズフリーキット
7:チャリーン
2:着手のゴールの可視化 x　参加の可視化 x 速度の可視化 x 素晴らしい着眼による問題（ゴール）と解決のセットの可視化。参加インターフェイス。
1:ビジュアライズドメトカーフ
6:小さく砕いて少量っつ取る
5:アフォード
4:ビタミン剤
3:ビタミン
7:マルチビタミン
6:サプリ
5:レッドブル
4:ビタミンドリンク
3:ビタミンＣ
8:過酸化水素
6:repeat?

4:ブランディング。
3:ビッグスケールにデザイン

7:営業代替？
2:video
1:ビデオ
1:ピッチ
3:My company, __(insert name of company)__, is developing __(a defined offering)__ to help __(a defined audience)__ __(solve a problem)__ with __(secret sauce)__.


2:事業計画を嘘ついてでも３０秒のテンプレートにしたもの。
4:wireflaming中に、あるいは稼動中のウェブ画面において、
選択項目のうち不用で削除できるものを、
印刷して、赤線引いていく。
3:#keyword [[ユーザビリティ]]
2:ユーザーの意思決定にかかる時間は、選択行為におけるエントロピー量に比例する。
4:洗顔ブラシ
3:ブラシ
7:洗顔
4:信用
3:ブランド
6:アイデア
5:出し切る
4:否定しない
3:ブレインストーミング
2:
[[ブロークンウィンドウ]]現象といっていた。
エントロピの増大とそれを処理する量の増大の関係について。
5:[[チーム化]]できる
6:ブースト
2:プライオリティ＝=priority
27:[[kamoneメソッド]]
53:designers
24:何が与えられるか。とその実績。
52:graphics and meta messages
23:実績を示す。営業してくれた人にどういうメリットがあるか
51:choosing the messages
22:negative check
49:picking the issue
48:* RUNTIME***
19:Simple as google
50:runtime noding on their process.
47:
18:show it with charts
8:数字と記号
7:プレゼン
44:資料
15:発火
14:口調
4:でかい
3:高橋
41:相手に直接的な利益、売上などをもたらす
楽しい。モチベートできる。
創造的。
2:すごいプレゼン
11:美しい
38:リンクはフルーツ
37:イメージをきちんと用意する
34:物語のゴールまで導いた後に必ず用意してほしいのが、“導入スケジュール”です
2:あらかじめ、ツールをインストールしておく。という方法。mtとかなんでも。dev的なものに。
2:[[Upload]]　[[Pattern]] [[ファイルアップロード]]
2:フォント事態が底上げだけど
細いフォント使うとそれで簡単に綺麗っぽくなれる。
2:書く人にインセンティブ
3:フォークソノミー
7:家
6:習慣
5:afford
4:アフォード
3:フルーツ
8:どうすればフルーツ家に追い解けるか
4:flow
3:フロー
2:ペアプログラミング。
によって更新されたペアの使いかたをもっと拡張してはどうか。
4:被志向性
3:ペアプロ
6:looks better
4:美容師の手法を覚える
3:ヘアサロン

7:experiment
1:ボディースプレー
12:num of purchace of buffer
11:cycle 買う
10:Add to BuefferList
perfect whip
lightbolves
travelingpad paper
brash
nice clothes
emerald mountain

9:閾値設定
8:パーフェクトホイップ
ジェル
コンタクト
バンドエイド
靴下
ブラシ
インナーを2ヶ月に1回
ガム
カクセンとるやつ
パンツを2ヶ月に一回
服を一ヶ月に一回4万（2ヶ月なら8万）
みみせん
鼻スプレー
顔ペーパー
カロリーメート
渋谷で靴
コンタクト
リステリン
歯ブラシ
歯磨き粉
ハム
バナナ
ミルク
トイレットペーパーとティッシュペーパー
皿洗いの戦時亜
電球
夏でもカイロとマスク
7:購入手段 of each buffer
6:スパン of buffer決める。
3:Buffer
2:ボディースプレー供給
5:バランス計算
13:nodepadアップデート
2:ボトルネック発見
12:作業のqueue
8:入れやすいところから入れる
＋ずらす
1:ボトルネック
11:enterable
5:バランス計算
16:cfsafe enterables
2:ボトルネック発見
1:ボトルネック
13:nodepadアップデート
12:作業のqueue
8:入れやすいところから入れる
＋ずらす
11:enterable
7:ランタイムのそれぞれのデータについて
発生後の処理までの平均日数が1.5日を超えたものをNGとする。
10:それぞれの重み。
XLSかmmかndで、点入れてく
4:balance
9:比較と絶対値
8:それぞれのデータの検出
1:ボトルネック発見
11:noding for both (or all ) of the nodes
4:point
3:ポイント
4:point
3:ポイント
19:targetとthredhold
18:RuntimeNode
17:css
16:@magicdraw
15:AttrPicking
14:再現指摘
9:@wait シナリオ　*　名詞抽出　*　関係化
13:GoalNode
8:画面仕様　*画面遷移
12:シナリオ　*　名詞抽出　*　関係化
7:モデリング　+ RuntimeNode作成
11:modeling
6:量産
10:nodepad
5:ストーリーテリング
21:points
4:自動化、システム化する
20:Update point
3:ポイントカード.buildtime
4:物理的に
3:ポイントカード
7:[[ポイントカード.buildtime]]
2:ツタヤトキョー六本木のこと。
4:hokkairo
3:ホッカイロ
2:3週間単位くらいのスケジュール
1:マイルストーン
2:new
5:dddd
1:マッサージ
4:winshotで
8:manualize
3:スナップショットつける
7:マニュアル
2:タスク、ノードの逆向きだ。
1:マネタイズ
6:売上利益
5:キャピタルゲイン
9:バーター
2:薄利
4:suppli
8:レッドブル
3:マルチビタミン
7:ビタミンドリンク
2:参加
1:メカトーフの法則
7:システム
6:Edison
5:ヤツ
4:design
3:
2:Good
1:メタ
6:content
5:contact info
4:mail / phone / skype / goto / see / basecamp / generate rss * readers
3:@iPhone teleblah
2:message
1:メッセージ
6:選択
5:デザイン
4:レイアウト
3:文章
9:
2:図版
1:メディア
2:投資 x 可視化
1:メトカーフ
4:mail
3:メール
4:mail
3:メール
2:メール
1:メール化
4:Motivation
3:モチベーション
2:UI designer
1:モックアップ
5:storyteller
4:mock
3:モック型営業
15:形態素解析　*　名詞のみ作成
20:senario
2:トータルモデリングというのを思い出した。
なにかとモデリングしとけというもの。
トータルモデリング＋andromda＋mdadevは凄いかも。
これに、バッファの考えをもって、
なにかとmdaqueueをqueueとしてもっとくというのが凄いかも
14:メカブ
13:その手のツール
12:自動名詞抽出
11:[[Noun]]
10:画面仕様　*画面遷移
9:シナリオ　*　名詞抽出　*　関係化
26:
7:モデリング
19:modeling

23:modeling
16:outsource
2:http://closeduser.auctions.yahoo.co.jp/jp/show/mystatus?select=won
1:ヤフオク
7:ソフマップなどに売る
5:関係が綺麗
4:友達に売る？
3:ヤフオクで売る
8:マッチング代行
11:auction
39:20分＝2000円
19:
9:make two node
29:日本語外注
38:文章１分
18:中古で売るという選択肢が出る
8:それぞれの重み。
XLSかmmかndで、点入れてく
28:外注
37:売り物が５個以上になる
17:しない
7:compare
27:
36:写真１分
16:販売する
6:noding for both (or all ) of the nodes
26:評価を
35:アップ1分
15:purpose nodes and thread
5:比較
25:すごいヤフオクランタイム
34:取引連絡1分
14:点数付け
24:
33:箱用意
13:セット作成。
3:検討
23:すごいヤフオク販売
32:梱包3分
12:エクセルに
22:時間短縮
31:発送3分
11:merit
21:[[時間]]かかる
30:FFR
10:demerits both what happends
20:試しやすくなる
4:UbiquitousCapture
3:ユビキタスキャプチャー
10:kit
6:デザインパターン
5:ユーザビリティ
9:意識コスト
2:ユーザによるウェブ画面の利用価値を高めるよ
11:wf
5:タンパク質
4:乳酸菌
3:ヨーグルト
9:@Search ヨーグルト定期購入
11:oisix
8:費用対効果
10:定期購読の安いやつと意識コストと比較
7:ヨーグルトを定期的に
6:定期的に

27:@wait 試してみる

26:@wait purchase the values
25:@wait ヤフオク？
24:@wait Buffer
23:@secretary
22:@wait AAC
21:@wait purchace
20:@wait purchase
19:@wait 購入
9:@wait 暗いことが多い
18:@wait 光をレフれる？
8:@wait レフ
17:@wait 軽いのニコ持つ
16:@wait 軽い
6:@wait 顔がかっこ良く
15:@wait 一個のでニコに入る
5:@wait ソーシャルにライティング
14:@wait トリガー
13:@wait 大丈夫なタイミングで

3:@wait ライティング

12:AC
11:@wait 目に入る
10:@wait ソーシャル
28:@wait 舞ちゃん嫌がらなければ
4:runtime
3:ランタイム
5:モデリング
4:ランタイム
3:ランタイムをモデリング
4:requesttest
3:リクエスト
10163:教育制度
10159:g
10162:ブランディングと広告
6763: [[fof]]
10158:調査
10157:技術者交流会
10156:デブサミ
10155:mixiやいいとこならブログで
10154:ナンパ
10153:市場に出ないのを避ける
2:リクルート
10151:オフ会主催
5:資本
4:資源
3:リソース
4:reminder
3:リマインダー
4:reminder
3:リマインド
7:web
10:highrise
6:マーケティング
5:コネ
4:客の一覧
3:リード
4:リード
3:リード開拓
4:looks
3:ルックス
5:routine
4:grep ルーチン
3:ルーチン
5:routine
4:grep ルーチン
3:ルーチン
3:ルーチン改善
39:cycle 買う
38:Add to BuefferList
perfect whip
lightbolves
travelingpad paper
brash
nice clothes
emerald mountain

37:閾値設定
36:パーフェクトホイップ
ジェル
コンタクト
バンドエイド
靴下
ブラシ
インナーを2ヶ月に1回
ガム
カクセンとるやつ
パンツを2ヶ月に一回
服を一ヶ月に一回4万（2ヶ月なら8万）
みみせん
鼻スプレー
顔ペーパー
カロリーメート
渋谷で靴
コンタクト
リステリン
歯ブラシ
歯磨き粉
ハム
バナナ
ミルク
トイレットペーパーとティッシュペーパー
皿洗いの戦時亜
電球
夏でもカイロとマスク
35:購入手段 of each buffer
40:num of purchace of buffer
34:スパン of buffer決める。
27:ルーチンを一覧にして、横断的に、バッファーできるか、横断できるか、自動にできるか、人に触れるかを考える
33:効率
26:仕組みで何があがる
32:Buffer
25:仕組み
19:考
31:buffer
24:一回する
18:どうすれば
30:バッファ
23:JingedCheckList
17:runtime/builttime分離
22:モデリング
16:better
21:ランタイムをモデリング
15:改善
20:仕組み化
14:量産
13:機械
9:砕く
12:storyteller
11:自動化
10:自動
2:第三者で公平性
1:tkp
2:レヴィットの発想は真似した法が良い。
統計。因果抽出の達人。

14:献立
3:レシピ
10:提案アルゴリズムの提出
7:自動化
6:http://toukubo.backpackit.com/pages/1895041
5:忘却
3:基本的には食材配達のものは切らしてないということにするべきでは。
2:冷蔵庫の食材でできるレシピを自動的に提案する
1:レシピシステム
17:ウェブで買う
16:買ったものから
15:冷蔵庫にある食材の検出
14:
21:[[デプロイ]]する。[[開発機]]に。
13:履歴
12:パターンマッチング
11:提案すべき最適なタイミングの検出
3:因果検証
15:ノードの検証
20:記録
2:レビュー
13:ノードにする。
12:時間と単価
11:金額コスト
10:時間
9:メタリソース量
8:頻度
6:快密度
5:roi値（ノード値

17:pmc会議 1
pmcsmコーディング 4
sh  4
cms 2
９日にのみ。.7
彼女の飲み。.7
d .7
unu２回1
UNUの実際のコーディング1
トロイカ見積り
fuji 1
導入会議とか導入1
服とかルックスとか
16:何してたか。
1:レベニュー
6:outsource as entry point
3:レベニュー資料
2:投資原理利用
2:報酬と投資のバランス
1:レベニューシェア
4:log
3:ログ
1:ログイン
3:twitter
2:oauth
4:SSHログ監視
3:ログ監視
5:StorytellerRole
4:ロール
1:ワークフロー
4:workflow
3:請求に当たって、必要な資料を出す。
1.システムのコード。
2.利用しているコンポーネント
3.作ったテストケース
4.データ仕様書（スキーマーとER図)
4:list
3:一覧
65:@wait 借りる方
50:基本、賃貸させるのがいい。
64:@home という話をする。
79:@meeting そうおじちゃんにいう
109:@wait 見積もりもらう。
108:@wait それも頼む
62:@done より合計収益が増える
107:@wait まるさんにリニューアルしてもらう
61:賃貸契約をする作業の洗い出し。
106:業者の選定
60:@done 平米数を10落として、間仕切りなしの部屋。
105:@wait たてかえ
賃料３５くらい、
オフィス仕様
の３点を業者に伝える
72:今後の不動産関係の効率化
102:電気の容量をあげるには？
116:ペット可能
71:CRM

101:オフィスでかせるようにする。
115:オフィス仕様。間仕切りなし気味。
100:オフィスでかす
114:金額、～25万
113:@wait info@daiichi-shouji.com
97:@home めるあどもらう
112:用件を出す。
111:引っ越す
95:早めに見積もりもらいたい＋早くなればその分は払う。10日早くなるんら3万は払う。
94:@wait メールアドレスだけ渡しておけばいいかな。連絡先を渡す
35:@wait グレード高く、マジきりない場合、
グレード低く、間仕切りある場合
49:早いほどいい。
33:@wait 情報集める。
48:@wait 鎌田は貸してフキデ貸す。
さらに賃貸で借りるが、間仕切りなしの
部屋にして平米数は8以上落とす。
68平米とか。
32:@wait 一応面会して名刺は渡しておく。
44:@done ここからは出る
59:@done 住居としての家には、近くていい＋家には間仕切りがなくていい
58:@done 小さくていい。7万とかでいい。
42:@done 収入に対するミスマッチを解消する
57:@done 僕も事務所借りる
41:早く決めないことで、一日5000円の損失
56:@done 鎌田は貸したい。
55:@done 8パーの年利はキープしたい
53:@wait 差額5万～のとこ探す
66:@wait 間仕切りないやつのがいい。＋66平米くらいか。金額決まってから。
51:@done まあまあいいとこには住みたい。
65:@wait 借りる方
50:基本、賃貸させるのがいい。
64:@home という話をする。
79:@meeting そうおじちゃんにいう
109:@wait 見積もりもらう。
108:@wait それも頼む
62:@done より合計収益が増える
107:@wait まるさんにリニューアルしてもらう
61:賃貸契約をする作業の洗い出し。
106:業者の選定
60:@done 平米数を10落として、間仕切りなしの部屋。
105:@wait たてかえ
賃料３５くらい、
オフィス仕様
の３点を業者に伝える
72:今後の不動産関係の効率化
102:電気の容量をあげるには？
116:ペット可能
71:CRM

101:オフィスでかせるようにする。
115:オフィス仕様。間仕切りなし気味。
100:オフィスでかす
114:金額、～25万
113:@wait info@daiichi-shouji.com
97:@home めるあどもらう
112:用件を出す。
111:引っ越す
95:早めに見積もりもらいたい＋早くなればその分は払う。10日早くなるんら3万は払う。
94:@wait メールアドレスだけ渡しておけばいいかな。連絡先を渡す
35:@wait グレード高く、マジきりない場合、
グレード低く、間仕切りある場合
49:早いほどいい。
33:@wait 情報集める。
48:@wait 鎌田は貸してフキデ貸す。
さらに賃貸で借りるが、間仕切りなしの
部屋にして平米数は8以上落とす。
68平米とか。
32:@wait 一応面会して名刺は渡しておく。
44:@done ここからは出る
59:@done 住居としての家には、近くていい＋家には間仕切りがなくていい
58:@done 小さくていい。7万とかでいい。
42:@done 収入に対するミスマッチを解消する
57:@done 僕も事務所借りる
41:早く決めないことで、一日5000円の損失
56:@done 鎌田は貸したい。
55:@done 8パーの年利はキープしたい
53:@wait 差額5万～のとこ探す
66:@wait 間仕切りないやつのがいい。＋66平米くらいか。金額決まってから。
51:@done まあまあいいとこには住みたい。
7:いくらか
6:うる
5:シュミレーションするしかない
4:売るべきか賃貸すべきか
3:ビューハイツは生命保険で充当してない。
購入額は3000万くらい？
湯河原の売価2800万購入金額4500万
ビューハイツの平成15年時点での残額：500万
頭金2000万
9:いくらで貸せるか見積もる
*何月売れるか見積もる
＊一年間当たりの維持コスト見積もる。
8:いくらで売れるか見積もる
6:バックに
5:@done 封筒
4:@wait 請求書印刷
3:@wait 投函
7:
27:budget
26:予算
24:iphone nodepad + nodepad本
48:創造
23:nodepadでの一元化
47:集中
46:一元化されたところへの記録
21:歩行中の記録
45:better_考える
20:@done 座位
19:歩行中
9:忘却
17:MECE
16:記録
40:ビルドかランタイムか
ビルド
イニシャルコスト
39:複数を因果するようなものは半固有名詞にnaming。
38:投資飽和しているものはdoneに。
（衛生要因）
37:roi.xlsのアップデート
3:中心の移動
36:着金ノードの結果に高い値を与える
33:@wait ACバリッドを得る→現在保有金額＞4ヵ月後までの生活費投資金額。80万が口座にある状態
32:@wait Acvalidかどうか知る
29:roi
30:@wait アカウント画面をアップデートする
http://localhost:8090/en/CashEvents.do
→現在の値、入金の値などを事実にそろえる
28:@wait AC
7:錠剤
10:gum
6:ヨーグルト
5:チーズ
4:腸
3:乳酸菌
2:affordable
1:乾燥
14:ナッツ
13:プロテイン
12:風邪
9:米
11:能率
8:乳酸菌とタンパク質
10:肉
7:適量
6:チーズ
5:タンパク質
4:栄養
3:乾物
15:fiber
4:budget
3:予算
2:SS
3:事実化
17:営業外注
16:技術者経由
15:販路獲得計画
29:広告プラン
14:信頼できるデータ統計
13:競合
12:潜在市場
26:@secretary 人員計画、組織計画、
39:、複数の視点でチェック
11:成長性
25:開発、生産計画
38:チェック
15分で読めるか第三者チェック
書くべき比重を正確に。量を。
内容が専門的すぎないか。
プレゼンテーションとの役割分担を
10:市場規模
24:人材獲得手法。必要ロール。
必要人員
23:経営プラン
22:仕入れ計画
49:仕入れの元となる技術者の雇用と獲得
21:リスク、ネガティブチェックと解決策
34:業務基幹システム
20:パッケージ、soa、rails、seaser
33:セグメント
9:市場環境
32:権利対策
46:これらのシーズ経営的プロセスを実験的に行っている。
すでに確証がでたといっていいレベル。
8:事業プラン名
31:未踏に提出したやつ簡易化する
45:すでに自分以外が売りにいってくれて、
売上がたっていて、利益率も確保できている。
59:
30:事業スタッフプロフィール
5:[[ナプキンテスト.storytellers]]
42:開業資金
4:事業計画書
56:http://plancruncher.com
41:資金繰り。原始的な点では
すでに体験済み。
また、そうしたシステムの構築の経験もあり、
業務としては（もしかすると会計士さんとか
その道のプロよりも）
低いレイヤーで理解している分だけ、
詳しいかもしれません。
3:事業計画
40:高岡君の質問反映
53:ファーストレス
50:金額是正（評価軸がほかの非技術系技術会社と違う）。
少数で十分IPOレベル。
フリーランス性、受託、出来高性を望むができないでいる30X技術者がいる。この引き抜き。
ブログなどで、超ハイレベル（1万に一人レベル）の技術者と交流（フォロー）がある。
日本では1000人いないレベルの天才技術者たちと交流がある。
19:競合優位性
18:すでに客のいる技術会社への
教育と貸し出し
16:速く移動する
14:なくすっぷり
8:電動機付き自転車
13:なくしやすさを避ける？
22:食費小さくなる
12:自転車
6:定期高い
21:場所代小さくなる？
11:自転車
5:ガソリン吸わない
20:320*28=9000
10:CF指標
4:遠くまで行ける
3:交通費削減
19:3ヶ月回収？
18:CF
94:ノードチェーン
3:人
93:編集
42:必要な作業
92:[[コンテクスト]]を編集
41:@wait 沼の紹介の人
91:direction
90:@voice コンテクストを吹き込み
29:@wait 会計士
28:@wait 弁護士
27:@Noding 契約書翻訳
25:@Noding コーへイだな。セットクしよう
23:@wait 予算っぽい
57:PM,PG,テスタの比率1
要件定義。モデリング、
顧客との窓口、
費用見積、
修正、
部品取り出し、
タスク洗い出し（っていうタスク）
人のアサイニング
56:スケール部位には人は増えすぎない。
55:ハブになる。
54:交流。通電。
53:適材適所
52:効率化
51:目的
50:164＋50＋200＋scand分はOK＋150万＋ガス
89:依頼
88:かも
36:mixi
87:outsource
86:tag the todo
34:
85:request
84:外注？
32:@done テスト
83:facebook
19:@wait どうすれば上智
80:person
18:@wait 上智とかsfcとか。
17:@wait 女子、頭いい。パソコンは教える。
英語があればベター。
きてもらう。
パートタイム。学生
3000円。
週三日。四時間。2000円～。
9万くらい。
67:たー
107:evernote
65:@Meeting 永井君に相談中
14:@done 優秀な秘書さん
106:tumblr
64:単価高
13:@done スモールチーム
105:収集のUI
63:優秀性
104:tag the todo
11:翻訳
103:request
61:ケータリングユニットみたいなのできる人いないか。
102:外注？
101:facebook
49:資金調達
9:@wait 秘書
100:afrfaroge person
99:[[集]]めて[[編]]む
48:PMと翻訳以外は、金。予算。
8:@wait offsfhore
98:選択
97:集収
96:画像
45:オフライン
95:現在地
44:優秀じゃない秘書さん
2:
1:人を紹介してくださいメール
17:レベニュー資料
16:outsource as entry point
15:売り上げの4割を
オフショア
レベニュー
事務員
ディレクション
で
24:ディレクターもう一人。優秀な人。
23:@wait お金の問題？
7:プレゼン
22:@wait バイトさん
12:費用
21:@wait OSでもできることある？
11:資金繰り
20:@wait oDeskのやつ
10:雇用
4:広告
3:人事
19:利益
18:投資原理利用
17:利益率
16:費用
15:資金繰り
9:優秀
14:プレゼン
8:内容をタギング
13:crowd
7:雇用する人
12:雇用
6:highrise
5:outsource
10:hiring manager
2:人の候補は？
1:人員配備
19:AC
18:deals
5:
4:google her name
3:人調査
15:西野さん
14:投資
4:deadlines
13:EVA
3:今日
12:外注
11:回収する。
10:コスト減らす
9:CF
8:収入増やす
7:AC
4:today
3:今日
49:かね
9:ハイバネート/アンドロメダ
59:ポートフォリオなどを持っていくか
38:職務経歴書にポートフォリオつける？
48:タカヤ
8:java
58:誰と話すか
47:デザイン
7:英語
57:会いたいということ
27:タイミング
36:メール
46:実績的なグラフィカルなポートフォリオ
6:英語
56:礼儀ただしく
35:コンタクト
45:実績
5:条件
55:個人事業主であること
25:実績とか？
34:アクション起こそう。
44:ウェブからもとる
54:連絡内容
33:ポートフォリオ（グラフィカルなもの）
43:　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　
　


3:コネ
53:自分で
42:英語KEI探す
12:基本短期
2:仕事探す
31:いつでも＋作業が多かったらフル
41:どっちがいいか
11:週3日
60:人事で社長か。
40:電話
10:自給が2500円程度
5:マニュアル
4:flow
3:仕様
5:better_annotation
4:newjit
3:仕様理解改善
9:キーボードアプローチ可能に。
8:file の綺麗な分割
7:file to modify
10:test caseでの依頼
6:offshore
4:仕組み化
3:仕組み
7:仕組みで何があがる
19:workflow
7:履歴
6:ランタイムをモデリング
5:モデリング
16:request
4:仕組み化
15:choise on the hired, if not existing, hire one.
30:afford
3:仕組み
14:DirectResponsible
29:para, and sync
28:wait time
11:JingedCheckList
27:readtime
10:一回する
26:remove transition time
25:erp
24:set inbox
23:standardazation
20:kit
4:[[閲覧]]しながらの[[Post]]
3:付与
4:疲労回復
3:代謝効率
2:amplifier
1:会計士
11:meeting
5:アジェンダ
4:agenda
8:場所
3:会議
4:類似
3:似
2:[[ビュー]]としてキーボードショートカットが使えない
3:位置で保持
5:メタに、食事をちゃんととる？
4:食事をきらさない。
8:砂糖２０グラム＋なんか食う
3:低血糖
11:食事に動く。遠慮しない。
5:メタに、食事をちゃんととる？
4:食事をきらさない。
8:低血糖直す
3:低血糖
94:@cycle remind
3:低血糖直す
91:@done 忘れちゃいそう。
34:@wait 量とる
29:@done storytellerbase
10:@done 栄養
79:朝２食目
84:@wait 朝の効率化　かつ　朝飯
33:@done 歯
83:朝の効率化
32:睡眠サイクルらしい
26:@wait 家にいると食事取ってると阻害される
80:カロリーメートの携帯
97:胃壁直す
320:肩
289:乳酸菌
323:姿勢。柔軟。
189:自信
286:automate
101:時間
65:* Runtime ***
100:ブランド
162:コーヒーバランス
56:胃
148:野菜 at home
154:コンタクト
153:動く
146:食欲
152:酸素
145:sleeping
151:セロトニン
150:eat early
99:自信
98:洗顔
28:料理
89:pknked
95:肩
88:太陽
19:血流
24:eat_at_home
117:cf
93:水
86:咀嚼
92:呼吸
22:調理
91:姿勢
15:* 栄養 ***
90:カフェイン
6:agc
102:効率
4:足の裏
3:体の毛細血管
6:足の裏
5:ホカロン足の裏
4:体の毛細血管
3:体の毛細血管保温
4:eat
3:体温
2:系
1:体系
3:体調
14:衛生（顔、紙、体）
41:風邪
10:CRM
8:DC
7:SC（睡眠）
19:夜のアフォードと
quit earlier
6:cycle準拠
18:better_sleeping?
5:roiに準拠
17:[[eat]] early
4:生活衛生要因
44:this is the perfect practice for kaze. just check the nodefield for kaze and know this is the perfect set of terminals
.うめぼしのおかし->アペタイト->食事->栄養
.ハム
.肉のレシピ
.風邪薬を飲む->症状緩和->pknked->対応
.電気毛布を足に巻く->血流
.ホッカイロを足に5個。本当に5個。3個じゃなくて。
.ボトルに水をくんでアフォード
.トレッドミルで5分あるく
鼻うがいを30分に一回->繊毛運動
.すごいうがいを1時間に一回
.綿棒を鼻にいれて洗浄
.鼻を頻繁にかむ->繊毛運動->のどの症状も緩和
.医者->ネブライザー

16:sleeping
32:@wait １．	部計が無い（　項目が×１　）時の表紙に名称・一式・金額が　　　表示されない　
1- 8 -> 4H 
２．	Ａ案、Ｂ案・・・個別表示の可能化   合計せずに個別にＮＥＴ表示をできるように
仕様確認
３．	検索機能の整備（数頁データーがあると１頁目しか表示されない）　
0.5- >2
４．	見積ナンバーでの検索可能化（工番での検索は不要）
0.5-5 -> 2
５．	ＥXCEL表示の内訳がＢ－５用紙になっている
0.5-4 -> 2
６.　インターネットエクスプローラー７での使用は可能となりませんか？　
6-24 - > 12

８．社内ＬＡＮ外での操作は可能となりませんか？
以下２つの方法があります。
システムそのものを、以前のように、ホスティングなど社外におく（開発は不要）
ルーターの設定などをかえて、外部からサーバーにアクセスできるようにする（開発は不要）
いずれの場合、システム自体はどこからでも使えるので、
サーバーへのアクセスを可能にするということになりますでしょうか。
外部におく場合に必要なコストは
1.サーバーを外部にホスティングするインストール。
2.プログラムのURLの書き換え
でしょうか。
ルーターの設定は、社内LANに詳しい方により自己責任でやっていただくか、
こちらでやる場合は、社内情報が不明な状況で行うため社内LANのストップなどの
リスクをおいますので、50000円(出張作業費）といった感じでしょうか。
９．コピーが最新のものしか動かない。
5000
１０．コピーすると　Ｗ・Ｈ寸法が無くなる
請求済み（０円）
１１.　承認依頼を掛けた後で行挿入・行削除等を行うと修正を行った箇所が目茶苦茶になる。
調査中
31:@wait 一週間以内だったら12万
２週間だったら8万
くらいか。
のぞくものは、
30:@wait RequestTestWithoutAsmainTest
18:@wait better
17:@wait less SC?
29:@wait RequestTestWithAsmainTest
16:@wait less stress
28:@wait test
27:@wait preinterview
14:@wait get the bigger estimation (less discountrate) and acceppt, 
and make SCValid
if they reject, reject
26:@wait EstimationChoiseで選ぶためのテストを出し切る
＋出し切れない場合、想定仕様未定義分コスト（未定義の場合はありません）、を出す。
仕様をこちらで出している場合は営業情報にそう入れる
9:@wait accept this job
12:@wait AC
11:@wait less sales
23:@wait きちんとしたインターフェイスを出す。
リスク表
10:@wait reject this job
22:@wait 見積もって、割引レートなしで。
21:@wait less AC
3:@wait fix wheather if we should do 
2:依存関係
1:依存
2:因果連結
1:依存関係
1:依頼
12:選択
11:集収
10:画像
8:[[コンテクスト]]を編集
17:コンテクスト
5:@voice コンテクストを吹き込み
14:evernoteに
2:direction
13:[[集]]めて[[編]]む
14:evernoteに
13:[[集]]めて[[編]]む
12:選択
11:集収
8:[[コンテクスト]]を編集
10:画像
5:@voice コンテクストを吹き込み
22:richer informatoin
21:maybe voice not text
2:direction
17:コンテクスト
20:document locations
1:依頼
4:価格戦略
3:どんな価格帯の商品を扱うかは、経営者として一番の悩み所だと思います。では、いくら位が「高額な商品」だと思いますか？買う立場で考えると、うっかり「100万円！」と言ってしまいそうですが、実はビジネスとしては、100万円は安い部類に入ります。さらに言えば、100～200万円の商品でリピート性がないものが、ビジネスでは「一番儲からない商品」といえますから、注意してくださいね。リピート性が低いなら、最低でも500万、できれば3000万円位の商品を扱ってください。
6:ログ監視
5:不要ユーザー削除
9:死活監視
4:不要サービス削除
3:保守
20:thirthty
10:eat
6:warm_foot
17:electric bracket on foots
5:more than normal. set hot, not warm
16:足湯
4:kairo * 5 on foot,
3:保温
23:drink
13:drink hot
17:electric bracket on foots
23:drink
4:kairo * 5 on foot,
16:足湯
3:保温
20:thirthty
29:部屋の保温
6:warm_foot
30:体温
7:指
6:歯医者
5:場所
3:保険証
9:monogawa
8:体のアセモ
2:経済的信用
1:信用
1:信用
5:不動産
2:経済的信用
6:変数ピック
5:修正ファイル指摘
4:edit
3:修正
4:前日準備が可能な携帯にする
3:個別前日準備
5:コントラスト
4:値付け
3:値付けのコントラスト
3:入力変数 is 変数
4:modelを開く
3:全工程
4:share
3:共有
4:兼松さんにお返事
3:
東窪さん
cc 丹羽さん


おはようございます、兼松です。
ご連絡がご無沙汰になってしまい大変申し訳ありません。

実は兼松のほうで最近ことに気分の波が激しく、
ここのところ本調子ではない状態が続いていました。
このような形でプロジェクトの進捗にご迷惑をおかけしていること
深くお詫びいたします。


先週の金曜日にGAS社内で全社ミーティングがあり、
その席で社長の西野さんから、GASBOOKnetの
来季に向けた戦略的な位置づけを社員の皆様に説明していました。

そのような期待と、抱えきれるのか不安も交錯しながら、
現在作業を進めているところです。


まずは先日東窪さんにご指南いただいたランタイムについて、
詰めていました。

ランタイムとビルドタイムの違いは、
夏目さん的ゴール（GASBOOKのリブランディング→新たなビジネスモデルの構築→
そのためにまずはデータベースを早々に構築したい）をブレイクダウンした場合、
以下のような理解でよろしかったでしょうか？

ビルド：GASBOOK.netにアーティストのデータベースをつくる
ランタイム：アーティストのデータベースを使って、○○している


そのようにして以下のステップにあわせてみました。
形として合っているのか、ご確認いただければ幸いです。

【ステップ1.「ランタイムのゴール」をがんばって設定】

※「会計士にお金を払う」というシステマチックなオペレーションよりも
もう少しフレキシブルなランタイムなのですが。。

（GAS側）
■ゴール：誰でも簡単にデータベースにアップできる
■ゴール：アーティストから最新情報や企画アイデアが吸い上がっていく
■ゴール：さくさくとニーズにマッチしたアーティストが検索できている、資料化が簡単になっている
■ゴール：資料化を簡単に（※資料づくりは自動化する必要はなし）

（ユーザ側）
■ゴール：さくさくと好みの画像を検索できたり、気づけば小1時間ぐらいくるくるしてる
■ゴール：好きなアーティストの情報をしっかりキャッチできる



【ステップ2.ランタイムのゴールを想定してそれを実現するランタイムの各要素を書きます。】

（GAS側）

■誰でも簡単にデータベースにアップできる←（そのためには）手順の短縮化、単純化←（そのためには）契約書をそのままアップロードしてデータベースにするくらいにしておく←（そのためには）契約書をCSV書き出しできるようになっている

■アーティストから最新情報や企画アイデアが吸い上がっていく←（そのためには）アーティストの動きについて情報共有ができている←（そのためには）最新の動向の「見える化」がバッチリ←（そのためには）ルーチンとして日ごろからアーティストとのやりとりを「メモ欄」に残しておく←（そのためには）日ごろからメールのやり取りだけじゃなく、メーリングリストに入ったり、RSSリーダにアーティスト名でキーワード登録したり、アーティストのホームページをみたり、ちょっとしたネタに気づける環境になっている←（そのためには）ホームページへのリンク、ブログやってる場合RSSを登録、SkypeがOKなら登録、ソーシャル系のサービスも登録などが揃ってて便利←（そのためには）アーティストを登録する項目が必要

■さくさくとニーズにマッチしたアーティストが検索できる←（そのためには）ニーズにマッチしたアーティストの検索結果が表示されている←（そのためには）ニーズにマッチする検索方法で検索できる状態（今までのGASの仕事、クライアント別）←（そのためには）それと同じデータが必要

■資料化を簡単に（※資料づくりは自動化する必要はなし）←（そのためには）サイトのイメージから適当にドラッグドロップしてダウンロード←（そのためには）クリップボタンがついていてあとでソートできるとらくだよね。←（そのためには）マイページ的な機能が必要


（ユーザ側）

■ゴール：さくさくと好みの画像を検索できたり、気づけば小1時間ぐらいくるくるしてる←（そのためには）くるくるまわれるようさまざまな関連リンクが表示されている←（そのためには）関連させるためのデータが入力してある←（そのためには）それと同じデータが必要

■ゴール：好きなアーティストの情報をしっかりキャッチできる←（そのためには）好きなアーティストの情報が定期的にリマインドされる←（そのためには）アーティストに限定したRSSがある←（そのためには）そういうデータのつくりかたが必要（RSSの仕様）




以上、長くなってしまいましたが、ご確認いただければ幸いです。
このような大き目のデータベース案件が未経験ということもあり、
現段階でつと僕の力不足が否めず、恐縮しております。。

お忙しいところではありますが、こんなことはありえないという厳しいご意見や、
このような進め方だとやりやすいといったアドバイスなど、
ご指導いただけたら幸いです。

ご迷惑をおかけしますが、何卒よろしくお願いいたします。
5:解決
4:目的
3:内容
7:no interupt in daytme
6:hotel代　50000/m
5:thestoryteller coding 20h / M ,200000/M
4:having dddd
3:storytellernest
2:nest
1:内装
5:ドメイン駆動
4:同じ語を使う。
3:再利用
4:DRY
3:再現
2:カメラマン
1:写真
1:写真
6:レンズ
ライト
背景
キメ
反射
色を含める
構図
確度
モデルを含める
広告を真似る
2:カメラマン
4:クリスマス
3:凄い
79:美。
78:lse
77:
34:@done pknk
76:横断的効率化
33:多目的化
75:[[目的検索]]
74:@wait カラス避ける
72:@wait 公園
71:サンルーフのあるところにいってご飯を食べる
70:暖かい野外に、マスクやホッカイロを以って、選んだところに行く
48:@wait 風邪引かない野外
44:cf
85:@wait ランタイムをモデリング
84:@wait アカデミーヒルズ
41:@wait 仕組み化
83:ミックス
82:目的
18:* RUNTIME ***
17:@wait 場所
80:高roiの検索
16:@wait 外
58:@Air 太陽タグつける
57:@wait 包囲光
55:@wait 風邪対策ひと通りして
12:コーヒー
散歩
食事
ビタミン
水
有機
砂糖なし
砂糖
カンジタ
乳酸菌
9:どういうものが理想的
11:要因を候補する
8:その要素を削ってみる
53:@wait 中
10:実験する
7:いずれにしろ独立でやる
52:@wait 風邪引かない
6:他の要素を削ってみる
92:太陽のあるところを歩く
5:[[改悪]]実験
91:@done 太陽のあるところを歩く
4:@wait ライトソケット
90:@wait 仕組み
69:@wait 移動時間が少、
車少ない、
ルーフ
68:@wait ガソリンのない場所
67:暖かい時間に。
66:nea
65:@wait 窓辺で作業
64:@wait 包囲光的
22:nea+光？
63:@wait 設備
62:@wait 野外ではない光入るところ選ぶ
61:@wait 体==CF
60:@wait cfで良いとこ選ぶ
1:出会い
3:男女
2:合成
3:分割
6:軸
4:分析
3:現状ランタイム（問題ランタイム）
4:数えてみる
3:分解
5:比較
4:判断
2:alias
4:雇用
3:利益
2:見積り作成
5:記録
9:point通す
4:レビュー
8:buffer
3:削減
6:構造もゴミなので、構造の内容物をすべて捨てると、その文のゴミもかせげる
5:小さなものも削除する（削除するとすぐに目に見えてよくなるようなものっじゃないものも。）

9:DELETE pattern
3:削除
2:削除リスト
29:@mece weekly_organize,
pomodoro queue
4:前日準備
28:@mece buffer
19:list:
daily organize
leave early
morningkit
食事プラン 
2shock 
服の準備
風貌（ヒゲ、詰め、かおなど）
洗顔をジムで。髪もかも。
暖房
 
timer
eat at home
spent less mai
do something new
18:better_reminder
25:moving_plan
17:kit
31:try once
16:afford
30:every 2 days
morningkit
daily org
15:対象ランタイムの作業自体の改善
22:daily organize
leave early
morningkit
食事プラン 
2shock 
服の準備
風貌（ヒゲ、詰め、かおなど）
洗顔をジムで。髪もかも。
put water and bar on the bag
the place to go in the morning.
moving plan
schduling ( task plan ) 
context plan.
decide the bags to bring and put all in it ( including the devices)
decide the cafe to go in the morning
judge if i can go out in the morning.
14:1010100
13:習慣化
9:RUNTIME
2:広さ
1:創造性
7:仕組み
15:いらんとこはどこ？
4:創造的な考え
3:SCAMPER Questions（出典：『creativity UNBOUND』　※翻訳は筆者ら） 	チェック
Substitute（代える、代用する） 	S1）代用可能な部分はどれか 	
S2）何を代わりに使うことができるか 	
S3）ほかに誰を含めることができるか 	
S4）ほかにどんなグループを含めることができるか 	
S5）代わりにどんなプロセスを使うことができるか 	
S6）代わりにどんなマテリアル（モノ）を使うことができるか 	
Combine（組み合わせる） 	C1）何を組み合わせることができるか 	
C2）ブレンドする（混ぜ合わせる）ことはできるか 	
C3）どんな種類のアンサンブル（取り合わせ）を使うことできるか、創ることができるか 	
C4）部分同士を、どのように組み合わせることができるか 	
C5）目的同士を、どのように組み合わせることができるか 	
C6）アプリケーション（応用方法）同士を、どのように組み合せることができるか 	
C7）マテリアル（モノ）同士を、どのように組み合せることができるか 	
Adapt（適応させる） 	A1）これは、ほかのどのような考えを思い付かせるか 	
A2）何かほかに、これに似たものはないか 	
A3）過去に似た状況はないか 	
Modify（修正する） 	M1）さらにTwist（ひねり、コトの意外な曲折）を加えることができないか 	
M2）その意味あいを、どのくらい変えることができるか 	
M3）色や外形を、どのくらい変えることができるか 	
M4）サウンド（音、騒音、音声）を、どのくらい変えることができるか 	
M5）何を加えることができるか 	
M6）高さ・高度をどれくらい増やせるか 	
M7）重さをどれくらい増やせるか 	
M8）強度をどれくらい増やせるか 	
M9）頻度をどれくらい増やせるか 	
M10）価値をどれくらい増やせるか 	
M11）何を減らすことができるか 	
M12）何を縮小することができか 	
M13）何を簡素化することができるか 	
M14）控えめに言うことができるのは、どんな部分か 	
M15）サイズをどれくらい小さくできるか 	
M16）重さをどれくらい軽くできるか 	
Put to other uses（ほかの使いみち） 	P1）そのままで、何かほかへ使えないか 	
P2）もし一部を変えたら、新たに生まれるほかの用途は何か 	
P3）ほかにどんなマーケットが受け入れるか 	
Eliminate（省略する、除去する） 	E1）何を、取り除くことができるか、省略することができるか 	
E2）ある部分がない時、どうやって実行するか 	
E3）何を犠牲にできるか 	
E4）あげてしまえるものは、何か 	
Rearrange（再調整する） 	R1）ほかに、どんなパターンが使えるか。 	
R2）ほかに、どんな配置が使えるか 	
R3）ほかに、どんなレイアウトが使えるか 	
R4）何を交換できるか 	
R5）何を置換できるか。言い換えられるか。 	
R6）何を、再結合できるか 	
R7）逆にしたらどうなるか 	
R8）上下逆さまにしたらどうなるか 	
R9）内外を裏返したらどうなるか
9:引いてみる
12:frameworks
8:目的検索と合成
9:やかんで沸かす
4:加湿器
8:風をシンクに
3:加湿
7:シンク
6:向き決めとく。
フックの方向が合わす。
5:水道から近く
4:水の交換効率

3:加湿器
7:抜き
差し
13:アーカイブの作業を外注する
12:ampxsvx
9:売上と特別編集長がセットだ。
11:忙しいうちに
8:文句言えない
10:特別編集長制度
7:コンテンツ作成
6:アーカイブの速度と費用低減
5:SVのリスク軽減
4:アーカイブの利益
3:加藤外し
16:頭使う。
法的になど、動けなくする。
2:効果測定は[[因果率]]抽出を[[因果]]する[[統計]]
15:オフショア
6:automate
14:適材適所
4:Buffer
25:共有
3:効率
10:横断的効率化
22:os
19:template
16:楽できるとこ探す
7:scaleを計算する
10:横断的効率化
7:scaleを計算する
6:automate
29:kit
4:Buffer
28:double
34:資本種類について削減
3:効率
19:template
25:共有
16:楽できるとこ探す
30:workflow
15:オフショア
22:os
14:適材適所
4:勇気
3:勇
27:勇気の出る読み物
37:warmup of the courage
50:risk
36:better_courage
35:warmup
47:舞ちゃん
44:meeting_people_is_easy
43:schedule
42:repeat it 
8:勇気
30:ご褒美？
5:http://www.ouchi.com/archives/2006/03/post_49.html
4:ジョブススピーチ
3:勇気の出る読み物
9:http://www.alpha-net.ne.jp/users2/mi2yuki/kakugen/yuuki.htm
12:http://kotoripiyopiyo.com/2007/10/12.html
8:http://www.mother-house.jp/ceo/
7:http://ja.wikipedia.org/wiki/イビチャ・オシム
6:http://www.mbs.jp/jounetsu/2006/07_23.shtml
2:1. linux
2. webmin
3. iptables
4. apache(by xampp)
5. xampp
6. mysql(by xampp)
7. php(by xampp)
8. ssh(and scp)
9. sendmail/postfix/qmail(smtp only.no pop)
10. yum
11. wget
12. emacs
13. lynx
14. apt-get
15. cvs
ftpは走らせない。less serviceがポリシー。


5:肉
4:風邪
3:動物性タンパク質
5:肉
4:風邪
3:動物性タンパク質
7:
10:ネブライザーと薬
6:いかないのなんで・
5:ポイント・
4:いかないでいがち
3:医者
6:naming
5:半固有名詞
2:まだできあがってない名詞。
だけでいずれできあがる名詞
6:どうすれば
5:runtime/builttime分離
4:better UIに
13:仕組み
12:一回する
3:半自動
11:JingedCheckList
10:モデリング
9:ランタイムをモデリング
8:仕組み化
7:考
13:ウェブでsd
12:@pknk sdをコンビニで買う
9:キンコーズ
11:コンビニで印刷
8:プリンターつなぐ
10:sdとかにデータ入れる
7:プリンター
4:netprint
19:@pknk print
3:印刷
18:http://www.printing.ne.jp/
17:pdf
1:参加
5:出会い
2:参加と可視化
11:友達の友達
4:友達の友達
8:party
3:友達
7:introduction
3:提携
65:WPST
5:顧客は中小的な単価を期待している
64:WPとWPST
63:STの利用
62:オフショアディベロッパー
61:利益
60:競争させる
48:完全体は、
WPST、
STパターン所有、
CROWDOS、
OSJP、
TKP、
SV→TKP、
ソーシャル、
アンプ
47:N個と提携し注入する
46:仕組みのRUNを可能にする
45:実行体＝スケールを想起に。
44:仕組みが有効になるポイントを決める
43:仕組みのスコープを決める
99:CFセーフで自分の仕事だけは取る
41:投機性・利益率と利益・グラデーション
27:転換
95:コントラストどうやって使えるか。
26:WPST案件引っ張ってくるから、STの利用フィーをもらう
94:@Air_Findings
25:テクノロジー＋のところを
93:@wait 提携候補モデリング
24:アンプとかを
92:@wait 資料
23:アテンション転換
91:提携
79:確実にする
109:人が欲しい
78:@wait プレゼンする
108:案件が欲しいか
20:会社戦略
107:足りてないところを持ってる
106:提携しやすいところの条件をアップデート
75:共有する
74:点をつなぐ
102:@Outlining ロールのリストを作ろう
59:良質のオフショアの会社の選択をしたのでこれを売る。500万。
70:上げすぎとかそういう戦。
相手に仕組みを入れた報酬が入ってない。
成功（納品が高速に行われている）とWPSTの仕組みかな。
一回5万くらい→300万に5万
100:30％くらい外注しましょう
58:テクノロジー案件からのそういうの
57:中小のロングテールの可能性を付ける商流作成
56:WPSTどうするか
51:WP++とST利用とオフショアだけ注入
50:利益
36:オフショアのノウハウについて説明する
34:お渡しするもの
・こちらの案件をやってもらう。
　1億目標で案件持ってくる。
　→適したやつだけで去年実績で2000万くらいは行くだろう。昨年実績で来てた量。
　1000万は約束する。
・1/4万はテクノロジーを含むものにする。
　僕らのテクノロジー系のポートフォリオを含んでいい。
・最低でも、原価を10%削減する。（30%程度の分量について25%程度を削減する。）
　売上の100%近い上昇に匹敵する経済であるはず。
・ブリッジエンジニア、オフショアリング先の紹介（100から選んだとても良い会社）
・月60時間ほどオフィスに居ます。
　
頂くもの
・技術顧問か、執行役員か、CTO（技術の取締役）取締役か子会社代表。
　4ヶ月。62.5万。250万。月100時間くらい。
　月60時間ほどオフィスに居ます。
　（80、80、60、40程のペースで4ヶ月）
※内部的に50万くらいオフショア使う費用も含む。
・営業代行フィーで15%
・1000万の案件はオフショアを内部的に使いつつ、
　TACの日本人の人をバックアップとして使う
・テラーの利用フィーは別途もらう。Java利用部位の10%程度。
　1パターン1万円くらい。

こちらの案件の全て、及びそちらの案件の一部にオフショアを道入するところから。
内部的に実績が証明された時点で、ジョジョに適応率を増やす。
31:中規模企業として利益は小さいかもしれないが、利益にはなるように、僕らの案件も持ってくる。
大規模のものも持ってくる。営業代行のフィーを取らない。
テラーの利用フィーもらう。
WPSTのフィーは取らない。
WP++の仕組みとワークフロー導入は別費用。

19:雇用
30:世界の案件
117:アウトラインを作りまくるう。
18:ロングテール＝ジョブマッチング系も
116:NEW実装資料
17:売上
112:@Search 受託
82:返報性
69:・新しい類のサービスの開発委託もメニューに入れてもらう、
　つまり例えばどこかのベンチャーがニコニコ動画というのを
　作りたいと思いついてそれを作る制作を株を持ちながらやるみたいなメニューを
　年間1000万分くらいやってもらいたい。赤字にはしない。
・加えて、50万分議決権付き、200万分無議決権で株ください。
12:仕組みを貸す。
9:提携する
81:@wait とにかくたくさん
11:仕組みを所有
80:競争
10:株もらう
7:中小をカバー
66:商流
6:大企業の安定性よりも安さを、の工程
6:kit
5:affordable
14:塩なめる
13:酸っぱい
12:乾燥している梅干し
2:afford
11:乾燥
1:口にする気がしていない状態でアペタイト
10:target(objective Noun)
9:custom
7:Buffer = buffer
17:motivate
16:一日予約
15:sc
9:content
14:サービスイン。配置  = deploy
8:contact info
13:請求
7:mail / phone / skype / goto / see / basecamp / generate rss * readers
12:storyteller
6:@iPhone teleblah
11:webapp
5:message
10:web
4:メッセージ
3:ストリーム
2:ウェブ
1:可視化
5:トランケート＋アップレード
4:同期
3:差分を検出して突っ込む
3:名詞
6: = Noun
3:
吐き出す
6:Verb
17:回数増やす
16:奥歯で噛みまくる。
57:横断的効率化
15:睡眠時間短縮？1時間くらい？
14:消化コスト下げる
55:* pknkでおにぎりを食べるようにする。
13:高カロリー
76:仕組み化
12:食事回数あたりのカロリー量増加
73:速度
30:栄養
5:ナガラ食いしない？
29:4食試す
4:唾液と混ぜる
28:効率15%
3:咀嚼
26:* RUNTIME ***
68:better
46:pknk
87:太陽おにぎりpknk
45:あまり意識がかからないもの
82:essential
18:消化速度
7:日比谷　銀座かずや 
6:[[青山]]桃林堂 
5:青野
4:party / パーティ
3:おもてなし
2:和菓子
8:WAGASHI まめ
4:品質管理
15:品質管理ランタイム
3:品質管理ランタイムを作成する
14:品質管理者キックオフ
4:https://storytellers.projectpath.com/templates
チェックリストを提出した

KPIを設定した。

KPIのスコアを取った

全工程を終えた。

全工程を記述した。あるいはストーリーを記述した。

想定ユーザーを設定した。

想定ユーザーによるユーザビリティに問題はなかったか。

ダミーデータでの全工程で目的が達成できたか。

すべてのリンクを追った。

すべてのリンクにおいてダミーがなかったか。

仕様書のURL、ロケーション入力してチェックをしてください。

   このプロジェクトのテスト郡はすべてプログラマーとは別のテスターによって再現手順をおい、期待される動作、表示がなされることを確認されている。
3:品質管理チェックリスト
10:mock
5:品質管理チェックリストを提出する
4:品質管理ランタイム
3:網羅的にmismatchtest作成
13:story + 画面仕様
9:offshore
8:manualurl of the project
16:品質管理ランタイムを一周一緒にgotoでかonsiteで。
11:KPIを自己設定してもらう。
3:品質管理者キックオフ
7:メタレベルの人のタスクもテストで。
eg:品質管理者なら
[steps to repeat]ユーザー企業の実ユーザーと、経営者様、技術担当者様をが仕様を見る->開発機のURLに行く->全工程を見る
[what expeceted]まったく同様であり、品質に問題がないと思える。

3:商品
4:[[商品]]
3:商品化
2:http://toukubo.backpackit.com/pages/1896576
1:商材
5:商流形態
4:商流
16:tokyokernelpanic
15:近い人にやることでkernelpanic
9:商流のリストを作る
11:menuである
8:商材リスト
10:良いのさんに考えてもらう
19:
1:問題
4:障害
1:問題発見
4:やってみる
7:質問にする
6:どうすれば
5:問題解決
9:横断、普遍、lse
2:[[noding]]や[[問題解決]]
[[action]]。[[連想]]。
[[ぶっとび]]、[[上機嫌]]、
[[ブレスト]]、[[口に出してみる]]
SS
[[最終系イメージ]]
[[無制限ボックス]]を見る。
[[museigen]]
[[無制限URL]]を見る。
[[無制限イメージ]]を見る。
なども[[一般的問題解決]]方法。
どうすればと問うときに「どうすれば最高のたまごっちが作れるか」とかいうふうに最高のとつけるといい。

8:
5:ベポラップ
4:マスク
3:喉
6:喉を濡らす
9:部屋の加湿
4:mask
3:喉の保湿
6:水飲む
5:凄いうがいを頻繁に
4:喉を保湿
3:喉を濡らす
6:品質管理者キックオフ
5:品質管理ランタイム
9:sales
4:品質管理？
3:営業
1:営業へ移管
10:clickとかのroi
9:銀行と付き合う。誰かいないか。
8:資金繰りとか
7:@wait DELETE pattern
6:削除リスト
5:風貌、スタイル、飲み会、ターゲット、プレゼンテーション、
ほかのパーツも口説き落としていく。
瞬発力。脳の回転を維持。
パブリシティ
通知の頻度を大きくする。
こちらからの通知の密度を濃くする。
4:そうではないものを削除する
3:銀行的
2:スケールの大きい仕事（一回の営業ででかい営業結果）
7:金額による営業代替性と、営業による効果
5:継続・新規
4:mece
3:営業率規定
9:継続案件について、
誰かが
8:営業代替
2:意識する
1:噛む
6:課金の仕方
13:
3:関係を崩さない
12:伊藤さん、松岡さんに会ってからでいいか。
11:やらしくない？
2:AC
1:回収
10:焦らす
9:欲しいと思ったときに
8:気持ちいい瞬間に課金する
7:気持ちよく
1051:因果フラグ
1046:questiononcausalrelation
1053:オンメモリデータベースに
1048:因果検証
1052:ノードパッドの型変更
2:因果には因果の割合、充足率がある。
必ずしも因果するわけではないが。という場合もあるし、和的関係、積的関係、といった関係もある。
これは正確に定義されると物凄い影響だしそうだな
2:ノードパッド
1:因果連結
4:chart
3:図
2:インフォミックスの国立劇場のお仕事
5: 　　　　　　　　　　　　　　　　　　　　　　　　　 
=====================
IPs
 
LOCAL AREA NETWORK ADDRESS
192.168.1.0/24 
 
 
ISP NETWORK SETTING.
net work address:202.231.106.190/28
(16 global-ips from 202.231.106.190)
 
 
IP SEGMENTATIONS
IPs are segmented into 3 groups.
dhcp/normal pc using static/server-like static ip.
Basically normal pcs which are not accessed by 
any outside pc are using and should use dhcp.
some pc or network nodes need static ip for service for  for LAN. 
If they provide their service towards outside,
they should use from server static ip zone.
Last group is the for servers.
Those IPs have corresponding global ip, and some of them have domain name.
 
2:SISCO PIX FIREWALL
　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　
PDM (management gui for sisco pix series)
Video serve was added to the allowed host list of PDM access.
(by Installing java jdk1.4 and enabling java plugin into IE, 
and applet function was enabled on IE(in default disabled for security)

ALLOW-DENY CONFIG
Basically incoming accesses are all denied and outgoing 
accesses are all open. Then, servers/nodes in the list below were allowed wholely 
from incoming connection.

tanborrg
quicktime server
mssteam(dell server)
brendan


Sisco pix router (default gateway) is 192.168.1.128.


1:DNS
LOOKUP
No dns server is inside of the LAN.
Client PC in MediaStudio use Sisco router as default dns server.
 
DOMAIN MANAGEMENT
Media Studio servers uses mediastudio.unu.edu and unu.edu domains.
Both are subdomain of unu.edu. 
domain controler is in somewhere in unu.
Configrations to change/create/delete
domain and ip settings are now operated by unu.edu domain manager.
 
we have 3 machines/global and local ips/domain names.
www.mediastudio.unu.edu 202.231.106.202 192.168.1.202
qtstream.unu.edu 202.231.106.203 192.168.1.203
msstream.unu.edu 202.231.106.201 192.168.1.201
 
 

9:

==============================================
PORT AND HOST NAMES AND IPs
we have to ports on the qtstraming server 
http://developer.apple.com/quicktime/quicktimeintro/tools/index.html

==================================================
to use web server
/Library/WebServer/Documents/

sea/2003 prototype/2003/SEA animations
 &#129;ctions stuff Folder/more_sus_policy_graph.gif:
UNDER CONSTRUCTION?page28?~$ge28_additional.txt &#8218;&ordf;
“&Ccedil;&#8218;&Yacute;&#143;o&#8218;&sup1;&#8218;&Uuml;&#8218;&sup1;&#8218;&ntilde;.
?


041008commands~
cd /Volumes/raid? HD/
su
mkdir keio
mkdir unu
chown unu unu
chgrp unu unu
chown keio keio
chgrp keio keio

raid HD is 7hd is one array ,and all is raid 5(parity-fast);
changed unu user pass to velocity.


11:


==================================================
*QT STREAMING
Easiest way is just to putting mov files via ftp with
 qtuser/qtuser1234 account. when connected, we can see
 the main publishing dir of QT server.

FILETYPES
Allowed filetypes are mov/mp3/mpeg4.


WHEN QT STREAMING PROJECT HAS LAUNCHED
we can make another publishing points for possible
 locations with some administration. so when some project 
has launched, we should make it for each project and should 
keep the default dir clean.please contact me? to make it.


SEPARATION OF WEB(HTML,PHP,FLASH,etc) AND QT STREAMING
there are 3 ways to publish qt data, so there are 3urls:
rtsp://qtstream.mediastudio.unu.edu/test.mov
http://www.mediastudio.unu.edu/refference.mov
http://qtstraem.mediastudio.unu.edu/test.mov

qt server is not web serever. Basically we have to access 
to the media using rtsp(real time streaming protocol).



8:　　　　　　　　　　　　　
QUICKTIME SERVER
 

==================================================
*** ACCOUNTS AND PASSWORDS
unu/+ms*unuc3     :for unu users
keio/unodb        :for keio users

(maybe not used and discarded in the future)
share/+ms*unuc3   :for guests. mainly for file sharing and strage
qtuser/qtuser1234 :for quicktime streaming user. with this account, 
                   we can access directly to the document root of qt server with ftp.
                   

root,admin,kouji,sean,brendan...are admin accounts.
please ask them if some special tasks are needed with root.




10:
==================================================
FILE TRANSFAR
1 FTP 
ftp(fetch/ffftp or any ftp tools) from both 
outside/inside of the mediastudio are open.
with the accunts/passwords sets above.
hostname:www.mediastudio.unu.edu
FTP is not secure.Scp is recommended (if possible).


2SCP
SCP is acronim of Secure CP(copy). File transfar method
using ssh. "WinScp" for win,"fugu" for mac are major 
application for scp.
the same hostname,account,passwords could be used for scp.
 
 
3apple talk(or samba)
this is the network directory which can be used just 
in LAN(so just inside of mediastudio).
if shortcut(or alias for mac) icon doesn't appear on the 
desktop,please contact admin.
 
 
In general,inside of mediastudio,we shall use directory
 shortcut function(from both mac and win). Out of the studio,
 scp ,or ftp will be used. scp is not major in normal use 
maybe but among SE people,or sfc student SCP is now the defact.
 When important files transfared ,scp is highly recommended. 
Once configured,it's not difficult to use.


7:Heats and racking  
 
Among MediaStudio equipments,Just xserve and 
its raid system are heat-sensitive. 
it's famous that she becomes very hot in hard working. 
 
So to do a regular check on them are important 
 
For other equipments,we don't need to be so nervous.
6:SEGMENTATION
for security and quority of service, 
manage normal clients and server equipments separately.
the seperation level can be decided by how the service is critical.
Media Studio has no buisness infomation(eg credit cards or user's personality). 
so main purpose of seperation is just to keep the LAN working 
and to do media communication service with outside peers.
To do this, just seperated static-dynamic ip zone ,and cable positions of HUB.
When one more machines try to use those static ips, 
some functions will be down and at the worst case,
if the ip is the router's ip, the LAN itself will be down.

now cabling is not well managed ,keep it clean in every morment
is actually very difficult but ,to have a cyclic check and clean-up is very efficient.


4:在庫list
3:在庫
7:
4:1.非関連属性
2.関連属性
3.操作
について
1.共通するものの数
2.しないものの数
をだす
3:型かフラグか

2:[[places]]
2:ストックオプションと、
最低限の賃金
1:報酬と投資のバランス
6:ポンスポンスタ
5:クラスカ
4:カナルカフェ
3:場所
7:places
1:塩
5:アペタイト
2:うめぼしのおかし
6:換気で30分
5:シャワー熱湯
4:*Runtime ***
3:塩素なしシャワー
7:洗顔まで
4:変換
3:変
2:データ変換
3:変数
6: = 名詞
4:外出
3:外
2:外出
21:leave
4:outsource
3:外注
20:髪
8:インナー
19:ラフ、スーツミックス
7:各パーツについて良い服を買う
18:外見
28:looks
5:良い服を数着買う
4:各パーツ
15:投資
3:汚れてない
25:色
14:バジェット？
2:新しい服
24:丈
13:zozo
23:顔の筋肉
22:洗顔
11:apcのジャケット
2:外
1:外食
6:RUNTIME
4:太陽が入る時間にそこに
3:家とsunとで太陽が入る時間を
14:契約書に
13:メニューから選択と合意。
12:ランタイム
9:メニュー
8:人工レベニュー表を作る
7:開発支援のレベニューなしか。50万。
6:開発支援契約（人工）のレベニューか。
5:契約形態選択
4:仕様策定
3:営業
16:支払い条件とか決定
15:見積もり
2:そのものフルーツ。
女性の肌は短編小説だ。
快密度。
性的緊張
あとはコミュニケーションの改善だってよ。
そういうノｰドファイルセグメントがあるぞ。
男の子は夢を話す。女の子は恋をする。

2:女の子
1:女性
4:類似
3:好き
6:意識コスト
5:動く
4:姿勢
3: sh
2:否定をする圧力。
環境は圧力的。
4:ECLIPSE PATTERN
3:存在チェック
6:時間を指定する（受取の時間、と）
9:my 宅配ボックス？
4:コンビニ試す
3:宅配受取
1:安く
5:automate
4:定期購読
4:cycle
3:定期
14:ヤフオク？
13:Buffer
12:@secretary
9:purchase
11:AAC
8:stopper
10:purchace
7:reminder
6:cycle
5:定期
4:購入
3:定期購入
17:総量
14:cash out
13:revenue
12:share
9:requirement of person
11:better matching of people
8:history
10:team
7:candidates
6:voice = meru
5:outsource
4:外注
3:定率外注
15:payment_site
4:習慣化
3:定着
39:try
49:no eyes
9:@Noding laying out 
38:3 sizes.
48:# indexes ( search ) 
# tag
# category
# places.
# walk-through
# page rank 
# special algorythms with indexes.

18:boxes and things?
8:not mess to the eyes
28:@wait expendable
37:@wait grid
17:space
7:@mece no deadspace
36:@sun try
16:cf
26:some types? 
45:that paper box grid
15:time
5:interface 
34:@Noding beautiful skinns
44:@wait 1/5
14:try
4:@wait stackable
24:maybe
33:boxes
43:@wait budget
23:find the best size fo the cells
42:@wait trial
12:@mece make higher spaces in use
22:@wait paper boxes
31:more space
41:wait 1/5
11:hide
1:定置管理
21:@wait try stackable drawers with one material
30:@wait palls and bags
40:budget
10:do not hide
20:baggy boxes to fit it
7:掃除
10:ゴミの捨て方とゴミを下に持っていく話
6:洗い物
5:ゴミ出し
4:　・簡単な洗濯（共有部位で必要なもの。布巾とか？２週に一度ご自分のもののついでとかいうレベル）　・ゴミ出し。
8:食材や消耗品の買出し？
1:家事
14:ask them if 宅配受取 is possible
13:意識コスト
12:time 
9:5%
11:less place cost 1%
8:clutter
10:more at shuwa
5:discuss with maityang
4:24000 = 30%
17:5h
1:家事代行
16:5%
15:食材調達
7:@wait konozamaからだよな？
6:@wait なにがおかしいかはどうすればわかるか
5:@wait なんかおかしい
4:@wait 入金まいｔ
3:@wait 振り込み
8:@wait 問い合わせる？
6:@wait 不要サービス削除
15:400000
5:@wait 不要ユーザー削除
14:@wait appli( mail them ) 
4:@wait ログ監視
3:@done 富士商会保守契約
11:@wait 了承
10:@secretary 資料化
9:@done estimateの修正 intstructions
8:以下のような作業は、一般的な保守契約には含まない。
『コンサルティング（本件とは無関係なITC関連の情報提供や意思決定や選択肢の作成など）】
時間外対応
ハードウェアーそのものの費用
御社のルーターや、クライアントとなる各コンピュータのSOの問題やハードウェアー的問題。ほかのアプリケーション由来の問題など。
7:@wait 死活監視
8:  4. 飯を食う。栄養をトル。
7:  3. 富美子が不快に思わない
18:less by her. 
by eat at home
6:borrow rice
17:Communication
5:  1. 食費を安くする。そのために、家で食う
16:乾物野菜と肉
15:厨房借り
14:at least once a day only
13:eat and go back
1:富美子問題
12:can we eat micro onigiri at home?
11:eat_micro
26:tell her about her mind
25:eat out and go back
24:i want to learn cooking
23:do things silent
22:hurry up
21:how to borrow kitchen
without making her frustrated.
20:buy meets for yourself and cook yourself
9:  5. 待ち時間なくす
1:寒
6:ホッカイロ
2:飯
2:射撃しつつ前進
3:プログラムを一日に1時間は書く
2:CHE導入
1:導入
2:細いフォントを因果できる
macでもwinでもadobe系でなら使える
2:毛穴パック
1:尾根
4:タグ
3:属性
2:左手でキーボードショートカット
2:加藤巧君
sfc
ルックスが可愛い。オシャレ。
そういう美的センス。
純真

1:広さ
5:必要に引っ掛ける
4:広告
3:20.ティッシュをタダで配っている（お店の宣伝として） 
1:床掃除
3:みんなにそれをお願いする。
2:ルンバ定期的に
2:デザイン底上げ
とか、
cssとかしておくと、
デザイン底上げができてすごくいい。
2:lawyer
1:弁護士
1:引越し
6:[[在庫]]を上げてしうまう
5:上げてしまう
4:自動性
13:値付け
12:値付けのコントラスト
3:影響力の武器
11:コントラスト
10:アプリケーションモックを上げてしまう
9:企画を上げてしまう
8:WFを上げてしまう
7:アイデアを上げてしまう
4:@wait
3:待つ
7:いつremindするか決める
5:いやなことの後にすぐに（因果関係性が体にしみこむように）＋誤帰属
4:ポイント
3:御褒美
1:循環
4:reminder
3:忘
4:reminder
3:忘
7:afford
6:一元化されたところへの記録
5:集中
9:中心の移動
4:創造
3:忘却
4:思い出す
3:思い出
4:関連する事柄を言葉で頭で書いていく
3:思い出す
7:remember
6:コンテクストベースルーチン
5:ユーザビリティ
4:手数減らす
3:意識コスト
2:手リソースを用いない方法
1:手
4:manualize
3:手順
2:ググる
1:技術者交流会
4:Post
3:投入
5:請求書印刷
4:封筒
3:投函
15:ピッチ
2:投資循環
14:事業計画とプレゼンテーション
1:投資
13:着手のゴールの可視化 x　参加の可視化 x 速度の可視化 x 問題（ゴール）と
9:合成
8:男女
7:出会い
19:レベニュー
6:参加と[[可視化]]
23:mock
5:参加
22:モックアップ
16:投資の直列化
15:ピッチ
2:投資循環
14:事業計画とプレゼンテーション
1:投資
13:着手のゴールの可視化 x　参加の可視化 x 速度の可視化 x 問題（ゴール）と
9:合成
8:男女
7:出会い
19:レベニュー
6:参加と[[可視化]]
23:mock
5:参加
22:モックアップ
16:投資の直列化
5:seedsfunding
4:nanofunding
3:middlefunding
2:microfunding
8:3つの投資のゴール
1:投資の直列化
2:メカトーフの法則
1:投資循環原理
4:依頼
3:指示
1:掃除
6:探す
3:床掃除
2:片付け
10:掃除
7:https://mail.google.com/mail/?shva=1#settings
4:署名
3:探
27:検索
19:keitai
26:キーワード
18:google
24:原文読む
16:文字列一致検索
23:連想する
22:キーワード
21:語
13:MECEな軸
20:network?
4:探
3:探す
6:提案
5:類似
4:レコメンデーション
3:推薦
13:パターンマッチング
9:文が提案＋因果があった。
11:システムにてランタイムノードパッドを書くことが前提なんだからどのシステムでも提案はある。
特に自動因果する＝自動導出する＝system createsと書くところでは全部できる。
提案タイミング、は、ListeningToであるし、Eventに反応してでしょう
10:ランタイムノードパッドがかけた
7:ストーリーテラーでの提案
6:提案アルゴリズムの提出
5:提案
4:提案すべき最適なタイミングの検出
3:エージェント
2:ノードで提案をする
17:on type on word start
on save
20:履歴
16:on ...
4:20年間は大多数は携帯かも
3:pc
2:インテリ
4:better
3:改善
4:紙にあるやつはデジタライズしておく
3:サイトをみて改善点リストして見積もりして提案。pick up from user interface patterns 
6:いずれにしろ独立でやる
5:その要素を削ってみる
4:他の要素を削ってみる
3:改悪
5:教育
6:人材の戦力化速度
3:教育
33:htmlでそのセットを表示して、確認はできる
32:写真にidを印刷する。
29:文字数決め
28:マットで印刷できれば
30:画像データをimage.phpみたいなので、書き出し
かつくくりつける
26:紙は一枚、印画紙はがきサイズ
25:デザイナさん
24:インデザインで実験
23:型に入れる
22:インデザインで、csvとがぞうとを流し込む
21:プロセスを統一
19:写真のサイズは大きくても良い。
20:基本バージョンとカレンダとか
9:かわいらしさ
8:品が良い。
7:かっこよい。
15:ひとつの寄書きに対してページ数。
14:改行のレイアウトはネットで売ったものを
そのまま。行数制限。

4:写真と寄書きの紐付けをしたい。
13:紙を変えてみる
12:デザイン的要請
2:管理者用画面を作りたい
11:写真が欲しい
1:csvへのダウンロードを表示。
10:やすく。
34:http://www.a-one.co.jp/cgi-bin/catalogue/product.cgi?prcd=29221
4:organize
8:場所
3:整理
7:箱
2:整髪
3:looks
12:spotlight
11:search pattern
10:cueup
8:https://www.google.co.jp/search?client=safari&rls=10_8_2&ie=UTF-8&oe=UTF-8&redir_esc=&ei=1qTQUI7JM43NmQW4g4EI&q=hoge
5:キーワード
4:検索
15:google desktop
3:文字列一致検索
14:evernote
13:tag
2:食事
1:料理
4:travel
3:旅行
14:
9:場所
8:日付
11:ホテル
7:チケット
10:カメラ、ブラシ、ヘッドバンド、アコーディングバック、胃薬、風邪薬、
コンタクト、ばんそうこ、
細 いペン、ラップトップ、下着、長半ズボン、
マックのケーブル、iPhoneのケーブル
2:早さ
1:早
6:ゆとり
3:中夜分割
2:速さ
8:非顧客案件？
1:早さ
11:最初のターミナルノードになるものを早く着手する。
3:時短
4:時間短縮
3:時間
4:時間短縮
3:時間
27:オンライン秘書
26:basecamp template
25:写真取る、文章書く、
24:機材をオンライン倉庫に
23:場所資源消費
22:場所資源とトレードであることを回避するような
21:量産
20:機械
19:routinize→outsourceしてから自動化
9:楽できるとこ探す
18:automator
8:scaleを計算する
17:ifttt
7:template
16:storyteller
6:os
15:自動化
5:共有
14:横断的効率化
4:効率化
13:Buffer
3:時間短縮
12:適材適所
11:オフショア
10:automate
49:@wait 6times 
x 0.5h
 x 30days
 90h
48:@wait autocycle
47:@wait transit
46:@mece 3 x 50 /60 = 2.5h
45:@mece maho-bin
44:@mece boiling
19:routinize→outsourceしてから自動化
18:automator
42:routine
17:ifttt
41:@mece choise on food
16:storyteller
40:@mece cook
15:自動化
14:横断的効率化
13:Buffer
12:適材適所
11:オフショア
10:automate
58:@mece purchase
57:@mece 0.7 * 4 = 2.8 h
56:@mece garbaging
55:@mece 15 x 90 /60 = 22.5h
54:@mece 3 x 90  /60 = 4.5h
53:@mece 20 x 12 /60 = 3.6h
52:@mece 100x2/60=3h
27:オンライン秘書
51:@mece 食材調達
26:basecamp template
50:@mece CF
24:機材をオンライン倉庫に
23:場所資源消費
22:場所資源とトレードであることを回避するような
21:量産
20:機械
9:楽できるとこ探す
8:scaleを計算する
65:@wait 15000
7:template
64:@wait 5x6x30=15h 15%
39:@mece organize
6:os
38:@mece finding
5:共有
62:@mece 0.3 x 4 = 1.2
37:@mece bears
4:効率化
61:@mece washing clothes
3:時間短縮
60:@mece purchase
34:WF
32:記録する
2:ラムさんの言葉。再集計をイメージすると
そこに向かって問題解決が進むという一般的な方法。
5:５万くらいはしょうがない？
じょじょにかな。
4:２ヶ月支払いが遅れる？
今払ってもらっても、
入金は再来月になる。
3:面倒でない
2:忘れさせる
1:月次課金
9:@wait 契約
8:@wait 0.5ゾーンの人たちに徐々に。２万ずつくらい
7:小さい人達にかな。５万文くらい？ｋれも５万減るわけだが？
6:自動振込にしといてもらうべきでは
4:auctions
3:服
4:looks
3:服を月4万
6:looks
4:服
3:服を月５万
71:scheduling
65:AC
58:@wait pknk
70:nodepad
64:priority == [[プライオリティ]]
57:衛生（顔、紙、体）
63:[[タスク洗い出し]]
56:服（外見）
55:NC栄養
49:cycle準拠
61:スケジューリング
54:SC
スケジュール
48:roiに準拠
53:CRM
52:AC
51:DC
45:生活衛生要因を確認
44:@done 飯
38:@done 朝キットを食べる＋ストレッチ
50:SC（睡眠）
41:@done 服
31:@done 整髪＋ドライヤー
18:@done pknk
14:@done 泡洗顔で洗顔
69:[[prioritize]]
8:朝
68:数えてみる
73:まずlse（衛生要因）
次にroi.xlsに基づく＋時間割
LSEと、ROI上位10。
ビッグスケールと短期計画は7:3で。
67:分解
72:43
66:@wait 犬の散歩
8:朝
111:morningkit
127:
49:cycle準拠
126:living costs
48:roiに準拠
125:takes time. at least for 3 days
124:auction or not.
45:生活衛生要因を確認
108:pknked
123:amazon issue. can't even go out coz i have no money.
do i go gym
120:hard context
58:pknk
57:衛生（顔、紙、体）
56:服（外見）
55:NC栄養
53:CRM
52:AC
51:DC
114:leave
50:SC（睡眠）
45:生活衛生要因を確認
52:AC
51:DC
123:motivation
50:SC（睡眠）
120:hard context
111:morningkit
58:pknk
57:衛生（顔、紙、体）
49:cycle準拠
56:服（外見）
48:roiに準拠
55:NC栄養
8:朝
53:CRM
107:@keyword [[better_pknk]]
33:@done 肉のバッファ
78:オヤの強力
77:@wait 電動？
76:@done ビーフジャーキーをBuffer
104:@cycle mini buffer
75:@done http://www.kenjoy.jp/cosme/4901301746627.html
http://www.kenko.com/product/item/itm_7741184072.html
http://www.soukai.com/P8064811/p.html
103:@cycle mini buffer
74:@done やっぱstorytellerbase
102:せんべいのかいたし、服のチェックにもうちょい注意。pknkいくとこ考えとく。
73:@cycle 前日にPKNKいってよさを確定を習慣に
101:pknkにいくさき
風邪を避ける必要があるので輻輳にもうちょい注意（温度チェックなど）
せんべい１枚しかなかった。がないよりははるかにましだった。
砂糖なめるのいい。コーヒー最初飲む気がしなかった。ここはビタミンドリンクかもと思った。
服をきての洗顔きつかったから、風呂場とか玄関においとくべきかも。
寝る直前の準備はきつかった。
70:@wait @time 虫歯治す
119:@wait 銀座方面へ銀座方面から
118:@wait cources
117:rotation(avoid being same places)
19:@done 肉容易しとく
86:@done ばばがいないときみはからう
113:@wait ジム
85:@done Buffer 栄養ドリンク
112:@done storytellerbase(自分とこ）
111:@wait 漫画喫茶系
83:@done 枕元にジャーキー
110:@wait カフェ系
14:@done 夜に準備しておく
82:@done 枕元に栄養ドリンクとコーヒー
59:@done ラップで塩ふってのせておかずのっけてくう
58:@done pknkにスタートできるようにする。
80:ラディッシュボーヤ的なもの
126:ジム自体を予約する
97:@done ボトルで買う
125:低血糖防止、雨、カラス
96:@done ふた袋を買う
95:@done まくらもとに水
123:@wait 六本木から表参道
27:@wait 洗顔を自動化
122:@wait 恵比寿から銀座
121:@wait うちから銀座方面
69:@done 枕元にいろいろ、
かかばんにいろいろ？
120:@wait うちから六本木
68:@done 無地とかの泡のやつ
66:@done まず栄養ドリンクを少し？
3:朝を効率化
65:@done ラップにしおふったシートつくっとく
20:@done 洗顔を効率化
64:フルーツ用意しとく
63:@done まくらもとにせんべい
39:@done おにぎりを自動化
60:@cycle 前日につくっとくを習慣化
109:pknk_target_db + rotation list , then put it in ical
108:
27:@done 洗顔を自動化
123:@wait 低血糖で外歩くの怖い
193:@wait 低血糖が心配
97:@done ボトルで買う
96:@done ふた袋を買う
120:@wait 飯食わないと外に出してもらえない問題
95:@done まくらもとに水
20:@done 洗顔を効率化
146:@wait @keyword [[affodingbag]]
144:@wait ６月９日。
ちょっと茶と。でも朝はまあまあ起きれた。
219:nest
218:一旦家から[[nest]]へ移動するので服はなんでもにしておく
168:@wait コースだけローテして食べるかは出発時に選ぶ。pknkqueueには両方の候補を
215:襟シャツ３枚くらい買う
167:@wait カフェでも何でも軽食
214:着れる服増やす
166:@wait 朝たべてからどっかで食べてさらに移動にも対応
213:服のメンテ
69:@done 枕元にいろいろ、
かかばんにいろいろ？
165:@done 低血糖
212:靴下も出しとく

68:@done 無地とかの泡のやつ
3:朝を効率化
164:@wait 朝ご飯たべないなら喫茶かも。
低血糖的に２回
211:@done affordingbagに絆創膏アフォード
163:@wait 飯か喫茶店か
210:服はセットを作るのと、着れる服を増やす、あるいは着ないのはすてるか、メンテ
←洗濯とアイロンメンテの一回のランタイムROI計測

66:@done まず栄養ドリンクを少し？
65:@done ラップにしおふったシートつくっとく
64:@wait フルーツ用意しとく
119:@wait 夜の間にやっとく、ができなかった
63:@done まくらもとにせんべい
189:@done 歯
116:@cycle 習慣化 ハンガーにつるす
188:@wait 朝ごはんがいけてない。
60:@cycle 前日につくっとくを習慣化
19:@done 肉容易しとく
115:@done 顔洗って整髪したらすぐいけるようにしたい
114:@cycle 前日の夜の習慣にて、天気と気温できめる
113:@done 風邪を避ける必要がある
185:@wait 早く家を出るという気がしていないようだ
86:@done ばばがいないときみはからう
110:@done マックブックは出さないようにして、マックを買うというのも。
182:@cycle 基本的に六本木と渋谷と日比谷を繰り返すだけで、そこで食う
85:@cycle Buffer 栄養ドリンク
181:@wait 場所と食事どこのリストだけ。
180:@wait 六本木近辺と渋谷と日比谷で食うとこ決めて、あとは基本tipness
83:@done 枕元にジャーキー
82:@done 枕元に栄養ドリンクとコーヒー
136:@done 24インチとかほしいかも。
80:@wait ラディッシュボーヤ的なもの
39:@done おにぎりを自動化
134:@done 以下をいれっぱにする
3.財布
4.オプションバッグ
5.砂糖入れ替え
6.コンタクト入れとく
7.ipodいれとく
133:@cycle 3日に一回、アフォード系を。あとは入れっぱなしにしておけるようにする。
132:@done 1.マック
2.マック電源
は
131:@wait pknkいきさき、とかは
もっとバッファしてスケっとける。
レシピ表みたく。
33:@done 肉のバッファ
207:外に行く気がしてないみたい。
157:@wait cources
204:@wait 低血糖直す
155:@wait [[pknkqueue]]
選択肢
59:@done ラップで塩ふってのせておかずのっけてくう
58:@wait pknkにスタートできるようにする。
200:@done better_sleeping
152:@done 選択を作って入れてく
151:@wait どうすれば防げるか（１２時にメールがきたからだった。。。メールして昼にする。か基本は断るというか部屋借りてから。７月移行と。）
150:@wait better pknk
108:@cycle 前日に用意（バックにいれとく。マックも。）
1.マック
2.マック電源
3.財布
4.オプションバッグ
5.砂糖入れ替え
6.コンタクト入れとく
7.ipodいれとく
106:@wait バッグ考えるのも改善
103:@cycle minibuffer　せんべい
78:@wait オヤの強力
102:@cycle 前日に服を容易しておくを習慣に
77:@done 電動？
76:@cycle ビーフジャーキーをBuffer
172:@wait リストにする
75:@done http://www.kenjoy.jp/cosme/4901301746627.html
http://www.kenko.com/product/item/itm_7741184072.html
http://www.soukai.com/P8064811/p.html
171:@wait コースと場所のセット、を作る
74:@done やっぱstorytellerbase
129:@done 出し入れするものを減らす？
73:@cycle 前日にPKNKいってよさを確定を習慣に
128:@done better_sleeping
199:@wait 翌日の予定にあわせて早起きする
127:@done タイミングをそろえるようにするか、
寝る前じゃなくてもいいようにする
198:@wait 予定が詰まっているを避ける
126:@wait 事実
ねむかった。病的に。
でも眠くなる前のタイミングというのは必ずある
197:@wait 朝ごはん食べる時間
70:@done 虫歯治す
196:@wait 朝ごはん食べる
4:覚醒
3:朝キットを食べる
7:ハム→カロリーと肉->better_sleeping
砂糖で少量の濃いコーヒー→pknk_early
2:new
4:食事
3:栄養
39:** RUNTIME
36:caffains
35:@done protains + 25g
74:
34:fruits
+ vegitables
73:@wait 買う
33:suppli
72:@wait 試す
71:@wait たくさんの品杢を食べたほうがよいなら、たくさんのじょうざいでもよいか？
31:vitamins + 50%
70:better 
30:bery
49:probiotics + 80%
48:@done honey outs
2cups 
10g fiber
+ 10g honey
47:sugars + 15%
46:meats
45:fruits
43:suppli
42:乾いている
41:流通を超える
40:CF
59:WF
19:血流
57:water + 50%
16:買う
15:サプリメントでとっとけはビタミンB群。 
7:ビタミン剤
ビタミン的なさぷりを取る
54:効率
53:@done protain bars 
2
52:@done honey 
5 times x 10g
=50g
4:食事
51:@done probiotics
3:栄養
50:@done honey
69:vitamins
29:食材調達
28:variety
66:CF201308
27:@done オーツ
65:5times foods
26:@done fiber + 80%
64:@Noding drink them?
63:kits for honey outs
62:wf for honey outs
23:風邪
61:CF
22:カロリー
60:Context
1:栄養素
4:米の飯
3:野菜
2:肉
27:中にプチプチでまかれたモノを
26:もののラベル
4:プチプチでモノを巻く？
25:ガムテを箱 x 6切る
11:バッファ
10:@home @done プチプチをシートにしておく
22:ダンボールを箱にする
31:* RUNTIME ***
17:@done ダンボールもっと買っとく
30:綴る
16:ダンボールの選定
6:motivation
5:better  looks at home
4:50000
3:椅子
6:検収期間設定
4:先方へ連絡
3:検収
5:要件と背景決めてアウトソース
4:google
8:文字列一致検索
3:検索
4:比較
3:検討
3:業務委託メール
12:機能
11:制限
10:構造化
3:
たとえば「places」という自前のシステムがあって、これは構造化されている。
一方でサｰバ上の「node」は構造化があまりされていないされてない。（＊タンブラーのテクストみたいなもんの自前システム版）
ノードパッドは「因果関係」を持つということができるように構造化されていて
これは他のクラスと関係を持つということでもある。
制限->構造->機能となる。

データに型を持たせると一般的にはほかのアプリケーションや機能、型との接続性が下がる。ほとんどの場合、型の中に否定形データがある。たとえばRSSならdate,title,descriptionなどをもってないといけないことに加えて、型がある。
1:権利処理
16:xlsを共有するということ？
3:連絡
2:著作者連絡先
17:内諾
16:ターゲット著者一覧
15:メールキット
9:受領確認とアップデート
8:完了
13:書類に押印
7:メール送付
12:封筒に
6:@secretary ターゲット著者一覧
21:メールキットから選択
11:返送
送付
5:著者の記事一覧
10:受領
4:著者による公開前確認
3:公開可能
19:著者決定
9:モチベーション
8:適材適所
7:自動
6:多目的化
5:バッファ
4:網羅
3:横断的効率化
49:sync deploy
48:auction
47:touch
46:kit
38:@wait アライアンス
45:smaller project
44:newjit
27:pknk
43:キャピタルゲインマネタイズ
19:プログラミング5パー高速化で一ヶ月200万か1億
35:すごい質問
26:睡眠
42:amplifier
25:栄養
41:double
24:食事
16:最適なUIと自動化
32:nea
23:モデリング
15:速さ>早さ
31:商流
22:仕組み化
14:context base
21:communications
20:g
11:福利
10:ユーザビリティ
1:機械
3:場所資源とトレードであることを回避するような
2:場所資源消費
14:うちからまあ近い
13:g
12:密封部屋借りる
11:うちからすごく近い
8:スタジオ
10:アカノア
7:密封空間
6:歌える環境
5:毎日歌う
4:歌の訓練
2:歌
15:安い
5:ユーザーコンテンツを取る
4:コアである動画を用いる
1:歩いてみた
9:ムーブメントっぽくする
8:ユーザーが自作するのを待つ
7:「カーペット」つまり花道
10:50人くらいはヤってる状態にする
6:phpでのクリック統計データ取得api。
2:walk
1:歩く
1:歯
4:tooth
4:無痛のとこに電話
3:歯医者
1:段取り
4:仕組み
5:
4:milestone
3:段階
3:一斉メール（＋契約書あり）方式
一斉オプトアウト。契約書なしで公開方式。
ダマテン公開方式。
6:フルオプトアウトとする条件としきい値は？
5:のどぬーる
4:のど焼く
3:殺菌
5:のどぬーる
4:のど焼く
8:過酸化水素
3:殺菌
4:再現
3:毎回
11:compare
5:noding for both (or all ) of the nodes
8:それぞれの重み。
XLSかmmかndで、点入れてく
3:比較
4:water
3:水
7:cyclicly
3:決算
2:弁護士
1:法務
4:attention
3:注意
1:洗い物
5:検索
4:片付け
10:干す
7:籠に入れる
6:洗う
5:回収する
4:* RUNTIME ***
3:洗濯
17:しまう
16:たたむ
15:たたむ
14:洗い＋乾燥機
13:回収する
12:取り込む
9:形を整えて
11:引っ掛ける
8:移動させる
81:手
123:泡立てる
80:[[リソース]]消費は？
122:乾かす
37:効率
98:@wait 余計な時間とは？
97:汚れのオチとトレードではないのか。
菌のレベルが指数関数的とか？
96:低刺激？
34:@wait なんか他のも試してみる
108:あそこに移動
95:余計な時間を減らす
33:@wait 洗顔料
138:保湿すると色コクなる？
107:泡立ち
94:一日4回化
32:コンテクストベース
137:顔さわんなくなる
106:保湿
93:頻度
31:@wait 毛
136:全部の毛を消す
30:自動？
134:質
133:コンテクストベース
132:ついでに歯
131:リステリン含む
130:ほっぺのと肩凝りのと深呼吸
17:leave
78:@wait どうすれば、なぜパーフェクトホイップがいいのか調べる。内容物
77:@wait 評判をググる。
118:オケおく
75:@done 倍にしてみる。4倍に。接着が増える
44:automate
13:泡洗顔
115:もっと髪濡れない時間かからない洗い流し
10:pknk
144:移動
143:@home クラリソニック部屋試す
112:洗い流す
142:@wait クラリソニック＋部屋に置いとく
111:顔なぞる
141:部屋にいる間にできる
110:水に濡らす
29:@wait 道具
7:looks
28:洗顔のモデリング
27:better   washing
4:wash
3:洗顔
24:削っても復活するように栄養
23:つけおき洗顔
127:@wait クラニソック
84:習慣
83:意識コスト
82:時間
20:ながら
201:流す
141:部屋にいる間にできる
248:gym
200:泡立ててTに
245:ゴム
244:コンテクストベースルーチン
243:巻く
159:@wait double
242:ゴムでトリガー
241:構造と操作
157:@done 部位
240:@home 輪ゴムを
156:@done Tだけ。
17:leave
180:@done ユーザビリティ
155:@done 泥？
211:@wait 手数減らす
210:@done 重曹
199:ゴムでトリガー＾
198:流しで流す
10:pknk
197:ざっととる
82:@done 時間削減
196:泡つける
195:ゴムでトリガー
228:@wait kit
227:@wait wf
251:pick a how
223:@home 泡洗顔バックに
97:汚れのオチとトレードではないのか。
菌のレベルが指数関数的とか？
222:@wait 泡洗顔おいとく
24:削っても復活するように栄養
96:低刺激？
221:重曹T洗顔
137:顔さわんなくなる
94:一日4回化
93:頻度
238:鼻うがい
7:looks
237:うがい
236:歯を磨く
4:wash
235:水を飲む
209:@done 水とお湯？
3:洗顔
208:@done 洗剤えない？
233:トリガー
207:@done お金の消費
231:一日一回だけ泥で毛穴
32:@done コンテクストベースルーチン
230:@sun 重曹水にしておく
203:[[意識コスト]]削減
202:風呂場で毛穴も
5:温度（２０～３０度）・湿度（７５％以上）
4:24時間乾燥
3:浴室のカビ
9:地にろうそくのロウを塗っておくのです。

カビは、胞子が水分をすって増殖したもの。
水分がなければカビは生きてはいけません。

ロウには水をはじく性質があるので、ロウで塗った目地には水分がたまらず、カビも生えないのです。
目地のような細かいところに塗るロウは細いソウソクが最適です。
11:結局はお風呂に入ったときにキレイにしておくのがコツなんですね。
8:http://www.lion.co.jp/press/2004036.htm
10:浴室内の空気の流れが速くなって、換気効率も上がるようです。
7:http://www.team-mishina.co.jp/antifungus/index.asp
6:http://www.samore.co.jp/comosy/index.html
4:印刷する
3:消し込み法
5:咀嚼
4:時間短縮
3:消化時間短縮
9:意識コストあげないで咀嚼減らす
11:訓練
8:楽てきるところ探す
10:一口にもうちょっと沢山？
7:* 消化のRUNTIME *** 
6:咀嚼
4:咀嚼
3:消化速度
4:消耗品
3:消耗
5:否定は数少ない存在の方法。
チェックリストはたくさんのメリットに連結させるための方法。
マニュアルとチェックリスト
4:#keyword [[否定環境]]
3:#keyword [[存在]]
2:淘汰は否定環境に似ている。
なにをしてはいけないか。
価値を損う。に否定をつけると価値を得ることになる。
よって多くの場合存在は淘汰の反対でもある。
存在は、してはイケナいことを存在のぎりぎりまで行う。
創造や創造は系であって、系の発動の後、因果が起こりなんらかの緊張関係が成り立つが、それに対して否定系が襲いかかる。
最終的にのこったものが存在である
2:http://lang-8.com
1:添削SNS
4:warm
1:温
4:メールチェックする？
見積もりしたやつ＋αでいろいろあった。3万とかくらいか。
あと保守用の資料作成とか、スペック再提出とか、4500円で出そう。
3:湯浅さんに請求できる金額を整理する。触れる？
5:引越し後も使える。
4:CF
3:漆喰
9:倉庫は木なので使わない
11:紙に漆喰塗るの可能かやってみる
8:目に入らないところは収納にする
10:メートル単価の表にする
7:目に入るところを。
6:可搬な漆喰で安い方法
1:炎症緩和
3:絨毛運動機能回復
2:pknked
7:風邪薬
10:鼻スプレー
6:消炎剤
3:絨毛運動機能回復
2:pknked
1:炎症緩和
5:クロールにいい
4:ウェブのスコアリング
3:無制限URL
2:人のサイトをランダムにみて、
スコアリングのためにいい。
5:ipodにコピー
4:tunetalk
3:無制限VoiceBox
2:画像のランダムピックアップ。
画面にキーワード（[[半固有名詞]]を書いといてそれを保存しておいて読み出すというのもある）
2:どうすれば検索
1:片付け
49:@wait 他のものを除外する。
48:@wait 上下つっぱり
47:@sun 突っ込んどいちゃう
39:どうすれば５重くらいにゴミ袋入れておく
38:どうすれば日常的に投げれば入るようにしておく
29:@wait どうすれば十分なスペースに吊る
45:@sun どうすれば太陽光をガムテ固定試す
37:@wait どうすれば近くに
ゴミ箱と、
ビン・カン、
ペットボトルを
落とせるか。
縦方向に並べて引っ掛ける
52:@sun ライトとかのケーブルたち
28:@wait どうすればしまう＋はじめるが簡単
36:@sun ペットボトル箱袋を用意する
51:@wait テーブルからちょっとはなす
43:@wait どうすれば簡単に外れるようにする
26:@wait どうすれば吊る
42:@wait どうすれば外さなくてはいけない
50:@sun 冷蔵庫除外する
25:@wait どうすれば台車にウワモノ落とす
41:@wait どうすればライトアップ xトリガー 
17:定置管理
33:@wait どうすればnotification
24:@wait どうすればハサミ用意できるか。
40:@wait どうすればライトアップする
16:分別
32:@wait どうすればphisical staffs
23:@wait どうすれば結構な面積になる
15:どうすれば数の文だけボックス達を用意する
31:@wait どうすればreminder
22:ペット
--
ダンボール
--
燃える
燃えない
--
ゴミじゃない
--
水分など処理が必要
--
缶と瓶
30:@wait どうすればtrigger
21:@wait どうすればトリガー
12:どうすればmeceのエンドポイントへ
11:どうすればmeceのスタートポイント
1:特技
4:在庫
2:http://toukubo.com/post/13016253893/yellowblog-jesuisunechatte-yuramaro
1:猫
1:献立
4:http://zxc.cz/wp2/
7:home
4:瑕疵
3:１.瑕疵対象は富士商会による利用時に発生した不具合のみ。現状のものにマルチアカウントを追加し、マルチアカウントでの利用に耐えるものにする改変を行った主体にが、複数ユーザでの利用時に発生した不具合の瑕疵責任を負うものとする。
2.瑕疵期間は3ヶ月
3.検収期間は現時点から1週間以内
4.検収は富士商会様ではなくmysystems様で行う。あるいは別途記載する検収期間に間に合うようならば主体は問いません。
5.支払いはすでに検収をしているとみなせる前半部位（サーバ側）と後半部位（クライアント部位）とに分ける。
6.5の期間は前者が11月10日と、前者12月10日に。
7.マルチアカウント化をした場合、瑕疵は、問題に応じて、責任主体が別れる。
8.瑕疵対象には運用による不具合は含まない。発注側がハードウェアー、ミドルウェアー、os、回線、電源そのほかについては運用主体と別途契約する。
9.検収期間を過ぎておきた不具合（瑕疵）による経済的な損害などについては開発側は責任を負わない。
10.瑕疵対象となる、担当開発部位の、開発担当としての対応は、24時間365日といった常時対応は不要とする。
開発側と受注側とで調整し、できうるかぎり早急に、バグの内容によって相談する。






＊2,3は一般的な開発の相場、常識に習います。
2については開発規模が1000-1億円程度で1年程度、1000万以下で半年程度（アプリケーションが年次処理などをする場合は例外的に1年もある）
100万以下では2,3ヶ月、というのが一般的。
検収についても、1億円規模程度で1ヶ月、50万円程度ならば1週間程度で集中的にやることが相場的、一般的です。
今回は現時点で1ヶ月ほどかかっていますがいまだに検収がなされないので、現時点から1週間程度での検収を希望します。
難しい場合も、期限を提示ください。




＊4、５、６について、
検収の相場、開発の一般的習慣、また国が立行政法人　情報処理推進機構（ＩＰＡ）などで提示していたり、
実際に民間企業に開発依頼をしている事例の水準からすると、この開発での検収期間の長さなどは
大きくかけ離れたものです。システム開発の検収と考えずとも、非常に受注側に有利な進め方になっています。
開発費３０万円程度のシステムの場合の妥当な検収期間は、１週間程度です。これが２週間程度かかるということなどは
ご相談いただければ受け入れることはできますが、mysystemsなどの都合（追加開発の可能性なども含めて）で、
一月以上、無条件で延期され、これにともなって支払いも延期することはフェアではないと考えます。
すでに半分は事実上検収済みで２ヶ月間、発注側が対価なしにメリットを享受していますし、
これへの支払いが利用から４ヶ月後であるということも問題があります。

14:服（外見）
13:衛生（顔、紙、体）
12:pknk
9:SC（睡眠）
8:DC
7:AC
6:SC
スケジュール
24:風邪引かない
5:NC栄養
3:生活衛生要因
18:cycle準拠
21:roiに準拠
15:CRM
3:食費
38:やってみる
37:カードで払う
36:定期的にスイカから
34:記録
28:@purchase reader
33:因果検証
27:ifttt routine and trigger in environmental day
32:レビュー
26:@wait cardreader
31:削減
25:capture buffer with 
24:logging
19:舞ちゃんとホテル
23:koku
18:@wait TKP
17:@wait 安い部屋借りる
16:@done 支払い
20:@wait 二人の部屋
15:@done ジム
14:家に要るがPKNK
13:そう伝える
12:家で割り込まれない
10:場所代
9:家で作業と飯しつつ
8:家
7:友達の数
6:PKNK
5:割り込み
39:2%
44:@done edy
70:@wait 水 4000
43:@done point
15:@wait ジム
13:@wait そう伝える
12:@wait 家で割り込まれない
10:@wait 場所代
88:@done 1000
87:@done 家具で持っていくべきもの考える
86:@wait basecampさらに？
85:@cycle 直前に組む
109:@done 使わない
107:essentials
103:@wait デカフェ
102:@wait 14000
24:@done logging
101:@wait コーヒー
100:やってもらう
99:@wait 14000
98:@wait pknk
97:5000
96:warehouse
69:@done sunで料理
95:@done 40000
68:@done 食費
119:@scheduled ジム
94:4000
67:@done 削減
118:better_sunriver
93:@wait 追ってprivateのをbitbacketに
66:skypeかline
117:@wait 金曜に金払いにいく
92:@wait gitに
65:電話代カット？
116:@wait findjob
91:@wait github
115:@wait ガムが到着する
63:@wait Dropboxカット
114:@home 見てみる
62:@done warez
113:@wait プチプチ入れる
61:学費
112:@wait 外でのガム
34:@done 記録
60:@wait 気持ち
8:@wait 家
5:@done 割り込み
79:@Air ファイル削減
78:@scheduled 朝走ってみる？
76:試してみる
75:思い出しと習慣
74:@wait ネット 3000
73:電気 5000
72:@wait ブレーカー
1:男女
3:女なら男
2:男なら女
1:画像
5:画像の選別と管理
2:画像の仕入れ
16:sss化
25:mismatchtest
18:名詞抽出とモデリング
13:画面仕様
2:サイトマップ
1:画面遷移
21:rss
20:dataapi
9:エクセル
8:紙
19:data api
7:httpclient
18:htmlリンク
6:xml
17:疎結合
5:rss input verb
4:verb + model
3:rssexport verb
14:User CRUD target of keyword
2:rss
13:User Cruds Keyword
12:MDAアプ
11:odbcコピー
10:xlsexport
25:shell copy
24:jsoner
23:mod_proxy
22:mod_rewrite
33:@iPhone teleblah
29:https://storytellers.highrisehq.com/login
28:message = email / phone / skype / goto / see
27:highrise
25:find [[someone]] to ask
24:snsか、[[友達]]にこういうひといない？と聞く
23:fof
22:use sns
21:who is common friends?
19:target is not on the Web
20:google  him
9:target is not on the Web
18:contact
8:google  him and find the rss
6:疎通
44:modeling him  and news around him
15:[[meet]] someone between them 疎通
14:this is stronger than others
13:direct connection
39:google the url and blog and mutual friend
40:highrise
38:stscに電話
37:要件@Noding
36:content
35:contact info
34:mail / phone / skype / goto / see / basecamp / generate rss * readers
2:pknked
1:症状緩和
1:癖
4:習慣
7:米の飯
16:砂糖の多い、量の少ないコーヒー
6:食事
5:運動
4:日常的に[[栄養]]を
3:発火
12:肉
5:目的
9:[[目的検索]]
2:[[目的]]を[[自動]]で検索する == [[高価値]]のものを自動で検索する
21:topを開いて他プロジェクト
11:ミックス
8:ROIシート開く@air
7:高roiの検索
18:lse
6:一石二鳥
17:美。
5:目的
3:目的検索
14:横断的効率化
4:修正
3:直る
5:ask
4:meeting
8:ピッチ
3:相談
1:眠い
4:sleepy
4:sleeping
8:食欲
3:睡眠
7:meta
4:５感をひとつずつ集中する。
指回し体操を２分３０秒集中してやる
自律訓練法｛
1.重感覚の訓練。
2.右腕が温かい
｝
自己暗示{
1.時間圧縮。
2.疲労
}

3:睡眠サイクル
2:1500pt
1:砂糖を避ける
10:サイトに記入して
5:http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1318523923
4:データの準備
3:青色申告書の記入

2:税金支払
1:確定申告
48:@wait こちらも通帳とテンプレート
47:@wait テンプレートの統合勘定エクセル
46:準備
44:server
29:@Air 統合勘定エクセルとかフォルダを[[見つける]]
36:@wait 選択
42:timecapsule
35:@wait 集収
27:@wait CHE
41:掃除
34:@wait 画像
33:@wait studiovoice
25:@wait 楽天
24:@wait 三井住友
17:@wait http://www.printing.ne.jp/
31:@wait odbc経由でのdbmsへのデータアップ
16:@wait pdf
30:@wait csvの編集
22:@wait みずほ
15:@wait netprint
21:@wait 通帳からMECE
14:@wait 仕分ける
20:@wait 顧客のリストからMECE
9:@wait 印刷
12:@wait 支払いログエクセルに
8:@wait PDF
11:@Air 売上データエクセルに
12:@done 国税庁サイトぐぐる
11:@wait http://www.iothe.co.jp/?gclid=CL3OxPHPwo4CFRKBTAodiU3wyg
10:@pknk print
9:http://www.printing.ne.jp/
8:pdf
7:netprint
6:PDF
5:印刷
4:税金支払
3:確定申告２３年度
27:スケーラビリティをするにはどうすればいいか？
26:たとえば（メタでコンフィージングだけど）
変化の抱擁ということはスケーラブルか？

25:ノードパッドはなにをしているか？
ノードパッドのチーム化？
24:単一システムでない社会での再現頻度と1回の再現量とを見、合計を見る）
23:どうすれば変化部位が認識できるか
22:変化部位認識
21:変化の抱擁
20:徹底dryと変化部位の記述容易性
変化からとる。変化するのはノードパッド的なもの。
ノードパッドから自動で
19:37がどうやってcrudの自動吐き出しというモデルを見つけたか。
ドメイン駆動というヒントはあった。
9:自動化？
18:ヒストリー
8:再現性を検出とをすごく入力
17:レビュー
7:快密度と快頻度。頻度。roiが高いノードであり、それが再現する点。
16:43？
6:詳細なノードの頻度を抽出する行為
15:再現の検出は、意識的には無理？
5:再現頻度？再現額
14:現在のスキーマーを抽出する
4:ストーリーテラー
13:スキーマの変更とウェブアプか。テラーアプリ化。
3:nodepadで社会プログラミングをする。
というか価値あるノードの価値を自動計算する方法か。プログラミングにしても。
ストーリーテラーをモデリングする。
12:ノードにメタ情報を持つ方法か
11:意識的に再現性を見る＋入力する
2:神谷町ロイホはplacesの一つ。place
4:節制
3:福利
3:秘密の発見
12:charene
11:finndings discovery 秘密の発見
10:igy
8:secretary
2:秘書
7:@wait valueのメールくる野末
6:@air ,value-で転送設定する。
entry@secretarize.comを実現させる
29:@net mindmanagerでのメール化のサンプル考える
4:@ask @air 請求書テンプレート作成
3:秘書利用環境セットアップ.buildtime
32:@wait 秘書利用環境セットアップ
21:@secretary 口座番号とログインを客にメール
10:初回費用として振込をお願いする
32:秘書利用環境セットアップ
31:客:ToDoのインストールと購入
9:銀行口座への振込み
8:銀行口座の稼働
7:メッセージプラスの取得
18:dropboxのアカウントの作成と客のaccount.mailizeフォルダ（
例：toukubo.mailize/フォルダー）の作成と共有
6:gmailのアカウントの取得
28:iphone用のツールToDoの取得のをおすすめするメールと
URLの通知
17:フォームを埋める
4:rmilk account取得
15:@secretary メッセージプラスへの、新規ebankでの申し込み
3:@done 秘書利用環境セットアップ終了メールを客にメール
25:=======================================
氏名：
住所：
電話番号：
共有アカウント用の英数字文字列:
共有アカウント用のパスワード: x7FjfkqP
dropboxアカウントメールアドレス
（まだ持っていなければ空欄で結構です）：
14:@secretary 書類への記名など
11:@secretary 秘書による口座の作成
33:
共有アカウント
Id : agltd
Pass : rundance8

-- 
株式会社エージーリミテッド / Ag Ltd.
代表取締役
飯野　健一 / kenichi IINO
iino@agltd.jp

〒107-0062
東京都港区南青山4-15-28
南青山グリーンヒルハウス102
TEL：090-6147-8532
http://www.agltd.jp


4:赤帽
3:移動
2:アウトソース
1:移管
4:税金支払
3:税金
9:支払い
7:収入と売上のデータの準備
5:青色申告書の記入

4:http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1318523923
3:開業届け欲しい
58:offlines
57:online
48:切手を
39:確定申告書作成コーナーで入力
56:ebankで銀行としてので入出金確認
29:三井住友の振込
47:コンビニ
65:去年のメール全部読む？
55:ebankで入出金確認
htpt://www.ebank.co.jp
46:@Onthego 切手張る200円。
19:国連大学
54:dccardで入出金確認
http://www.dccard.co.jp
45:返信用封筒
18:顧客リスト
36:税金支払
44:投函
17:売上のリストを書き出す。
52:banks
51:cards
24:mos
42:封筒
60:japannnetで入出金確認
http://www.japannetbank.co.jp
33:通帳鞄に入れる

14:領収書の用意

32:通帳チェック
22:estimate
21:Vital
12:振込チェックしてxlsに
20:PMC
11:売上
5:@wait 正常
9:竹炭？
4:風邪引かない
8:http://joshinweb.jp/season/kaze1.html?ACK=BLG002701
15,800
3:空気清浄機
5:水
4:消化速度
3:空腹
26:ストリーム
25:メッセージ
15:@wait 資金繰り
9:たくさん雇用担当
14:プレゼン
32:divigin tasks
22:多数人員と、
プロジェクトベースであることと、
費用を可視化する。
12:トライアルベース
11:CF
5:競争の可視化
20:レビュワーチェーン
10:競争のある雇用担当者雇用と、プロジェクトベースで。
4:たくさん人員
3:競争
29:利益率
28:@cycle BCに雇用のTODOを作ってメッセージを送る。
27:ウェブ
2:管理画面はなにをインがするか
3:良い管理画面のためには[[ウェブアプ]]もいいけど
[[applet]]などでのもっと早いのもいい。
待ち時間ゼロもいいけど、
ドラッグアンドドロップとか
[[キーボードショートカット]]とかもいい。
7:クラスカ
6:ポンスポンスタ
5:場所
3:箱
9:places
12:変数名
8:カナルカフェ
4:福利
8:@wait ログ
3:節制
7:計画
4:おにぎり
3:米
8:おかず
3:食事
2:米の飯
17:砂糖を避ける
11:おにぎり
8:おかず
3:食事
2:米の飯
7:捨てる
10:粗大ごみ
6:捨てる予約に入れる
5:予約
4:シール購入
3:一覧
1:粗大ごみ予約
4:粗大ごみ一覧
1:粗大ごみ捨てる
4:粗大ごみ予約
7:粗大ごみシール購入
6:enpknk
15:#keyword [[ルックス]]
5:[[未知]]の[[芸術]]を見る
14:#keyword [[訓勇]]
4:ジョブススピーチ読み
3:死のロード メメントモリ 4444 新しい祈り。
2:#keyword [[高発火]]
10:愛
9:#keyword [[自信]]
8:勇気
7:精神的な問題
4:ストッパー
3:系
4:TestedSystem
3:納品
109:販売
32:yahooストア
108:取り扱い
31:紙の媒体資料
107:媒体資料そのもの
30:アイハイトの堀内さん相談する
59:アンプリファイアーとグラウンドゼロ
105:広告アドオン一個目
58:ツイッター対談実施する
104:9月頭
57:紙にソーシャルをつなげる方法だ。
クラスの可視化とコンテンツのつなげ。
言葉のレベルで。
103:9月末
102:8月末
101:8月10日
54:ターミナル
100:7月20日
53:adwhirl
52:エヴァ
51:ガスとクララも行ってみる
127:500店舗アタック
79:ガス相談
50:クララオンライン
126:いろいろ成功
125:他のも。TKPも。
77:デザイナー
8:ガス？
124:予定調整
123:永井くん？
75:見積り戴けないか
122:エヴァは？
5:キャッシュアウト？
4:編集
120:まどまぎ広告？
72:販売管理
3:紙版
70:金額、ダミー、大きさ
98:7月20日に営業開始
97:営業
29:WIRED
95:特集確定
28:@wait ABCなど
27:書店
92:共有性のある場
24:ネット販売代行の仕組み
90:什器営業
23:@wait まどまぎ特集用の店舗
22:販売の資料を制作する。
21:江坂さん
20:ネット販売
46:企画
45:本とソーシャルとコミュニティの形成
44:ソーシャルの方法。集客の方法
43:沼？
店舗とのコネクション
119:広告取ってくる
42:直販の営業
118:まどまぎ広告とりたい？
69:なんかその経路に乗っけて売りたくないか。
116:紙と印刷営業
68:店舗を持ってる会社
115:確定
67:WIRED
114:候補だし
113:企画書
65:5000部印刷
111:制作9月20日
63:法律？
110:スケジュールにする
62:委託販売契約
61:什器の会社や額縁の会社とか
89:チーム
88:営業チーム
87:仕様書
86:書店営業契約？
18:タイアップ広告
84:委託販売の契約書
17:@wait 特集ごと
83:予約
16:店舗
82:すでに商品を売ってる人に声を書ける
15:@wait 特定店舗
14:とらのあな。
8月1日には営業開始。
13:流通
39:@wait インファス
38:企画書
35:広告媒体資料
34:ダミー
4:デザイン底上げ
3:細いフォント
2:簡単にデザイン底上げができる
5:自動化ツール
4:要素
3:組合
7:借りること自体が信用構築ではある。
6:金融は強烈な中毒性を持つ
5:利率は７以上は異方的な裏金
4:同一銀行使うようにする
2:その金融主体とのトランザクション（売上＞利益）。
例：不動産シェアの親になって年額５００万の入出なら
５００万の売上と見なされる。
ー＞７００万の売上が別にあるなら１２００万の売上の信用
ー＞これは利益が一緒でも売上が大きければ信用に
8:定期雇用の名義等が必要
1:経済的信用
7:借りること自体が信用構築ではある。
6:金融は強烈な中毒性を持つ
5:利率は７以上は異方的な裏金
4:同一銀行使うようにする
2:その金融主体とのトランザクション（売上＞利益）。
例：不動産シェアの親になって年額５００万の入出なら
５００万の売上と見なされる。
ー＞７００万の売上が別にあるなら１２００万の売上の信用
ー＞これは利益が一緒でも売上が大きければ信用に
8:定期雇用の名義等が必要
1:経済的信用
17:多少関係ない人とかでもつれてきて。
ただのパーティでもあるようなんで。

22:持ち物作り
1.芳名帖と写真
2.モニタ
3.ゆきちゃんからあずかった成果さんへの。
4.

4:＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃

20:new
2:2.ログをポートフォリオにする。URLにする？
事後コミュニケーションできるようなのに？
携帯？
1.やりたい人、やれるひと、できる子、を探す
2.メディア決める
ウェブの紙にしてもいいし。
アップロードできるようにしてデジカメでとったやつを
どんどんあれにしていって。
できたらコミュニケーションできるようにしたいけど。

9:写真の中の色でそろえる。背景と前景をあわせるかずらす
8:使ったアイテムを写真にフレームであらかじめ撮る？
7:本の形状にする？
クリッカブルなコラージュのフラッシュかjpeg
一枚の紙の上にポラおいていって、
人間関係を書いていく。
芳名帖使って？

10:鼻を頻繁にかむ
15:炎症緩和
3:絨毛運動機能回復
9:鼻うがいをサイクルで
12:綿棒を鼻に入れて洗浄
11:鼻スプレー（ネブライザー）
11:鼻の毛細血管
25:鼻腔加湿
15:炎症緩和
3:絨毛運動機能回復
18:鼻水除去
2:[[レヴィット]]の「通説は間違っている」を思い出す。
自分の思想についても、統計と因果の正確なレンサのみが真

4:遵守
3:継続
4:網羅
3:消し込み法
7:bcか
backpackか
nodepadでdoneか
xlsで
1:編集
4:画像
3:集収
7:[[集]]めて[[編]]む
2:選択
4:訓練
3:練習
2:繰り返し
3:DRY
2:https://mail.google.com/mail/?shva=1#settings
1:署名
4:美しい
3:美
4:美しく
3:美しい
4:design
3:美しく
7:美しい
7:習慣
10:@cycle
29:遵守(reminderメッセージに従う）
22:一回にひとつの習慣をやるようにする
33:1010100
26:自分犬扱い
7:習慣
33:custom
32:習慣キュー（一度に一つ）
13:対象ランタイムの作業自体の改善
31:cycle
12:afford
27:
11:kit
7:リマインダーを出し、順守する。
6:100日後などに再度
5:最初に５日確実に続ける
4:1010100
19:better_reminder
3:習慣化
33:遵守(reminderメッセージ）
2:amplifier
1:翻訳
29:今既にいるインターンさんにも。
32:party
28:営業をする
31:見積り
30:日向野ららさん。
25:訳の量
24:facebook
23:つ・な・が・り
22:学生のネイティブの留学生
19:海外の一流誌で英語で執筆して掲載されている人。
21:むこうで実際に活躍しているライターさんを、最終添削のために、紹介してくれないか。
お願いする仕事は、
・品質チェック
・
　
加藤さんがある程度信頼している人。
　
18:革命だよバカとれんこする
20:加藤さんに聞いてみる
17:お金
16:浜野さんの彼氏
14:デザイナーが、こんなカッコいい、あなたがここを担当したよ、というのが
後に出せるような、ポートフォリオにしてくれます。
13:【このプロジェクトがートフォリオになる人】といって募集する
9:王子テクニック
12:このプロジェクトがートフォリオになる人
8:餌
11:ポートフォリオとかにもなるよ
7:50人集めて、二人
10:名刺とか、肩書きとか、クレジットとか。
6:モチベーション
5:ポートフォリオになる
2:学生集める
1:翻訳ワークフロー
15:どうすれば方にかえてみる
4:@noding noding
12:ユーモラスなの
3:考
22:バッファー、自動化、分解、現状
21:モデリングしてみる
20:仕組み化
17:え
8:frameworks
16:現状、をかく
7:質問の仕方を変える
15:どうすれば方にかえてみる
4:@noding noding
3:考
12:ユーモラスなの
22:バッファー、自動化、分解、現状
21:モデリングしてみる
20:仕組み化
17:え
8:frameworks
16:現状、をかく
7:質問の仕方を変える
65:分解的に数える。
人間なら手が二つ。
指が5個。
->modeling
28:runtimeの順序替えしてみる
63:ノード自動変換されそうな単語にする。
一般的な名詞化をする
62:創造的な考え
7:質問の仕方を変える
58:目的、選択肢要素、選択肢セット
22:バッファー、自動化、分解、現状、網羅、逆、
3:考
69:どのコンテクスト？
71:類似は？
16:現状、をかく
52:中心の移動
12:ユーモラスなの
21:idea
20:エスカーション
8:[[frameworks]]
7:質問の仕方を変える
17:え
16:現状、をかく
4:@noding noding
15:どうすれば方にかえてみる
3:考
2:人
1:者
14:カロリー
13:アペタイト
27:冷蔵庫で肉をまず解凍ー＞ほか調理
7:ハム
6:pknked
24:AC
5:動物性タンパク質
23:料理
22:レシピ
3:肉
21:肉の調理
17:肉のレシピ
21:@wait target(objective Noun)
17:@wait kit
20:@wait custom
16:@wait affordable
15:@wait 習慣
14:@wait afford
13:@wait クリームアフォード
12:日焼け止め
34:睡眠
29:@wait cycle 買う
9:ビタミン剤
ビタミン的なさぷりを取る
28:@wait Add to BuefferList
perfect whip
lightbolves
travelingpad paper
brash
nice clothes
emerald mountain

8:血流
27:@wait 閾値設定
7:食事
31:@pad 一回買ってみる
26:@wait 購入手段 of each buffer
6:@wait タンパク質
30:@wait num of purchace of buffer
25:@wait パーフェクトホイップ
ジェル
コンタクト
バンドエイド
靴下
ブラシ
インナーを2ヶ月に1回
ガム
カクセンとるやつ
パンツを2ヶ月に一回
服を一ヶ月に一回4万（2ヶ月なら8万）
みみせん
鼻スプレー
顔ペーパー
カロリーメート
渋谷で靴
コンタクト
リステリン
歯ブラシ
歯磨き粉
ハム
バナナ
ミルク
トイレットペーパーとティッシュペーパー
皿洗いの戦時亜
電球
夏でもカイロとマスク
5:血流
24:@wait スパン of buffer決める。
4:栄養
23:@wait automate
3:肌
19:@wait stsc?
22:@wait 月額20万
18:@wait Buffer = buffer
1:肩凝り解消
5:姿勢
4:荷物軽くする
3:pknk
2:マッサージ
35:@done do not do this
26:2shock
43:eat_more
33:@wait avoid drinking caffines while empty
23:chew
32:points things 
40:@tao-pointed
31:bad customes more like the 
5:胃薬
3:胃
39:tao chewing super for 5 days. 3000 point
38:shall i give more points on that?
29:keep daily activiy and avoid eating too much.
37:@scheduled tao for 3 days
46:emok
36:@mece avoid siguar and tabaccos
1:胃薬
5:@pknk yakkyoku
4:タケプロン
6:運動
5:乳酸菌
4:肌
3:腸
7:食物繊維
6:出力変数
5:閾値
4:入力変数
3:入力変数　*　閾値　*出力変数
4:motivation
3:自信
7:外見
5:自動
6:自動化
6:ブラウザ上でctrl+jなどで検索にいくけどそういうの[[aop]]キャッチする。
5:ノードパッドで選択して「k」を押す
4:指し先は自動化する？
3:キーワードと指し先投入
9:
2:自動リンク
6:ブラウザ上でctrl+jなどで検索にいくけどそういうの[[aop]]キャッチする。
5:ノードパッドで選択して「k」を押す
4:指し先は自動化する？
3:キーワードと指し先投入
9:
2:自動リンク
17:機械
23:automator
4:モデリング　+ RuntimeNode作成
3:ストーリーテリング
2:自動化
14:storyteller
20:routinize→outsourceしてから自動化
11:量産
24:ifttt
2:米
1:自炊
17:@wait よりでかい水瓶？
16:洗いやすくする
15:腐るの避ける
14:炊きやすくする。
9:健康
13:調理
8:AC
12:食事
7:紙コップ？
11:出前
6:@wait もっとつけとく
10:時間
22:火事は1500円になりました。
5:@wait 食洗機をもっと
21:家事の子
4:おにぎり
3:食器洗う。もっと
10:ContentsOfNodeInterfaceOfNodeOfFilesOfDataDirOfNodepad
6:system creates NaturalSentences
5:Sytem creates ParentNode and ChildNode from sentences and CausualExpression
3:ができれば？
どうすれば？
するとどうなる？
ために
ひきおこす
因果する
のためにいい
の
Of
for
by
so that
9:textflow
2:自由文　≒ NaturalSentences
2:翻訳
1:英語
2:think different担当
1:菅
5:用意（今も連絡をしている）
4:固有名詞について権利処理が多い。
3:記事数が多い。
2:条件出し。
1:著者切り権利処理
9:お金にさほどうるさくない。
8:上記についてそれぞれの要素に特徴的な人を二人宛。合計10人程度

7:読者に人気
6:出来る限りテキスト量が多い。
2:マネタイズ
1:薄利
4:食事
3:虫歯治す
5:融資契約書作成
4:アカウント作っておく
3:融資
14:資金調達
9:リスク
8:複数主体に
11:割合が利益を超えない、
かつ
利子分が純利益の30パーを超えないことをバリデートする
10:担保
5:融資契約書作成
4:アカウント作っておく
3:融資
14:資金調達
9:リスク
8:複数主体に
11:割合が利益を超えない、
かつ
利子分が純利益の30パーを超えないことをバリデートする
10:担保
4:[[融資]]元
3:融資契約書作成
7:テンプレート
10:資金調達
45:素直に聞く
44:借りれるなら利益大きい方
79:受託の数値
43:eva支払い？
78:数字上の戦略の数値
42:仕事と仕組み全体
77:一回借りてそのあと返す
76:
40:@wait MOS
75:決算
72:受託の人員
71:
70:余裕がない
28:広告戦略がある。クリエイティブ・テクノロジーで、
最大の広告代理店や出版社等の読者を抱えている。
電通とかからコンペに誘われる状態。
27:事業規模がでかいということ。
B2Bの。
59:誰とか？紹介とか？
58:売掛企業に合意してもらう
57:信用ある売掛起業が
その企業に入ってくれているということ
56:@wait Growth
20:ウェブ
55:テックのひとともっとあっていく
54:@wait zerobase
53:@wait Zenの町田さん
52:ファイナンス構造
51:有目的会社新規創設
50:綺麗な決算と綺麗な代表
39:既存企業
35:金融信用
34:不動産保証
69:連絡
33:決済。
68:確定申告
32:なにも書かないことがメッセージです！
というのも、なにか色々書いてしまうということは、
純粋なる、僕達がやろうとしてる、ソーシャルって、みんなで解決するポテンシャルと原理を
向きだし（中略）
宜しく！
31:間に合うかだけ
30:マイクロファウンディング
64:そういう会社を親切して
僕以外のひとが僕の仕事の
その役になるというのが無理あるということらしい。
それは信用なのだろうか。
62:プレゼンテーション資料
61:スタートアップとかファイナンスで化けるところを
紹介する。エクスパンションを融資に頼るべきところ。
19:ストリーム
9:複数主体に
60:テックのひとともっとあっていく
18:メッセージ
8:リスク
17:可視化
7:担保
16:キューピット
6:割合が利益を超えない、
かつ
利子分が純利益の30パーを超えないことをバリデートする
15:女子
5:アカウント作っておく
14:きちんとした信用のある企業
4:融資契約書作成
13:売上額
3:融資調達
48:事業戦略
12:信用ある売掛企業
47:担保たち
11:売掛ベース
46:無形資産
9:スクワット
15:保温
3:血流
18:運動
21:毛細血管
9:スクワット
15:保温
3:血流
18:運動
2:gmap
14:cheaper gym
1:行き先
9:gym
26:eliminate
8:コンビニに行く用
25:emok
19:protain bar
18:  3. 駅チカ。
5:go and back
17:髪
22:洗顔
16:  17. g
21:agc
4:motivation
3:行動力
32:オンラインに持ち込む理由をユーザーに作る
10:なうネス（今そのコンパに参加）
43:1. ファッションをだ～っと流す
2. 興味の文字をだ～っと流す。hot or not
3. 二つとも一致した人がいたら、その人の顔写真とかがわかることにする。
4. さらにいけていたらヒトメボ。
※一回だけ。
31:二回以上参加する理由をユーザーに作る
42:興味をとっておく
20:敷居下げる
40:オンライン拡散させる
51:
50:合コンゲームモードであるから王様ゲームのように、冗談であると
いうことにしておいて、あとで「マジでピットきちゃってた」を通知できる。とか？
9:３つ以上共有
8:共有
7:@wait 男なら女
6:@wait 女なら男
4:@wait 男女
3:「出会いの場創出」と「地域活性化」
19:密度の高いアクション
18:
登録者数か、課金したいアクションを増やす
39:そこでヒトメボ（シンプルなボタンインターフェイス）ですよ。
17:Yahoo Partnersにメリット
28:ネットワーク効果ある？
49:事後
27:参加者が増え、
メッセージをオンラインで送り合い、
かつ、ヒトメボボタンが押される
37:言い訳を作る
15:地域側にメリット
48:出会いこそすべて
36:楽しい（ゲーム）
14:街コン側のメリット
47:もはやそこまでいったら出会い系なので、お金払ってでも出会っちゃってください。（ここまでやったんだからお前ら金払ってよ感）
35:事前に
13:共通の友達 x 興味・趣味 x 場と今を共有
46:Yahoo に入ったらさらに他のユーザーへの情報を上げる？
24:物語に

45:一目惚れ感
23:ゲーム
33:@cycle １ビット参加
11:参加者
44:出会いに近いところ
22:参加者増える
32:腔内
31:喉
30:鼻
69:頻度
67:高速な衛生
19:不調を減らす
66:double
18:ストレス
65:方法
17:免疫
64:肛門
16:真菌
63:感染症か検査する
15:細菌
62:sanitation
14:ウィルス
61:手、風呂、腔内
13:部屋を綺麗にする
60:部屋をアルコールで？
12:感染源とか
11:風邪を減らす
49:reminder
48:忘れがち
47:頻度を上げていく
46:モノ減らす
45:体
44:モノ
43:部屋
42:風呂
41:手
28:髪の毛
27:顔
74:餌を与えない
26:毛
73:doubleか。。。
25:頭
72:eat
24:部位
71:除菌
23:腔内を徹底する
70:衛生っぷり
22:歯
21:栄養
20:時間 15%
59:シャワー
58:頻度
57:風呂の速度効率化
56:better_すごい風呂
55:better_sleeping
54:体温
53:湿度
38:仕組みにする
37:効率
36:重点
6:時間 7%
35:陰毛と性器
5:抗菌疲労を減らす
34:舌
4:meceに
33:歯
3:衛生
4:@Noding 衛生的加湿
3:衛生的加湿
1:被写体
3:美男
2:美女
14:パーマリンク
13:ぐれっパブル
12:クリッパブル
9:ファイル
11:プレビュー
8:ファイルベース
10:サムネイル
7:evernote
6:dropbox
5:マルチプラットフォーム
4:マルチデバイス
3:同期
2:エントロピはほおっておいても増大する。
よくこのようなことはいろんなタイミングで起こる。
たとえば衛生状態、たとえば部屋の汚さ。
ブロークンウィンドウをほっておくと、全体が荒野のようになってしまうということ。
虫歯一つが体全体をだめにするということ。

4:依頼
3:要件
4:依頼
3:要件
4:element
3:要素
4:可視化
3:見える化
4:探す
3:見つける
80:Sentences
29:最良ケース
*プロジェクトサイズ（大=8,中=4,小=2）
*関連会社の性格
27:70パーセントはできそうな人日
26:テストリスト
39:3日かける
25:最悪ケースをカンで出す
24:最良ケースを出す
37:コミットメント：　約束。

23:最有力ケース
36:リスク要素の表 

22:関係する会社の性格
35:標準必要期間
49:チェックリストに通す
■チェックリストで自己チェック
漏れやすい機能要件 

セットアップ・インストールプログラム 
データ変換ユーティリティ 
サードパーティ、オープンソースを使うためのラッパ 
ヘルプシステム 
配置モード（リリースモード） 
外部システムインターフェース 
忘れがちな非機能要件 

正確性 
相互運用性 
更新性：ごめん、よくわからないで書いている。 
性能 
移植性 
応答性 
再利用性 
拡張性 
セキュリティ 
生存性（？）：ごめん、よくわからないで書いている。 
利便性（ユーザビリティ） 
これをどのように工数に反映させるのか。
私は定型の手法を持っていない。すまない。
計測できるものならするが、非機能要件などは計測は難しいのだ。
テキトーに実装工数を何倍かしている（1.1倍、とか）。

作業の時間粒度を10時間以内にする。
34:3×工数の立方根（Excelだと=power(n,1/3)） 
48:支払方法
33:事務、ITサポート（環境構築など）、構成管理
47:開発場所は。高速は。
ツールに縛りがあるか。
32:マネジメントのコストをかける
46:ドキュメント納品物が必要か
31:最有力ケース
最良ケース
最悪のケース
について確立とリスクを付与する

45:ユーザー教育は
30:プロジェクトサイズ
44:サービスレベル
58:リスク表と、コスト増分を数値化パーセンテージで
43:保守計画は？
57:10倍してみて、さすがに絶対そこまではかからないと名言できるか試す
42:やソフトウェア費用
41:ハードウェア費用
3:見積
55:@wait 計測できるものを数える。
画面、コントロールブロック（フレームなど）、機能、外部インターフェース、データテーブル、データ項目、既存のソースコード行数…など、計測できるものは全部計測する。

67:分解
52:期間もコストも決まっている：　「今季の予算内で…」のケース。最大の機能を実現する。 
誰もよくわかってはいない：　「～というのを作れと上司に言われたんで見積もってください」。最小コストになるようにする。 
期間が決まっている：　「～までにできないと、～が間に合わないんです」。機能を削る。 

51:幻想ファクターなくす。悲観的に。最悪のケースは8倍くらいにはなる
50:意思決定者を決定する
77:DifficultyPointOnSentences
74:
リスク表
83:PostSentencesOnStoryteller
19:preinterview
82:story
81:ui specs and detailes for difficult things
5:AC
4:請求
3:見積り承認
2:見積り作成
6:請求
5:見積り承認
4:見積り作成
7:AC
4:fire
3:解雇
4:年に60万の計算機資源
3:計算機資源
2:勇気
3:勇気の訓練（訓勇）
2:1010100
3:訓練
5:忘却
8:創作
3:記録
12:log
11:logging
5:忘却
8:創作
3:記録
4:compare
3:評価
1:試
4:試行
4:キーワード
3:語
2:人
1:誰か
7:roi
6:cf
5:長期課金モデル
4:金
3:課金
8:人で課金
7:AC
16:cook
3:料理
13:腐らせない
12:洗いが面倒くさい
1:調理
7:@scheduled 鍋
どうすれば鍋をもっていける？
デカイ。移動する時？
いっこっつ？輸送する？
箱に入れて？タクシー？だな。
いつ？忘れる。どうすれば思い出すか。
←スケジュールする。出る時。
6:@sun コンロ設定
5:@wait 火
4:調理器具
3:調理をsunで
12:宅配受取
8:フードプロセッサー
4:請求
3:見積り承認
2:見積り作成
14:請求書
9:請求書作成と印刷
11:投函
10:封筒に梱包
6:見積りしたものから
17:ac
4:請求
3:見積り承認
2:見積り作成
14:請求書
9:請求書作成と印刷
11:投函
10:封筒に梱包
6:見積りしたものから
4:nodepadを作る。それを共有。tellerteamならnodepadかbasecampなど。
3:議事録
4:財布も持たない
3:http://www.sinkan.jp/radio/radio_322.html
4:purchace
3:買う
2:コスト
1:費用
7:内容をノードから
17:読者は？
10:デザイン・規模・実績・url
4:プレゼン
14:http://jp.techcrunch.com/archives/20101102365-days-10-million-3-rounds-2-companies-all-with-5-magic-slides/

人（多分whyの前のヒントになる。svの編集長とかとギークとかとディレクターとか
紙の編集者のて誰とか外国人とか英語にひらけてるとか、少数精鋭とかでちょっと一味ちがう
チームだなたしかに。でもビッグネームと付いてる）
ー＞why(哲学的な意義だとかグダグダいう。これ自体でロマンチックに惹きつけれないと
　　多分だめ。分かってもらえなくても、印象づけれたほうがいい。
　　製品デモ（what）で理解が起こればいい。
ー＞how（こういう方法論があります。SEOとかって具体的にはこうやるんだよ。
　ほかでやった例でこういう風に出口とかでるし、wikiとかこういう自動リンクが、
　hatenaも。所得税のへぼサイトもデザインを皆殺しにするくらいの結果をたたき出してるね。
　アイフォンはこうやってつくれちゃうし、人工知能みたいなのまでつくってるよ。
　こういう方法が結集して。。。lang-8とかconyacとかとぶつけるとかさ。）
ー＞what 1 マネーシート。クソ儲かるよ。wikipediaのPV知ってるかよ。
ー＞what 2 （ブランクスライド）＝製品のデモ
  （紙版サンプル、ウェブのメディアサイト、タンブラー、
　　　アーカイブサイト、PDFとSVの過去の雑誌４００冊見せる。
　　　自動リンクしてるサンプル、とか）
ー＞見込客とか受託案件の客とかで十分いけそうな風でしょ。

3:資料
4:資本種
3:資本
65:最大10倍
5:財務モデル
64:投資家と、古くからの身内の比率は決める
4:事業計画
3:資本政策
62:金額決める
61:早期実現
49:最初
46:借入
45:現在のキャッシュフロー表
29:何を買うか。
40:速度を買う
26:資本政策
25:13.資金繰り計画（中期…3年〜5年をC/Fベースで年次展開したもの）※数値データ
24:12.資金繰り計画（短期…1年をC/Fベースで月次展開したもの）※数値データ
23:11.中期資産計画（中期…3年〜5年をB/Sベースで年次展開したもの）※数値データ
79:閾値設定
22:中期利益計画。3年ー5年でP/Lベースで念じ展開したもの
78:購入手段 of each buffer
21:9.短期利益計画（短期…1年をP/Lベースで月次展開したもの）※数値データ
77:パーフェクトホイップ
ジェル
コンタクト
バンドエイド
靴下
ブラシ
インナーを2ヶ月に1回
ガム
カクセンとるやつ
パンツを2ヶ月に一回
服を一ヶ月に一回4万（2ヶ月なら8万）
肉＋朝を効率化->ビーフジャーキー
栄養ドリンク
（朝を効率化）→ボトルで水3本
（朝を効率化）→せんべいふた袋
みみせん
鼻スプレー
顔ペーパー
カロリーメート
渋谷で靴
20:8.長期ビジョン
76:スパン of buffer決める。
75:ヤフオク？
74:Buffer
73:@secretary
72:AAC
71:purchace
59:4ステップマーケティングを買う
70:定率とは？
56:株価は僕より大きくないと
53:株にしてもらう
52:280くらいか。どうすれば返せる？
売上たてる。
38:6%を三回で調達
50:借金分返済250とか
35:市場サイズ統計の検索
34:ランタイムを書けばいいのかも。ビルドタイムのも。
売上←PMの人数
利益←売上＊利益率
利益率←現在のもの＋開発で改善できる率
利益率改善←投資に依存。最大で30パーセント改善可能か。
33:上場するときに時価総額がいくらになっているのか？
32:主にPRと広告、サイズのため＋追加開発のため。
31:PMの雇用
というかサイト
19:7.事業の課題やリスク
30:支出のリスト
18:6.マーケティングデータ、類似企業との比較、参入障壁等の説明
17:1.会社概要・会社の沿革
86:uniとか？
16:2.役員の略歴
15:株主構成
14:ビジネスモデル、決済エンジン説明
83:gcal
13:安定株主比率
82:num of purchace of buffer
69:東窪に、
「テラーズに再投資すること約束している賞与」を利益から定率分配する。にご同意いただく。
この時の株価は、シーズ投資時の株価の1/5
12:IPO時の発行済株式総数
9:予想キャッシュフロー表
81:cycle 買う
68:身内の株式保有率は6パーまで。
11:必要資金調達額
8:予想賃借対照表
80:Add to BuefferList
perfect whip
lightbolves
travelingpad paper
brash
nice clothes
emerald mountain

67:僕との倍率
10:株主構成
7:予想損益計算書
66:最低5倍
6:利益
21:これ全部のノードか？
20:肌
9:金
8:体
19:型変換
7:足
6:アプリケーション
17:頭
5:コンテクスト
16:パターンマッチ
4:手
15:情報
3:資本種
14:因果関係
13:問題
12:変形
11:人
10:時間
25:信用
24:再現性
23:もの
22:場
4:資本
3:資源
15:モノ
14:事
4:資本
13:道具
3:資源
12:システム
11:事
10:モノ
9:時間
8:人
7:金
1:資金繰り
5:deals
2:AC
87:どうすれば余剰人員をどれだけ多く抱えて経営していけるか
64:どうすれば知的財産権担保融資
86:どうすればある社長は、ヘットバンティング会社に「とにかく優秀な人を見つけてだけくれればいい」
というちょっと変わった依頼をして成果を上げていました
85:どうすれば一番ありがちなパターンは「うちは若い社員が多いから、優秀な営業幹部を入れよう」と、
営業経験者を中途市場から雇ってしまうケースです。こんなことをすると、
たいてい時代遅れの営業知識を部下たちに押し付け、すっかり若手社員はやる気をなくしてしまいます。結果、社内がめちゃくちゃになってしまう
41:どうすればstorytellers.CF
84:どうすればだから、書籍や講演会、メルマガやブログなどでできるだけ多くの情報を「先出し」して、
私のことをよく理解していただいてから、本当に私を必要としてくださる方に、
じっくり掘り下げていただけるような、ホームページの作り方をしています。
61:どうすれば[[事業計画]]
83:どうすれば今回は実験だから少額だけど、これが成功したらたくさん広告投資をしていくつもりである
60:どうすれば[[資金調達用資料]]作れるか
82:どうすれば実験マーケティングであることをハッキリ広告会社に
109:@done どうすれば最低でも、普通のシステム会社。
もっと悪いと、ものすごい事情で、
資金繰りなどの失敗でつぶれる？
81:どうすれば初めは捨てても惜しくないような金額で広告を出し、その効果を測っていくという方法です。
8:@done どうすれば短期的には速度
とその結果としての
競合による買収を防いで、
概念やツール自体の
成熟を、適切な人間が担当できる。
（僕たち以外に適切に
これら技術を発展させられる人間がいれば
身売り（買収打診）をしても
かまわない。
80:どうすれば発信する情報のクオリティーを上げる
107:どうすれば成功率。
129:既存投資と投資の速度の可視化
106:@done どうすればリスク
128:閾値
6:どうすれば
105:どうすれば倍率
127:事業
5:どうすれば規模
104:どうすれば倍率
リスク
成功率。
126:リスクが少ないこと
103:@wait 事業計画書の書類か
3:どうすれば資金
123:資金調達スクリプト
100:@wait どうすれば資料等作成後。
120:http://localhost/storytellers/storytellers_CF2.xls
の表の検討
18:@done 利益計画
17:どうすれば人を扱う力について
16:どうすれば相手が喜ぶ説明は？
59:@done どうすれば稟議（nホップ）に対応
14:どうすれば人物だそう
36:@done storyetllers.milestones
58:@done どうすれば覚悟を見せる
13:@wait どうすればシーズアタックリスト
VC系
http://cpijapan3.blog40.fc2.com/#entry1
http://www.cskvc.co.jp/gyoumu/gyoumu1.html
http://www.innovation-engine.co.jp/strategy_2.htm


円JAL
http://cpijapan3.blog40.fc2.com/blog-category-7.html

金融公庫
http://www.chusho.meti.go.jp/faq/faq/faq19_kinyu.htm


http://www.k.jfc.go.jp/sinkikaigyou/loanj_c.html


http://www.dreamgate.gr.jp/
79:どうすればmarketing_storyteller
35:@done どうすれば必要資金
57:@wait どうすればすでに利益率は高く、売り上げもある。
巨大化に際してのサイトの長さに耐える必要がある。
78:どうすれば紹介ツール
34:@done どうすれば段階
56:どうすれば大案件の受託と同時につなぎようの投資を実施するという許諾
11:どうすれば営業力の説明
77:どうすれば情報の先出しをし、興味を持った会社から問い合わせしてもらう」という
現在のマーケティングにスイッチしたことで、飛躍的に売り上げを伸ばしました。
33:@done どうすれば段階ごとの必要資金
99:@wait どうすればSCにかなうか。
平気。
32:資金調達
98:@wait どうすれば月間のプロジェクトごとの作業時間
と提供売上時間
出して、引く
97:@wait どうすれば#keyword [[スケジューリング]]
96:@wait どうすれば行動あるのみ？スケジュールからか。
52:@done どうすれば母にとってのメリット
95:@wait どうすれば政府系金融でぐぐったところ
51:どうすれば投資家にとってのメリット
72:@done 開業資金について修正

94:@done 自己資金割合
50:どうすれば熱意ある個人
71:@wait どうすれば事業計画
93:どうすれば資金調達スクリプト
92:@done bigwhyをいう
119:どうすればstorytellers.資料
91:@done どうすれば現在所得200万から
最初は50万にしてやるつもり。
118:@done どうすれば思った人がいる時点で要注意。
実際には僕はこの「まねできると思っているが
できないこと」
がこのプランのキーの一つだと思っている。
ただの「先端技術」ではない。
90:どうすればstorytellers.資料
117:@done どうすればまねできると思った人が結構いること。
116:@done どうすれば若いということ。
派生して、信用など。
対策：老獪と経験の購入。
CEOの登用。
115:@done 広告へのアウトソースの質。
アウトソースはするが、そこからの内容を判定する能力が
アウトソースには重要。
ほか技術会社との差異は、
技術会社らしからぬ広告や
広告等の一流の人材への交流や見識。
114:@done 交流会等への参加
（まだ全くやってないで既存の知人レベルでもどんどん
巻き込まれていくレベルの商品の魅力）
113:@done は4ステップマーケティングの採用
112:どうすれば販路
111:@done 一般的投資量。
マーケティングはプランに込み。
これに基づいた原始的な売り上げがたっている。
価格戦略もOK.
あとは販路のみ。
この時点では営業（クロージング）の補助はできている。

110:@wait むしろ担保。
一割は返す。
49:どうすれば熱意ある集団
48:どうすればよい現場と現場の用意
25:どうすれば買収時の金額などについての契約
47:どうすれば投資家は現場を見る
24:どうすればベンチャー投資の実務―発掘、選別から回収まで (単行本)
を読む
http://www.amazon.co.jp/ベンチャー投資の実務―発掘、選別から回収まで-エムヴィーシー/dp/4532131367
44:@done どうすれば資途
87:どうすれば余剰人員をどれだけ多く抱えて経営していけるか
64:どうすれば知的財産権担保融資
86:どうすればある社長は、ヘットバンティング会社に「とにかく優秀な人を見つけてだけくれればいい」
というちょっと変わった依頼をして成果を上げていました
85:どうすれば一番ありがちなパターンは「うちは若い社員が多いから、優秀な営業幹部を入れよう」と、
営業経験者を中途市場から雇ってしまうケースです。こんなことをすると、
たいてい時代遅れの営業知識を部下たちに押し付け、すっかり若手社員はやる気をなくしてしまいます。結果、社内がめちゃくちゃになってしまう
41:どうすればstorytellers.CF
84:どうすればだから、書籍や講演会、メルマガやブログなどでできるだけ多くの情報を「先出し」して、
私のことをよく理解していただいてから、本当に私を必要としてくださる方に、
じっくり掘り下げていただけるような、ホームページの作り方をしています。
61:どうすれば[[事業計画]]
83:どうすれば今回は実験だから少額だけど、これが成功したらたくさん広告投資をしていくつもりである
60:どうすれば[[資金調達用資料]]作れるか
82:どうすれば実験マーケティングであることをハッキリ広告会社に
109:@done どうすれば最低でも、普通のシステム会社。
もっと悪いと、ものすごい事情で、
資金繰りなどの失敗でつぶれる？
81:どうすれば初めは捨てても惜しくないような金額で広告を出し、その効果を測っていくという方法です。
8:@done どうすれば短期的には速度
とその結果としての
競合による買収を防いで、
概念やツール自体の
成熟を、適切な人間が担当できる。
（僕たち以外に適切に
これら技術を発展させられる人間がいれば
身売り（買収打診）をしても
かまわない。
80:どうすれば発信する情報のクオリティーを上げる
107:どうすれば成功率。
129:既存投資と投資の速度の可視化
106:@done どうすればリスク
128:閾値
6:どうすれば
105:どうすれば倍率
127:事業
5:どうすれば規模
104:どうすれば倍率
リスク
成功率。
126:リスクが少ないこと
103:@wait 事業計画書の書類か
3:どうすれば資金
123:資金調達スクリプト
100:@wait どうすれば資料等作成後。
120:http://localhost/storytellers/storytellers_CF2.xls
の表の検討
18:@done 利益計画
17:どうすれば人を扱う力について
16:どうすれば相手が喜ぶ説明は？
59:@done どうすれば稟議（nホップ）に対応
14:どうすれば人物だそう
36:@done storyetllers.milestones
58:@done どうすれば覚悟を見せる
13:@wait どうすればシーズアタックリスト
VC系
http://cpijapan3.blog40.fc2.com/#entry1
http://www.cskvc.co.jp/gyoumu/gyoumu1.html
http://www.innovation-engine.co.jp/strategy_2.htm


円JAL
http://cpijapan3.blog40.fc2.com/blog-category-7.html

金融公庫
http://www.chusho.meti.go.jp/faq/faq/faq19_kinyu.htm


http://www.k.jfc.go.jp/sinkikaigyou/loanj_c.html


http://www.dreamgate.gr.jp/
79:どうすればmarketing_storyteller
35:@done どうすれば必要資金
57:@wait どうすればすでに利益率は高く、売り上げもある。
巨大化に際してのサイトの長さに耐える必要がある。
78:どうすれば紹介ツール
34:@done どうすれば段階
56:どうすれば大案件の受託と同時につなぎようの投資を実施するという許諾
11:どうすれば営業力の説明
77:どうすれば情報の先出しをし、興味を持った会社から問い合わせしてもらう」という
現在のマーケティングにスイッチしたことで、飛躍的に売り上げを伸ばしました。
33:@done どうすれば段階ごとの必要資金
99:@wait どうすればSCにかなうか。
平気。
32:資金調達
98:@wait どうすれば月間のプロジェクトごとの作業時間
と提供売上時間
出して、引く
97:@wait どうすれば#keyword [[スケジューリング]]
96:@wait どうすれば行動あるのみ？スケジュールからか。
52:@done どうすれば母にとってのメリット
95:@wait どうすれば政府系金融でぐぐったところ
51:どうすれば投資家にとってのメリット
72:@done 開業資金について修正

94:@done 自己資金割合
50:どうすれば熱意ある個人
71:@wait どうすれば事業計画
93:どうすれば資金調達スクリプト
92:@done bigwhyをいう
119:どうすればstorytellers.資料
91:@done どうすれば現在所得200万から
最初は50万にしてやるつもり。
118:@done どうすれば思った人がいる時点で要注意。
実際には僕はこの「まねできると思っているが
できないこと」
がこのプランのキーの一つだと思っている。
ただの「先端技術」ではない。
90:どうすればstorytellers.資料
117:@done どうすればまねできると思った人が結構いること。
116:@done どうすれば若いということ。
派生して、信用など。
対策：老獪と経験の購入。
CEOの登用。
115:@done 広告へのアウトソースの質。
アウトソースはするが、そこからの内容を判定する能力が
アウトソースには重要。
ほか技術会社との差異は、
技術会社らしからぬ広告や
広告等の一流の人材への交流や見識。
114:@done 交流会等への参加
（まだ全くやってないで既存の知人レベルでもどんどん
巻き込まれていくレベルの商品の魅力）
113:@done は4ステップマーケティングの採用
112:どうすれば販路
111:@done 一般的投資量。
マーケティングはプランに込み。
これに基づいた原始的な売り上げがたっている。
価格戦略もOK.
あとは販路のみ。
この時点では営業（クロージング）の補助はできている。

110:@wait むしろ担保。
一割は返す。
49:どうすれば熱意ある集団
48:どうすればよい現場と現場の用意
25:どうすれば買収時の金額などについての契約
47:どうすれば投資家は現場を見る
24:どうすればベンチャー投資の実務―発掘、選別から回収まで (単行本)
を読む
http://www.amazon.co.jp/ベンチャー投資の実務―発掘、選別から回収まで-エムヴィーシー/dp/4532131367
44:@done どうすれば資途
87:どうすれば余剰人員をどれだけ多く抱えて経営していけるか
64:どうすれば知的財産権担保融資
86:どうすればある社長は、ヘットバンティング会社に「とにかく優秀な人を見つけてだけくれればいい」
というちょっと変わった依頼をして成果を上げていました
85:どうすれば一番ありがちなパターンは「うちは若い社員が多いから、優秀な営業幹部を入れよう」と、
営業経験者を中途市場から雇ってしまうケースです。こんなことをすると、
たいてい時代遅れの営業知識を部下たちに押し付け、すっかり若手社員はやる気をなくしてしまいます。結果、社内がめちゃくちゃになってしまう
41:どうすればstorytellers.CF
84:どうすればだから、書籍や講演会、メルマガやブログなどでできるだけ多くの情報を「先出し」して、
私のことをよく理解していただいてから、本当に私を必要としてくださる方に、
じっくり掘り下げていただけるような、ホームページの作り方をしています。
61:どうすれば[[事業計画]]
83:どうすれば今回は実験だから少額だけど、これが成功したらたくさん広告投資をしていくつもりである
60:どうすれば[[資金調達用資料]]作れるか
82:どうすれば実験マーケティングであることをハッキリ広告会社に
109:@done どうすれば最低でも、普通のシステム会社。
もっと悪いと、ものすごい事情で、
資金繰りなどの失敗でつぶれる？
81:どうすれば初めは捨てても惜しくないような金額で広告を出し、その効果を測っていくという方法です。
8:@done どうすれば短期的には速度
とその結果としての
競合による買収を防いで、
概念やツール自体の
成熟を、適切な人間が担当できる。
（僕たち以外に適切に
これら技術を発展させられる人間がいれば
身売り（買収打診）をしても
かまわない。
80:どうすれば発信する情報のクオリティーを上げる
107:どうすれば成功率。
129:既存投資と投資の速度の可視化
106:@done どうすればリスク
128:閾値
6:どうすれば
105:どうすれば倍率
127:事業
5:どうすれば規模
104:どうすれば倍率
リスク
成功率。
126:リスクが少ないこと
103:@wait 事業計画書の書類か
3:どうすれば資金
123:資金調達スクリプト
100:@wait どうすれば資料等作成後。
120:http://localhost/storytellers/storytellers_CF2.xls
の表の検討
18:@done 利益計画
17:どうすれば人を扱う力について
16:どうすれば相手が喜ぶ説明は？
59:@done どうすれば稟議（nホップ）に対応
14:どうすれば人物だそう
36:@done storyetllers.milestones
58:@done どうすれば覚悟を見せる
13:@wait どうすればシーズアタックリスト
VC系
http://cpijapan3.blog40.fc2.com/#entry1
http://www.cskvc.co.jp/gyoumu/gyoumu1.html
http://www.innovation-engine.co.jp/strategy_2.htm


円JAL
http://cpijapan3.blog40.fc2.com/blog-category-7.html

金融公庫
http://www.chusho.meti.go.jp/faq/faq/faq19_kinyu.htm


http://www.k.jfc.go.jp/sinkikaigyou/loanj_c.html


http://www.dreamgate.gr.jp/
79:どうすればmarketing_storyteller
35:@done どうすれば必要資金
57:@wait どうすればすでに利益率は高く、売り上げもある。
巨大化に際してのサイトの長さに耐える必要がある。
78:どうすれば紹介ツール
34:@done どうすれば段階
56:どうすれば大案件の受託と同時につなぎようの投資を実施するという許諾
11:どうすれば営業力の説明
77:どうすれば情報の先出しをし、興味を持った会社から問い合わせしてもらう」という
現在のマーケティングにスイッチしたことで、飛躍的に売り上げを伸ばしました。
33:@done どうすれば段階ごとの必要資金
99:@wait どうすればSCにかなうか。
平気。
32:資金調達
98:@wait どうすれば月間のプロジェクトごとの作業時間
と提供売上時間
出して、引く
97:@wait どうすれば#keyword [[スケジューリング]]
96:@wait どうすれば行動あるのみ？スケジュールからか。
52:@done どうすれば母にとってのメリット
95:@wait どうすれば政府系金融でぐぐったところ
51:どうすれば投資家にとってのメリット
72:@done 開業資金について修正

94:@done 自己資金割合
50:どうすれば熱意ある個人
71:@wait どうすれば事業計画
93:どうすれば資金調達スクリプト
92:@done bigwhyをいう
119:どうすればstorytellers.資料
91:@done どうすれば現在所得200万から
最初は50万にしてやるつもり。
118:@done どうすれば思った人がいる時点で要注意。
実際には僕はこの「まねできると思っているが
できないこと」
がこのプランのキーの一つだと思っている。
ただの「先端技術」ではない。
90:どうすればstorytellers.資料
117:@done どうすればまねできると思った人が結構いること。
116:@done どうすれば若いということ。
派生して、信用など。
対策：老獪と経験の購入。
CEOの登用。
115:@done 広告へのアウトソースの質。
アウトソースはするが、そこからの内容を判定する能力が
アウトソースには重要。
ほか技術会社との差異は、
技術会社らしからぬ広告や
広告等の一流の人材への交流や見識。
114:@done 交流会等への参加
（まだ全くやってないで既存の知人レベルでもどんどん
巻き込まれていくレベルの商品の魅力）
113:@done は4ステップマーケティングの採用
112:どうすれば販路
111:@done 一般的投資量。
マーケティングはプランに込み。
これに基づいた原始的な売り上げがたっている。
価格戦略もOK.
あとは販路のみ。
この時点では営業（クロージング）の補助はできている。

110:@wait むしろ担保。
一割は返す。
49:どうすれば熱意ある集団
48:どうすればよい現場と現場の用意
25:どうすれば買収時の金額などについての契約
47:どうすれば投資家は現場を見る
24:どうすればベンチャー投資の実務―発掘、選別から回収まで (単行本)
を読む
http://www.amazon.co.jp/ベンチャー投資の実務―発掘、選別から回収まで-エムヴィーシー/dp/4532131367
44:@done どうすれば資途
13:@Air まずは借りる加藤さんに返事
12:3段階の借り方
8:財務諸表とか
7:あの人相談してみる
6:受託のオフショア探す
24:他にもあたってみる？
23:可視化
19:投資調達
22:アンプ的に？
3:資金調達1209
21:比較する
20:https://docs.google.com/spreadsheet/ccc?key=0Aoo3wu6p6-9mdGNXMlFTVVBhclVjZUJ2RnBNS1V3c3c#gid=0
16:普通に決算して普通に借りる
7:シーズ投資とアーリー投資を考えている。
10:＋年利8パーセント利子分は毎月払いで二年後に一括返済、の融資でもかまわない。
＋株価は8万でご提案。
＋東窪の株価は1万。
＋以降はアーリー投資家時点までは、原則的には、株での増資はしない。
＋東窪が株を買い増すことのみ原則から外れる。
＋シーズ投資以降に東窪が購入する株価はシーズ投資の半額4万。
＋10パーセント以下にはしない計算。
＋この再投資目的は、当然、速度の改善と、
アーリー投資時にも、経営権レベルの66パーセントを維持するため。）
＋融資をうける可能性はある。
＋初期は利益を株保有率に応じて全額分配する同意する。
＋アーリー投資家から投資を受けるか、
　東窪の株式保有率が90パーセントになった時点までこの配当を実施する。
6:会計士と弁護士に妥当性を確認する
3:覚悟：現在所得200万から最初は50万にしてやるつもり。
bigwhy
自己資金割合。

資途
どうすれば短期的には速度
とその結果としての
競合による買収を防いで、
概念やツール自体の
成熟を、適切な人間が担当できる。
（僕たち以外に適切に
これら技術を発展させられる人間がいれば
身売り（買収打診）をしても
かまわない。


営業力
　@done 一般的投資量。
　マーケティングはプランに込み。
　これに基づいた原始的な売り上げがたっている。
　価格戦略もOK.　
　あとは販路のみ。
　この時点では営業（クロージング）の補助はできている。
　
　販路は必要
　　広告へのアウトソースの質。
　　アウトソースはするが、そこからの内容を判定する能力が　　
　　アウトソースには重要。
　　ほか技術会社との差異は、
　　技術会社らしからぬ広告や
　　広告等の一流の人材への交流や見識。
　4ステップマーケティングの採用
　交流会等への参加
　（まだ全くやってないで既存の知人レベルでもどんどん
　巻き込まれていくレベルの商品の魅力）
　やれば最低限のことは起こるでしょう。
　価格戦略等
　　紹介化や顧客化を可能にするレベル定量の
　　対相場サービス質量の優位性を提供。
　　営業（セリング＝押し売り）は一切省く。


リスク
　まねできると思った人が結構いること。
　　思った人がいる時点で要注意。
　　実際には僕はこの「まねできると思っているが
　　できないこと」
　　がこのプランのキーの一つだと思っている。
　　ただの「先端技術」ではない。
　　　対応は、一流の技術者の雇用と選定という次の投資。
　　　　　　加えて、東窪が技術経営に専属する。
　テラーのツール自体がまったく意味がなかった？
　最低でも、普通のシステム会社。
　もっと悪いと、ものすごい事情で、
　資金繰りなどの失敗でつぶれる？

　若いということにまつわる一般。派生して、信用など。
　対策：老獪と経験の購入。CEOの登用。

　リスク（ネガティブチェック）担当というポストの設置（投資）
13:storytellers
9:最高で、世界企業。
次に成功して、日本の開発のトップシェア(5%)
次に成功して、100億の売り上げ(10%)
次に成功して、20億の売り上げ(30%)
次に成功して（IPOできない）年間売り上げ2億の会社
（これはストーリーテラーというツールがまったく役に立たないとしても、
僕が開発会社をすれば、ごく普通に出るだろうレベルで、
この下に行く可能性はほとんど想定できない）(50%：倍率：3倍）
次に成功して、破産(5%：倍率0倍）


8:exitはIPOと会社買収を考えている
1:資金調達用資料
4:量
3:質
7:他人への質問
4:問題解決
3:能力
9:売上
2:自分への質問
8:サービス
1:質問
2:購入
5:purchase
2:購入
5:purchace
7:２０分だけ寝る
10:パワーナップ
6:体を起こして寝る
14:アラーム
13:起きる
9:
8:@wait better_sleeping
4:起床
3:ストッパー起床
5:コシがくびれる
4:意識がすぐにはっきりする
3:起立筋を伸ばして体勢維持
9:気分が晴れる
11:即ぐに滑降が良くなる
8:かっこうがいくなる
10:生産効率まで高まる
7:腹が割れる
6:無駄な脂肪が落ちる
4:axis
3:軸
4:移動
3:輸送
2:new
14:@pknk softbank shop
13:@wait どうぞ解約しましょう
12:@wait もう一個あるやつは？
9:その方が安いっぽい
11:マックの充電も
8:解約したら7万はらう？
10:iPhone5テザリング＋電池持つ
6:iphone5にする？
5:Androidは？
4:イーモバなくす
3:通信費削減
17:sim freeのiphoneにするほうほう考える。
3:通知
6:notification
4:CRM
3:通電
4:速
3:=速さ
6:自動
5:パラレル
4:でっかいPC?
13:速度
12:template
11:コピー
2:コンピュータの速さ？
1:速さ
10:テンプレート
9:量産
7:自動化
5:バッファ
4:効率
3:早さ
2:速さ
8:ボトルネック
1:速度
11:パラレル
5:連想曲線
4:印象の強い初回*毎日1度*7回＋3ヶ月に一度
3:連想
13:相互接続の快感
12:モデリング
8:パブロフと快
11:類似

4:message
3:連絡
4:mppで。
3:gotoで画面を見せてもらう
7:bcでチェックしてリストにいれてもらう
2:進捗
7:バンドの時間
43:即日入金だと自給ー300円です。で学生さん。
35:英語ブリッジ＋バンド
2:[[TKDG_III]]
18:☆近場で
1.english japanase bridging engeneer
2.think and write in english.
3.english engineering infomation.
4.link
5.rse
6.海外ツール。
7.rse的人間（アンテナ使い）
8.dispatch icj tasks to tata.
9.東大ガッカン受験。＋ブリッジ。
10.研究費取る。
11.コミュニケーションを再度やる。
12.国連のメディアスタジオ以外での仕事。信頼得る。
13.音楽、nodepad、en、は継続。

25:[[進路_stopworking_icj]]

23:＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
＃
15:高価値ルーチン＋バンド
22:☆近場で
1.english japanase bridging engeneer
2.think and write in english.
3.english engineering infomation.
4.link
5.rse
6.海外ツール。
7.rse的人間（アンテナ使い）
8.dispatch icj tasks to tata.
9.東大ガッカン受験。＋ブリッジ。
10.研究費取る。
11.コミュニケーションを再度やる。
12.国連のメディアスタジオ以外での仕事。信頼得る。
13.音楽、nodepad、en、は継続。

14:やや英語心配
21:############################################################################### ↑ ###############################################################################
48:即金性
47:国連
39:オーソリティ
46:いえの問題。
2:他資源
1:遊休
9:treadmill
3:pknk
2:運動
4:殺菌
3:過酸化水素
7:ビタミンＣ
1:適材適所
5:分解
2:me more voice
4:テラー適正は
見積もり出してもらう-> 承認のruntime
3:適正
11:point
4:gcal
8:えさ　を　gcalに
3:遵守
7:えさでつる
4:比較
3:選ぶ
5:比較
8:選択肢
3:選択
5:比較
8:選択肢
3:選択
4:mece
3:選択肢
4:部屋片付け
3:部屋
7:amplifier
4:部屋片付け
3:部屋
7:amplifier
5:加湿
4:暖房
3:部屋の保温
4:加湿
3:部屋の加湿
17:片付け
3:部屋片付け
4:deploy
3:配備
6:オレンジジュース
5:みかん
3:酸
7:ビタミン錠剤
5:姿勢
4:深呼吸
8:運動
3:酸素
7:インターフェイス
6:CGM
14:スケールメリット
3:自動化
2:量産
8:マニュアル
11:ビッグスケール
1:金
5:AC
4:福利
8:スケールと節制と自動化
4:印紙　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　金銭消費貸借契約書

　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　徳島県徳島市南末広町４－５４－２０１
　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　貸し主（甲）亀井健士

　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　山口県山口市大字吉田ＸＸＸＸ－ｘ
　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　借り主（乙）阿波太郎

第１条	甲は平成１６年９月１日、金弐百万円を貸し渡し、乙はこれを受け取り借用した。
第２条	乙は元金を平成２０年９月１日までに、甲方に持参もしくは送金して支払うものとする。
第３条	利息は年５％と定め、毎月末日限りをもって甲方に持参もしくは送金して支払わねばならない。
第４条	乙が期限までに元金又は利息の支払いを怠ったときは、乙は甲に対し、その翌日から完済に至るまで年６％の遅延損害金を支払わねばならない。
第５条	以下の場合には、甲からの通知催告がなくても当然に期限の利益を失い、乙は直ちに債務の全額を弁済しなければならない。
①一回でも利息を期限に支払わないとき
②他の債務につき、仮差押え、仮処分又は強制執行を受けたとき
③他の債務につき、競売、破産又は再生手続開始の申立があったとき
④甲の振り出し、裏書き・保証に関わる手形・小切手を不渡りとしたとき
⑤乙が甲に通知せず乙が住所変更したとき
第６条	本契約に関して訴訟の必要が生じた場合には、甲の住所地を管轄する地方裁判所を第一審の管轄裁判所とする。
上の通り契約が成立したので、本証書二通作成し各署名捺印して、甲乙各一通を保有する。
平成１６年９月１日
徳島県徳島市南末広町４－５４－２０１
亀井健士　印
山口県山口市大字吉田ＸＸＸＸ－ｘ
阿波太郎　印

3:金銭消費貸借契約書
16:複数を因果するようなものは半固有名詞にnaming。
15:ビルドかランタイムか
ビルド
イニシャルコスト
9:スケール単位を考える→スケール数を考える→利益単価を考える→イニシャルコストを考える
14:roi.xlsのアップデート
8:ミックス
13:投資飽和しているものはdoneに。
（衛生要因）
7:一石二鳥
12:着金ノードの結果に高い値を与える
6:高roiの検索
11:http://localhost/lifehack/roi.xls
5:[[目的検索]]
20:
10:ランキング１０位以下のものについてはROIを小さくする。
4:目的
3:銀行口座
19:融資契約書作成
18:
7:コンサル待機的なもので売る
6:人の所属で売る
5:分割払い
4:長期課金モデル
3:課金
8:PVなど従量課金する
52:開発
37:新技術の使用はリスクが大きいものです
5:相手は誰かに答える。
Xが理解できると思う言い回しを複数用意。
彼に話をしてみる。
どの話が、あるいはどのセットがピンときたか聞く。
それを書く。
　
29:だから多少要求定義で手を抜いても、
大きなプロジェクトに比べてリカバリが容易になります。これは悪い経験となります。 

28:用語統一
34:口頭による要求の伝達は（文書化されない限り）バグの対象にならないこと
（そしてその前に開発の対象にならないこと）を顧客に理解させる必要があります
41:いつまでも要求を獲得し続ける
3:このような場合は「いろいろとやることがあってコードを修正するだけではないのです」
などと簡単に受け流しても顧客は納得しません。時間をかけて、詳細な作業内容、
その作業の必要性、その作業を怠った場合のリスクまで説明するべきです。 

40:記録残す
2:ある要求が重要であるかどうかは、ユーザや経営陣、営業担当などシステムの利害関係者（ステイクホルダ）によってそれぞれ異なります
26:見開きの左に読みやすい通常の文章、見開きの右に厳密な形式的言語で要求を記述するという方法もあります
25:人月はお互い交換不可
21:意味ある文書はコストがかかっても
作成するべきです。意味ない文書はしないべき。
49:[[開発_開発メタ順序あり]]
53:storyteller
7:②のフェーズ。開発。
テストとマニュアルめがけて作成。余計なものは作らない。
開発後にテスト。V時に上り、再度要求定義等に反映させて
それを開発する。
作業前に実データをもらう
6:プリなフェーズ。
「安物買いの銭失い」と
「口頭による要求の伝達は（文書化されない限り）バグの対象にならないこと」
　（そしてその前に開発の対象にならないこと）
　見えない建築だと思ってください。
＋ユーザに最初にやるというコストを取ってもらうこと
を顧客に理解させる。
＋要求の前に顧客の協力を得るための環境づくり
＋人の仕様書調べ。類似を探す。10時間程度
＋話をする量を十分とれることをユーザと約束

5:①の後フェーズ。
不必要なノード、機能群がないかチェック。
あるといいくらいのものは削除。
「初めて」をリストアップし、見積もり甘くないか確認。
テストになっていないものはないかチェック。テストになっていないノードは、考え直す。
それがついでにただで、ではないかをチェックする。
4:ノードの詳細に対して、見積もりをする。コストを計算する。
見積もりに2倍する。
＋

　
　

3:①のフェーズ。要求定義を請ける。
ユーザの作業をユーザとともに確認し
開始前ユーザマニュアルを作成する。
マニュアルは図を書く。
開始後のユーザマニュアルを書く。
管理者と確認する（沢井さんと）
目的となるノードを書く。
テスト作る

9:後のも先のも、マニュアルするのに、

5:絵書き系
4:僕から選定して、
総合力（アイデア＋実運営力、社長のカリスマ等）＋利益でたら2倍返し条件で
仕事お願いできる人、を探してもできない
理由はアイデア部位と、実運営力の弱さを感じるから。
逆に、実運営とアイデアで自分たつ場合ならいいかも。


3:人リスト
2:技術近辺の仕事する人はいないかな。
仕事させてメリットある人いるか。
技術の仕事。1500円くらいで。

IT系の仕事してもらって嬉しい人。
9:特許系
8:あの子の友達
7:たくみ氏
6:人ベースで逆にその人ができる仕事振ってくほうが
効率いいか？
2:つなぐ
1:開発機
4:mock
8:[[バージョンコントロール]]からUPDATするスクリプト
3:開発機への配備
7:開発機
12:#wait システムをローカルで効率よく開発よくすることができるようになる
11:#wait cvｓにプログラムをロード

10:#wait アプリ入れる
9:#wait 全体をコピーすることで自動でURLを開く
8:#wait http://www.enclosing.net/にいき、env.htmlに飛ぶ。
7:#wait mdiのクリップボード検索にする
6:#wait mdiを入れる。
17:#wait アプリリストを作っておく
3:#wait アプリ落とす
2: skype 
     メアド聞く 
     1.http://amateras.sourceforge.jp/cgi-bin/fswiki/wiki.cgi?page=EclipseHTMLEditor 
     2.http://amateras.sourceforge.jp/cgi-bin/fswiki/wiki.cgi?page=StrutsIDE 
     go to meetingをつかってみもらう 
     ベースキャンプ導入 
     cvs情報のシェアーとコードを落としてもらう 
     xampp（http://www.apachefriends.org/download.php?xampp-win32-1.6.0a-installer.exe） 
     tomcat 
     mysql(xamppがあれば） 
     プロジェクトごとのdbとユーザを 
     ダンプしたsqlのインポート 
     phpmyadminセットアップ（xampp) 
     メモリ 
     ｃｐｕ 
     モニター 
     マイクとヘッドフォンとスカイプテスト 
     開発機へのアクセステスト 
     プロジェクトのwarのアップと自動更新 
     dbのアップロード（ダンプ作成とダンプインポート） 
     odbc登録http://dev.mysql.com/get/Downloads/MyODBC3/mysql-connector-odbc-3.51.12-win32.msi/from/pick 
     サービスとデータソースのwindowメニューとショートカットキーの割り当て 
     FireFox,skype,joe,textpad,clipdiary,flashpaste,,winshot,quickwindow,ahk, 
     http://www.sysdeo.com/sysdeo/content/download/678/7757/file/tomcatPluginV32beta3.zip 
     eclipse上でutf-8に変える
4:名刺抽出
3:関係modeling
4:RuntimeNoding
3:関係モデリング
5:search
4:display
3:閲覧
6:出力変数
5:閾値
4:入力変数
3:入力変数　*　閾値　*出力変数
1:障害
4:問題発見
2:収集
1:集
12:pomodoro
11:集中資源
4:モチベーション
8:一つの作業の連続時間を長くする。 
3:集中
1:集収
4:収集のUI
3:tumblr
2:evernote
10:中夜分割
7:早めのお誘い
6:パーティーの付加価値
5:集客してくれる人を探す。
2:一通ずつメール＋テンプレート
19:パーティ紹介文章を早くかくということですよ。
1:集客
18:最初のターミナルノードになるものを早く着手する。
16:探
15:内容をタギング
14:highrise
13:ゆとり
12:非顧客案件？
9:早さ
11:速さ
7:AC
18:outsource
17:progress managemnet
4:プレゼン
30:payment_site
3:資金繰り
14:crowd
2:費用
1:雇用
29:cash out
28:revenue
11:利益率
27:share
26:CF
25:better matching of people
24:team
23:requirement of person
22:history
21:candidates
20:voice = meru
4:@phone
3:電話
6:WAGASHI 
5:ヤッファ 
4:pariya
3:unu
9:まめや
2:桃林堂 
12:青山
4:「今日も一日ありがとう、感謝してます。明日もよろしくお願いします。」
3:靴を磨く
2:超録でさらっととってメールするという方法。
ミドルレンジになってきたらこれを使う。
音声は発火にも良い
4:依頼
3:頼
6:。lastfmは類似を利用する。似ている他人が恋しい。
恋しさはカネになる。という回路。
システムが類似を提供してくれる。
からシステムの利用価値が上がるのはそう。
5:モデリング
7:相互接続の快感
2:類似
5:金額は上げる
4:金額は上げる
3:コンサルは必要
2:bath
1:風呂
2:bath
1:風呂
4:looks
3:風貌
109:食事
175:時間の資源の感覚
174:iphoneとか
173:見積もりと時間の入力。rbmに
219:電気毛布で足くるむ
172:サイクルのタイマー
218:[[ホッカイロ]]5個靴下に
105:絨毛運動機能回復
217:bottle
58:more than normal. set hot, not warm
216:afford_drinking
103:昼
56:moisture
213:thirthty
129:おにぎり
128:@wait のり
127:肉のレシピ
238:しょっぱめ
50:医者
237:　@ジャー
190:外
236:症状緩和
234:pknk
233:@wait 足を100回ずつ
5:首 カイロ muffler
232:this is the perfect practice for kaze. just check the nodefield for kaze and know this is the perfect set of terminals
.うめぼしのおかし->アペタイト->食事->栄養
.ハム
.肉のレシピ
.風邪薬を飲む->症状緩和->pknked->対応
.電気毛布を足に巻く->血流
.ホッカイロを足に5個。本当に5個。3個じゃなくて。
.ボトルに水をくんでアフォード
.トレッドミルで5分あるく
鼻うがいを30分に一回->繊毛運動
.すごいうがいを1時間に一回
.綿棒を鼻にいれて洗浄
.鼻を頻繁にかむ->繊毛運動->のどの症状も緩和
.医者->ネブライザー

72:drink
99:塩
98:5min [[treadmill]]
96:酸
95:外食
140:@fired
93:動物性タンパク質
251:drink_hot
92:pknked
91:ハム
24:保温
90:abcステーキ？
23:ぬらす
164:AC
163:親孝行
209:warm_foot
162:sms
208:炎症緩和
206:風邪薬
47:睡眠
205:思考
203:鼻うがいをサイクルで
202:鼻を頻繁にかむ
201:鼻スプレー（ネブライザー）
200:綿棒を鼻に入れて洗浄
229:白子のり亜フォード
69:drink hot 500ml
116:カロリー
228:ラップと塩
115:http://toukubo.backpackit.com/pages/1895041
227:料理
67:mask
226:肉の調理
113:レシピ
225:affordable
112:eat_at_home
224:ビタミン錠剤
223:オレンジジュース
63:lulu
110:ビタミン剤
ビタミン的なさぷりを取る
222:乾燥
221:うめぼしのおかし
137:運動
249:hot
220:inner pants
60:eat
245:exbase
132:いかないでいがち
19:血流
244:風邪
85:肉
84:アペタイト
130:おかず
17:のどを保護
83:米の飯
241:20秒くらい、声を出して生態にたれをあてて、かつおおっているものをうかして、
さらに表面を洗うようにやる
15:鼻腔を保護
240:すごいうがい
12:栄養
179:みかん
370:これら対策を普通以上に
329:消炎剤
412:加湿器！
マスク！
水バッファ！
328:@mece 鼻水除去
411:部屋
327:鼻の毛細血管
410:キムチ食う！
ヨーグルト飲む！
食えるだけ食う！
281:@mece 拡大を防ぐ
280:@mece 体内の細胞を殺す
325:炎症緩和
324:@mece 鼻腔加湿
323:@wait 綿棒を鼻に入れて洗浄
434:ugai salt
321:@mece 鼻腔殺菌
432:ヴェポラップ
349:濃い塩水
320:@mece 絨毛運動機能回復
431:hanaugai
348:部屋の加湿
430:brash tooth
346:鼻うがい
345:mask
232:1. 痛み止めと解熱剤を飲む→
2. 医者に行く
3. 加湿器をセット
4. 一回ノードフィールド開く
343:鼻を頻繁にかむ
369:@mece 喉の保湿
409:水準備
362:@mece バッファから
408:* RUNTIME ***
278:水分
277:@mece ビタミンドリンク
389:水！
ポカリ！
サプリ！
プロテイン！
カフェイン！
うがい！
歯磨き！
鼻うがい！
ヴェポラップ！
マスク！
ほかろん足！
加湿！
風邪薬！
鼻スプレー！
手を洗う！
たくさん食う！
387:塩→鼻うがい
ビタミンドリンク
ビタミン剤（マルチビタミン）
ヴェポラップ
鼻スプレー
風邪薬
274:@mece プロテイン
386:調達
319:afford drinkin
385:@mece suppli
318:風邪薬
384:頻繁に
429:eat 
317:解熱剤
383:摂取は少しずつ
428:ake hanaugai salt
270:@mece 頻繁な歯磨き
316:炎症止める
382:風邪リマインダー
427:salty water
315:痛み止め
381:リマインダー
426:@wait eat so much
314:カフェイン
425:@mece extra energy
313:対策できるようにする
312:@wait キムチ
311:@mece マルチビタミン
421:@wait eat
338:保温
290:@wait ヨーグルト
とブル
336:@mece 体の毛細血管保温
335:ヴェポラップ
334:鼻スプレー（消炎＋毛細血管拡大）
443:
245:exbase
440:電気毛布
357:加湿
19:血流
130:@mece おかず
17:@mece のどを保護
83:@mece 米の飯
15:@mece 鼻腔を保護
352:足の裏
269:@mece 口腔を衛生に
351:@mece 体の毛細血管
350:ホカロン足の裏
267:@mece 扁桃腺の殺菌
266:治ってるからって休む
265:@wait 喉がいたい場合
264:@mece 食欲
376:@mece 喉を濡らす
309:@mece ビタミンＣ
374:@mece のどぬーる
307:@mece 過酸化水素
373:うがい
372:喉の毛細血管
289:睡眠
371:@mece のどを殺菌
288:@mece 糖とタンパク質
4:体温計
3:風邪
5:首
4:厚い靴下
8:
3:風邪の𠬝
1:風邪薬
5:症状緩和
4:炎症緩和
4:乾物
3:食
5:発火
10:肉
4:栄養
3:米の飯
2:食事
47:eat_at_home
44:レシピ
59:食欲
62:
24:アペタイト
38:better_食事
5:発火
56:ながら
4:栄養
2:食事
53:栄養素
48:calle
51:調理
10:肉
20:野菜
30:スパイス
7:おかず
17:噛む
5:発火
27:おもてなし
16:すっぱさ
4:栄養
26:食器
15:涼しさ
3:米の飯
14:辛み
2:食事
24:
アペタイト
13:虫歯治す
35:食材調達
33:@done 無洗米
2:食事
44:レシピ
56:ながら
69:タンパク質
53:栄養素
79:cf
66:ヨーグルト
76:cook
73:cycle
85:食料.numbers
72:購入
71:定期
5:発火
70:定期購入
48:calle
82:emok
4:栄養
47:eat_at_home
59:食欲
4:フレッシュネス
大戸屋
ラーメンのあれ
ニュージーランドカフェ
人人人
ニルヴァーナ
ロイヤルホスト
家のとなりのとなりのラーメン屋
城山ヒルズの大かまど
マック

3:食事place
4:restrantplacesのxls
3:食事スケジュール
7:ear_early -> sleep better and early
2:ざっと洗う
1:食器
1:食料.numbers
5:emok
4:食料
1:食材
3:食材調達リストチェック＋不足する可能性のあるものを週次で
2:食材調達
74:フォーだけだとフォーたべない（野菜）
49:乾物系以外の野菜、
朝キット、
ほか
73:腐らせないでいるものを頼む
72:宅配受取
46:外出
19:時間かからない食事
43:あるかないかの判断がめんどい
16:くさらせない
15:better_食材調達
88:家事代行
87:家事代行
12:食材調達リストチェック＋不足する可能性のあるものを週次で
84:コンロ設定
59:ヨーグルト
83:億場所考える
58:受け取りを効率化する
82:冷蔵庫
57:意識コスト
56:sc
54:morningkitの食べ物と購入
29:調理しやすい形状の野菜
28:くさらせないかつかかさない
52:@scheduled 冷蔵庫
27:移動時間レス
51:@air 野菜の食材宅配
26:くさったものの衛生管理・手間
50:受け取り
25:かかさない
24:@wait 食洗機で洗えるフードドレッサーと
ジューサーを洗える食洗機
23:洗いが面倒くさい
22:@wait 野菜切る
69:make foods list and time
21:@wait 野菜バック通販で
68:食材宅配
67:リストにする+trigger
91:dried vegitables
66:購入サイクル
65:砕いてでも食べる
39:reminder
63:@done 乾物
38:多重化？
62:@done ナッツ
37:忘れがち？
61:@done シリアル
3:食材調達
60:パン
33:通販
32:調理器具
31:容易な調理
79:@done buffers
78:鍋の洗浄
77:カット野菜宅配
3:@done 食欲
43:@done 唾液と混ぜる
38:@done 水
42:@done ナガラ食いしない？
37:@mece 消化速度
41:@done 咀嚼
36:@done 塩
40:@mece タケプロン
35:@done におい
29:@done 外食
34:@done 5min [[treadmill]]
33:@done 口にする気がしていない状態でアペタイト
32:@done 酸
26:@done あつ過ぎるもの、冷たいもの、アイス避ける
31:@done treadmill 100k
25:@mece 胃薬
30:@done 辛
24:@done コーヒーは緩いやつ。
19:@done よくよく噛む
23:@done 辛いものはだめ
22:@done 牛乳オッケー
16:@mece 空腹
20:@done 昇華に悪いものは避ける
13:@done 胃
9:@done eat
47:@sun stomach mediaine
46:@done "break"
45:@done 2shock
4:@done アペタイト
39:@pknk yakkyoku
1:食洗機
4:bring the one in tkp?
17:cook tools
16:@wait actions
25:食材調達
9:resource for eat
24:
8:time to eat 
23:@mece erp
13:@mece 土鍋
7:resource 
22:@mece everything_in_its_right_place
6:time to move
21:workflows 
5:time to cook
20:set automations
4:cook
19:check what do i have. a pan.
18:bring from tkp?
4:食事
3:飯
7:@wait pknkable + pknk
4:ナイスガイ
3:飯野さん
1:香
4:ボディースプレー供給
2:ボディースプレー
2:高いKEI値
2:快密度*快頻度=快値。
快値/投資量=ノード値
因果連結での同時投資対効果量を総合ノード値とする
49:類似連想
20:理解不能性のある高い相関
47:高い類似連想能力に可能性が高い価値。
高い価値への方法として、類似連想の方法が・・・。
需要とは高価値である。
類似連想の訓練。
8:2項以上の組み合わせによる高い相関
51:訓練。
3:高い需要＋他より高い供給

41:複合性、時間に溶かす。訓練。場所に溶かす。汎用の場所。
50:分解＋綴じる
40:===================================================================
あの方法は命名しがたい。
再実行可能である。
1.記憶効率を高める有名な実行方法はない
2.記憶曲線のカリエをしっていた。
3.ニューロン系について理解があった。
4.記憶曲線に「確信」があった。
4.他の人がこの方法はやっていない、といった意識はなかった。
5.実行、評価して、差がみえた。
6.ニューロンの仕組みと記憶曲線の「ヒント」が結びついたこと。
7.ヒントの概念。
8.類似連想が働いた
9.類似連想は、因果的ではない。
10．類似がヒント。
11.実行が確信。
12.帰納因果はグーグル可能
13.グーグル可能なものは社会が連想可能。
14．社会が連想可能である＝需要にたいして供給がすでにある。
15.需要が少ないほど検索結果は少ない。
16.需要が少ないほど新発想の効果は少ない。
17.高い需要への無名の高相関が高価値。
18.高い相関の複数のステップのつながりは、無視され、ひとつのステップに見える。
19.ひとつのステップにみえる中を分解が可能。そうして、より効率のよいステップが見えてくる。
20.単項的子ノード。
21.グーグル検索よりも、類似と、組み合わせ。
社会は、実験＋淘汰をしている。
22.連想不能性
複合性、時間に溶かす。訓練。場所に溶かす。汎用の場所。

2:高価値
7:dddd
10:AC
4:channelbase
14:Dの頻度
3:高手
11:すごいG

4:短く書く
3:でかく表示
2:高橋メソッドのこと。
5:ショックを当たえる
4:相手に理解させる
3:高橋メソッド
2:シンプル。
企画書は1行。

5:バッファ
4:速度
3:高速
9:早さ
8:効率
7:ボトルネック
10:速さ
6:パラレル
5:ジェル
16:横を短くする。
後ろを長すぎないようにする。鳥になるぞ。
前はぺったんこに。
耳にかかるあたり大事。ちゃんと切る。
4:後ろ髪重要
3:髪
13:ながら
9:日常的に毛穴を洗う
10:すごい風呂
6:耳出す
20:左右と後ろを週に一度
10:すごい風呂
9:日常的に毛穴を洗う
19:時間かけない
6:耳出す
5:ジェル
16:横を短くする。
後ろを長すぎないようにする。鳥になるぞ。
前はぺったんこに。
耳にかかるあたり大事。ちゃんと切る。
4:後ろ髪重要
3:髪
13:ながら
2:コンタクト
1:黒目大きく
4:クリップ
3:鼻
4:クリップ
3:鼻
7:薄い塩水
10:鼻水除去
5:お湯で溶かす
4:濃い塩水
3:鼻うがい
11:鼻腔加湿
5:鼻スプレー
4:鼻の毛細血管
3:ヴェポラップ
9:体の毛細血管保温
12:コーヒー
8:鼻腔加湿
7:保温
6:血流
6:鼻を頻繁にかむ
5:鼻うがい
4:絨毛運動機能回復
3:鼻水除去
5:部屋片付け
4:部屋の空気
3:鼻炎
9:@wait 定期的掃除
11:@secretary @wait 掃除機金額調査
8:@wait 部屋の衛生
10:@wait 掃除機
7:@wait 布団の衛生
6:@wait 空気清浄？
14:drink hot
4:はなうがいを一日10回
13:moisture
3:鼻腔を保護
24:nose splayに水をいれて。
10:mask
21:のどを保護
20:後鼻漏
19:絨毛運動機能回復
18:粘膜の腫れを取り、
17:よく鼻をかんで中の膿を出すようにしま
28:鼻腔殺菌
19:絨毛運動機能回復
3:鼻腔を保護
11:鼻の毛細血管
9:部屋の加湿
15:mask
3:鼻腔加湿
14:鼻うがい
5:ビタミンＣ
4:過酸化水素
8:綿棒を鼻に入れて洗浄
3:鼻腔殺菌
7:鼻腔加湿
4:無制限テクスト
3:パラパラブック
1:？
6:それが起こす結果（親ノード）を考える。
それはどんな悪いことと良いことを引き起こす？
5:かも
8:試すにはどうすればいい？
7:ためすと何がおこる？
end
